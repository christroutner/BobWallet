!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.bcash=e():t.bcash=e()}(window,function(){return function(t){var e={};function i(s){if(e[s])return e[s].exports;var r=e[s]={i:s,l:!1,exports:{}};return t[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(s,r,function(e){return t[e]}.bind(null,r));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=335)}([function(t,e,i){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function s(t,e){if(t===e)return 0;for(var i=t.length,s=e.length,r=0,n=Math.min(i,s);r<n;++r)if(t[r]!==e[r]){i=t[r],s=e[r];break}return i<s?-1:s<i?1:0}function r(t){return e.Buffer&&"function"==typeof e.Buffer.isBuffer?e.Buffer.isBuffer(t):!(null==t||!t._isBuffer)}var n=i(48),o=Object.prototype.hasOwnProperty,a=Array.prototype.slice,h="foo"===function(){}.name;function l(t){return Object.prototype.toString.call(t)}function u(t){return!r(t)&&"function"==typeof e.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):!!t&&(t instanceof DataView||!!(t.buffer&&t.buffer instanceof ArrayBuffer)))}var c=t.exports=w,f=/\s*function\s+([^\(\s]*)\s*/;function d(t){if(n.isFunction(t)){if(h)return t.name;var e=t.toString().match(f);return e&&e[1]}}function p(t,e){return"string"==typeof t?t.length<e?t:t.slice(0,e):t}function g(t){if(h||!n.isFunction(t))return n.inspect(t);var e=d(t);return"[Function"+(e?": "+e:"")+"]"}function m(t,e,i,s,r){throw new c.AssertionError({message:i,actual:t,expected:e,operator:s,stackStartFunction:r})}function w(t,e){t||m(t,!0,e,"==",c.ok)}function y(t,e,i,o){if(t===e)return!0;if(r(t)&&r(e))return 0===s(t,e);if(n.isDate(t)&&n.isDate(e))return t.getTime()===e.getTime();if(n.isRegExp(t)&&n.isRegExp(e))return t.source===e.source&&t.global===e.global&&t.multiline===e.multiline&&t.lastIndex===e.lastIndex&&t.ignoreCase===e.ignoreCase;if(null!==t&&"object"==typeof t||null!==e&&"object"==typeof e){if(u(t)&&u(e)&&l(t)===l(e)&&!(t instanceof Float32Array||t instanceof Float64Array))return 0===s(new Uint8Array(t.buffer),new Uint8Array(e.buffer));if(r(t)!==r(e))return!1;var h=(o=o||{actual:[],expected:[]}).actual.indexOf(t);return-1!==h&&h===o.expected.indexOf(e)||(o.actual.push(t),o.expected.push(e),function(t,e,i,s){if(null===t||void 0===t||null===e||void 0===e)return!1;if(n.isPrimitive(t)||n.isPrimitive(e))return t===e;if(i&&Object.getPrototypeOf(t)!==Object.getPrototypeOf(e))return!1;var r=b(t),o=b(e);if(r&&!o||!r&&o)return!1;if(r)return y(t=a.call(t),e=a.call(e),i);var h,l,u=E(t),c=E(e);if(u.length!==c.length)return!1;for(u.sort(),c.sort(),l=u.length-1;l>=0;l--)if(u[l]!==c[l])return!1;for(l=u.length-1;l>=0;l--)if(!y(t[h=u[l]],e[h],i,s))return!1;return!0}(t,e,i,o))}return i?t===e:t==e}function b(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function v(t,e){if(!t||!e)return!1;if("[object RegExp]"==Object.prototype.toString.call(e))return e.test(t);try{if(t instanceof e)return!0}catch(t){}return!Error.isPrototypeOf(e)&&!0===e.call({},t)}function k(t,e,i,s){var r;if("function"!=typeof e)throw new TypeError('"block" argument must be a function');"string"==typeof i&&(s=i,i=null),r=function(t){var e;try{t()}catch(t){e=t}return e}(e),s=(i&&i.name?" ("+i.name+").":".")+(s?" "+s:"."),t&&!r&&m(r,i,"Missing expected exception"+s);var o="string"==typeof s,a=!t&&n.isError(r),h=!t&&r&&!i;if((a&&o&&v(r,i)||h)&&m(r,i,"Got unwanted exception"+s),t&&r&&i&&!v(r,i)||!t&&r)throw r}c.AssertionError=function(t){var e;this.name="AssertionError",this.actual=t.actual,this.expected=t.expected,this.operator=t.operator,t.message?(this.message=t.message,this.generatedMessage=!1):(this.message=p(g((e=this).actual),128)+" "+e.operator+" "+p(g(e.expected),128),this.generatedMessage=!0);var i=t.stackStartFunction||m;if(Error.captureStackTrace)Error.captureStackTrace(this,i);else{var s=new Error;if(s.stack){var r=s.stack,n=d(i),o=r.indexOf("\n"+n);if(o>=0){var a=r.indexOf("\n",o+1);r=r.substring(a+1)}this.stack=r}}},n.inherits(c.AssertionError,Error),c.fail=m,c.ok=w,c.equal=function(t,e,i){t!=e&&m(t,e,i,"==",c.equal)},c.notEqual=function(t,e,i){t==e&&m(t,e,i,"!=",c.notEqual)},c.deepEqual=function(t,e,i){y(t,e,!1)||m(t,e,i,"deepEqual",c.deepEqual)},c.deepStrictEqual=function(t,e,i){y(t,e,!0)||m(t,e,i,"deepStrictEqual",c.deepStrictEqual)},c.notDeepEqual=function(t,e,i){y(t,e,!1)&&m(t,e,i,"notDeepEqual",c.notDeepEqual)},c.notDeepStrictEqual=function t(e,i,s){y(e,i,!0)&&m(e,i,s,"notDeepStrictEqual",t)},c.strictEqual=function(t,e,i){t!==e&&m(t,e,i,"===",c.strictEqual)},c.notStrictEqual=function(t,e,i){t===e&&m(t,e,i,"!==",c.notStrictEqual)},c.throws=function(t,e,i){k(!0,t,e,i)},c.doesNotThrow=function(t,e,i){k(!1,t,e,i)},c.ifError=function(t){if(t)throw t};var E=Object.keys||function(t){var e=[];for(var i in t)o.call(t,i)&&e.push(i);return e}}).call(this,i(10))},function(t,e,i){"use strict";(function(t){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var s=i(197),r=i(196),n=i(99);function o(){return h.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function a(t,e){if(o()<e)throw new RangeError("Invalid typed array length");return h.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=h.prototype:(null===t&&(t=new h(e)),t.length=e),t}function h(t,e,i){if(!(h.TYPED_ARRAY_SUPPORT||this instanceof h))return new h(t,e,i);if("number"==typeof t){if("string"==typeof e)throw new Error("If encoding is specified then the first argument must be a string");return c(this,t)}return l(this,t,e,i)}function l(t,e,i,s){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,i,s){if(e.byteLength,i<0||e.byteLength<i)throw new RangeError("'offset' is out of bounds");if(e.byteLength<i+(s||0))throw new RangeError("'length' is out of bounds");return e=void 0===i&&void 0===s?new Uint8Array(e):void 0===s?new Uint8Array(e,i):new Uint8Array(e,i,s),h.TYPED_ARRAY_SUPPORT?(t=e).__proto__=h.prototype:t=f(t,e),t}(t,e,i,s):"string"==typeof e?function(t,e,i){if("string"==typeof i&&""!==i||(i="utf8"),!h.isEncoding(i))throw new TypeError('"encoding" must be a valid string encoding');var s=0|p(e,i),r=(t=a(t,s)).write(e,i);return r!==s&&(t=t.slice(0,r)),t}(t,e,i):function(t,e){if(h.isBuffer(e)){var i=0|d(e.length);return 0===(t=a(t,i)).length?t:(e.copy(t,0,0,i),t)}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!=typeof e.length||(s=e.length)!=s?a(t,0):f(t,e);if("Buffer"===e.type&&n(e.data))return f(t,e.data)}var s;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function u(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function c(t,e){if(u(e),t=a(t,e<0?0:0|d(e)),!h.TYPED_ARRAY_SUPPORT)for(var i=0;i<e;++i)t[i]=0;return t}function f(t,e){var i=e.length<0?0:0|d(e.length);t=a(t,i);for(var s=0;s<i;s+=1)t[s]=255&e[s];return t}function d(t){if(t>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|t}function p(t,e){if(h.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var i=t.length;if(0===i)return 0;for(var s=!1;;)switch(e){case"ascii":case"latin1":case"binary":return i;case"utf8":case"utf-8":case void 0:return H(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*i;case"hex":return i>>>1;case"base64":return z(t).length;default:if(s)return H(t).length;e=(""+e).toLowerCase(),s=!0}}function g(t,e,i){var s=t[e];t[e]=t[i],t[i]=s}function m(t,e,i,s,r){if(0===t.length)return-1;if("string"==typeof i?(s=i,i=0):i>2147483647?i=2147483647:i<-2147483648&&(i=-2147483648),i=+i,isNaN(i)&&(i=r?0:t.length-1),i<0&&(i=t.length+i),i>=t.length){if(r)return-1;i=t.length-1}else if(i<0){if(!r)return-1;i=0}if("string"==typeof e&&(e=h.from(e,s)),h.isBuffer(e))return 0===e.length?-1:w(t,e,i,s,r);if("number"==typeof e)return e&=255,h.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(t,e,i):Uint8Array.prototype.lastIndexOf.call(t,e,i):w(t,[e],i,s,r);throw new TypeError("val must be string, number or Buffer")}function w(t,e,i,s,r){var n,o=1,a=t.length,h=e.length;if(void 0!==s&&("ucs2"===(s=String(s).toLowerCase())||"ucs-2"===s||"utf16le"===s||"utf-16le"===s)){if(t.length<2||e.length<2)return-1;o=2,a/=2,h/=2,i/=2}function l(t,e){return 1===o?t[e]:t.readUInt16BE(e*o)}if(r){var u=-1;for(n=i;n<a;n++)if(l(t,n)===l(e,-1===u?0:n-u)){if(-1===u&&(u=n),n-u+1===h)return u*o}else-1!==u&&(n-=n-u),u=-1}else for(i+h>a&&(i=a-h),n=i;n>=0;n--){for(var c=!0,f=0;f<h;f++)if(l(t,n+f)!==l(e,f)){c=!1;break}if(c)return n}return-1}function y(t,e,i,s){i=Number(i)||0;var r=t.length-i;s?(s=Number(s))>r&&(s=r):s=r;var n=e.length;if(n%2!=0)throw new TypeError("Invalid hex string");s>n/2&&(s=n/2);for(var o=0;o<s;++o){var a=parseInt(e.substr(2*o,2),16);if(isNaN(a))return o;t[i+o]=a}return o}function b(t,e,i,s){return V(H(e,t.length-i),t,i,s)}function v(t,e,i,s){return V(function(t){for(var e=[],i=0;i<t.length;++i)e.push(255&t.charCodeAt(i));return e}(e),t,i,s)}function k(t,e,i,s){return v(t,e,i,s)}function E(t,e,i,s){return V(z(e),t,i,s)}function R(t,e,i,s){return V(function(t,e){for(var i,s,r,n=[],o=0;o<t.length&&!((e-=2)<0);++o)s=(i=t.charCodeAt(o))>>8,r=i%256,n.push(r),n.push(s);return n}(e,t.length-i),t,i,s)}function S(t,e,i){return 0===e&&i===t.length?s.fromByteArray(t):s.fromByteArray(t.slice(e,i))}function _(t,e,i){i=Math.min(t.length,i);for(var s=[],r=e;r<i;){var n,o,a,h,l=t[r],u=null,c=l>239?4:l>223?3:l>191?2:1;if(r+c<=i)switch(c){case 1:l<128&&(u=l);break;case 2:128==(192&(n=t[r+1]))&&(h=(31&l)<<6|63&n)>127&&(u=h);break;case 3:n=t[r+1],o=t[r+2],128==(192&n)&&128==(192&o)&&(h=(15&l)<<12|(63&n)<<6|63&o)>2047&&(h<55296||h>57343)&&(u=h);break;case 4:n=t[r+1],o=t[r+2],a=t[r+3],128==(192&n)&&128==(192&o)&&128==(192&a)&&(h=(15&l)<<18|(63&n)<<12|(63&o)<<6|63&a)>65535&&h<1114112&&(u=h)}null===u?(u=65533,c=1):u>65535&&(u-=65536,s.push(u>>>10&1023|55296),u=56320|1023&u),s.push(u),r+=c}return function(t){var e=t.length;if(e<=x)return String.fromCharCode.apply(String,t);for(var i="",s=0;s<e;)i+=String.fromCharCode.apply(String,t.slice(s,s+=x));return i}(s)}e.Buffer=h,e.SlowBuffer=function(t){return+t!=t&&(t=0),h.alloc(+t)},e.INSPECT_MAX_BYTES=50,h.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=o(),h.poolSize=8192,h._augment=function(t){return t.__proto__=h.prototype,t},h.from=function(t,e,i){return l(null,t,e,i)},h.TYPED_ARRAY_SUPPORT&&(h.prototype.__proto__=Uint8Array.prototype,h.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&h[Symbol.species]===h&&Object.defineProperty(h,Symbol.species,{value:null,configurable:!0})),h.alloc=function(t,e,i){return function(t,e,i,s){return u(e),e<=0?a(t,e):void 0!==i?"string"==typeof s?a(t,e).fill(i,s):a(t,e).fill(i):a(t,e)}(null,t,e,i)},h.allocUnsafe=function(t){return c(null,t)},h.allocUnsafeSlow=function(t){return c(null,t)},h.isBuffer=function(t){return!(null==t||!t._isBuffer)},h.compare=function(t,e){if(!h.isBuffer(t)||!h.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var i=t.length,s=e.length,r=0,n=Math.min(i,s);r<n;++r)if(t[r]!==e[r]){i=t[r],s=e[r];break}return i<s?-1:s<i?1:0},h.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},h.concat=function(t,e){if(!n(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return h.alloc(0);var i;if(void 0===e)for(e=0,i=0;i<t.length;++i)e+=t[i].length;var s=h.allocUnsafe(e),r=0;for(i=0;i<t.length;++i){var o=t[i];if(!h.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(s,r),r+=o.length}return s},h.byteLength=p,h.prototype._isBuffer=!0,h.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)g(this,e,e+1);return this},h.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)g(this,e,e+3),g(this,e+1,e+2);return this},h.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)g(this,e,e+7),g(this,e+1,e+6),g(this,e+2,e+5),g(this,e+3,e+4);return this},h.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?_(this,0,t):function(t,e,i){var s=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===i||i>this.length)&&(i=this.length),i<=0)return"";if((i>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return O(this,e,i);case"utf8":case"utf-8":return _(this,e,i);case"ascii":return I(this,e,i);case"latin1":case"binary":return A(this,e,i);case"base64":return S(this,e,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return B(this,e,i);default:if(s)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),s=!0}}.apply(this,arguments)},h.prototype.equals=function(t){if(!h.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===h.compare(this,t)},h.prototype.inspect=function(){var t="",i=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,i).match(/.{2}/g).join(" "),this.length>i&&(t+=" ... ")),"<Buffer "+t+">"},h.prototype.compare=function(t,e,i,s,r){if(!h.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===i&&(i=t?t.length:0),void 0===s&&(s=0),void 0===r&&(r=this.length),e<0||i>t.length||s<0||r>this.length)throw new RangeError("out of range index");if(s>=r&&e>=i)return 0;if(s>=r)return-1;if(e>=i)return 1;if(e>>>=0,i>>>=0,s>>>=0,r>>>=0,this===t)return 0;for(var n=r-s,o=i-e,a=Math.min(n,o),l=this.slice(s,r),u=t.slice(e,i),c=0;c<a;++c)if(l[c]!==u[c]){n=l[c],o=u[c];break}return n<o?-1:o<n?1:0},h.prototype.includes=function(t,e,i){return-1!==this.indexOf(t,e,i)},h.prototype.indexOf=function(t,e,i){return m(this,t,e,i,!0)},h.prototype.lastIndexOf=function(t,e,i){return m(this,t,e,i,!1)},h.prototype.write=function(t,e,i,s){if(void 0===e)s="utf8",i=this.length,e=0;else if(void 0===i&&"string"==typeof e)s=e,i=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(i)?(i|=0,void 0===s&&(s="utf8")):(s=i,i=void 0)}var r=this.length-e;if((void 0===i||i>r)&&(i=r),t.length>0&&(i<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");s||(s="utf8");for(var n=!1;;)switch(s){case"hex":return y(this,t,e,i);case"utf8":case"utf-8":return b(this,t,e,i);case"ascii":return v(this,t,e,i);case"latin1":case"binary":return k(this,t,e,i);case"base64":return E(this,t,e,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,e,i);default:if(n)throw new TypeError("Unknown encoding: "+s);s=(""+s).toLowerCase(),n=!0}},h.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var x=4096;function I(t,e,i){var s="";i=Math.min(t.length,i);for(var r=e;r<i;++r)s+=String.fromCharCode(127&t[r]);return s}function A(t,e,i){var s="";i=Math.min(t.length,i);for(var r=e;r<i;++r)s+=String.fromCharCode(t[r]);return s}function O(t,e,i){var s=t.length;(!e||e<0)&&(e=0),(!i||i<0||i>s)&&(i=s);for(var r="",n=e;n<i;++n)r+=F(t[n]);return r}function B(t,e,i){for(var s=t.slice(e,i),r="",n=0;n<s.length;n+=2)r+=String.fromCharCode(s[n]+256*s[n+1]);return r}function P(t,e,i){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>i)throw new RangeError("Trying to access beyond buffer length")}function N(t,e,i,s,r,n){if(!h.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>r||e<n)throw new RangeError('"value" argument is out of bounds');if(i+s>t.length)throw new RangeError("Index out of range")}function T(t,e,i,s){e<0&&(e=65535+e+1);for(var r=0,n=Math.min(t.length-i,2);r<n;++r)t[i+r]=(e&255<<8*(s?r:1-r))>>>8*(s?r:1-r)}function M(t,e,i,s){e<0&&(e=4294967295+e+1);for(var r=0,n=Math.min(t.length-i,4);r<n;++r)t[i+r]=e>>>8*(s?r:3-r)&255}function C(t,e,i,s,r,n){if(i+s>t.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("Index out of range")}function L(t,e,i,s,n){return n||C(t,0,i,4),r.write(t,e,i,s,23,4),i+4}function U(t,e,i,s,n){return n||C(t,0,i,8),r.write(t,e,i,s,52,8),i+8}h.prototype.slice=function(t,e){var i,s=this.length;if(t=~~t,e=void 0===e?s:~~e,t<0?(t+=s)<0&&(t=0):t>s&&(t=s),e<0?(e+=s)<0&&(e=0):e>s&&(e=s),e<t&&(e=t),h.TYPED_ARRAY_SUPPORT)(i=this.subarray(t,e)).__proto__=h.prototype;else{var r=e-t;i=new h(r,void 0);for(var n=0;n<r;++n)i[n]=this[n+t]}return i},h.prototype.readUIntLE=function(t,e,i){t|=0,e|=0,i||P(t,e,this.length);for(var s=this[t],r=1,n=0;++n<e&&(r*=256);)s+=this[t+n]*r;return s},h.prototype.readUIntBE=function(t,e,i){t|=0,e|=0,i||P(t,e,this.length);for(var s=this[t+--e],r=1;e>0&&(r*=256);)s+=this[t+--e]*r;return s},h.prototype.readUInt8=function(t,e){return e||P(t,1,this.length),this[t]},h.prototype.readUInt16LE=function(t,e){return e||P(t,2,this.length),this[t]|this[t+1]<<8},h.prototype.readUInt16BE=function(t,e){return e||P(t,2,this.length),this[t]<<8|this[t+1]},h.prototype.readUInt32LE=function(t,e){return e||P(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},h.prototype.readUInt32BE=function(t,e){return e||P(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},h.prototype.readIntLE=function(t,e,i){t|=0,e|=0,i||P(t,e,this.length);for(var s=this[t],r=1,n=0;++n<e&&(r*=256);)s+=this[t+n]*r;return s>=(r*=128)&&(s-=Math.pow(2,8*e)),s},h.prototype.readIntBE=function(t,e,i){t|=0,e|=0,i||P(t,e,this.length);for(var s=e,r=1,n=this[t+--s];s>0&&(r*=256);)n+=this[t+--s]*r;return n>=(r*=128)&&(n-=Math.pow(2,8*e)),n},h.prototype.readInt8=function(t,e){return e||P(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},h.prototype.readInt16LE=function(t,e){e||P(t,2,this.length);var i=this[t]|this[t+1]<<8;return 32768&i?4294901760|i:i},h.prototype.readInt16BE=function(t,e){e||P(t,2,this.length);var i=this[t+1]|this[t]<<8;return 32768&i?4294901760|i:i},h.prototype.readInt32LE=function(t,e){return e||P(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},h.prototype.readInt32BE=function(t,e){return e||P(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},h.prototype.readFloatLE=function(t,e){return e||P(t,4,this.length),r.read(this,t,!0,23,4)},h.prototype.readFloatBE=function(t,e){return e||P(t,4,this.length),r.read(this,t,!1,23,4)},h.prototype.readDoubleLE=function(t,e){return e||P(t,8,this.length),r.read(this,t,!0,52,8)},h.prototype.readDoubleBE=function(t,e){return e||P(t,8,this.length),r.read(this,t,!1,52,8)},h.prototype.writeUIntLE=function(t,e,i,s){t=+t,e|=0,i|=0,s||N(this,t,e,i,Math.pow(2,8*i)-1,0);var r=1,n=0;for(this[e]=255&t;++n<i&&(r*=256);)this[e+n]=t/r&255;return e+i},h.prototype.writeUIntBE=function(t,e,i,s){t=+t,e|=0,i|=0,s||N(this,t,e,i,Math.pow(2,8*i)-1,0);var r=i-1,n=1;for(this[e+r]=255&t;--r>=0&&(n*=256);)this[e+r]=t/n&255;return e+i},h.prototype.writeUInt8=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,1,255,0),h.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},h.prototype.writeUInt16LE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,2,65535,0),h.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):T(this,t,e,!0),e+2},h.prototype.writeUInt16BE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,2,65535,0),h.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):T(this,t,e,!1),e+2},h.prototype.writeUInt32LE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,4,4294967295,0),h.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):M(this,t,e,!0),e+4},h.prototype.writeUInt32BE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,4,4294967295,0),h.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):M(this,t,e,!1),e+4},h.prototype.writeIntLE=function(t,e,i,s){if(t=+t,e|=0,!s){var r=Math.pow(2,8*i-1);N(this,t,e,i,r-1,-r)}var n=0,o=1,a=0;for(this[e]=255&t;++n<i&&(o*=256);)t<0&&0===a&&0!==this[e+n-1]&&(a=1),this[e+n]=(t/o>>0)-a&255;return e+i},h.prototype.writeIntBE=function(t,e,i,s){if(t=+t,e|=0,!s){var r=Math.pow(2,8*i-1);N(this,t,e,i,r-1,-r)}var n=i-1,o=1,a=0;for(this[e+n]=255&t;--n>=0&&(o*=256);)t<0&&0===a&&0!==this[e+n+1]&&(a=1),this[e+n]=(t/o>>0)-a&255;return e+i},h.prototype.writeInt8=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,1,127,-128),h.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},h.prototype.writeInt16LE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,2,32767,-32768),h.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):T(this,t,e,!0),e+2},h.prototype.writeInt16BE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,2,32767,-32768),h.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):T(this,t,e,!1),e+2},h.prototype.writeInt32LE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,4,2147483647,-2147483648),h.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):M(this,t,e,!0),e+4},h.prototype.writeInt32BE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),h.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):M(this,t,e,!1),e+4},h.prototype.writeFloatLE=function(t,e,i){return L(this,t,e,!0,i)},h.prototype.writeFloatBE=function(t,e,i){return L(this,t,e,!1,i)},h.prototype.writeDoubleLE=function(t,e,i){return U(this,t,e,!0,i)},h.prototype.writeDoubleBE=function(t,e,i){return U(this,t,e,!1,i)},h.prototype.copy=function(t,e,i,s){if(i||(i=0),s||0===s||(s=this.length),e>=t.length&&(e=t.length),e||(e=0),s>0&&s<i&&(s=i),s===i)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(i<0||i>=this.length)throw new RangeError("sourceStart out of bounds");if(s<0)throw new RangeError("sourceEnd out of bounds");s>this.length&&(s=this.length),t.length-e<s-i&&(s=t.length-e+i);var r,n=s-i;if(this===t&&i<e&&e<s)for(r=n-1;r>=0;--r)t[r+e]=this[r+i];else if(n<1e3||!h.TYPED_ARRAY_SUPPORT)for(r=0;r<n;++r)t[r+e]=this[r+i];else Uint8Array.prototype.set.call(t,this.subarray(i,i+n),e);return n},h.prototype.fill=function(t,e,i,s){if("string"==typeof t){if("string"==typeof e?(s=e,e=0,i=this.length):"string"==typeof i&&(s=i,i=this.length),1===t.length){var r=t.charCodeAt(0);r<256&&(t=r)}if(void 0!==s&&"string"!=typeof s)throw new TypeError("encoding must be a string");if("string"==typeof s&&!h.isEncoding(s))throw new TypeError("Unknown encoding: "+s)}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<i)throw new RangeError("Out of range index");if(i<=e)return this;var n;if(e>>>=0,i=void 0===i?this.length:i>>>0,t||(t=0),"number"==typeof t)for(n=e;n<i;++n)this[n]=t;else{var o=h.isBuffer(t)?t:H(new h(t,s).toString()),a=o.length;for(n=0;n<i-e;++n)this[n+e]=o[n%a]}return this};var D=/[^+\/0-9A-Za-z-_]/g;function F(t){return t<16?"0"+t.toString(16):t.toString(16)}function H(t,e){var i;e=e||1/0;for(var s=t.length,r=null,n=[],o=0;o<s;++o){if((i=t.charCodeAt(o))>55295&&i<57344){if(!r){if(i>56319){(e-=3)>-1&&n.push(239,191,189);continue}if(o+1===s){(e-=3)>-1&&n.push(239,191,189);continue}r=i;continue}if(i<56320){(e-=3)>-1&&n.push(239,191,189),r=i;continue}i=65536+(r-55296<<10|i-56320)}else r&&(e-=3)>-1&&n.push(239,191,189);if(r=null,i<128){if((e-=1)<0)break;n.push(i)}else if(i<2048){if((e-=2)<0)break;n.push(i>>6|192,63&i|128)}else if(i<65536){if((e-=3)<0)break;n.push(i>>12|224,i>>6&63|128,63&i|128)}else{if(!(i<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;n.push(i>>18|240,i>>12&63|128,i>>6&63|128,63&i|128)}}return n}function z(t){return s.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(D,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function V(t,e,i,s){for(var r=0;r<s&&!(r+i>=e.length||r>=t.length);++r)e[r+i]=t[r];return r}}).call(this,i(10))},function(t,e,i){"use strict";
/*!
 * bufio.js - buffer utilities for javascript
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(22),r=i(32),n=i(98),o=i(97),a=i(96),h=i(193),l=i(192),u=i(191);function c(t,e){return function(i,s){if(s+e>i.length)throw new r(s,"Out of bounds read");return t(i,s)}}function f(t){return function(e,i,s){if(i+s>e.length)throw new r(i,"Out of bounds read");return t(e,i,s)}}function d(t,e){return function(i,s,n){if(n+e>i.length)throw new r(n,"Out of bounds write");return t(i,s,n)}}function p(t){return function(e,i,s,n){if(s+n>e.length)throw new r(s,"Out of bounds write");return t(e,i,s,n)}}function g(t,e){return function(i,s,n){if(n+e(s)>i.length)throw new r(n,"Out of bounds write");return t(i,s,n)}}e.encoding=s,e.EncodingError=r,e.BufferReader=n,e.BufferWriter=o,e.StaticWriter=a,e.SizeWriter=h,e.HashWriter=l,e.Struct=u,e.read=function(t,e){return new n(t,e)},e.write=function(t){return null!=t?new a(t):new o},e.pool=function(t){return a.pool(t)},e.size=function(t){return new h(t)},e.hash=function(t){return new l(t)},e.readU=f(s.readU),e.readU64=c(s.readU64,8),e.readU56=c(s.readU56,7),e.readU48=c(s.readU48,6),e.readU40=c(s.readU40,5),e.readU32=c(s.readU32,4),e.readU24=c(s.readU24,3),e.readU16=c(s.readU16,2),e.readU8=c(s.readU8,1),e.readUBE=f(s.readUBE),e.readU64BE=c(s.readU64BE,8),e.readU56BE=c(s.readU56BE,7),e.readU48BE=c(s.readU48BE,6),e.readU40BE=c(s.readU40BE,5),e.readU32BE=c(s.readU32BE,4),e.readU24BE=c(s.readU24BE,3),e.readU16BE=c(s.readU16BE,2),e.readI=f(s.readI),e.readI64=c(s.readI64,8),e.readI56=c(s.readI56,7),e.readI48=c(s.readI48,6),e.readI40=c(s.readI40,5),e.readI32=c(s.readI32,4),e.readI24=c(s.readI24,3),e.readI16=c(s.readI16,2),e.readI8=c(s.readI8,1),e.readIBE=f(s.readIBE),e.readI64BE=c(s.readI64BE,8),e.readI56BE=c(s.readI56BE,7),e.readI48BE=c(s.readI48BE,6),e.readI40BE=c(s.readI40BE,5),e.readI32BE=c(s.readI32BE,4),e.readI24BE=c(s.readI24BE,3),e.readI16BE=c(s.readI16BE,2),e.readFloat=c(s.readFloat,4),e.readFloatBE=c(s.readFloatBE,4),e.readDouble=c(s.readDouble,8),e.readDoubleBE=c(s.readDoubleBE,8),e.writeU=p(s.writeU),e.writeU64=d(s.writeU64,8),e.writeU56=d(s.writeU56,7),e.writeU48=d(s.writeU48,6),e.writeU40=d(s.writeU40,5),e.writeU32=d(s.writeU32,4),e.writeU24=d(s.writeU24,3),e.writeU16=d(s.writeU16,2),e.writeU8=d(s.writeU8,1),e.writeUBE=p(s.writeUBE),e.writeU64BE=d(s.writeU64BE,8),e.writeU56BE=d(s.writeU56BE,7),e.writeU48BE=d(s.writeU48BE,6),e.writeU40BE=d(s.writeU40BE,5),e.writeU32BE=d(s.writeU32BE,4),e.writeU24BE=d(s.writeU24BE,3),e.writeU16BE=d(s.writeU16BE,2),e.writeI=p(s.writeI),e.writeI64=d(s.writeI64,8),e.writeI56=d(s.writeI56,7),e.writeI48=d(s.writeI48,6),e.writeI40=d(s.writeI40,5),e.writeI32=d(s.writeI32,4),e.writeI24=d(s.writeI24,3),e.writeI16=d(s.writeI16,2),e.writeI8=d(s.writeI8,1),e.writeIBE=p(s.writeIBE),e.writeI64BE=d(s.writeI64BE,8),e.writeI56BE=d(s.writeI56BE,7),e.writeI48BE=d(s.writeI48BE,6),e.writeI40BE=d(s.writeI40BE,5),e.writeI32BE=d(s.writeI32BE,4),e.writeI24BE=d(s.writeI24BE,3),e.writeI16BE=d(s.writeI16BE,2),e.writeFloat=d(s.writeFloat,4),e.writeFloatBE=d(s.writeFloatBE,4),e.writeDouble=d(s.writeDouble,8),e.writeDoubleBE=d(s.writeDoubleBE,8),e.readVarint=s.readVarint,e.writeVarint=g(s.writeVarint,s.sizeVarint),e.sizeVarint=s.sizeVarint,e.readVarint2=s.readVarint2,e.writeVarint2=g(s.writeVarint2,s.sizeVarint2),e.sizeVarint2=s.sizeVarint2,e.sliceBytes=s.sliceBytes,e.readBytes=s.readBytes,e.writeBytes=s.writeBytes,e.readString=s.readString,e.writeString=s.writeString,e.realloc=s.realloc,e.copy=s.copy,e.concat=s.concat,e.sizeVarBytes=s.sizeVarBytes,e.sizeVarlen=s.sizeVarlen,e.sizeVarString=s.sizeVarString},function(t,e,i){"use strict";(function(t){
/*!
 * consensus.js - consensus constants and helpers for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(52);e.COIN=1e8,e.MAX_MONEY=21e6*e.COIN,e.BASE_REWARD=50*e.COIN,e.HALF_REWARD=Math.floor(e.BASE_REWARD/2),e.MAX_BLOCK_SIZE=1e6,e.MAX_FORK_BLOCK_SIZE=32e6,e.MAX_TX_SIZE=1e6,e.MAX_RAW_BLOCK_SIZE=32e6,e.MAX_BLOCK_SIGOPS_PER_MB=2e4,e.MAX_TX_SIGOPS=2e4,e.MAX_BLOCK_SIGOPS_COST=8e4,e.MEDIAN_TIMESPAN=11,e.VERSION_TOP_BITS=536870912,e.VERSION_TOP_MASK=3758096384,e.COINBASE_MATURITY=100,e.LOCKTIME_THRESHOLD=5e8,e.SEQUENCE_DISABLE_FLAG=1<<31>>>0,e.SEQUENCE_TYPE_FLAG=1<<22,e.SEQUENCE_GRANULARITY=9,e.SEQUENCE_MASK=65535,e.MAX_SCRIPT_SIZE=1e4,e.MAX_SCRIPT_STACK=1e3,e.MAX_SCRIPT_PUSH=520,e.MAX_SCRIPT_OPS=201,e.MAX_MULTISIG_PUBKEYS=20,e.BIP16_TIME=1333238400,e.ZERO_HASH=t.alloc(32,0),e.NULL_HASH="0000000000000000000000000000000000000000000000000000000000000000",e.ANTI_REPLAY_COMMITMENT="Bitcoin: A Peer-to-Peer Electronic Cash System",e.UAHF_TIME=150159e4,e.MONOLITH_TIME=15264e5,e.fromCompact=function(t){if(0===t)return new r(0);const e=t>>>24,i=t>>>23&1;let s,n=8388607&t;return e<=3?s=new r(n>>>=8*(3-e)):(s=new r(n)).iushln(8*(e-3)),i&&s.ineg(),s},e.toCompact=function(t){if(t.isZero())return 0;let e,i=t.byteLength();i<=3?(e=t.toNumber(),e<<=8*(3-i)):e=t.ushrn(8*(i-3)).toNumber(),8388608&e&&(e>>=8,i++);let s=i<<24|e;return t.isNeg()&&(s|=8388608),s>>>0},e.verifyPOW=function(t,i){const s=e.fromCompact(i);return!s.isNeg()&&!s.isZero()&&!new r(t,"le").gt(s)},e.getReward=function(t,i){s(t>=0,"Bad height for reward.");const r=Math.floor(t/i);return r>=33?0:0===r?e.BASE_REWARD:e.HALF_REWARD>>>r-1},e.hasBit=function(t,i){return(t&e.VERSION_TOP_MASK)>>>0===e.VERSION_TOP_BITS&&0!=(t&1<<i)},e.maxBlockSigops=function(t){return(1+((t-1)/1e6|0))*e.MAX_BLOCK_SIGOPS_PER_MB}}).call(this,i(1).Buffer)},function(t,e,i){var s=i(1),r=s.Buffer;function n(t,e){for(var i in t)e[i]=t[i]}function o(t,e,i){return r(t,e,i)}r.from&&r.alloc&&r.allocUnsafe&&r.allocUnsafeSlow?t.exports=s:(n(s,e),e.Buffer=o),n(r,o),o.from=function(t,e,i){if("number"==typeof t)throw new TypeError("Argument must not be a number");return r(t,e,i)},o.alloc=function(t,e,i){if("number"!=typeof t)throw new TypeError("Argument must be a number");var s=r(t);return void 0!==e?"string"==typeof i?s.fill(e,i):s.fill(e):s.fill(0),s},o.allocUnsafe=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return r(t)},o.allocUnsafeSlow=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return s.SlowBuffer(t)}},function(t,e,i){"use strict";(function(t){
/*!
 * util.js - utils for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=e;r.bench=function(e){if(!t.hrtime){const t=Date.now();if(e){const[i,s]=e;return t-(1e3*i+s/1e6)}const i=t%1e3;return[(t-i)/1e3,1e6*i]}if(e){const[i,s]=t.hrtime(e);return 1e3*i+s/1e6}return t.hrtime()},r.now=function(){return Math.floor(Date.now()/1e3)},r.ms=function(){return Date.now()},r.date=function(t){return null==t&&(t=r.now()),new Date(1e3*t).toISOString().slice(0,-5)+"Z"},r.time=function(t){return null==t?r.now():new Date(t)/1e3|0},r.revHex=function(t){s("string"==typeof t),s(0==(1&t.length));let e="";for(let i=t.length-2;i>=0;i-=2)e+=t[i]+t[i+1];return e}}).call(this,i(15))},function(t,e){"function"==typeof Object.create?t.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(t,e){t.super_=e;var i=function(){};i.prototype=e.prototype,t.prototype=new i,t.prototype.constructor=t}},function(t,e){function i(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function s(t){return"function"==typeof t}function r(t){return"object"==typeof t&&null!==t}function n(t){return void 0===t}t.exports=i,i.EventEmitter=i,i.prototype._events=void 0,i.prototype._maxListeners=void 0,i.defaultMaxListeners=10,i.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||isNaN(t))throw TypeError("n must be a positive number");return this._maxListeners=t,this},i.prototype.emit=function(t){var e,i,o,a,h,l;if(this._events||(this._events={}),"error"===t&&(!this._events.error||r(this._events.error)&&!this._events.error.length)){if((e=arguments[1])instanceof Error)throw e;var u=new Error('Uncaught, unspecified "error" event. ('+e+")");throw u.context=e,u}if(n(i=this._events[t]))return!1;if(s(i))switch(arguments.length){case 1:i.call(this);break;case 2:i.call(this,arguments[1]);break;case 3:i.call(this,arguments[1],arguments[2]);break;default:a=Array.prototype.slice.call(arguments,1),i.apply(this,a)}else if(r(i))for(a=Array.prototype.slice.call(arguments,1),o=(l=i.slice()).length,h=0;h<o;h++)l[h].apply(this,a);return!0},i.prototype.addListener=function(t,e){var o;if(!s(e))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",t,s(e.listener)?e.listener:e),this._events[t]?r(this._events[t])?this._events[t].push(e):this._events[t]=[this._events[t],e]:this._events[t]=e,r(this._events[t])&&!this._events[t].warned&&(o=n(this._maxListeners)?i.defaultMaxListeners:this._maxListeners)&&o>0&&this._events[t].length>o&&(this._events[t].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[t].length),"function"==typeof console.trace&&console.trace()),this},i.prototype.on=i.prototype.addListener,i.prototype.once=function(t,e){if(!s(e))throw TypeError("listener must be a function");var i=!1;function r(){this.removeListener(t,r),i||(i=!0,e.apply(this,arguments))}return r.listener=e,this.on(t,r),this},i.prototype.removeListener=function(t,e){var i,n,o,a;if(!s(e))throw TypeError("listener must be a function");if(!this._events||!this._events[t])return this;if(o=(i=this._events[t]).length,n=-1,i===e||s(i.listener)&&i.listener===e)delete this._events[t],this._events.removeListener&&this.emit("removeListener",t,e);else if(r(i)){for(a=o;a-- >0;)if(i[a]===e||i[a].listener&&i[a].listener===e){n=a;break}if(n<0)return this;1===i.length?(i.length=0,delete this._events[t]):i.splice(n,1),this._events.removeListener&&this.emit("removeListener",t,e)}return this},i.prototype.removeAllListeners=function(t){var e,i;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[t]&&delete this._events[t],this;if(0===arguments.length){for(e in this._events)"removeListener"!==e&&this.removeAllListeners(e);return this.removeAllListeners("removeListener"),this._events={},this}if(s(i=this._events[t]))this.removeListener(t,i);else if(i)for(;i.length;)this.removeListener(t,i[i.length-1]);return delete this._events[t],this},i.prototype.listeners=function(t){return this._events&&this._events[t]?s(this._events[t])?[this._events[t]]:this._events[t].slice():[]},i.prototype.listenerCount=function(t){if(this._events){var e=this._events[t];if(s(e))return 1;if(e)return e.length}return 0},i.listenerCount=function(t,e){return t.listenerCount(e)}},function(t,e,i){"use strict";
/*!
 * network.js - network object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(53),n=i(95),o=i(3),a=i(118);class h{constructor(t){s(!h[t.type],"Cannot create two networks."),this.type=t.type,this.seeds=t.seeds,this.magic=t.magic,this.port=t.port,this.checkpointMap=t.checkpointMap,this.lastCheckpoint=t.lastCheckpoint,this.checkpoints=[],this.halvingInterval=t.halvingInterval,this.genesis=t.genesis,this.genesisBlock=t.genesisBlock,this.pow=t.pow,this.block=t.block,this.bip30=t.bip30,this.activationThreshold=t.activationThreshold,this.minerWindow=t.minerWindow,this.deployments=t.deployments,this.deploys=t.deploys,this.unknownBits=~o.VERSION_TOP_MASK,this.keyPrefix=t.keyPrefix,this.addressPrefix=t.addressPrefix,this.requireStandard=t.requireStandard,this.rpcPort=t.rpcPort,this.walletPort=t.walletPort,this.minRelay=t.minRelay,this.feeRate=t.feeRate,this.maxFeeRate=t.maxFeeRate,this.selfConnect=t.selfConnect,this.requestMempool=t.requestMempool,this.time=new a,this.init()}init(){let t=0;for(const e of this.deploys)t|=1<<e.bit;t|=o.VERSION_TOP_MASK,this.unknownBits=~t>>>0;for(const t of Object.keys(this.checkpointMap)){const e=this.checkpointMap[t],i=Number(t);this.checkpoints.push({hash:e,height:i})}this.checkpoints.sort(u)}byBit(t){const e=r.search(this.deploys,t,l);return-1===e?null:this.deploys[e]}now(){return this.time.now()}ms(){return this.time.ms()}static create(t){if("string"==typeof t&&(t=n[t]),s(t,"Unknown network."),h[t.type])return h[t.type];const e=new h(t);return h[e.type]=e,h.primary||(h.primary=e),e}static set(t){return s("string"==typeof t,"Bad network."),h.primary=h.get(t),h.type=t,h.primary}static get(t){if(!t)return s(h.primary,"No default network."),h.primary;if(t instanceof h)return t;if("string"==typeof t)return h.create(t);throw new Error("Unknown network.")}static ensure(t){return t?t instanceof h?t:"string"==typeof t&&n[t]?h.create(t):(s(h.primary,"No default network."),h.primary):(s(h.primary,"No default network."),h.primary)}static by(t,e,i,s){if(i){if(e(i=h.get(i),t))return i;throw new Error(`Network mismatch for ${s}.`)}for(const s of n.types)if(e(i=n[s],t))return h.get(s);throw new Error(`Network not found for ${s}.`)}static fromMagic(t,e){return h.by(t,c,e,"magic number")}static fromWIF(t,e){return h.by(t,f,e,"WIF")}static fromPublic(t,e){return h.by(t,d,e,"xpubkey")}static fromPrivate(t,e){return h.by(t,p,e,"xprivkey")}static fromPublic58(t,e){return h.by(t,g,e,"xpubkey")}static fromPrivate58(t,e){return h.by(t,m,e,"xprivkey")}static fromAddress(t,e){return h.by(t,w,e,"base58 address")}static fromCashAddr(t,e){return h.by(t,y,e,"cashaddr address")}toString(){return this.type}inspect(){return`<Network: ${this.type}>`}static isNetwork(t){return t instanceof h}}function l(t,e){return t.bit-e}function u(t,e){return t.height-e.height}function c(t,e){return t.magic===e}function f(t,e){return t.keyPrefix.privkey===e}function d(t,e){return t.keyPrefix.xpubkey===e}function p(t,e){return t.keyPrefix.xprivkey===e}function g(t,e){return t.keyPrefix.xpubkey58===e}function m(t,e){return t.keyPrefix.xprivkey58===e}function w(t,e){const i=t.addressPrefix;switch(e){case i.pubkeyhash:case i.scripthash:return!0}return!1}function y(t,e){return t.addressPrefix.cashaddr===e}h.primary=null,h.type=null,h.main=null,h.testnet=null,h.regtest=null,h.segnet4=null,h.simnet=null,h.set("main"),t.exports=h},function(t,e,i){"use strict";
/*!
 * hash256.js - hash256 for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 */t.exports=i(183)},function(t,e){var i;i=function(){return this}();try{i=i||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(i=window)}t.exports=i},function(t,e,i){"use strict";(function(e){
/*!
 * script.js - script interpreter for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(182),o=i(181),a=i(30),h=i(24),l=i(9),u=i(13),c=i(3),f=i(17),d=i(78),p=i(55),g=i(37),m=i(28),w=i(36),y=i(12),b=w.opcodes,v=w.types,{encoding:k}=r,E=e.alloc(0);class R{constructor(t){this.raw=E,this.code=[],t&&this.fromOptions(t)}get length(){return this.code.length}set length(t){this.code.length=t}fromOptions(t){if(s(t,"Script data is required."),e.isBuffer(t))return this.fromRaw(t);if(Array.isArray(t))return this.fromArray(t);if(t.raw){if(!t.code)return this.fromRaw(t.raw);s(e.isBuffer(t.raw),"Raw must be a Buffer."),this.raw=t.raw}if(t.code){if(!t.raw)return this.fromArray(t.code);s(Array.isArray(t.code),"Code must be an array."),this.code=t.code}return this}static fromOptions(t){return(new this).fromOptions(t)}values(){return this.code.values()}entries(){return this.code.entries()}[Symbol.iterator](){return this.code[Symbol.iterator]()}toArray(){return this.code.slice()}fromArray(t){s(Array.isArray(t)),this.clear();for(const e of t)this.push(e);return this.compile()}static fromArray(t){return(new this).fromArray(t)}toItems(){const t=[];for(const e of this.code){const i=e.toPush();if(!i)throw new Error("Non-push opcode in script.");t.push(i)}return t}fromItems(t){s(Array.isArray(t)),this.clear();for(const e of t)this.pushData(e);return this.compile()}static fromItems(t){return(new this).fromItems(t)}toStack(){return new p(this.toItems())}fromStack(t){return this.fromItems(t.items)}static fromStack(t){return(new this).fromStack(t)}clone(){return(new this.constructor).inject(this)}inject(t){return this.raw=t.raw,this.code=t.code.slice(),this}equals(t){return s(R.isScript(t)),this.raw.equals(t.raw)}compare(t){return s(R.isScript(t)),this.raw.compare(t.raw)}clear(){return this.raw=E,this.code.length=0,this}inspect(){return`<Script: ${this.toString()}>`}toString(){const t=[];for(const e of this.code)t.push(e.toFormat());return t.join(" ")}toASM(t){this.isNulldata()&&(t=!1);const e=[];for(const i of this.code)e.push(i.toASM(t));return e.join(" ")}compile(){if(0===this.code.length)return this.clear();let t=0;for(const e of this.code)t+=e.getSize();const e=r.write(t);for(const t of this.code)t.toWriter(e);return this.raw=e.render(),this}toWriter(t){return t.writeVarBytes(this.raw),t}toRaw(){return this.raw}toJSON(){return this.toRaw().toString("hex")}fromJSON(t){return s("string"==typeof t,"Code must be a string."),this.fromRaw(e.from(t,"hex"))}static fromJSON(t){return(new this).fromJSON(t)}getSubscript(t){if(0===t)return this.clone();const e=new R;for(let i=t;i<this.code.length;i++){const t=this.code[i];if(-1===t.value)break;e.code.push(t)}return e.compile()}removeSeparators(){let t=!1;for(const e of this.code){if(-1===e.value)break;if(e.value===b.OP_CODESEPARATOR){t=!0;break}}if(!t)return this;const e=new R;for(const t of this.code){if(-1===t.value)break;t.value!==b.OP_CODESEPARATOR&&e.code.push(t)}return e.compile()}execute(t,i,r,u,f){if(null==i&&(i=R.flags.STANDARD_VERIFY_FLAGS),this.getSize()>c.MAX_SCRIPT_SIZE)throw new g("SCRIPT_SIZE");const d=[],p=[];let w=0,y=0,v=0,k=!1;i&R.flags.VERIFY_MINIMALDATA&&(k=!0);for(let E=0;E<this.code.length;E++){const I=this.code[E];if(-1===I.value)throw new g("BAD_OPCODE",I,E);if(I.data&&I.data.length>c.MAX_SCRIPT_PUSH)throw new g("PUSH_SIZE",I,E);if(I.value>b.OP_16&&++y>c.MAX_SCRIPT_OPS)throw new g("OP_COUNT",I,E);if(I.isDisabled(i))throw new g("DISABLED_OPCODE",I,E);if(!v||I.isBranch())if(I.data){if(k&&!I.isMinimal())throw new g("MINIMALDATA",I,E);if(t.push(I.data),t.length+p.length>c.MAX_SCRIPT_STACK)throw new g("STACK_SIZE",I,E)}else switch(I.value){case b.OP_0:t.pushInt(0);break;case b.OP_1NEGATE:t.pushInt(-1);break;case b.OP_1:case b.OP_2:case b.OP_3:case b.OP_4:case b.OP_5:case b.OP_6:case b.OP_7:case b.OP_8:case b.OP_9:case b.OP_10:case b.OP_11:case b.OP_12:case b.OP_13:case b.OP_14:case b.OP_15:case b.OP_16:t.pushInt(I.value-80);break;case b.OP_NOP:break;case b.OP_CHECKLOCKTIMEVERIFY:{if(!(i&R.flags.VERIFY_CHECKLOCKTIMEVERIFY)){if(i&R.flags.VERIFY_DISCOURAGE_UPGRADABLE_NOPS)throw new g("DISCOURAGE_UPGRADABLE_NOPS",I,E);break}if(!r)throw new g("UNKNOWN_ERROR","No TX passed in.");if(0===t.length)throw new g("INVALID_STACK_OPERATION",I,E);const e=t.getNum(-1,k,5);if(e.isNeg())throw new g("NEGATIVE_LOCKTIME",I,E);const s=e.toDouble();if(!r.verifyLocktime(u,s))throw new g("UNSATISFIED_LOCKTIME",I,E);break}case b.OP_CHECKSEQUENCEVERIFY:{if(!(i&R.flags.VERIFY_CHECKSEQUENCEVERIFY)){if(i&R.flags.VERIFY_DISCOURAGE_UPGRADABLE_NOPS)throw new g("DISCOURAGE_UPGRADABLE_NOPS",I,E);break}if(!r)throw new g("UNKNOWN_ERROR","No TX passed in.");if(0===t.length)throw new g("INVALID_STACK_OPERATION",I,E);const e=t.getNum(-1,k,5);if(e.isNeg())throw new g("NEGATIVE_LOCKTIME",I,E);const s=e.toDouble();if(!r.verifySequence(u,s))throw new g("UNSATISFIED_LOCKTIME",I,E);break}case b.OP_NOP1:case b.OP_NOP4:case b.OP_NOP5:case b.OP_NOP6:case b.OP_NOP7:case b.OP_NOP8:case b.OP_NOP9:case b.OP_NOP10:if(i&R.flags.VERIFY_DISCOURAGE_UPGRADABLE_NOPS)throw new g("DISCOURAGE_UPGRADABLE_NOPS",I,E);break;case b.OP_IF:case b.OP_NOTIF:{let e=!1;if(!v){if(t.length<1)throw new g("UNBALANCED_CONDITIONAL",I,E);if(i&R.flags.VERIFY_MINIMALIF){const e=t.get(-1);if(e.length>1)throw new g("MINIMALIF");if(1===e.length&&1!==e[0])throw new g("MINIMALIF")}e=t.getBool(-1),I.value===b.OP_NOTIF&&(e=!e),t.pop()}d.push(e),e||(v+=1);break}case b.OP_ELSE:if(0===d.length)throw new g("UNBALANCED_CONDITIONAL",I,E);d[d.length-1]=!d[d.length-1],d[d.length-1]?v-=1:v+=1;break;case b.OP_ENDIF:if(0===d.length)throw new g("UNBALANCED_CONDITIONAL",I,E);d.pop()||(v-=1);break;case b.OP_VERIFY:if(0===t.length)throw new g("INVALID_STACK_OPERATION",I,E);if(!t.getBool(-1))throw new g("VERIFY",I,E);t.pop();break;case b.OP_RETURN:throw new g("OP_RETURN",I,E);case b.OP_TOALTSTACK:if(0===t.length)throw new g("INVALID_STACK_OPERATION",I,E);p.push(t.pop());break;case b.OP_FROMALTSTACK:if(0===p.length)throw new g("INVALID_ALTSTACK_OPERATION",I,E);t.push(p.pop());break;case b.OP_2DROP:if(t.length<2)throw new g("INVALID_STACK_OPERATION",I,E);t.pop(),t.pop();break;case b.OP_2DUP:{if(t.length<2)throw new g("INVALID_STACK_OPERATION",I,E);const e=t.get(-2),i=t.get(-1);t.push(e),t.push(i);break}case b.OP_3DUP:{if(t.length<3)throw new g("INVALID_STACK_OPERATION",I,E);const e=t.get(-3),i=t.get(-2),s=t.get(-1);t.push(e),t.push(i),t.push(s);break}case b.OP_2OVER:{if(t.length<4)throw new g("INVALID_STACK_OPERATION",I,E);const e=t.get(-4),i=t.get(-3);t.push(e),t.push(i);break}case b.OP_2ROT:{if(t.length<6)throw new g("INVALID_STACK_OPERATION",I,E);const e=t.get(-6),i=t.get(-5);t.erase(-6,-4),t.push(e),t.push(i);break}case b.OP_2SWAP:if(t.length<4)throw new g("INVALID_STACK_OPERATION",I,E);t.swap(-4,-2),t.swap(-3,-1);break;case b.OP_IFDUP:if(0===t.length)throw new g("INVALID_STACK_OPERATION",I,E);if(t.getBool(-1)){const e=t.get(-1);t.push(e)}break;case b.OP_DEPTH:t.pushInt(t.length);break;case b.OP_DROP:if(0===t.length)throw new g("INVALID_STACK_OPERATION",I,E);t.pop();break;case b.OP_DUP:if(0===t.length)throw new g("INVALID_STACK_OPERATION",I,E);t.push(t.get(-1));break;case b.OP_NIP:if(t.length<2)throw new g("INVALID_STACK_OPERATION",I,E);t.remove(-2);break;case b.OP_OVER:if(t.length<2)throw new g("INVALID_STACK_OPERATION",I,E);t.push(t.get(-2));break;case b.OP_PICK:case b.OP_ROLL:{if(t.length<2)throw new g("INVALID_STACK_OPERATION",I,E);const e=t.getInt(-1,k,4);if(t.pop(),e<0||e>=t.length)throw new g("INVALID_STACK_OPERATION",I,E);const i=t.get(-e-1);I.value===b.OP_ROLL&&t.remove(-e-1),t.push(i);break}case b.OP_ROT:if(t.length<3)throw new g("INVALID_STACK_OPERATION",I,E);t.swap(-3,-2),t.swap(-2,-1);break;case b.OP_SWAP:if(t.length<2)throw new g("INVALID_STACK_OPERATION",I,E);t.swap(-2,-1);break;case b.OP_TUCK:if(t.length<2)throw new g("INVALID_STACK_OPERATION",I,E);t.insert(-2,t.get(-1));break;case b.OP_SIZE:if(t.length<1)throw new g("INVALID_STACK_OPERATION",I,E);t.pushInt(t.get(-1).length);break;case b.OP_EQUAL:case b.OP_EQUALVERIFY:{if(t.length<2)throw new g("INVALID_STACK_OPERATION",I,E);const e=t.get(-2),i=t.get(-1),s=e.equals(i);if(t.pop(),t.pop(),t.pushBool(s),I.value===b.OP_EQUALVERIFY){if(!s)throw new g("EQUALVERIFY",I,E);t.pop()}break}case b.OP_1ADD:case b.OP_1SUB:case b.OP_NEGATE:case b.OP_ABS:case b.OP_NOT:case b.OP_0NOTEQUAL:{if(t.length<1)throw new g("INVALID_STACK_OPERATION",I,E);let e,i=t.getNum(-1,k,4);switch(I.value){case b.OP_1ADD:i.iaddn(1);break;case b.OP_1SUB:i.isubn(1);break;case b.OP_NEGATE:i.ineg();break;case b.OP_ABS:i.iabs();break;case b.OP_NOT:e=i.isZero(),i=m.fromBool(e);break;case b.OP_0NOTEQUAL:e=!i.isZero(),i=m.fromBool(e);break;default:s(!1,"Fatal script error.")}t.pop(),t.pushNum(i);break}case b.OP_ADD:case b.OP_SUB:case b.OP_DIV:case b.OP_MOD:case b.OP_BOOLAND:case b.OP_BOOLOR:case b.OP_NUMEQUAL:case b.OP_NUMEQUALVERIFY:case b.OP_NUMNOTEQUAL:case b.OP_LESSTHAN:case b.OP_GREATERTHAN:case b.OP_LESSTHANOREQUAL:case b.OP_GREATERTHANOREQUAL:case b.OP_MIN:case b.OP_MAX:{if(t.length<2)throw new g("INVALID_STACK_OPERATION",I,E);const e=t.getNum(-2,k,4),i=t.getNum(-1,k,4);let r,n;switch(I.value){case b.OP_ADD:r=e.iadd(i);break;case b.OP_SUB:r=e.isub(i);break;case b.OP_DIV:if(i.isZero())throw new g("DIV_BY_ZERO",I,E);r=e.div(i);break;case b.OP_MOD:if(i.isZero())throw new g("MOD_BY_ZERO",I,E);r=e.mod(i);break;case b.OP_BOOLAND:n=e.toBool()&&i.toBool(),r=m.fromBool(n);break;case b.OP_BOOLOR:n=e.toBool()||i.toBool(),r=m.fromBool(n);break;case b.OP_NUMEQUAL:case b.OP_NUMEQUALVERIFY:n=e.eq(i),r=m.fromBool(n);break;case b.OP_NUMNOTEQUAL:n=!e.eq(i),r=m.fromBool(n);break;case b.OP_LESSTHAN:n=e.lt(i),r=m.fromBool(n);break;case b.OP_GREATERTHAN:n=e.gt(i),r=m.fromBool(n);break;case b.OP_LESSTHANOREQUAL:n=e.lte(i),r=m.fromBool(n);break;case b.OP_GREATERTHANOREQUAL:n=e.gte(i),r=m.fromBool(n);break;case b.OP_MIN:r=m.min(e,i);break;case b.OP_MAX:r=m.max(e,i);break;default:s(!1,"Fatal script error.")}if(t.pop(),t.pop(),t.pushNum(r),I.value===b.OP_NUMEQUALVERIFY){if(!t.getBool(-1))throw new g("NUMEQUALVERIFY",I,E);t.pop()}break}case b.OP_WITHIN:{if(t.length<3)throw new g("INVALID_STACK_OPERATION",I,E);const e=t.getNum(-3,k,4),i=t.getNum(-2,k,4),s=t.getNum(-1,k,4),r=i.lte(e)&&e.lt(s);t.pop(),t.pop(),t.pop(),t.pushBool(r);break}case b.OP_RIPEMD160:if(0===t.length)throw new g("INVALID_STACK_OPERATION",I,E);t.push(n.digest(t.pop()));break;case b.OP_SHA1:if(0===t.length)throw new g("INVALID_STACK_OPERATION",I,E);t.push(o.digest(t.pop()));break;case b.OP_SHA256:if(0===t.length)throw new g("INVALID_STACK_OPERATION",I,E);t.push(a.digest(t.pop()));break;case b.OP_HASH160:if(0===t.length)throw new g("INVALID_STACK_OPERATION",I,E);t.push(h.digest(t.pop()));break;case b.OP_HASH256:if(0===t.length)throw new g("INVALID_STACK_OPERATION",I,E);t.push(l.digest(t.pop()));break;case b.OP_CODESEPARATOR:w=E+1;break;case b.OP_CHECKSIG:case b.OP_CHECKSIGVERIFY:{if(!r)throw new g("UNKNOWN_ERROR","No TX passed in.");if(t.length<2)throw new g("INVALID_STACK_OPERATION",I,E);const e=t.get(-2),s=t.get(-1),n=this.getSubscript(w);i&R.flags.VERIFY_SIGHASH_FORKID&&e[e.length-1]&R.hashType.SIGHASH_FORKID||n.findAndDelete(e),_(e,i),S(s,i);let o=!1;if(e.length>0){const t=e[e.length-1];o=x(r.signatureHash(u,n,f,t,i),e,s)}if(!o&&i&R.flags.VERIFY_NULLFAIL&&0!==e.length)throw new g("NULLFAIL",I,E);if(t.pop(),t.pop(),t.pushBool(o),I.value===b.OP_CHECKSIGVERIFY){if(!o)throw new g("CHECKSIGVERIFY",I,E);t.pop()}break}case b.OP_CHECKMULTISIG:case b.OP_CHECKMULTISIGVERIFY:{if(!r)throw new g("UNKNOWN_ERROR","No TX passed in.");let e=1;if(t.length<e)throw new g("INVALID_STACK_OPERATION",I,E);let s,n,o=t.getInt(-e,k,4),a=o+2;if(o<0||o>c.MAX_MULTISIG_PUBKEYS)throw new g("PUBKEY_COUNT",I,E);if((y+=o)>c.MAX_SCRIPT_OPS)throw new g("OP_COUNT",I,E);if(s=e+=1,e+=o,t.length<e)throw new g("INVALID_STACK_OPERATION",I,E);let h=t.getInt(-e,k,4);if(h<0||h>o)throw new g("SIG_COUNT",I,E);if(n=e+=1,e+=h,t.length<e)throw new g("INVALID_STACK_OPERATION",I,E);const l=this.getSubscript(w);for(let e=0;e<h;e++){const s=t.get(-n-e);i&R.flags.VERIFY_SIGHASH_FORKID&&s[s.length-1]&R.hashType.SIGHASH_FORKID||l.findAndDelete(s)}let d=!0;for(;d&&h>0;){const e=t.get(-n),a=t.get(-s);if(_(e,i),S(a,i),e.length>0){const t=e[e.length-1];x(r.signatureHash(u,l,f,t,i),e,a)&&(n+=1,h-=1)}s+=1,h>(o-=1)&&(d=!1)}for(;e>1;){if(!d&&i&R.flags.VERIFY_NULLFAIL&&0===a&&0!==t.get(-1).length)throw new g("NULLFAIL",I,E);a>0&&(a-=1),t.pop(),e-=1}if(t.length<1)throw new g("INVALID_STACK_OPERATION",I,E);if(i&R.flags.VERIFY_NULLDUMMY&&0!==t.get(-1).length)throw new g("SIG_NULLDUMMY",I,E);if(t.pop(),t.pushBool(d),I.value===b.OP_CHECKMULTISIGVERIFY){if(!d)throw new g("CHECKMULTISIGVERIFY",I,E);t.pop()}break}case b.OP_CAT:{if(t.length<2)throw new g("INVALID_STACK_OPERATION",I,E);const i=t.get(-2),s=t.get(-1);if(i.length+s.length>c.MAX_SCRIPT_PUSH)throw new g("PUSH_SIZE",I,E);t.pop(),t.pop(),t.push(e.concat([i,s]));break}case b.OP_SPLIT:{if(t.length<2)throw new g("INVALID_STACK_OPERATION",I,E);const e=t.get(-2),i=t.getInt(-1,k,4);if(i<0||i>e.length)throw new g("INVALID_SPLIT_RANGE",I,E);const s=e.slice(0,i),r=e.slice(i);t.set(-2,s),t.set(-1,r);break}case b.OP_AND:case b.OP_OR:case b.OP_XOR:{if(t.length<2)throw new g("INVALID_STACK_OPERATION",I,E);const i=t.get(-2),s=t.get(-1);if(i.length!==s.length)throw new g("INVALID_OPERAND_SIZE",I,E);const r=e.alloc(i.length);switch(I.value){case b.OP_AND:for(let t=0;t<i.length;t++)r[t]=i[t]&s[t];break;case b.OP_OR:for(let t=0;t<i.length;t++)r[t]=i[t]|s[t];break;case b.OP_XOR:for(let t=0;t<i.length;t++)r[t]=i[t]^s[t]}t.pop(),t.pop(),t.push(r);break}case b.OP_NUM2BIN:{if(t.length<2)throw new g("INVALID_STACK_OPERATION",I,E);const i=t.getInt(-1,k,4);if(i<0||i>c.MAX_SCRIPT_PUSH)throw new g("PUSH_SIZE",I,E);t.pop();const s=t.get(-1),r=m.toMinimal(e.from(s));if(r.length>i)throw new g("IMPOSSIBLE_ENCODING",I,E);if(r.length===i){t.pop(),t.push(r);break}const n=e.alloc(i);r.copy(n);let o=0;r.length>0&&(o=128&r[r.length-1],n[r.length-1]&=127),n[i-1]=o,t.pop(),t.push(n);break}case b.OP_BIN2NUM:{if(t.length<1)throw new g("INVALID_STACK_OPERATION",I,E);const i=t.get(-1),s=m.toMinimal(e.from(i));if(t.pop(),t.push(s),!m.isMinimal(s)||s.length>4)throw new g("INVALID_NUMBER_RANGE",I,E);break}default:throw new g("BAD_OPCODE",I,E)}else if(t.length+p.length>c.MAX_SCRIPT_STACK)throw new g("STACK_SIZE",I,E)}if(t.length+p.length>c.MAX_SCRIPT_STACK)throw new g("STACK_SIZE");if(0!==d.length)throw new g("UNBALANCED_CONDITIONAL")}findAndDelete(t){const e=d.fromPush(t);if(this.raw.length<e.getSize())return 0;let i=!1;for(const t of this.code){if(-1===t.value)break;if(t.equals(e)){i=!0;break}}if(!i)return 0;const s=[];let r=0;for(const t of this.code){if(-1===t.value)break;t.equals(e)?r+=1:s.push(t)}return this.code=s,this.compile(),r}indexOf(t){for(let e=0;e<this.code.length;e++){const i=this.code[e];if(-1===i.value)break;if(i.data&&i.data.equals(t))return e}return-1}isCode(t){null==t&&(t=R.flags.STANDARD_VERIFY_FLAGS);for(const e of this.code){if(-1===e.value)return!1;if(e.isDisabled(t))return!1;switch(e.value){case b.OP_RESERVED:case b.OP_NOP:case b.OP_VER:case b.OP_VERIF:case b.OP_VERNOTIF:case b.OP_RESERVED1:case b.OP_RESERVED2:case b.OP_NOP1:return!1}if(e.value>b.OP_CHECKSEQUENCEVERIFY)return!1}return!0}fromPubkey(t){return s(e.isBuffer(t)&&(33===t.length||65===t.length)),this.raw=e.allocUnsafe(1+t.length+1),this.raw[0]=t.length,t.copy(this.raw,1),this.raw[1+t.length]=b.OP_CHECKSIG,t=this.raw.slice(1,1+t.length),this.code.length=0,this.code.push(d.fromPush(t)),this.code.push(d.fromOp(b.OP_CHECKSIG)),this}static fromPubkey(t){return(new this).fromPubkey(t)}fromPubkeyhash(t){return s(e.isBuffer(t)&&20===t.length),this.raw=e.allocUnsafe(25),this.raw[0]=b.OP_DUP,this.raw[1]=b.OP_HASH160,this.raw[2]=20,t.copy(this.raw,3),this.raw[23]=b.OP_EQUALVERIFY,this.raw[24]=b.OP_CHECKSIG,t=this.raw.slice(3,23),this.code.length=0,this.code.push(d.fromOp(b.OP_DUP)),this.code.push(d.fromOp(b.OP_HASH160)),this.code.push(d.fromPush(t)),this.code.push(d.fromOp(b.OP_EQUALVERIFY)),this.code.push(d.fromOp(b.OP_CHECKSIG)),this}static fromPubkeyhash(t){return(new this).fromPubkeyhash(t)}fromMultisig(t,e,i){s((255&t)===t&&(255&e)===e),s(Array.isArray(i)),s(i.length===e,"`n` keys are required for multisig."),s(t>=1&&t<=e),s(e>=1&&e<=15),this.clear(),this.pushSmall(t);for(const t of i.slice().sort((t,e)=>t.compare(e)))this.pushData(t);return this.pushSmall(e),this.pushOp(b.OP_CHECKMULTISIG),this.compile()}static fromMultisig(t,e,i){return(new this).fromMultisig(t,e,i)}fromScripthash(t){return s(e.isBuffer(t)&&20===t.length),this.raw=e.allocUnsafe(23),this.raw[0]=b.OP_HASH160,this.raw[1]=20,t.copy(this.raw,2),this.raw[22]=b.OP_EQUAL,t=this.raw.slice(2,22),this.code.length=0,this.code.push(d.fromOp(b.OP_HASH160)),this.code.push(d.fromPush(t)),this.code.push(d.fromOp(b.OP_EQUAL)),this}static fromScripthash(t){return(new this).fromScripthash(t)}fromNulldata(t){return s(e.isBuffer(t)),s(t.length<=f.MAX_OP_RETURN,"Nulldata too large."),this.clear(),this.pushOp(b.OP_RETURN),this.pushData(t),this.compile()}static fromNulldata(t){return(new this).fromNulldata(t)}fromAddress(t){if("string"==typeof t&&(t=y.fromString(t)),s(t instanceof y,"Not an address."),t.isPubkeyhash())return this.fromPubkeyhash(t.hash);if(t.isScripthash())return this.fromScripthash(t.hash);throw new Error("Unknown address type.")}static fromAddress(t){return(new this).fromAddress(t)}getRedeem(){let t=null;for(const e of this.code){if(-1===e.value)return null;if(e.value>b.OP_16)return null;t=e.data}return t?R.fromRaw(t):null}getType(){return this.isPubkey()?v.PUBKEY:this.isPubkeyhash()?v.PUBKEYHASH:this.isScripthash()?v.SCRIPTHASH:this.isMultisig()?v.MULTISIG:this.isNulldata()?v.NULLDATA:v.NONSTANDARD}isUnknown(){return this.getType()===v.NONSTANDARD}isStandard(){const[t,e]=this.getMultisig();return-1!==t?!(e<1||e>3||t<1||t>e):this.isNulldata()?this.raw.length<=f.MAX_OP_RETURN_BYTES:this.getType()!==v.NONSTANDARD}getSize(){return this.raw.length}getVarSize(){return k.sizeVarBytes(this.raw)}getInputAddress(){return y.fromInputScript(this)}getAddress(){return y.fromScript(this)}hash160(t){let e=h.digest(this.toRaw());return"hex"===t&&(e=e.toString("hex")),e}sha256(t){let e=a.digest(this.toRaw());return"hex"===t&&(e=e.toString("hex")),e}isPubkey(t){if(t)return this.raw.length>=35&&(33===this.raw[0]||65===this.raw[0])&&this.raw[0]+2===this.raw.length&&this.raw[this.raw.length-1]===b.OP_CHECKSIG;if(2!==this.code.length)return!1;const e=this.getLength(0);return(33===e||65===e)&&this.getOp(1)===b.OP_CHECKSIG}getPubkey(t){return this.isPubkey(t)?t?this.raw.slice(1,1+this.raw[0]):this.getData(0):null}isPubkeyhash(t){return t||25===this.raw.length?25===this.raw.length&&this.raw[0]===b.OP_DUP&&this.raw[1]===b.OP_HASH160&&20===this.raw[2]&&this.raw[23]===b.OP_EQUALVERIFY&&this.raw[24]===b.OP_CHECKSIG:5===this.code.length&&this.getOp(0)===b.OP_DUP&&this.getOp(1)===b.OP_HASH160&&20===this.getLength(2)&&this.getOp(3)===b.OP_EQUALVERIFY&&this.getOp(4)===b.OP_CHECKSIG}getPubkeyhash(t){return this.isPubkeyhash(t)?t?this.raw.slice(3,23):this.getData(2):null}isMultisig(t){if(this.code.length<4||this.code.length>19)return!1;if(this.getOp(-1)!==b.OP_CHECKMULTISIG)return!1;const e=this.getSmall(0);if(e<1)return!1;const i=this.getSmall(-2);if(i<1||e>i)return!1;if(this.code.length!==i+3)return!1;for(let e=1;e<i+1;e++){const i=this.code[e],s=i.toLength();if(33!==s&&65!==s)return!1;if(t&&!i.isMinimal())return!1}return!0}getMultisig(t){return this.isMultisig(t)?[this.getSmall(0),this.getSmall(-2)]:[-1,-1]}isScripthash(){return 23===this.raw.length&&this.raw[0]===b.OP_HASH160&&20===this.raw[1]&&this.raw[22]===b.OP_EQUAL}getScripthash(){return this.isScripthash()?this.getData(1):null}isNulldata(t){if(0===this.code.length)return!1;if(this.getOp(0)!==b.OP_RETURN)return!1;if(1===this.code.length)return!0;if(t&&this.raw.length>f.MAX_OP_RETURN_BYTES)return!1;for(let e=1;e<this.code.length;e++){const i=this.code[e];if(-1===i.value)return!1;if(i.value>b.OP_16)return!1;if(t&&!i.isMinimal())return!1}return!0}getNulldata(t){if(!this.isNulldata(t))return null;for(let t=1;t<this.code.length;t++){const e=this.code[t].toPush();if(e)return e}return E}isUnspendable(){return this.raw.length>c.MAX_SCRIPT_SIZE||this.raw.length>0&&this.raw[0]===b.OP_RETURN}getInputType(){return this.isPubkeyInput()?v.PUBKEY:this.isPubkeyhashInput()?v.PUBKEYHASH:this.isScripthashInput()?v.SCRIPTHASH:this.isMultisigInput()?v.MULTISIG:v.NONSTANDARD}isUnknownInput(){return this.getInputType()===v.NONSTANDARD}isPubkeyInput(){if(1!==this.code.length)return!1;const t=this.getLength(0);return t>=9&&t<=73}getPubkeyInput(){return this.isPubkeyInput()?this.getData(0):null}isPubkeyhashInput(){if(2!==this.code.length)return!1;const t=this.getLength(0),e=this.getLength(1);return t>=9&&t<=73&&(33===e||65===e)}getPubkeyhashInput(){return this.isPubkeyhashInput()?[this.getData(0),this.getData(1)]:[null,null]}isMultisigInput(){if(this.code.length<2)return!1;if(this.getOp(0)!==b.OP_0)return!1;if(this.getOp(1)>b.OP_PUSHDATA4)return!1;if(this.isScripthashInput())return!1;for(let t=1;t<this.code.length;t++){const e=this.getLength(t);if(e<9||e>73)return!1}return!0}getMultisigInput(){if(!this.isMultisigInput())return null;const t=[];for(let e=1;e<this.code.length;e++)t.push(this.getData(e));return t}isScripthashInput(){if(this.code.length<1)return!1;const t=this.getData(-1);if(!t)return!1;if(0===t.length)return!1;if(w.isSignatureEncoding(t))return!1;if(w.isKeyEncoding(t))return!1;const e=R.fromRaw(t);return!!e.isCode()&&!e.isUnspendable()&&!!this.isPushOnly()}getScripthashInput(){return this.isScripthashInput()?this.getData(-1):null}getCoinbaseHeight(){return R.getCoinbaseHeight(this.raw)}static getCoinbaseHeight(t){if(0===t.length)return-1;if(t[0]>=b.OP_1&&t[0]<=b.OP_16)return t[0]-80;if(t[0]>6)return-1;const e=d.fromRaw(t),i=e.toNum();return i?i.isNeg()?-1:e.equals(d.fromNum(i))?i.toDouble():-1:1}test(t){for(const e of this.code){if(-1===e.value)break;if(e.data&&0!==e.data.length&&t.test(e.data))return!0}return!1}isPushOnly(){for(const t of this.code){if(-1===t.value)return!1;if(t.value>b.OP_16)return!1}return!0}getSigops(t){let e=0,i=-1;for(const s of this.code){if(-1===s.value)break;switch(s.value){case b.OP_CHECKSIG:case b.OP_CHECKSIGVERIFY:e+=1;break;case b.OP_CHECKMULTISIG:case b.OP_CHECKMULTISIGVERIFY:t&&i>=b.OP_1&&i<=b.OP_16?e+=i-80:e+=c.MAX_MULTISIG_PUBKEYS}i=s.value}return e}getScripthashSigops(t){if(!this.isScripthash())return this.getSigops(!0);const e=t.getRedeem();return e?e.getSigops(!0):0}get(t){return t<0&&(t+=this.code.length),t<0||t>=this.code.length?null:this.code[t]}pop(){return this.code.pop()||null}shift(){return this.code.shift()||null}remove(t){if(t<0&&(t+=this.code.length),t<0||t>=this.code.length)return null;const e=this.code.splice(t,1);return 0===e.length?null:e[0]}set(t,e){return t<0&&(t+=this.code.length),s(d.isOpcode(e)),s(t>=0&&t<=this.code.length),this.code[t]=e,this}push(t){return s(d.isOpcode(t)),this.code.push(t),this}unshift(t){return s(d.isOpcode(t)),this.code.unshift(t),this}insert(t,e){return t<0&&(t+=this.code.length),s(d.isOpcode(e)),s(t>=0&&t<=this.code.length),this.code.splice(t,0,e),this}getOp(t){const e=this.get(t);return e?e.value:-1}popOp(){const t=this.pop();return t?t.value:-1}shiftOp(){const t=this.shift();return t?t.value:-1}removeOp(t){const e=this.remove(t);return e?e.value:-1}setOp(t,e){return this.set(t,d.fromOp(e))}pushOp(t){return this.push(d.fromOp(t))}unshiftOp(t){return this.unshift(d.fromOp(t))}insertOp(t,e){return this.insert(t,d.fromOp(e))}getData(t){const e=this.get(t);return e?e.data:null}popData(){const t=this.pop();return t?t.data:null}shiftData(){const t=this.shift();return t?t.data:null}removeData(t){const e=this.remove(t);return e?e.data:null}setData(t,e){return this.set(t,d.fromData(e))}pushData(t){return this.push(d.fromData(t))}unshiftData(t){return this.unshift(d.fromData(t))}insertData(t,e){return this.insert(t,d.fromData(e))}getLength(t){const e=this.get(t);return e?e.toLength():-1}getPush(t){const e=this.get(t);return e?e.toPush():null}popPush(){const t=this.pop();return t?t.toPush():null}shiftPush(){const t=this.shift();return t?t.toPush():null}removePush(t){const e=this.remove(t);return e?e.toPush():null}setPush(t,e){return this.set(t,d.fromPush(e))}pushPush(t){return this.push(d.fromPush(t))}unshiftPush(t){return this.unshift(d.fromPush(t))}insertPush(t,e){return this.insert(t,d.fromPush(e))}getString(t,e){const i=this.get(t);return i?i.toString(e):null}popString(t){const e=this.pop();return e?e.toString(t):null}shiftString(t){const e=this.shift();return e?e.toString(t):null}removeString(t,e){const i=this.remove(t);return i?i.toString(e):null}setString(t,e,i){return this.set(t,d.fromString(e,i))}pushString(t,e){return this.push(d.fromString(t,e))}unshiftString(t,e){return this.unshift(d.fromString(t,e))}insertString(t,e,i){return this.insert(t,d.fromString(e,i))}getSmall(t){const e=this.get(t);return e?e.toSmall():-1}popSmall(){const t=this.pop();return t?t.toSmall():-1}shiftSmall(){const t=this.shift();return t?t.toSmall():-1}removeSmall(t){const e=this.remove(t);return e?e.toSmall():-1}setSmall(t,e){return this.set(t,d.fromSmall(e))}pushSmall(t){return this.push(d.fromSmall(t))}unshiftSmall(t){return this.unshift(d.fromSmall(t))}insertSmall(t,e){return this.insert(t,d.fromSmall(e))}getNum(t,e,i){const s=this.get(t);return s?s.toNum(e,i):null}popNum(t,e){const i=this.pop();return i?i.toNum(t,e):null}shiftNum(t,e){const i=this.shift();return i?i.toNum(t,e):null}removeNum(t,e,i){const s=this.remove(t);return s?s.toNum(e,i):null}setNum(t,e){return this.set(t,d.fromNum(e))}pushNum(t){return this.push(d.fromNum(t))}unshiftNum(t){return this.unshift(d.fromNum(t))}insertNum(t,e){return this.insert(t,d.fromNum(e))}getInt(t,e,i){const s=this.get(t);return s?s.toInt(e,i):-1}popInt(t,e){const i=this.pop();return i?i.toInt(t,e):-1}shiftInt(t,e){const i=this.shift();return i?i.toInt(t,e):-1}removeInt(t,e,i){const s=this.remove(t);return s?s.toInt(e,i):-1}setInt(t,e){return this.set(t,d.fromInt(e))}pushInt(t){return this.push(d.fromInt(t))}unshiftInt(t){return this.unshift(d.fromInt(t))}insertInt(t,e){return this.insert(t,d.fromInt(e))}getBool(t){const e=this.get(t);return!!e&&e.toBool()}popBool(){const t=this.pop();return!!t&&t.toBool()}shiftBool(){const t=this.shift();return!!t&&t.toBool()}removeBool(t){const e=this.remove(t);return!!e&&e.toBool()}setBool(t,e){return this.set(t,d.fromBool(e))}pushBool(t){return this.push(d.fromBool(t))}unshiftBool(t){return this.unshift(d.fromBool(t))}insertBool(t,e){return this.insert(t,d.fromBool(e))}getSym(t){const e=this.get(t);return e?e.toSymbol():null}popSym(){const t=this.pop();return t?t.toSymbol():null}shiftSym(){const t=this.shift();return t?t.toSymbol():null}removeSym(t){const e=this.remove(t);return e?e.toSymbol():null}setSym(t,e){return this.set(t,d.fromSymbol(e))}pushSym(t){return this.push(d.fromSymbol(t))}unshiftSym(t){return this.unshift(d.fromSymbol(t))}insertSym(t,e){return this.insert(t,d.fromSymbol(e))}fromString(t){if(s("string"==typeof t),0===(t=t.trim()).length)return this;const i=t.split(/\s+/),n=r.write();for(const t of i){let i=t;32&i.charCodeAt(0)&&(i=i.toUpperCase()),/^OP_/.test(i)||(i=`OP_${i}`);const r=b[i];if(null!=r)n.writeU8(r);else{if("'"===t[0]){s("'"===t[t.length-1],"Invalid string.");const e=t.slice(1,-1),i=d.fromString(e);n.writeBytes(i.toRaw());continue}if(/^-?\d+$/.test(t)){const e=m.fromString(t,10),i=d.fromNum(e);n.writeBytes(i.toRaw());continue}s(0===t.indexOf("0x"),"Unknown opcode.");const i=t.substring(2),r=e.from(i,"hex");s(r.length===i.length/2,"Invalid hex string."),n.writeBytes(r)}}return this.fromRaw(n.render())}static fromString(t){return(new this).fromString(t)}static verify(t,e,i,r,n,o,a){if(null==a&&(a=R.flags.STANDARD_VERIFY_FLAGS),a&R.flags.VERIFY_SIGPUSHONLY&&!t.isPushOnly())throw new g("SIG_PUSHONLY");a&R.flags.VERIFY_SIGHASH_FORKID&&(a|=R.flags.VERIFY_STRICTENC);let h,l=new p;if(t.execute(l,a,r,n,o),a&R.flags.VERIFY_P2SH&&(h=l.clone()),i.execute(l,a,r,n,o),0===l.length||!l.getBool(-1))throw new g("EVAL_FALSE");if(a&R.flags.VERIFY_P2SH&&i.isScripthash()){if(!t.isPushOnly())throw new g("SIG_PUSHONLY");if(0===(l=h).length)throw new g("EVAL_FALSE");const e=l.pop();if(R.fromRaw(e).execute(l,a,r,n,o,0),0===l.length||!l.getBool(-1))throw new g("EVAL_FALSE")}if(a&R.flags.VERIFY_CLEANSTACK&&(s(0!=(a&R.flags.VERIFY_P2SH)),1!==l.length))throw new g("CLEANSTACK")}fromReader(t){return this.fromRaw(t.readVarBytes())}fromRaw(t){const e=r.read(t,!0);for(this.raw=t;e.left();)this.code.push(d.fromReader(e));return this}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}static isScript(t){return t instanceof R}}function S(t,i){if(s(e.isBuffer(t)),s("number"==typeof i),i&R.flags.VERIFY_STRICTENC&&!w.isKeyEncoding(t))throw new g("PUBKEYTYPE");if(i&R.flags.VERIFY_SIGHASH_FORKID&&i&R.flags.VERIFY_COMPRESSED_PUBKEYTYPE&&!w.isCompressedEncoding(t))throw new g("COMPRESSED_PUBKEYTYPE");return!0}function _(t,i){if(s(e.isBuffer(t)),s("number"==typeof i),0===t.length)return!0;if((i&R.flags.VERIFY_DERSIG||i&R.flags.VERIFY_LOW_S||i&R.flags.VERIFY_STRICTENC)&&!w.isSignatureEncoding(t))throw new g("SIG_DER");if(i&R.flags.VERIFY_LOW_S&&!w.isLowDER(t))throw new g("SIG_HIGH_S");if(i&R.flags.VERIFY_STRICTENC){if(!w.isHashType(t))throw new g("SIG_HASHTYPE");const e=t[t.length-1]&R.hashType.SIGHASH_FORKID,s=i&R.flags.VERIFY_SIGHASH_FORKID;if(!s&&e)throw new g("ILLEGAL_FORKID");if(s&&!e)throw new g("MUST_USE_FORKID")}return!0}function x(t,e,i){return u.verifyDER(t,e.slice(0,-1),i)}R.opcodes=w.opcodes,R.opcodesByVal=w.opcodesByVal,R.flags=w.flags,R.hashType=w.hashType,R.hashTypeByVal=w.hashTypeByVal,R.types=w.types,R.typesByVal=w.typesByVal,t.exports=R}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * address.js - address object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),{base58:n,cashaddr:o}=i(31),a=i(24),h=i(9),l=i(8),u=i(3),c=e.alloc(20,0);class f{constructor(t,e){this.type=f.types.PUBKEYHASH,this.hash=c,t&&this.fromOptions(t,e)}fromOptions(t,e){if("string"==typeof t)return this.fromString(t,e);s(t);const{hash:i,type:r}=t;return this.fromHash(i,r)}static fromOptions(t,e){return(new this).fromOptions(t,e)}getHash(t){return"hex"===t?this.hash.toString(t):this.hash}isNull(){if(20===this.hash.length)return this.hash.equals(c);if(32===this.hash.length)return this.hash.equals(u.ZERO_HASH);for(let t=0;t<this.hash.length;t++)if(0!==this.hash[t])return!1;return!0}equals(t){return s(t instanceof f),this.type===t.type&&this.hash.equals(t.hash)}getType(){return f.typesByVal[this.type].toLowerCase()}getPrefix(t){const e=(t=l.get(t)).addressPrefix;switch(this.type){case f.types.PUBKEYHASH:return e.pubkeyhash;case f.types.SCRIPTHASH:return e.scripthash}return-1}getSize(){return 5+this.hash.length}toRaw(t){const e=this.getSize(),i=r.write(e),n=this.getPrefix(t);return s(-1!==n,"Not a valid address prefix."),i.writeU8(n),i.writeBytes(this.hash),i.writeChecksum(h.digest),i.render()}toBase58(t){return n.encode(this.toRaw(t))}toCashAddr(t){const e=this.type,i=this.hash,s=(t=l.get(t)).addressPrefix.cashaddr;return o.encode(s,e,i)}fromString(t,e){if(s("string"==typeof t),s(t.length>0),s(t.length<=100),function(t){let e=!1,i=!1;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);if(!(n>=48&&n<=57)&&58!==n&&(32&n?(s(n>=97&&n<=122),e=!0):(s(n>=65&&n<=90),i=!0),e&&i))return!0}return!1}(t))return this.fromBase58(t,e);try{return this.fromCashAddr(t,e)}catch(i){return this.fromBase58(t,e)}}static fromString(t,e){return(new this).fromString(t,e)}toString(t){return this.toCashAddr(t)}inspect(){return"<Address:"+` type=${this.getType()}`+` str=${this.toString()}`+">"}fromRaw(t,e){const i=r.read(t,!0),s=i.readU8();e=l.fromAddress(s,e);const n=f.getType(s,e);if(25!==t.length)throw new Error("Address is too long.");const o=i.readBytes(i.left()-4);return i.verifyChecksum(h.digest),this.fromHash(o,n)}static fromRaw(t,e){return(new this).fromRaw(t,e)}fromBase58(t,e){if(s("string"==typeof t),t.length>55)throw new Error("Address is too long.");return this.fromRaw(n.decode(t),e)}static fromBase58(t,e){return(new this).fromBase58(t,e)}fromCashAddr(t,e){s("string"==typeof t);const i=(e=l.get(e)).addressPrefix.cashaddr,r=o.decode(t,i);return l.fromCashAddr(r.prefix,e),this.fromHash(r.hash,r.type)}static fromCashAddr(t,e){return(new this).fromCashAddr(t,e)}fromScript(t){const e=t.getPubkey();if(e)return this.hash=a.digest(e),this.type=f.types.PUBKEYHASH,this;const i=t.getPubkeyhash();if(i)return this.hash=i,this.type=f.types.PUBKEYHASH,this;const s=t.getScripthash();return s?(this.hash=s,this.type=f.types.SCRIPTHASH,this):t.isMultisig()?(this.hash=t.hash160(),this.type=f.types.SCRIPTHASH,this):null}fromInputScript(t){const[,e]=t.getPubkeyhashInput();if(e)return this.hash=a.digest(e),this.type=f.types.PUBKEYHASH,this;const i=t.getScripthashInput();return i?(this.hash=a.digest(i),this.type=f.types.SCRIPTHASH,this):null}static fromInputScript(t){return(new this).fromInputScript(t)}static fromScript(t){return(new this).fromScript(t)}fromHash(t,i){return"string"==typeof t&&(t=e.from(t,"hex")),"string"==typeof i&&(i=f.types[i.toUpperCase()],s(null!=i,"Not a valid address type.")),null==i&&(i=f.types.PUBKEYHASH),s(e.isBuffer(t)),s(i>>>0===i),s(i>=f.types.PUBKEYHASH&&i<=f.types.SCRIPTHASH,"Not a valid address type."),s(20===t.length,"Hash is the wrong size."),this.hash=t,this.type=i,this}static fromHash(t,e,i){return(new this).fromHash(t,e,i)}fromPubkeyhash(t){const e=f.types.PUBKEYHASH;return s(20===t.length,"P2PKH must be 20 bytes."),this.fromHash(t,e,-1)}static fromPubkeyhash(t){return(new this).fromPubkeyhash(t)}fromScripthash(t){const e=f.types.SCRIPTHASH;return s(t&&20===t.length,"P2SH must be 20 bytes."),this.fromHash(t,e,-1)}static fromScripthash(t){return(new this).fromScripthash(t)}isPubkeyhash(){return this.type===f.types.PUBKEYHASH}isScripthash(){return this.type===f.types.SCRIPTHASH}static getHash(t,i,s){if(!t)throw new Error("Object is not an address.");let r;if("string"==typeof t){if(40===t.length)return"hex"===i?t:e.from(t,"hex");r=f.fromString(t,s).hash}else if(e.isBuffer(t)){if(20!==t.length)throw new Error("Object is not an address.");r=t}else{if(!(t instanceof f))throw new Error("Object is not an address.");r=t.hash}return"hex"===i?r.toString("hex"):r}static getType(t,e){const i=e.addressPrefix;switch(t){case i.pubkeyhash:return f.types.PUBKEYHASH;case i.scripthash:return f.types.SCRIPTHASH;default:throw new Error("Unknown address prefix.")}}}f.types={PUBKEYHASH:0,SCRIPTHASH:1},f.typesByVal=["PUBKEYHASH","SCRIPTHASH"],t.exports=f}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * secp256k1.js - wrapper for secp256k1-node
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(179),n=i(38),o=e,a=t.from("0000000000000000000000000000000000000000000000000000000000000000","hex"),h=t.from("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0","hex");o.privateKeyGenerate=function(){let t;do{t=n.randomBytes(32)}while(!r.privateKeyVerify(t));return t},o.generatePrivateKey=o.privateKeyGenerate,o.publicKeyCreate=function(e,i){return null==i&&(i=!0),s(t.isBuffer(e)),s("boolean"==typeof i),r.publicKeyCreate(e,i)},o.publicKeyConvert=function(e,i){return null==i&&(i=!0),s(t.isBuffer(e)),s("boolean"==typeof i),r.publicKeyConvert(e,i)},o.privateKeyTweakAdd=function(e,i){return s(t.isBuffer(e)),s(t.isBuffer(i)),r.privateKeyTweakAdd(e,i)},o.publicKeyTweakAdd=function(e,i,n){return null==n&&(n=!0),s(t.isBuffer(e)),s(t.isBuffer(i)),s("boolean"==typeof n),r.publicKeyTweakAdd(e,i,n)},o.ecdh=function(e,i,n){return null==n&&(n=!0),s(t.isBuffer(e)),s(t.isBuffer(i)),s("boolean"==typeof n),r.ecdhUnsafe(e,i,n)},o.publicKeyVerify=function(e){return s(t.isBuffer(e)),r.publicKeyVerify(e)},o.privateKeyVerify=function(e){return s(t.isBuffer(e)),r.privateKeyVerify(e)},o.sign=function(e,i){s(t.isBuffer(e)),s(t.isBuffer(i));const{signature:n}=r.sign(e,i);return r.signatureNormalize(n)},o.signDER=function(e,i){s(t.isBuffer(e)),s(t.isBuffer(i));const n=o.sign(e,i);return r.signatureExport(n)},o.verify=function(e,i,n){if(s(t.isBuffer(e)),s(t.isBuffer(i)),s(t.isBuffer(n)),64!==i.length)return!1;if(0===n.length)return!1;try{const t=r.signatureNormalize(i);return r.verify(e,t,n)}catch(t){return!1}},o.verifyDER=function(e,i,n){if(s(t.isBuffer(e)),s(t.isBuffer(i)),s(t.isBuffer(n)),0===i.length)return!1;if(0===n.length)return!1;let a;try{a=r.signatureImportLax(i)}catch(t){return!1}return o.verify(e,a,n)},o.recover=function(e,i,n,o){if(null==n&&(n=0),null==o&&(o=!0),s(t.isBuffer(e)),s(t.isBuffer(i)),s(n>>>0===n),s("boolean"==typeof o),64!==i.length)return null;try{return r.recover(e,i,n,o)}catch(t){return null}},o.recoverDER=function(e,i,n,a){let h;s(t.isBuffer(i));try{h=r.signatureImport(i)}catch(t){return null}return o.recover(e,h,n,a)},o.fromDER=function(e){return s(t.isBuffer(e)),r.signatureImport(e)},o.toDER=function(e){return s(t.isBuffer(e)),s(64===e.length),r.signatureExport(e)},o.isLowS=function(e){if(s(t.isBuffer(e)),64!==e.length)return!1;const i=e.slice(32,64);return!(i.equals(a)||i.compare(h)>0)},o.isLowDER=function(e){let i;s(t.isBuffer(e));try{i=r.signatureImport(e)}catch(t){return!1}return o.isLowS(i)}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * tx.js - transaction object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(9),o=i(13),a=i(5),h=i(19),l=i(8),u=i(11),c=i(43),f=i(16),d=i(18),p=i(35),g=i(3),m=i(17),w=i(37),{encoding:y}=r,{hashType:b}=u,v=i(36);class k{constructor(t){this.version=1,this.inputs=[],this.outputs=[],this.locktime=0,this.mutable=!1,this._hash=null,this._hhash=null,this._raw=null,this._size=-1,this._sigops=-1,this._hashPrevouts=null,this._hashSequence=null,this._hashOutputs=null,t&&this.fromOptions(t)}fromOptions(t){if(s(t,"TX data is required."),null!=t.version&&(s(t.version>>>0===t.version,"Version must be a uint32."),this.version=t.version),t.inputs){s(Array.isArray(t.inputs),"Inputs must be an array.");for(const e of t.inputs)this.inputs.push(new c(e))}if(t.outputs){s(Array.isArray(t.outputs),"Outputs must be an array.");for(const e of t.outputs)this.outputs.push(new f(e))}return null!=t.locktime&&(s(t.locktime>>>0===t.locktime,"Locktime must be a uint32."),this.locktime=t.locktime),this}static fromOptions(t){return(new this).fromOptions(t)}clone(){return(new this.constructor).inject(this)}inject(t){this.version=t.version;for(const e of t.inputs)this.inputs.push(e.clone());for(const e of t.outputs)this.outputs.push(e.clone());return this.locktime=t.locktime,this}refresh(){this._hash=null,this._hhash=null,this._raw=null,this._size=-1,this._sigops=-1,this._hashPrevouts=null,this._hashSequence=null,this._hashOutputs=null}hash(t){let e=this._hash;if(e||(e=n.digest(this.toRaw()),this.mutable||(this._hash=e)),"hex"===t){let t=this._hhash;t||(t=e.toString("hex"),this.mutable||(this._hhash=t)),e=t}return e}toRaw(){return this.frame().data}toWriter(t){return this.mutable?this.writeNormal(t):(t.writeBytes(this.toRaw()),t)}frame(){if(this.mutable)return s(!this._raw),this.frameNormal();if(this._raw){s(this._size>=0);const t=new E(this._size);return t.data=this._raw,t}const t=this.frameNormal();return this._raw=t.data,this._size=t.size,t}getSize(){return this.mutable?this.getNormalSizes().size:this.frame().size}signatureHash(t,e,i,r,n){if(s(t>=0&&t<this.inputs.length),s(e instanceof u),s("number"==typeof i),s("number"==typeof r),null==n&&(n=u.flags.STANDARD_VERIFY_FLAGS),n&u.flags.VERIFY_REPLAY_PROTECTION){const t=57005^v.getHashTypeForkValue(r);r=v.hashTypeWithForkValue(r,16711680|t)}return r&u.hashType.SIGHASH_FORKID&&n&u.flags.VERIFY_SIGHASH_FORKID?this.signatureHashV1(t,e,i,r):this.signatureHashV0(t,e,r)}signatureHashV0(t,i,s){if((31&s)===b.SINGLE&&t>=this.outputs.length){const t=e.alloc(32,0);return t[0]=1,t}i=i.removeSeparators();const o=this.hashSize(t,i,s),a=r.pool(o);if(a.writeU32(this.version),s&b.ANYONECANPAY){const e=this.inputs[t];a.writeVarint(1),e.prevout.toWriter(a),a.writeVarBytes(i.toRaw()),a.writeU32(e.sequence)}else{a.writeVarint(this.inputs.length);for(let e=0;e<this.inputs.length;e++){const r=this.inputs[e];if(r.prevout.toWriter(a),e!==t)switch(a.writeVarint(0),31&s){case b.NONE:case b.SINGLE:a.writeU32(0);break;default:a.writeU32(r.sequence)}else a.writeVarBytes(i.toRaw()),a.writeU32(r.sequence)}}switch(31&s){case b.NONE:a.writeVarint(0);break;case b.SINGLE:{const e=this.outputs[t];a.writeVarint(t+1);for(let e=0;e<t;e++)a.writeI64(-1),a.writeVarint(0);e.toWriter(a);break}default:a.writeVarint(this.outputs.length);for(const t of this.outputs)t.toWriter(a)}return a.writeU32(this.locktime),a.writeU32(s),n.digest(a.render())}hashSize(t,e,i){let s=0;switch(s+=4,i&b.ANYONECANPAY?(s+=1,s+=36,s+=e.getVarSize(),s+=4):(s+=y.sizeVarint(this.inputs.length),s+=41*(this.inputs.length-1),s+=36,s+=e.getVarSize(),s+=4),31&i){case b.NONE:s+=1;break;case b.SINGLE:s+=y.sizeVarint(t+1),s+=9*t,s+=this.outputs[t].getSize();break;default:s+=y.sizeVarint(this.outputs.length);for(const t of this.outputs)s+=t.getSize()}return s+8}signatureHashV1(t,e,i,s){const o=this.inputs[t];let a=g.ZERO_HASH,h=g.ZERO_HASH,l=g.ZERO_HASH;if(!(s&b.ANYONECANPAY))if(this._hashPrevouts)a=this._hashPrevouts;else{const t=r.pool(36*this.inputs.length);for(const e of this.inputs)e.prevout.toWriter(t);a=n.digest(t.render()),this.mutable||(this._hashPrevouts=a)}if(!(s&b.ANYONECANPAY)&&(31&s)!==b.SINGLE&&(31&s)!==b.NONE)if(this._hashSequence)h=this._hashSequence;else{const t=r.pool(4*this.inputs.length);for(const e of this.inputs)t.writeU32(e.sequence);h=n.digest(t.render()),this.mutable||(this._hashSequence=h)}if((31&s)!==b.SINGLE&&(31&s)!==b.NONE)if(this._hashOutputs)l=this._hashOutputs;else{let t=0;for(const e of this.outputs)t+=e.getSize();const e=r.pool(t);for(const t of this.outputs)t.toWriter(e);l=n.digest(e.render()),this.mutable||(this._hashOutputs=l)}else if((31&s)===b.SINGLE&&t<this.outputs.length){const e=this.outputs[t];l=n.digest(e.toRaw())}const u=156+e.getVarSize(),c=r.pool(u);return c.writeU32(this.version),c.writeBytes(a),c.writeBytes(h),c.writeHash(o.prevout.hash),c.writeU32(o.prevout.index),c.writeVarBytes(e.toRaw()),c.writeI64(i),c.writeU32(o.sequence),c.writeBytes(l),c.writeU32(this.locktime),c.writeU32(s),n.digest(c.render())}checksig(t,e,i,s,r,n){if(0===s.length)return!1;const a=s[s.length-1],h=this.signatureHash(t,e,i,a,n);return o.verifyDER(h,s.slice(0,-1),r)}signature(t,e,i,s,n,a){null==n&&(n=b.ALL),null==a&&(a=u.flags.VERIFY_SIGHASH_FORKID);const h=this.signatureHash(t,e,i,n,a),l=o.signDER(h,s),c=r.write(l.length+1);return c.writeBytes(l),c.writeU8(n),c.render()}check(t,e){if(0===this.inputs.length)throw new w("UNKNOWN_ERROR","No inputs.");if(!this.isCoinbase())for(let i=0;i<this.inputs.length;i++){const{prevout:s}=this.inputs[i],r=t.getOutput(s);if(!r)throw new w("UNKNOWN_ERROR","No coin available.");this.checkInput(i,r,e)}}checkInput(t,e,i){const r=this.inputs[t];s(r,"Input does not exist."),s(e,"No coin passed."),u.verify(r.script,null,e.script,this,t,e.value,i)}async checkAsync(t,e,i){if(0===this.inputs.length)throw new w("UNKNOWN_ERROR","No inputs.");this.isCoinbase()||(i?await i.check(this,t,e):this.check(t,e))}async checkInputAsync(t,e,i,r){const n=this.inputs[t];s(n,"Input does not exist."),s(e,"No coin passed."),r?await r.checkInput(this,t,e,i):this.checkInput(t,e,i)}verify(t,e){try{this.check(t,e)}catch(t){if("ScriptError"===t.type)return!1;throw t}return!0}verifyInput(t,e,i){try{this.checkInput(t,e,i)}catch(t){if("ScriptError"===t.type)return!1;throw t}return!0}async verifyAsync(t,e,i){try{await this.checkAsync(t,e,i)}catch(t){if("ScriptError"===t.type)return!1;throw t}return!0}async verifyInputAsync(t,e,i,s){try{await this.checkInput(t,e,i,s)}catch(t){if("ScriptError"===t.type)return!1;throw t}return!0}isCoinbase(){return 1===this.inputs.length&&this.inputs[0].prevout.isNull()}isRBF(){if(2===this.version)return!1;for(const t of this.inputs)if(t.isRBF())return!0;return!1}getFee(t){return this.hasCoins(t)?this.getInputValue(t)-this.getOutputValue():0}getInputValue(t){let e=0;for(const{prevout:i}of this.inputs){const s=t.getOutput(i);if(!s)return 0;e+=s.value}return e}getOutputValue(){let t=0;for(const e of this.outputs)t+=e.value;return t}_getInputAddresses(t){const e=Object.create(null),i=[];if(this.isCoinbase())return[i,e];for(const s of this.inputs){const r=t?t.getOutputFor(s):null,n=s.getAddress(r);if(!n)continue;const o=n.getHash("hex");e[o]||(e[o]=!0,i.push(n))}return[i,e]}_getOutputAddresses(){const t=Object.create(null),e=[];for(const i of this.outputs){const s=i.getAddress();if(!s)continue;const r=s.getHash("hex");t[r]||(t[r]=!0,e.push(s))}return[e,t]}_getAddresses(t){const[e,i]=this._getInputAddresses(t),s=this.getOutputAddresses();for(const t of s){const s=t.getHash("hex");i[s]||(i[s]=!0,e.push(t))}return[e,i]}getInputAddresses(t){const[e]=this._getInputAddresses(t);return e}getOutputAddresses(){const[t]=this._getOutputAddresses();return t}getAddresses(t){const[e]=this._getAddresses(t);return e}getInputHashes(t,e){if("hex"===e){const[,e]=this._getInputAddresses(t);return Object.keys(e)}const i=this.getInputAddresses(t),s=[];for(const t of i)s.push(t.getHash());return s}getOutputHashes(t){if("hex"===t){const[,t]=this._getOutputAddresses();return Object.keys(t)}const e=this.getOutputAddresses(),i=[];for(const t of e)i.push(t.getHash());return i}getHashes(t,e){if("hex"===e){const[,e]=this._getAddresses(t);return Object.keys(e)}const i=this.getAddresses(t),s=[];for(const t of i)s.push(t.getHash());return s}hasCoins(t){if(0===this.inputs.length)return!1;for(const{prevout:e}of this.inputs)if(!t.hasEntry(e))return!1;return!0}isFinal(t,e){const i=g.LOCKTIME_THRESHOLD;if(0===this.locktime)return!0;if(this.locktime<(this.locktime<i?t:e))return!0;for(const t of this.inputs)if(4294967295!==t.sequence)return!1;return!0}verifyLocktime(t,e){const i=g.LOCKTIME_THRESHOLD,r=this.inputs[t];return s(r,"Input does not exist."),s(e>=0,"Locktime must be non-negative."),this.locktime<i==e<i&&!(e>this.locktime)&&4294967295!==r.sequence}verifySequence(t,e){const i=g.SEQUENCE_DISABLE_FLAG,r=g.SEQUENCE_TYPE_FLAG,n=g.SEQUENCE_MASK,o=this.inputs[t];return s(o,"Input does not exist."),s(e>=0,"Locktime must be non-negative."),!(!(e&i)&&(this.version<2||o.sequence&i||(o.sequence&r)!=(e&r)||(e&n)>(o.sequence&n)))}getLegacySigops(){if(-1!==this._sigops)return this._sigops;let t=0;for(const e of this.inputs)t+=e.script.getSigops(!1);for(const e of this.outputs)t+=e.script.getSigops(!1);return this.mutable||(this._sigops=t),t}getScripthashSigops(t){if(this.isCoinbase())return 0;let e=0;for(const i of this.inputs){const s=t.getOutputFor(i);s&&s.script.isScripthash()&&(e+=s.script.getScripthashSigops(i.script))}return e}getSigopsCount(t,e){null===e&&(e=u.flags.STANDARD_VERIFY_FLAGS);let i=this.getLegacySigops();return e&u.flags.VERIFY_P2SH&&(i+=this.getScripthashSigops(t)),i}getSigops(t,e){return this.getSigopsCount(t,e)}isSane(){const[t]=this.checkSanity();return t}checkSanity(){if(0===this.inputs.length)return[!1,"bad-txns-vin-empty",100];if(0===this.outputs.length)return[!1,"bad-txns-vout-empty",100];if(this.getSize()>g.MAX_TX_SIZE)return[!1,"bad-txns-oversize",100];let t=0;for(const e of this.outputs){if(e.value<0)return[!1,"bad-txns-vout-negative",100];if(e.value>g.MAX_MONEY)return[!1,"bad-txns-vout-toolarge",100];if((t+=e.value)<0||t>g.MAX_MONEY)return[!1,"bad-txns-txouttotal-toolarge",100]}const e=new Set;for(const t of this.inputs){const i=t.prevout.toKey();if(e.has(i))return[!1,"bad-txns-inputs-duplicate",100];e.add(i)}if(this.isCoinbase()){const t=this.inputs[0].script.getSize();if(t<2||t>100)return[!1,"bad-cb-length",100]}else for(const t of this.inputs)if(t.prevout.isNull())return[!1,"bad-txns-prevout-null",10];return[!0,"valid",0]}isStandard(){const[t]=this.checkStandard();return t}checkStandard(){if(this.version<1||this.version>m.MAX_TX_VERSION)return[!1,"version",0];if(this.getSize()>=m.MAX_TX_SIZE)return[!1,"tx-size",0];for(const t of this.inputs){if(t.script.getSize()>1650)return[!1,"scriptsig-size",0];if(!t.script.isPushOnly())return[!1,"scriptsig-not-pushonly",0]}let t=0;for(const e of this.outputs){if(!e.script.isStandard())return[!1,"scriptpubkey",0];if(e.script.isNulldata())t++;else{if(e.script.isMultisig()&&!m.BARE_MULTISIG)return[!1,"bare-multisig",0];if(e.isDust(m.MIN_RELAY))return[!1,"dust",0]}}return t>1?[!1,"multi-op-return",0]:[!0,"valid",0]}hasStandardInputs(t){if(this.isCoinbase())return!0;for(const e of this.inputs){const i=t.getOutputFor(e);if(!i)return!1;if(!i.script.isPubkeyhash())if(i.script.isScripthash()){const t=e.script.getRedeem();if(!t)return!1;if(t.getSigops(!0)>m.MAX_P2SH_SIGOPS)return!1}else if(i.script.isUnknown())return!1}return!0}verifyInputs(t,e){const[i]=this.checkInputs(t,e);return-1!==i}checkInputs(t,e){s("number"==typeof e);let i=0;for(const{prevout:r}of this.inputs){const n=t.getEntry(r);if(!n)return[-1,"bad-txns-inputs-missingorspent",0];if(n.coinbase&&e-n.height<g.COINBASE_MATURITY)return[-1,"bad-txns-premature-spend-of-coinbase",0];const o=t.getOutput(r);if(s(o),o.value<0||o.value>g.MAX_MONEY)return[-1,"bad-txns-inputvalues-outofrange",100];if((i+=o.value)<0||i>g.MAX_MONEY)return[-1,"bad-txns-inputvalues-outofrange",100]}const r=this.getOutputValue();if(i<r)return[-1,"bad-txns-in-belowout",100];const n=i-r;return n<0?[-1,"bad-txns-fee-negative",100]:n>g.MAX_MONEY?[-1,"bad-txns-fee-outofrange",100]:[n,"valid",0]}getModifiedSize(t){null==t&&(t=this.getSize());for(const e of this.inputs){const i=41+Math.min(110,e.script.getSize());t>i&&(t-=i)}return t}getPriority(t,e,i){if(s("number"==typeof e,"Must pass in height."),this.isCoinbase())return 0;null==i&&(i=this.getSize());let r=0;for(const{prevout:i}of this.inputs){const s=t.getOutput(i);if(!s)continue;const n=t.getHeight(i);if(-1!==n&&n<=e){const t=e-n;r+=s.value*t}}return Math.floor(r/i)}getChainValue(t){if(this.isCoinbase())return 0;let e=0;for(const{prevout:i}of this.inputs){const s=t.getOutput(i);s&&-1!==t.getHeight(i)&&(e+=s.value)}return e}isFree(t,e,i){return this.getPriority(t,e,i)>m.FREE_THRESHOLD}getMinFee(t,e){return null==t&&(t=this.getSize()),m.getMinFee(t,e)}getRoundFee(t,e){return null==t&&(t=this.getSize()),m.getRoundFee(t,e)}getRate(t,e){const i=this.getFee(t);return i<0?0:(null==e&&(e=this.getSize()),m.getRate(e,i))}getPrevout(){if(this.isCoinbase())return[];const t=Object.create(null);for(const e of this.inputs)t[e.prevout.hash]=!0;return Object.keys(t)}isWatched(t){let e=!1;t.test(this.hash())&&(e=!0);for(let i=0;i<this.outputs.length;i++){const s=this.outputs[i];if(s.script.test(t)){if(1===t.update){const e=d.fromTX(this,i);t.add(e.toRaw())}else if(2===t.update&&(s.script.isPubkey()||s.script.isMultisig())){const e=d.fromTX(this,i);t.add(e.toRaw())}e=!0}}if(e)return e;for(const e of this.inputs){const i=e.prevout;if(t.test(i.toRaw()))return!0;if(e.script.test(t))return!0}return!1}rhash(){return a.revHex(this.hash("hex"))}txid(){return this.rhash()}toInv(){return new p(p.types.TX,this.hash("hex"))}inspect(){return this.format()}format(t,e,i){let s=0,r=0,n=-1,o=null,l=0,u=null;return t&&(r=this.getFee(t),s=this.getRate(t),Number.isSafeInteger(s)||(s=0)),e&&(n=e.height,o=a.revHex(e.hash),l=e.time,u=a.date(l)),null==i&&(i=-1),{hash:this.txid(),size:this.getSize(),value:h.btc(this.getOutputValue()),fee:h.btc(r),rate:h.btc(s),minFee:h.btc(this.getMinFee()),height:n,block:o,time:l,date:u,index:i,version:this.version,inputs:this.inputs.map(e=>{const i=t?t.getOutputFor(e):null;return e.format(i)}),outputs:this.outputs,locktime:this.locktime}}toJSON(){return this.getJSON()}getJSON(t,e,i,s){let r,n,o,h,u,c;return e&&(n=this.getFee(e),r=this.getRate(e),Number.isSafeInteger(r)||(r=0)),i&&(o=i.height,h=a.revHex(i.hash),u=i.time,c=a.date(u)),t=l.get(t),{hash:this.txid(),fee:n,rate:r,mtime:a.now(),height:o,block:h,time:u,date:c,index:s,version:this.version,inputs:this.inputs.map(i=>{const s=e?e.getCoinFor(i):null;return i.getJSON(t,s)}),outputs:this.outputs.map(e=>e.getJSON(t)),locktime:this.locktime,hex:this.toRaw().toString("hex")}}fromJSON(t){s(t,"TX data is required."),s(t.version>>>0===t.version,"Version must be a uint32."),s(Array.isArray(t.inputs),"Inputs must be an array."),s(Array.isArray(t.outputs),"Outputs must be an array."),s(t.locktime>>>0===t.locktime,"Locktime must be a uint32."),this.version=t.version;for(const e of t.inputs)this.inputs.push(c.fromJSON(e));for(const e of t.outputs)this.outputs.push(f.fromJSON(e));return this.locktime=t.locktime,this}static fromJSON(t){return(new this).fromJSON(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}static fromReader(t){return(new this).fromReader(t)}fromRaw(t){return this.fromReader(r.read(t))}fromReader(t){t.start(),this.version=t.readU32();const e=t.readVarint();for(let i=0;i<e;i++)this.inputs.push(c.fromReader(t));const i=t.readVarint();for(let e=0;e<i;e++)this.outputs.push(f.fromReader(t));return this.locktime=t.readU32(),this.mutable?t.end():(this._raw=t.endData(),this._size=this._raw.length),this}frameNormal(){const t=this.getNormalSizes(),e=r.write(t.size);return this.writeNormal(e),t.data=e.render(),t}writeNormal(t){if(0===this.inputs.length&&0!==this.outputs.length)throw new Error("Cannot serialize zero-input tx.");t.writeU32(this.version),t.writeVarint(this.inputs.length);for(const e of this.inputs)e.toWriter(t);t.writeVarint(this.outputs.length);for(const e of this.outputs)e.toWriter(t);return t.writeU32(this.locktime),t}getNormalSizes(){let t=0;t+=4,t+=y.sizeVarint(this.inputs.length);for(const e of this.inputs)t+=e.getSize();t+=y.sizeVarint(this.outputs.length);for(const e of this.outputs)t+=e.getSize();return new E(t+=4,0)}static isTX(t){return t instanceof k}}class E{constructor(t){this.data=null,this.size=t}}t.exports=k}).call(this,i(1).Buffer)},function(t,e){var i,s,r=t.exports={};function n(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function a(t){if(i===setTimeout)return setTimeout(t,0);if((i===n||!i)&&setTimeout)return i=setTimeout,setTimeout(t,0);try{return i(t,0)}catch(e){try{return i.call(null,t,0)}catch(e){return i.call(this,t,0)}}}!function(){try{i="function"==typeof setTimeout?setTimeout:n}catch(t){i=n}try{s="function"==typeof clearTimeout?clearTimeout:o}catch(t){s=o}}();var h,l=[],u=!1,c=-1;function f(){u&&h&&(u=!1,h.length?l=h.concat(l):c=-1,l.length&&d())}function d(){if(!u){var t=a(f);u=!0;for(var e=l.length;e;){for(h=l,l=[];++c<e;)h&&h[c].run();c=-1,e=l.length}h=null,u=!1,function(t){if(s===clearTimeout)return clearTimeout(t);if((s===o||!s)&&clearTimeout)return s=clearTimeout,clearTimeout(t);try{s(t)}catch(e){try{return s.call(null,t)}catch(e){return s.call(this,t)}}}(t)}}function p(t,e){this.fun=t,this.array=e}function g(){}r.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)e[i-1]=arguments[i];l.push(new p(t,e)),1!==l.length||u||a(d)},p.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=g,r.addListener=g,r.once=g,r.off=g,r.removeListener=g,r.removeAllListeners=g,r.emit=g,r.prependListener=g,r.prependOnceListener=g,r.listeners=function(t){return[]},r.binding=function(t){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(t){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},function(t,e,i){"use strict";(function(e){
/*!
 * output.js - output object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(19),o=i(8),a=i(12),h=i(11),l=i(17);class u{constructor(t){this.value=0,this.script=new h,t&&this.fromOptions(t)}fromOptions(t){return s(t,"Output data is required."),t.value&&(s(Number.isSafeInteger(t.value)&&t.value>=0,"Value must be a uint64."),this.value=t.value),t.script&&this.script.fromOptions(t.script),t.address&&this.script.fromAddress(t.address),this}static fromOptions(t){return(new this).fromOptions(t)}fromScript(t,e){return"string"==typeof t&&(t=a.fromString(t)),t instanceof a&&(t=h.fromAddress(t)),s(t instanceof h,"Script must be a Script."),s(Number.isSafeInteger(e)&&e>=0,"Value must be a uint64."),this.script=t,this.value=e,this}static fromScript(t,e){return(new this).fromScript(t,e)}clone(){const t=new this.constructor;return t.value=this.value,t.script.inject(this.script),t}equals(t){return s(u.isOutput(t)),this.value===t.value&&this.script.equals(t.script)}compare(t){s(u.isOutput(t));const e=this.value-t.value;return 0!==e?e:this.script.compare(t.script)}getType(){return h.typesByVal[this.script.getType()].toLowerCase()}getAddress(){return this.script.getAddress()}getHash(t){const e=this.getAddress();return e?e.getHash(t):null}inspect(){return{type:this.getType(),value:n.btc(this.value),script:this.script,address:this.getAddress()}}toJSON(){return this.getJSON()}getJSON(t){let e=this.getAddress();return t=o.get(t),e&&(e=e.toString(t)),{value:this.value,script:this.script.toJSON(),address:e}}getDustThreshold(t){if(this.script.isUnspendable())return 0;let e=this.getSize();return e+=148,3*l.getMinFee(e,t)}getSize(){return 8+this.script.getVarSize()}isDust(t){return this.value<this.getDustThreshold(t)}fromJSON(t){return s(t,"Output data is required."),s(Number.isSafeInteger(t.value)&&t.value>=0,"Value must be a uint64."),this.value=t.value,this.script.fromJSON(t.script),this}static fromJSON(t){return(new this).fromJSON(t)}toWriter(t){return t.writeI64(this.value),t.writeVarBytes(this.script.toRaw()),t}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}fromReader(t){return this.value=t.readI64(),this.script.fromRaw(t.readVarBytes()),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}static isOutput(t){return t instanceof u}}t.exports=u}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * policy.js - bitcoin constants for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(3);e.MAX_TX_VERSION=2,e.MAX_TX_SIZE=r.MAX_TX_SIZE/10,e.MAX_TX_SIGOPS=r.MAX_TX_SIGOPS/5,e.BYTES_PER_SIGOP=20,e.MIN_RELAY=1e3,e.BARE_MULTISIG=!0,e.FREE_THRESHOLD=144*r.COIN/250,e.MAX_P2SH_SIGOPS=15,e.MAX_OP_RETURN_BYTES=83,e.MAX_OP_RETURN=80,e.MAX_P2WSH_STACK=100,e.MAX_P2WSH_PUSH=80,e.MAX_P2WSH_SIZE=3600,e.MEMPOOL_MAX_ANCESTORS=25,e.MEMPOOL_MAX_SIZE=1e8,e.MEMPOOL_EXPIRY_TIME=259200,e.MEMPOOL_MAX_ORPHANS=100,e.MIN_BLOCK_SIZE=0,e.MAX_BLOCK_SIZE=r.MAX_FORK_BLOCK_SIZE,e.BLOCK_PRIORITY_SIZE=0,e.BLOCK_PRIORITY_THRESHOLD=e.FREE_THRESHOLD,e.getMinFee=function(t,i){if(null==i&&(i=e.MIN_RELAY),s(t>=0),s(i>=0),0===t)return 0;let r=Math.floor(i*t/1e3);return 0===r&&i>0&&(r=i),r},e.getRoundFee=function(t,i){if(null==i&&(i=e.MIN_RELAY),s(t>=0),s(i>=0),0===t)return 0;let r=i*Math.ceil(t/1e3);return 0===r&&i>0&&(r=i),r},e.getRate=function(t,e){return s(t>=0),s(e>=0),0===t?0:Math.floor(1e3*e/t)}},function(t,e,i){"use strict";
/*!
 * outpoint.js - outpoint object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(2),n=i(5),o=i(3);class a{constructor(t,e){this.hash=o.NULL_HASH,this.index=4294967295,null!=t&&(s("string"==typeof t,"Hash must be a string."),s(e>>>0===e,"Index must be a uint32."),this.hash=t,this.index=e)}fromOptions(t){return s(t,"Outpoint data is required."),s("string"==typeof t.hash,"Hash must be a string."),s(t.index>>>0===t.index,"Index must be a uint32."),this.hash=t.hash,this.index=t.index,this}static fromOptions(t){return(new this).fromOptions(t)}clone(){const t=new this.constructor;return t.hash=this.hash,t.index=this.index,t}equals(t){return s(a.isOutpoint(t)),this.hash===t.hash&&this.index===t.index}compare(t){s(a.isOutpoint(t));const e=function(t,e){const i=Math.min(t.length,e.length);for(let s=0;s<i;s++){if(t[s]<e[s])return-1;if(t[s]>e[s])return 1}return t.length<e.length?-1:t.length>e.length?1:0}(this.txid(),t.txid());return 0!==e?e:this.index-t.index}isNull(){return 4294967295===this.index&&this.hash===o.NULL_HASH}rhash(){return n.revHex(this.hash)}txid(){return this.rhash()}toKey(){return a.toKey(this.hash,this.index)}fromKey(t){return s(t.length>64),this.hash=t.slice(0,64),this.index=parseInt(t.slice(64),10),this}static fromKey(t){return(new this).fromKey(t)}toWriter(t){return t.writeHash(this.hash),t.writeU32(this.index),t}getSize(){return 36}toRaw(){return this.toWriter(r.write(36)).render()}fromReader(t){return this.hash=t.readHash("hex"),this.index=t.readU32(),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t){return(new this).fromRaw(t)}fromJSON(t){return s(t,"Outpoint data is required."),s("string"==typeof t.hash,"Hash must be a string."),s(t.index>>>0===t.index,"Index must be a uint32."),this.hash=n.revHex(t.hash),this.index=t.index,this}toJSON(){return{hash:n.revHex(this.hash),index:this.index}}static fromJSON(t){return(new this).fromJSON(t)}fromTX(t,e){return s(t),s("number"==typeof e),s(e>=0),this.hash=t.hash("hex"),this.index=e,this}static fromTX(t,e){return(new this).fromTX(t,e)}static toKey(t,e){return s("string"==typeof t),s(64===t.length),s(e>=0),t+e}inspect(){return`<Outpoint: ${this.rhash()}/${this.index}>`}static isOutpoint(t){return t instanceof a}}t.exports=a},function(t,e,i){"use strict";
/*!
 * amount.js - amount object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(120);class n{constructor(t,e){this.value=0,null!=t&&this.fromOptions(t,e)}fromOptions(t,e){return"string"==typeof e?this.from(e,t):"number"==typeof t?this.fromValue(t):this.fromBTC(t)}toValue(){return this.value}toSatoshis(t){return t?this.value:this.value.toString(10)}toBits(t){return n.encode(this.value,2,t)}toMBTC(t){return n.encode(this.value,5,t)}toBTC(t){return n.encode(this.value,8,t)}to(t,e){switch(t){case"sat":return this.toSatoshis(e);case"ubtc":case"bits":return this.toBits(e);case"mbtc":return this.toMBTC(e);case"btc":return this.toBTC(e)}throw new Error(`Unknown unit "${t}".`)}toString(){return this.toBTC()}fromValue(t){return s(Number.isSafeInteger(t)&&t>=0,"Value must be an int64."),this.value=t,this}fromSatoshis(t){return this.value=n.decode(t,0),this}fromBits(t){return this.value=n.decode(t,2),this}fromMBTC(t){return this.value=n.decode(t,5),this}fromBTC(t){return this.value=n.decode(t,8),this}from(t,e){switch(t){case"sat":return this.fromSatoshis(e);case"ubtc":case"bits":return this.fromBits(e);case"mbtc":return this.fromMBTC(e);case"btc":return this.fromBTC(e)}throw new Error(`Unknown unit "${t}".`)}static fromOptions(t,e){return(new this).fromOptions(t,e)}static fromValue(t){return(new this).fromValue(t)}static fromSatoshis(t){return(new this).fromSatoshis(t)}static fromBits(t){return(new this).fromBits(t)}static fromMBTC(t){return(new this).fromMBTC(t)}static fromBTC(t){return(new this).fromBTC(t)}static from(t,e){return(new this).from(t,e)}inspect(){return`<Amount: ${this.toString()}>`}static btc(t,e){return"string"==typeof t?t:n.encode(t,8,e)}static value(t){return"number"==typeof t?t:n.decode(t,8)}static encode(t,e,i){return i?r.toFloat(t,e):r.encode(t,e)}static decode(t,e){return"number"==typeof t?r.fromFloat(t,e):r.decode(t,e)}}t.exports=n},function(t,e,i){"use strict";var s=i(45),r=Object.keys||function(t){var e=[];for(var i in t)e.push(i);return e};t.exports=c;var n=i(29);n.inherits=i(6);var o=i(88),a=i(58);n.inherits(c,o);for(var h=r(a.prototype),l=0;l<h.length;l++){var u=h[l];c.prototype[u]||(c.prototype[u]=a.prototype[u])}function c(t){if(!(this instanceof c))return new c(t);o.call(this,t),a.call(this,t),t&&!1===t.readable&&(this.readable=!1),t&&!1===t.writable&&(this.writable=!1),this.allowHalfOpen=!0,t&&!1===t.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",f)}function f(){this.allowHalfOpen||this._writableState.ended||s.nextTick(d,this)}function d(t){t.end()}Object.defineProperty(c.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(c.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&this._readableState.destroyed&&this._writableState.destroyed},set:function(t){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=t,this._writableState.destroyed=t)}}),c.prototype._destroy=function(t,e){this.push(null),this.end(),s.nextTick(e,t)}},function(t,e,i){var s=i(4).Buffer;function r(t,e){this._block=s.alloc(t),this._finalSize=e,this._blockSize=t,this._len=0}r.prototype.update=function(t,e){"string"==typeof t&&(e=e||"utf8",t=s.from(t,e));for(var i=this._block,r=this._blockSize,n=t.length,o=this._len,a=0;a<n;){for(var h=o%r,l=Math.min(n-a,r-h),u=0;u<l;u++)i[h+u]=t[a+u];a+=l,(o+=l)%r==0&&this._update(i)}return this._len+=n,this},r.prototype.digest=function(t){var e=this._len%this._blockSize;this._block[e]=128,this._block.fill(0,e+1),e>=this._finalSize&&(this._update(this._block),this._block.fill(0));var i=8*this._len;if(i<=4294967295)this._block.writeUInt32BE(i,this._blockSize-4);else{var s=(4294967295&i)>>>0,r=(i-s)/4294967296;this._block.writeUInt32BE(r,this._blockSize-8),this._block.writeUInt32BE(s,this._blockSize-4)}this._update(this._block);var n=this._hash();return t?n.toString(t):n},r.prototype._update=function(){throw new Error("_update must be implemented by subclass")},t.exports=r},function(t,e,i){"use strict";(function(t){
/*!
 * encoding.js - encoding utils for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(32),{MAX_SAFE_INTEGER:r}=Number,{floor:n}=Math,o=new Float32Array(1),a=new Uint8Array(o.buffer),h=new Float64Array(1),l=new Uint8Array(h.buffer);o[0]=-1;const u=0===a[3];function c(t,e){const i=g(t,e+4),s=g(t,e);return Bt(0==(4292870144&i),e,"Number exceeds 2^53-1"),4294967296*i+s}function f(t,e){const i=m(t,e+4),s=g(t,e);return Bt(0==(4292870144&i),e,"Number exceeds 2^53-1"),4294967296*i+s}function d(t,e){const i=t[e],s=t[e+5];return i+256*t[++e]+65536*t[++e]+t[++e]*2**24+(t[++e]+256*s)*2**32}function p(t,e){const i=t[e],s=t[e+4];return i+256*t[++e]+65536*t[++e]+t[++e]*2**24+s*2**32}function g(t,e){const i=t[e],s=t[e+3];return i+256*t[++e]+65536*t[++e]+s*2**24}function m(t,e){const i=t[e],s=t[e+2];return i+256*t[++e]+65536*s}function w(t,e){return t[e]+256*t[e+1]}function y(t,e){return t[e]}function b(t,e){const i=R(t,e),s=R(t,e+4);return Bt(0==(4292870144&i),e,"Number exceeds 2^53-1"),4294967296*i+s}function v(t,e){const i=S(t,e),s=R(t,e+3);return Bt(0==(4292870144&i),e,"Number exceeds 2^53-1"),4294967296*i+s}function k(t,e){const i=t[e],s=t[e+5];return(256*i+t[++e])*2**32+t[++e]*2**24+65536*t[++e]+256*t[++e]+s}function E(t,e){const i=t[e],s=t[e+4];return i*2**32+t[++e]*2**24+65536*t[++e]+256*t[++e]+s}function R(t,e){const i=t[e],s=t[e+3];return i*2**24+65536*t[++e]+256*t[++e]+s}function S(t,e){const i=t[e],s=t[e+2];return 65536*i+256*t[++e]+s}function _(t,e){return 256*t[e]+t[e+1]}function x(t,e){const i=B(t,e+4),s=g(t,e);return Bt(_t(i,s),"Number exceeds 2^53-1"),4294967296*i+s}function I(t,e){const i=P(t,e+4),s=g(t,e);return Bt(_t(i,s),"Number exceeds 2^53-1"),4294967296*i+s}function A(t,e){const i=t[e],s=t[e+5],r=t[e+4]+256*s;return(r|131070*(32768&r))*2**32+i+256*t[++e]+65536*t[++e]+t[++e]*2**24}function O(t,e){const i=t[e],s=t[e+4];return(s|33554430*(128&s))*2**32+i+256*t[++e]+65536*t[++e]+t[++e]*2**24}function B(t,e){const i=t[e],s=t[e+3];return i+256*t[++e]+65536*t[++e]+(s<<24)}function P(t,e){const i=t[e],s=t[e+2],r=i+256*t[++e]+65536*s;return r|510*(r&2**23)}function N(t,e){const i=t[e]+256*t[e+1];return i|131070*(32768&i)}function T(t,e){const i=t[e];return i|33554430*(128&i)}function M(t,e){const i=D(t,e),s=R(t,e+4);return Bt(_t(i,s),"Number exceeds 2^53-1"),4294967296*i+s}function C(t,e){const i=F(t,e),s=R(t,e+3);return Bt(_t(i,s),"Number exceeds 2^53-1"),4294967296*i+s}function L(t,e){const i=t[e],s=t[e+5],r=t[++e]+256*i;return(r|131070*(32768&r))*2**32+t[++e]*2**24+65536*t[++e]+256*t[++e]+s}function U(t,e){const i=t[e],s=t[e+4];return(i|33554430*(128&i))*2**32+t[++e]*2**24+65536*t[++e]+256*t[++e]+s}function D(t,e){const i=t[e],s=t[e+3];return(i<<24)+65536*t[++e]+256*t[++e]+s}function F(t,e){const i=t[e],s=t[e+2],r=65536*i+256*t[++e]+s;return r|510*(r&2**23)}function H(t,e){const i=256*t[e]+t[e+1];return i|131070*(32768&i)}function z(t,e){const i=t[e],s=t[e+3];return a[3]=i,a[2]=t[++e],a[1]=t[++e],a[0]=s,o[0]}function V(t,e){const i=t[e],s=t[e+3];return a[0]=i,a[1]=t[++e],a[2]=t[++e],a[3]=s,o[0]}function K(t,e){const i=t[e],s=t[e+7];return l[7]=i,l[6]=t[++e],l[5]=t[++e],l[4]=t[++e],l[3]=t[++e],l[2]=t[++e],l[1]=t[++e],l[0]=s,h[0]}function j(t,e){const i=t[e],s=t[e+7];return l[0]=i,l[1]=t[++e],l[2]=t[++e],l[3]=t[++e],l[4]=t[++e],l[5]=t[++e],l[6]=t[++e],l[7]=s,h[0]}const q=u?z:V,Y=u?V:z,X=u?K:j,W=u?j:K;function G(t,e,i){return xt(t,e,i,!1)}function J(t,e,i){return It(t,e,i,!1)}function $(t,e,i){const s=n((e=+e)*2**-32);return t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,t[i++]=s,t[i++]=s>>>8,i}function Z(t,e,i){const s=e=+e;return t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,t[i++]=n(s*2**-32),i}function Q(t,e,i){return e=+e,t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,i}function tt(t,e,i){return e=+e,t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,i}function et(t,e,i){return e=+e,t[i++]=e,t[i++]=e>>>8,i}function it(t,e,i){return e=+e,t[i]=e,i+1}function st(t,e,i){return xt(t,e,i,!0)}function rt(t,e,i){return It(t,e,i,!0)}function nt(t,e,i){const s=n((e=+e)*2**-32);return t[i++]=s>>>8,t[i++]=s,t[i+3]=e,e>>>=8,t[i+2]=e,e>>>=8,t[i+1]=e,e>>>=8,t[i]=e,i+4}function ot(t,e,i){return e=+e,t[i++]=n(e*2**-32),t[i+3]=e,e>>>=8,t[i+2]=e,e>>>=8,t[i+1]=e,e>>>=8,t[i]=e,i+4}function at(t,e,i){return e=+e,t[i+3]=e,e>>>=8,t[i+2]=e,e>>>=8,t[i+1]=e,e>>>=8,t[i]=e,i+4}function ht(t,e,i){return e=+e,t[i+2]=e,e>>>=8,t[i+1]=e,e>>>=8,t[i]=e,i+3}function lt(t,e,i){return e=+e,t[i++]=e>>>8,t[i++]=e,i}function ut(t,e,i){return Q(t,e,i)}function ct(t,e,i){return tt(t,e,i)}function ft(t,e,i){return at(t,e,i)}function dt(t,e,i){return ht(t,e,i)}function pt(t,e,i){return e=+e,h[0]=e,t[i++]=l[0],t[i++]=l[1],t[i++]=l[2],t[i++]=l[3],t[i++]=l[4],t[i++]=l[5],t[i++]=l[6],t[i++]=l[7],i}function gt(t,e,i){return e=+e,h[0]=e,t[i++]=l[7],t[i++]=l[6],t[i++]=l[5],t[i++]=l[4],t[i++]=l[3],t[i++]=l[2],t[i++]=l[1],t[i++]=l[0],i}function mt(t,e,i){return e=+e,o[0]=e,t[i++]=a[0],t[i++]=a[1],t[i++]=a[2],t[i++]=a[3],i}function wt(t,e,i){return e=+e,o[0]=e,t[i++]=a[3],t[i++]=a[2],t[i++]=a[1],t[i++]=a[0],i}const yt=u?wt:mt,bt=u?mt:wt,vt=u?gt:pt,kt=u?pt:gt;function Et(t){return t<253?1:t<=65535?3:t<=4294967295?5:9}function Rt(e,i){const s=t.allocUnsafe(i);return e.copy(s,0),s}function St(t){return Et(t.length)+t.length}function _t(t,e){return t<0&&(t=~t,0===e&&(t+=1)),0==(4292870144&t)}function xt(t,e,i,s){let r=!1;e<0&&(e=-e,r=!0);let n=e*(1/4294967296)|0,o=0|e;return r&&(0===o?n=1+~n|0:(n=~n,o=1+~o)),s?ft(t,o,i=ft(t,n,i)):ut(t,n,i=ut(t,o,i))}function It(t,e,i,s){let r=!1;e<0&&(e=-e,r=!0);let n=e*(1/4294967296)|0,o=0|e;return r&&(0===o?n=1+~n|0:(n=~n,o=1+~o)),s?ft(t,o,i=dt(t,n,i)):ct(t,n,i=ut(t,o,i))}class At{constructor(t,e){this.size=t,this.value=e}}function Ot(t,e){if(!t)throw new s(e,"Out of bounds read",Ot)}function Bt(t,e,i){if(!t)throw new s(e,i,Bt)}e.readU=function(t,e,i){switch(i){case 8:return c(t,e);case 7:return f(t,e);case 6:return d(t,e);case 5:return p(t,e);case 4:return g(t,e);case 3:return m(t,e);case 2:return w(t,e);case 1:return y(t,e);default:throw new s(e,"Invalid read length")}},e.readU64=c,e.readU56=f,e.readU48=d,e.readU40=p,e.readU32=g,e.readU24=m,e.readU16=w,e.readU8=y,e.readUBE=function(t,e,i){switch(i){case 8:return b(t,e);case 7:return v(t,e);case 6:return k(t,e);case 5:return E(t,e);case 4:return R(t,e);case 3:return S(t,e);case 2:return _(t,e);case 1:return y(t,e);default:throw new s(e,"Invalid read length")}},e.readU64BE=b,e.readU56BE=v,e.readU48BE=k,e.readU40BE=E,e.readU32BE=R,e.readU24BE=S,e.readU16BE=_,e.readI=function(t,e,i){switch(i){case 8:return x(t,e);case 7:return I(t,e);case 6:return A(t,e);case 5:return O(t,e);case 4:return B(t,e);case 3:return P(t,e);case 2:return N(t,e);case 1:return T(t,e);default:throw new s(e,"Invalid read length")}},e.readI64=x,e.readI56=I,e.readI48=A,e.readI40=O,e.readI32=B,e.readI24=P,e.readI16=N,e.readI8=T,e.readIBE=function(t,e,i){switch(i){case 8:return M(t,e);case 7:return C(t,e);case 6:return L(t,e);case 5:return U(t,e);case 4:return D(t,e);case 3:return F(t,e);case 2:return H(t,e);case 1:return T(t,e);default:throw new s(e,"Invalid read length")}},e.readI64BE=M,e.readI56BE=C,e.readI48BE=L,e.readI40BE=U,e.readI32BE=D,e.readI24BE=F,e.readI16BE=H,e.readFloat=q,e.readFloatBE=Y,e.readDouble=X,e.readDoubleBE=W,e.writeU=function(t,e,i,r){switch(r){case 8:return G(t,e,i);case 7:return J(t,e,i);case 6:return $(t,e,i);case 5:return Z(t,e,i);case 4:return Q(t,e,i);case 3:return tt(t,e,i);case 2:return et(t,e,i);case 1:return it(t,e,i);default:throw new s(i,"Invalid write length")}},e.writeU64=G,e.writeU56=J,e.writeU48=$,e.writeU40=Z,e.writeU32=Q,e.writeU24=tt,e.writeU16=et,e.writeU8=it,e.writeUBE=function(t,e,i,r){switch(r){case 8:return st(t,e,i);case 7:return rt(t,e,i);case 6:return nt(t,e,i);case 5:return ot(t,e,i);case 4:return at(t,e,i);case 3:return ht(t,e,i);case 2:return lt(t,e,i);case 1:return it(t,e,i);default:throw new s(i,"Invalid write length")}},e.writeU64BE=st,e.writeU56BE=rt,e.writeU48BE=nt,e.writeU40BE=ot,e.writeU32BE=at,e.writeU24BE=ht,e.writeU16BE=lt,e.writeI=function(t,e,i,r){switch(r){case 8:return G(t,e,i);case 7:return J(t,e,i);case 6:return $(t,e,i);case 5:return Z(t,e,i);case 4:return tt(t,e,i);case 3:return Q(t,e,i);case 2:return et(t,e,i);case 1:return it(t,e,i);default:throw new s(i,"Invalid write length")}},e.writeI64=function(t,e,i){return G(t,e,i)},e.writeI56=function(t,e,i){return J(t,e,i)},e.writeI48=function(t,e,i){return $(t,e,i)},e.writeI40=function(t,e,i){return Z(t,e,i)},e.writeI32=ut,e.writeI24=ct,e.writeI16=function(t,e,i){return et(t,e,i)},e.writeI8=function(t,e,i){return it(t,e,i)},e.writeIBE=function(t,e,i,r){switch(r){case 8:return st(t,e,i);case 7:return rt(t,e,i);case 6:return nt(t,e,i);case 5:return ot(t,e,i);case 4:return at(t,e,i);case 3:return ht(t,e,i);case 2:return lt(t,e,i);case 1:return it(t,e,i);default:throw new s(i,"Invalid write length")}},e.writeI64BE=function(t,e,i){return st(t,e,i)},e.writeI56BE=function(t,e,i){return rt(t,e,i)},e.writeI48BE=function(t,e,i){return nt(t,e,i)},e.writeI40BE=function(t,e,i){return ot(t,e,i)},e.writeI32BE=ft,e.writeI24BE=dt,e.writeI16BE=function(t,e,i){return lt(t,e,i)},e.writeFloat=yt,e.writeFloatBE=bt,e.writeDouble=vt,e.writeDoubleBE=kt,e.readVarint=function(t,e){let i,s;switch(Ot(e<t.length,e),t[e]){case 255:Ot(e+(s=9)<=t.length,e),Bt((i=c(t,e+1))>4294967295,e,"Non-canonical varint");break;case 254:Ot(e+(s=5)<=t.length,e),Bt((i=g(t,e+1))>65535,e,"Non-canonical varint");break;case 253:Ot(e+(s=3)<=t.length,e),Bt((i=t[e+1]|t[e+2]<<8)>=253,e,"Non-canonical varint");break;default:s=1,i=t[e]}return new At(s,i)},e.writeVarint=function(t,e,i){return e<253?(t[i++]=255&e,i):e<=65535?(t[i++]=253,t[i++]=255&e,t[i++]=e>>8&255,i):e<=4294967295?(t[i++]=254,t[i++]=255&e,t[i++]=e>>8&255,t[i++]=e>>16&255,t[i++]=e>>>24,i):(t[i++]=255,i=G(t,e,i))},e.sizeVarint=Et,e.readVarint2=function(t,e){let i=0,s=0;for(;;){Ot(e<t.length,e);const n=t[e++];if(s+=1,Bt(i<=70368744177663-(127&n),e,"Number exceeds 2^53-1"),i=128*i+(127&n),0==(128&n))break;Bt(i!==r,e,"Number exceeds 2^53-1"),i+=1}return new At(s,i)},e.writeVarint2=function(t,e,i){const s=[];let r=0;for(;s[r]=127&e|(r?128:0),!(e<=127);)e=(e-e%128)/128-1,r+=1;Ot(i+r+1<=t.length,i);do{t[i++]=s[r]}while(r--);return i},e.sizeVarint2=function(t){let e=0;for(;e+=1,!(t<=127);)t=(t-t%128)/128-1;return e},e.sliceBytes=function(t,e,i){if(e+i>t.length)throw new s(e,"Out of bounds read");return t.slice(e,e+i)},e.readBytes=function(e,i,r){if(i+r>e.length)throw new s(i,"Out of bounds read");const n=t.allocUnsafe(r);return e.copy(n,0,i,i+r),n},e.writeBytes=function(t,e,i){if(i+e.length>t.length)throw new s(i,"Out of bounds write");return e.copy(t,i,0,e.length)},e.readString=function(t,e,i,r){if(r||(r="ascii"),e+i>t.length)throw new s(e,"Out of bounds read");return t.toString(r,e,e+i)},e.writeString=function(e,i,r,n){if(n||(n="ascii"),0===i.length)return 0;const o=t.byteLength(i,n);if(r+o>e.length)throw new s(r,"Out of bounds write");return e.write(i,r,n),o},e.realloc=Rt,e.copy=function(t){return Rt(t,t.length)},e.concat=function(e,i){const s=e.length+i.length,r=t.allocUnsafe(s);return e.copy(r,0),i.copy(r,e.length),r},e.sizeVarBytes=St,e.sizeVarlen=function(t){return Et(t)+t},e.sizeVarString=function(e,i){if("string"!=typeof e)return St(e);const s=t.byteLength(e,i);return Et(s)+s}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * hmac.js - hmac for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 * Parts of this software based on hash.js.
 */
const s=i(0);t.exports=class{constructor(t,e){s("function"==typeof t),s(e>>>0===e),this.hash=t,this.size=e,this.inner=new t,this.outer=new t}init(t){s(e.isBuffer(t)),t.length>this.size&&(t=this.hash.digest(t),s(t.length<=this.size));const i=e.allocUnsafe(this.size);for(let e=0;e<t.length;e++)i[e]=54^t[e];for(let e=t.length;e<i.length;e++)i[e]=54;this.inner.init(),this.inner.update(i);for(let e=0;e<t.length;e++)i[e]=92^t[e];for(let e=t.length;e<i.length;e++)i[e]=92;return this.outer.init(),this.outer.update(i),this}update(t){return this.inner.update(t),this}final(){return this.outer.update(this.inner.final()),this.outer.final()}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * hash160.js - hash160 for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 */t.exports=i(184)},function(t,e,i){"use strict";
/*!
 * coinview.js - coin viewpoint object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(94),r=i(77),n=i(47);t.exports=class{constructor(){this.map=new Map,this.undo=new r}get(t){return this.map.get(t)}has(t){return this.map.has(t)}add(t,e){return this.map.set(t,e),e}ensure(t){return this.map.get(t)||this.add(t,new s)}remove(t){const e=this.map.get(t);return e?(this.map.delete(t),e):null}addTX(t,e){const i=t.hash("hex"),r=s.fromTX(t,e);return this.add(i,r)}removeTX(t,e){const i=t.hash("hex"),r=s.fromTX(t,e);for(const t of r.outputs.values())t.spent=!0;return this.add(i,r)}addEntry(t,e){const{hash:i,index:s}=t;return this.ensure(i).add(s,e)}addCoin(t){return this.ensure(t.hash).addCoin(t)}addOutput(t,e){const{hash:i,index:s}=t;return this.ensure(i).addOutput(s,e)}addIndex(t,e,i){const s=t.hash("hex");return this.ensure(s).addIndex(t,e,i)}spendEntry(t){const{hash:e,index:i}=t,s=this.get(e);if(!s)return null;const r=s.spend(i);return r?(this.undo.push(r),r):null}removeEntry(t){const{hash:e,index:i}=t,s=this.get(e);return s?s.remove(i):null}hasEntry(t){const{hash:e,index:i}=t,s=this.get(e);return!!s&&s.has(i)}getEntry(t){const{hash:e,index:i}=t,s=this.get(e);return s?s.get(i):null}isUnspent(t){const{hash:e,index:i}=t,s=this.get(e);return!!s&&s.isUnspent(i)}getCoin(t){const e=this.get(t.hash);return e?e.getCoin(t):null}getOutput(t){const{hash:e,index:i}=t,s=this.get(e);return s?s.getOutput(i):null}getHeight(t){const e=this.getEntry(t);return e?e.height:-1}isCoinbase(t){const e=this.getEntry(t);return!!e&&e.coinbase}hasEntryFor(t){return this.hasEntry(t.prevout)}getEntryFor(t){return this.getEntry(t.prevout)}isUnspentFor(t){return this.isUnspent(t.prevout)}getCoinFor(t){return this.getCoin(t.prevout)}getOutputFor(t){return this.getOutput(t.prevout)}getHeightFor(t){return this.getHeight(t.prevout)}isCoinbaseFor(t){return this.isCoinbase(t.prevout)}async readCoin(t,e){const i=this.getEntry(e);if(i)return i;const s=await t.readCoin(e);return s?this.addEntry(e,s):null}async readInputs(t,e){let i=!0;for(const{prevout:s}of e.inputs)await this.readCoin(t,s)||(i=!1);return i}async spendInputs(t,e){let i=0;for(;i<e.inputs.length;){const s=Math.min(i+4,e.inputs.length),r=[];for(;i<s;i++){const{prevout:s}=e.inputs[i];r.push(this.readCoin(t,s))}const n=await Promise.all(r);for(const t of n){if(!t||t.spent)return!1;t.spent=!0,this.undo.push(t)}}return!0}getSize(t){let e=0;e+=t.inputs.length;for(const{prevout:i}of t.inputs){const t=this.getEntry(i);t&&(e+=t.getSize())}return e}toWriter(t,e){for(const{prevout:i}of e.inputs){const e=this.getEntry(i);e?(t.writeU8(1),e.toWriter(t)):t.writeU8(0)}return t}fromReader(t,e){for(const{prevout:i}of e.inputs){if(0===t.readU8())continue;const e=n.fromReader(t);this.addEntry(i,e)}return this}static fromReader(t,e){return(new this).fromReader(t,e)}}},function(t,e,i){(function(t){var s=void 0!==t&&t||"undefined"!=typeof self&&self||window,r=Function.prototype.apply;function n(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new n(r.call(setTimeout,s,arguments),clearTimeout)},e.setInterval=function(){return new n(r.call(setInterval,s,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},n.prototype.unref=n.prototype.ref=function(){},n.prototype.close=function(){this._clearFn.call(s,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},i(194),e.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(this,i(10))},function(t,e,i){"use strict";
/*!
 * bmutex.js - lock and queue for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.Lock=i(323),e.MapLock=i(322)},function(t,e,i){"use strict";(function(e){
/*!
 * scriptnum.js - script number object for bcoin.
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),{I64:r}=i(150),n=i(37),o=e.alloc(0);class a extends r{constructor(t,e){super(t,e)}getInt(){return this.lt(r.INT32_MIN)?r.LONG_MIN:this.gt(r.INT32_MAX)?r.LONG_MAX:this.toInt()}toRaw(){let t=this;if(t.isZero())return o;let i=!1;t.isNeg()&&(t=t.neg(),i=!0);const r=t.byteLength();let n=0;t.testn(8*r-1)&&(n=1);const a=e.allocUnsafe(r+n);switch(r){case 8:a[7]=t.hi>>>24&255;case 7:a[6]=t.hi>>16&255;case 6:a[5]=t.hi>>8&255;case 5:a[4]=255&t.hi;case 4:a[3]=t.lo>>>24&255;case 3:a[2]=t.lo>>16&255;case 2:a[1]=t.lo>>8&255;case 1:a[0]=255&t.lo}return 128&a[r-1]?(s(1===n),s(a.length===r+n),a[r]=i?128:0):i?(s(0===n),s(a.length===r),a[r-1]|=128):(s(0===n),s(a.length===r)),a}fromRaw(t){if(s(e.isBuffer(t)),0===t.length)return this;switch(t.length){case 8:this.hi|=t[7]<<24;case 7:this.hi|=t[6]<<16;case 6:this.hi|=t[5]<<8;case 5:this.hi|=t[4];case 4:this.lo|=t[3]<<24;case 3:this.lo|=t[2]<<16;case 2:this.lo|=t[1]<<8;case 1:this.lo|=t[0];break;default:for(let e=0;e<t.length;e++)this.orb(e,t[e])}return 128&t[t.length-1]&&(this.setn(8*t.length-1,0),this.ineg()),this}encode(){return this.toRaw()}decode(t,i,r){if(s(e.isBuffer(t)),null!=r&&t.length>r)throw new n("UNKNOWN_ERROR","Script number overflow.");if(i&&!a.isMinimal(t))throw new n("UNKNOWN_ERROR","Non-minimal script number.");return this.fromRaw(t)}inspect(){return`<ScriptNum: ${this.toString(10)}>`}static isMinimal(t){if(s(e.isBuffer(t)),0===t.length)return!0;if(0==(127&t[t.length-1])){if(1===t.length)return!1;if(0==(128&t[t.length-2]))return!1}return!0}static toMinimal(t){if(s(e.isBuffer(t)),this.isMinimal(t))return t;const i=t[t.length-1];for(let e=t.length-1;e>0;e--)if(0!==t[e-1])return 128&t[e-1]?t[e++]=i:t[e-1]|=i,t.slice(0,e);return e.alloc(0)}static decode(t,e,i){return(new this).decode(t,e,i)}static isScriptNum(t){return t instanceof a}}t.exports=a}).call(this,i(1).Buffer)},function(t,e,i){(function(t){function i(t){return Object.prototype.toString.call(t)}e.isArray=function(t){return Array.isArray?Array.isArray(t):"[object Array]"===i(t)},e.isBoolean=function(t){return"boolean"==typeof t},e.isNull=function(t){return null===t},e.isNullOrUndefined=function(t){return null==t},e.isNumber=function(t){return"number"==typeof t},e.isString=function(t){return"string"==typeof t},e.isSymbol=function(t){return"symbol"==typeof t},e.isUndefined=function(t){return void 0===t},e.isRegExp=function(t){return"[object RegExp]"===i(t)},e.isObject=function(t){return"object"==typeof t&&null!==t},e.isDate=function(t){return"[object Date]"===i(t)},e.isError=function(t){return"[object Error]"===i(t)||t instanceof Error},e.isFunction=function(t){return"function"==typeof t},e.isPrimitive=function(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t},e.isBuffer=t.isBuffer}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * sha256.js - sha256 for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 */t.exports=i(60)},function(t,e,i){"use strict";
/*!
 * bstring
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bstring
 */e.base58=i(188),e.bech32=i(187),e.cashaddr=i(186)},function(t,e,i){"use strict";
/*!
 * error.js - encoding error for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */class s extends Error{constructor(t,e,i){super(),this.type="EncodingError",this.message=`${e} (offset=${t}).`,Error.captureStackTrace&&Error.captureStackTrace(this,i||s)}}t.exports=s},function(t,e,i){"use strict";const s=i(333),r=i(332),n=i(331),o=i(329);e.DB=s,e.Key=r,e.create=(t=>{const{memory:e,location:i}=t||{};return e?new s(n,"memory",t):new s(o,i,t)}),e.key=((t,e)=>new r(t,e))},function(t,e,i){"use strict";(function(t){
/*!
 * common.js - p2p constants for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(68);e.PROTOCOL_VERSION=70015,e.MIN_VERSION=70001,e.HEADERS_VERSION=31800,e.PONG_VERSION=6e4,e.BLOOM_VERSION=70011,e.SENDHEADERS_VERSION=70012,e.COMPACT_VERSION=70014,e.services={NETWORK:1,GETUTXO:2,BLOOM:4},e.LOCAL_SERVICES=0|e.services.NETWORK,e.REQUIRED_SERVICES=0|e.services.NETWORK,e.USER_AGENT=`/bcash:${s.version}/`,e.MAX_MESSAGE=8e6,e.BAN_TIME=86400,e.BAN_SCORE=100,e.nonce=function(){const e=t.allocUnsafe(8);return e.writeUInt32LE(4294967296*Math.random()>>>0,0,!0),e.writeUInt32LE(4294967296*Math.random()>>>0,4,!0),e},e.ZERO_KEY=t.alloc(33,0),e.ZERO_SIG=t.alloc(64,0),e.ZERO_NONCE=t.alloc(8,0)}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * invitem.js - inv item object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(2),r=i(5);class n{constructor(t,e){this.type=t,this.hash=e}getSize(){return 36}toWriter(t){return t.writeU32(this.type),t.writeHash(this.hash),t}toRaw(){return this.toWriter(s.write(36)).render()}fromReader(t){return this.type=t.readU32(),this.hash=t.readHash("hex"),this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}isBlock(){switch(this.type){case n.types.BLOCK:case n.types.FILTERED_BLOCK:case n.types.CMPCT_BLOCK:return!0;default:return!1}}isTX(){switch(this.type){case n.types.TX:return!0;default:return!1}}rhash(){return r.revHex(this.hash)}}n.types={TX:1,BLOCK:2,FILTERED_BLOCK:3,CMPCT_BLOCK:4},n.typesByVal={1:"TX",2:"BLOCK",3:"FILTERED_BLOCK",4:"CMPCT_BLOCK"},t.exports=n}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * common.js - common script functions for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(13),n=i(28);e.opcodes={OP_0:0,OP_PUSHDATA1:76,OP_PUSHDATA2:77,OP_PUSHDATA4:78,OP_1NEGATE:79,OP_RESERVED:80,OP_1:81,OP_2:82,OP_3:83,OP_4:84,OP_5:85,OP_6:86,OP_7:87,OP_8:88,OP_9:89,OP_10:90,OP_11:91,OP_12:92,OP_13:93,OP_14:94,OP_15:95,OP_16:96,OP_NOP:97,OP_VER:98,OP_IF:99,OP_NOTIF:100,OP_VERIF:101,OP_VERNOTIF:102,OP_ELSE:103,OP_ENDIF:104,OP_VERIFY:105,OP_RETURN:106,OP_TOALTSTACK:107,OP_FROMALTSTACK:108,OP_2DROP:109,OP_2DUP:110,OP_3DUP:111,OP_2OVER:112,OP_2ROT:113,OP_2SWAP:114,OP_IFDUP:115,OP_DEPTH:116,OP_DROP:117,OP_DUP:118,OP_NIP:119,OP_OVER:120,OP_PICK:121,OP_ROLL:122,OP_ROT:123,OP_SWAP:124,OP_TUCK:125,OP_CAT:126,OP_SPLIT:127,OP_NUM2BIN:128,OP_BIN2NUM:129,OP_SIZE:130,OP_INVERT:131,OP_AND:132,OP_OR:133,OP_XOR:134,OP_EQUAL:135,OP_EQUALVERIFY:136,OP_RESERVED1:137,OP_RESERVED2:138,OP_1ADD:139,OP_1SUB:140,OP_2MUL:141,OP_2DIV:142,OP_NEGATE:143,OP_ABS:144,OP_NOT:145,OP_0NOTEQUAL:146,OP_ADD:147,OP_SUB:148,OP_MUL:149,OP_DIV:150,OP_MOD:151,OP_LSHIFT:152,OP_RSHIFT:153,OP_BOOLAND:154,OP_BOOLOR:155,OP_NUMEQUAL:156,OP_NUMEQUALVERIFY:157,OP_NUMNOTEQUAL:158,OP_LESSTHAN:159,OP_GREATERTHAN:160,OP_LESSTHANOREQUAL:161,OP_GREATERTHANOREQUAL:162,OP_MIN:163,OP_MAX:164,OP_WITHIN:165,OP_RIPEMD160:166,OP_SHA1:167,OP_SHA256:168,OP_HASH160:169,OP_HASH256:170,OP_CODESEPARATOR:171,OP_CHECKSIG:172,OP_CHECKSIGVERIFY:173,OP_CHECKMULTISIG:174,OP_CHECKMULTISIGVERIFY:175,OP_NOP1:176,OP_CHECKLOCKTIMEVERIFY:177,OP_CHECKSEQUENCEVERIFY:178,OP_NOP4:179,OP_NOP5:180,OP_NOP6:181,OP_NOP7:182,OP_NOP8:183,OP_NOP9:184,OP_NOP10:185,OP_INVALIDOPCODE:255},e.opcodesByVal={0:"OP_0",76:"OP_PUSHDATA1",77:"OP_PUSHDATA2",78:"OP_PUSHDATA4",79:"OP_1NEGATE",80:"OP_RESERVED",81:"OP_1",82:"OP_2",83:"OP_3",84:"OP_4",85:"OP_5",86:"OP_6",87:"OP_7",88:"OP_8",89:"OP_9",90:"OP_10",91:"OP_11",92:"OP_12",93:"OP_13",94:"OP_14",95:"OP_15",96:"OP_16",97:"OP_NOP",98:"OP_VER",99:"OP_IF",100:"OP_NOTIF",101:"OP_VERIF",102:"OP_VERNOTIF",103:"OP_ELSE",104:"OP_ENDIF",105:"OP_VERIFY",106:"OP_RETURN",107:"OP_TOALTSTACK",108:"OP_FROMALTSTACK",109:"OP_2DROP",110:"OP_2DUP",111:"OP_3DUP",112:"OP_2OVER",113:"OP_2ROT",114:"OP_2SWAP",115:"OP_IFDUP",116:"OP_DEPTH",117:"OP_DROP",118:"OP_DUP",119:"OP_NIP",120:"OP_OVER",121:"OP_PICK",122:"OP_ROLL",123:"OP_ROT",124:"OP_SWAP",125:"OP_TUCK",126:"OP_CAT",127:"OP_SPLIT",128:"OP_NUM2BIN",129:"OP_BIN2NUM",130:"OP_SIZE",131:"OP_INVERT",132:"OP_AND",133:"OP_OR",134:"OP_XOR",135:"OP_EQUAL",136:"OP_EQUALVERIFY",137:"OP_RESERVED1",138:"OP_RESERVED2",139:"OP_1ADD",140:"OP_1SUB",141:"OP_2MUL",142:"OP_2DIV",143:"OP_NEGATE",144:"OP_ABS",145:"OP_NOT",146:"OP_0NOTEQUAL",147:"OP_ADD",148:"OP_SUB",149:"OP_MUL",150:"OP_DIV",151:"OP_MOD",152:"OP_LSHIFT",153:"OP_RSHIFT",154:"OP_BOOLAND",155:"OP_BOOLOR",156:"OP_NUMEQUAL",157:"OP_NUMEQUALVERIFY",158:"OP_NUMNOTEQUAL",159:"OP_LESSTHAN",160:"OP_GREATERTHAN",161:"OP_LESSTHANOREQUAL",162:"OP_GREATERTHANOREQUAL",163:"OP_MIN",164:"OP_MAX",165:"OP_WITHIN",166:"OP_RIPEMD160",167:"OP_SHA1",168:"OP_SHA256",169:"OP_HASH160",170:"OP_HASH256",171:"OP_CODESEPARATOR",172:"OP_CHECKSIG",173:"OP_CHECKSIGVERIFY",174:"OP_CHECKMULTISIG",175:"OP_CHECKMULTISIGVERIFY",176:"OP_NOP1",177:"OP_CHECKLOCKTIMEVERIFY",178:"OP_CHECKSEQUENCEVERIFY",179:"OP_NOP4",180:"OP_NOP5",181:"OP_NOP6",182:"OP_NOP7",183:"OP_NOP8",184:"OP_NOP9",185:"OP_NOP10",255:"OP_INVALIDOPCODE"},e.small=[t.from([129]),t.from([]),t.from([1]),t.from([2]),t.from([3]),t.from([4]),t.from([5]),t.from([6]),t.from([7]),t.from([8]),t.from([9]),t.from([10]),t.from([11]),t.from([12]),t.from([13]),t.from([14]),t.from([15]),t.from([16])],e.flags={VERIFY_NONE:0,VERIFY_P2SH:1,VERIFY_STRICTENC:2,VERIFY_DERSIG:4,VERIFY_LOW_S:8,VERIFY_NULLDUMMY:16,VERIFY_SIGPUSHONLY:32,VERIFY_MINIMALDATA:64,VERIFY_DISCOURAGE_UPGRADABLE_NOPS:128,VERIFY_CLEANSTACK:256,VERIFY_CHECKLOCKTIMEVERIFY:512,VERIFY_CHECKSEQUENCEVERIFY:1024,VERIFY_MINIMALIF:8192,VERIFY_NULLFAIL:16384,VERIFY_COMPRESSED_PUBKEYTYPE:32768,VERIFY_SIGHASH_FORKID:65536,VERIFY_REPLAY_PROTECTION:1<<17,VERIFY_MONOLITH_OPCODES:1<<18},e.flags.MANDATORY_VERIFY_FLAGS=e.flags.VERIFY_P2SH,e.flags.STANDARD_VERIFY_FLAGS=0|e.flags.MANDATORY_VERIFY_FLAGS|e.flags.VERIFY_DERSIG|e.flags.VERIFY_STRICTENC|e.flags.VERIFY_MINIMALDATA|e.flags.VERIFY_NULLDUMMY|e.flags.VERIFY_DISCOURAGE_UPGRADABLE_NOPS|e.flags.VERIFY_CLEANSTACK|e.flags.VERIFY_MINIMALIF|e.flags.VERIFY_NULLFAIL|e.flags.VERIFY_CHECKLOCKTIMEVERIFY|e.flags.VERIFY_CHECKSEQUENCEVERIFY|e.flags.VERIFY_LOW_S|e.flags.VERIFY_COMPRESSED_PUBKEYTYPE|e.flags.VERIFY_SIGHASH_FORKID|e.flags.VERIFY_MONOLITH_OPCODES,e.flags.ONLY_STANDARD_VERIFY_FLAGS=e.flags.STANDARD_VERIFY_FLAGS&~e.flags.MANDATORY_VERIFY_FLAGS,e.hashType={ALL:1,NONE:2,SINGLE:3,SIGHASH_FORKID:64,ANYONECANPAY:128},e.hashTypeByVal={1:"ALL",2:"NONE",3:"SINGLE",128:"ANYONECANPAY"},e.types={NONSTANDARD:0,PUBKEY:1,PUBKEYHASH:2,SCRIPTHASH:3,MULTISIG:4,NULLDATA:5},e.typesByVal={0:"NONSTANDARD",1:"PUBKEY",2:"PUBKEYHASH",3:"SCRIPTHASH",4:"MULTISIG",5:"NULLDATA"},e.isHashType=function(i){if(s(t.isBuffer(i)),0===i.length)return!1;const r=i[i.length-1]&~(e.hashType.ANYONECANPAY|e.hashType.SIGHASH_FORKID);return!(r<e.hashType.ALL||r>e.hashType.SINGLE)},e.isLowDER=function(t){return!!e.isSignatureEncoding(t)&&r.isLowDER(t.slice(0,-1))},e.isKeyEncoding=function(e){if(s(t.isBuffer(e)),e.length<33)return!1;if(4===e[0]){if(65!==e.length)return!1}else{if(2!==e[0]&&3!==e[0])return!1;if(33!==e.length)return!1}return!0},e.isCompressedEncoding=function(e){return s(t.isBuffer(e)),33===e.length&&(2===e[0]||3===e[0])},e.isSignatureEncoding=function(e){if(s(t.isBuffer(e)),e.length<9)return!1;if(e.length>73)return!1;if(48!==e[0])return!1;if(e[1]!==e.length-3)return!1;const i=e[3];if(5+i>=e.length)return!1;const r=e[5+i];return!(i+r+7!==e.length||2!==e[2]||0===i||128&e[4]||i>1&&0===e[4]&&!(128&e[5])||2!==e[i+4]||0===r||128&e[i+6]||r>1&&0===e[i+6]&&!(128&e[i+7]))},e.toASM=function(t,i){if(t.length<=4)return n.decode(t).toString(10);if(i&&e.isSignatureEncoding(t)){const i=t[t.length-1];let s=e.hashTypeByVal[31&i]||"";return s&&(i&e.hashType.ANYONECANPAY&&(s+="|ANYONECANPAY"),s=`[${s}]`),t.slice(0,-1).toString("hex")+s}return t.toString("hex")},e.hashTypeWithForkValue=function(t,e){return e<<8|255&t},e.getHashTypeForkValue=function(t){return t>>>8}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * scripterror.js - script error for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */class s extends Error{constructor(t,e,i){super(),this.type="ScriptError",this.code=t,this.message=t,this.op=-1,this.ip=-1,"string"==typeof e?this.message=e:e&&(this.message=`${t} (op=${e.toSymbol()}, ip=${i})`,this.op=e.value,this.ip=i),Error.captureStackTrace&&Error.captureStackTrace(this,s)}}t.exports=s},function(t,e,i){"use strict";
/*!
 * random.js - random for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 */t.exports=i(151)},function(t,e,i){"use strict";(function(e){
/*!
 * keyring.js - keyring object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),{base58:r}=i(31),n=i(2),o=i(24),a=i(9),h=i(8),l=i(11),u=i(12),c=i(16),f=i(13),{encoding:d}=n,p=e.alloc(33,0);class g{constructor(t){this.nested=!1,this.publicKey=p,this.privateKey=null,this.script=null,this._keyHash=null,this._keyAddress=null,this._scriptHash160=null,this._scriptAddress=null,t&&this.fromOptions(t)}fromOptions(t){let i=m(t);if(e.isBuffer(i))return this.fromKey(i);i=m(t.key),t.publicKey&&(i=m(t.publicKey)),t.privateKey&&(i=m(t.privateKey));const s=t.script,r=t.compressed;return s?this.fromScript(i,s,r):this.fromKey(i,r)}static fromOptions(t){return(new this).fromOptions(t)}refresh(){this._keyHash=null,this._keyAddress=null,this._scriptHash160=null,this._scriptAddress=null}fromPrivate(t,i){return s(e.isBuffer(t),"Private key must be a buffer."),s(f.privateKeyVerify(t),"Not a valid private key."),this.privateKey=t,this.publicKey=f.publicKeyCreate(t,!1!==i),this}static fromPrivate(t,e){return(new this).fromPrivate(t,e)}fromPublic(t){return s(e.isBuffer(t),"Public key must be a buffer."),s(f.publicKeyVerify(t),"Not a valid public key."),this.publicKey=t,this}generate(t){const e=f.generatePrivateKey();return this.fromKey(e,t)}static generate(t){return(new this).generate(t)}static fromPublic(t){return(new this).fromPublic(t)}fromKey(t,i){return s(e.isBuffer(t),"Key must be a buffer."),32===t.length?this.fromPrivate(t,!1!==i):this.fromPublic(t)}static fromKey(t,e){return(new this).fromKey(t,e)}fromScript(t,e,i){return s(e instanceof l,"Non-script passed into KeyRing."),this.fromKey(t,i),this.script=e,this}static fromScript(t,e,i){return(new this).fromScript(t,e,i)}getSecretSize(){let t=0;return t+=1,t+=this.privateKey.length,33===this.publicKey.length&&(t+=1),t+4}toSecret(t){const e=this.getSecretSize(),i=n.write(e);return s(this.privateKey,"Cannot serialize without private key."),t=h.get(t),i.writeU8(t.keyPrefix.privkey),i.writeBytes(this.privateKey),33===this.publicKey.length&&i.writeU8(1),i.writeChecksum(a.digest),r.encode(i.render())}fromSecret(t,e){const i=n.read(r.decode(t),!0),o=i.readU8();h.fromWIF(o,e);const l=i.readBytes(32);let u=!1;return i.left()>4&&(s(1===i.readU8(),"Bad compression flag."),u=!0),i.verifyChecksum(a.digest),this.fromPrivate(l,u)}static fromSecret(t,e){return(new this).fromSecret(t,e)}getPrivateKey(t,e){return this.privateKey?"base58"===t?this.toSecret(e):"hex"===t?this.privateKey.toString("hex"):this.privateKey:null}getPublicKey(t){return"base58"===t?r.encode(this.publicKey):"hex"===t?this.publicKey.toString("hex"):this.publicKey}getScript(){return this.script}getScriptHash(t){return this.getScriptHash160(t)}getScriptHash160(t){return this.script?(this._scriptHash160||(this._scriptHash160=this.script.hash160()),"hex"===t?this._scriptHash160.toString("hex"):this._scriptHash160):null}getScriptAddress(t,e){if(!this.script)return null;if(!this._scriptAddress){const t=this.getScriptHash160(),e=u.fromScripthash(t);this._scriptAddress=e}return"base58"===t?this._scriptAddress.toBase58(e):"string"===t?this._scriptAddress.toString(e):this._scriptAddress}getKeyHash(t){return this._keyHash||(this._keyHash=o.digest(this.publicKey)),"hex"===t?this._keyHash.toString("hex"):this._keyHash}getKeyAddress(t,e){if(!this._keyAddress){const t=this.getKeyHash(),e=u.fromPubkeyhash(t);this._keyAddress=e}return"base58"===t?this._keyAddress.toBase58(e):"string"===t?this._keyAddress.toString(e):this._keyAddress}getHash(t){return this.script?this.getScriptHash(t):this.getKeyHash(t)}getAddress(t,e){return this.script?this.getScriptAddress(t,e):this.getKeyAddress(t,e)}ownHash(t){return!!(t&&(t.equals(this.getKeyHash())||this.script&&t.equals(this.getScriptHash())))}ownOutput(t,e){let i;return t instanceof c?i=t:(i=t.outputs[e],s(i,"Output does not exist.")),this.ownHash(i.getHash())}getRedeem(t){return this.script&&t.equals(this.getScriptHash160())?this.script:null}sign(t){return s(this.privateKey,"Cannot sign without private key."),f.signDER(t,this.privateKey)}verify(t,e){return f.verifyDER(t,e,this.publicKey)}getVersion(){return-1}getType(){return this.script?u.types.SCRIPTHASH:u.types.PUBKEYHASH}inspect(){return this.toJSON()}toJSON(t){return{publicKey:this.publicKey.toString("hex"),script:this.script?this.script.toRaw().toString("hex"):null,type:u.typesByVal[this.getType()].toLowerCase(),address:this.getAddress("string",t)}}fromJSON(t){return s(t),s("string"==typeof t.publicKey),s(!t.script||"string"==typeof t.script),this.publicKey=e.from(t.publicKey,"hex"),t.script&&(this.script=e.from(t.script,"hex")),this}static fromJSON(t){return(new this).fromJSON(t)}getSize(){let t=0;return t+=1,this.privateKey?(t+=d.sizeVarBytes(this.privateKey),t+=1):t+=d.sizeVarBytes(this.publicKey),t+(this.script?this.script.getVarSize():1)}toWriter(t){return t.writeU8(0),this.privateKey?(t.writeVarBytes(this.privateKey),t.writeU8(33===this.publicKey.length)):t.writeVarBytes(this.publicKey),this.script?t.writeVarBytes(this.script.toRaw()):t.writeVarint(0),t}toRaw(){const t=this.getSize();return this.toWriter(n.write(t)).render()}fromReader(t){t.readU8();const e=t.readVarBytes();if(32===e.length){const i=1===t.readU8();this.privateKey=e,this.publicKey=f.publicKeyCreate(e,i)}else this.publicKey=e,s(f.publicKeyVerify(e),"Invalid public key.");const i=t.readVarBytes();return i.length>0&&(this.script=l.fromRaw(i)),this}fromRaw(t){return this.fromReader(n.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t){return(new this).fromRaw(t)}static isKeyRing(t){return t instanceof g}}function m(t){return t?t.privateKey?t.privateKey:t.publicKey?t.publicKey:t:t}t.exports=g}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(s){
/*!
 * mtx.js - mutable transaction object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),{encoding:n}=i(2),o=i(11),a=i(14),h=i(43),l=i(16),u=i(46),c=i(18),f=i(25),d=i(12),p=i(3),g=i(17),m=i(19),w=i(55),y=i(5);class b extends a{constructor(t){super(),this.mutable=!0,this.changeIndex=-1,this.view=new f,t&&this.fromOptions(t)}fromOptions(t){if(null!=t.version&&(r(t.version>>>0===t.version,"Version must a be uint32."),this.version=t.version),t.inputs){r(Array.isArray(t.inputs),"Inputs must be an array.");for(const e of t.inputs)this.addInput(e)}if(t.outputs){r(Array.isArray(t.outputs),"Outputs must be an array.");for(const e of t.outputs)this.addOutput(e)}return null!=t.locktime&&(r(t.locktime>>>0===t.locktime,"Locktime must be a uint32."),this.locktime=t.locktime),null!=t.changeIndex&&(-1!==t.changeIndex?(r(t.changeIndex>>>0===t.changeIndex,"Change index must be a uint32."),this.changeIndex=t.changeIndex):this.changeIndex=-1),this}static fromOptions(t){return(new this).fromOptions(t)}clone(){const t=new this.constructor;return t.inject(this),t.changeIndex=this.changeIndex,t}addInput(t){const e=h.fromOptions(t);return this.inputs.push(e),e}addOutpoint(t){const e=c.fromOptions(t),i=h.fromOutpoint(e);return this.inputs.push(i),i}addCoin(t){r(t instanceof u,"Cannot add non-coin.");const e=h.fromCoin(t);return this.inputs.push(e),this.view.addCoin(t),e}addTX(t,e,i){r(t instanceof a,"Cannot add non-transaction."),null==i&&(i=-1);const s=h.fromTX(t,e);return this.inputs.push(s),this.view.addIndex(t,e,i),s}addOutput(t,e){let i;return i=null!=e?l.fromScript(t,e):l.fromOptions(t),this.outputs.push(i),i}check(t){return super.check(this.view,t)}checkAsync(t,e){return super.checkAsync(this.view,t,e)}verify(t){try{this.check(t)}catch(t){if("ScriptError"===t.type)return!1;throw t}return!0}async verifyAsync(t,e){try{await this.checkAsync(t,e)}catch(t){if("ScriptError"===t.type)return!1;throw t}return!0}getFee(){return super.getFee(this.view)}getInputValue(){return super.getInputValue(this.view)}getInputAddresses(){return super.getInputAddresses(this.view)}getAddresses(){return super.getAddresses(this.view)}getInputHashes(t){return super.getInputHashes(this.view,t)}getHashes(t){return super.getHashes(this.view,t)}hasCoins(){return super.hasCoins(this.view)}getSigops(t){return super.getSigops(this.view,t)}getSigopsCount(t){return super.getSigopsCount(this.view,t)}verifyInputs(t){const[e]=this.checkInputs(t);return-1!==e}checkInputs(t){return super.checkInputs(this.view,t)}scriptInput(t,e,i){const s=this.inputs[t];if(r(s,"Input does not exist."),r(e,"No coin passed."),0!==s.script.raw.length)return!0;const n=e.script,o=n.getScripthash();if(o){const t=i.getRedeem(o);if(!t)return!1;const e=this.scriptVector(t,i);return!!e&&(e.push(t.toRaw()),s.script.fromStack(e),!0)}const a=this.scriptVector(n,i);return!!a&&(s.script.fromStack(a),!0)}scriptVector(t,e){const i=t.getPubkey();if(i){if(!i.equals(e.publicKey))return null;const t=new w;return t.pushInt(0),t}const s=t.getPubkeyhash();if(s){if(!s.equals(e.getKeyHash()))return null;const t=new w;return t.pushInt(0),t.pushData(e.publicKey),t}const[,r]=t.getMultisig();if(-1!==r){if(-1===t.indexOf(e.publicKey))return null;const i=new w;i.pushInt(0);for(let t=0;t<r;t++)i.pushInt(0);return i}return null}async signInputAsync(t,e,i,s,r){return r?await r.signInput(this,t,e,i,s,r):this.signInput(t,e,i,s)}signInput(t,e,i,s){const n=this.inputs[t],a=i.privateKey;r(n,"Input does not exist."),r(e,"No coin passed.");const h=e.value;let l=e.script;const u=n.script;let c=!1;null==s&&(s=o.hashType.ALL),s|=o.hashType.SIGHASH_FORKID;const f=o.flags.VERIFY_SIGHASH_FORKID;if(l.isScripthash()){if(!(l=n.script.getRedeem()))throw new Error("Input has not been templated.");c=!0}const d=this.signature(t,l,h,a,s,f);if(c){const t=u.toStack(),e=t.pop(),s=this.signVector(l,t,d,i);return!!s&&(s.push(e),u.fromStack(s),!0)}const p=u.toStack(),g=this.signVector(l,p,d,i);return!!g&&(u.fromStack(g),!0)}signVector(t,e,i,s){const n=t.getPubkey();if(n){if(!s.publicKey.equals(n))return null;if(0===e.length)throw new Error("Input has not been templated.");return e.get(0).length>0?e:(e.set(0,i),e)}const o=t.getPubkeyhash();if(o){if(!s.getKeyHash().equals(o))return null;if(2!==e.length)throw new Error("Input has not been templated.");if(0===e.get(1).length)throw new Error("Input has not been templated.");return e.get(0).length>0?e:(e.set(0,i),e)}const[a,h]=t.getMultisig();if(-1!==a){if(e.length<2)throw new Error("Input has not been templated.");if(0!==e.get(0).length)throw new Error("Input has not been templated.");if(e.length-1>h)throw new Error("Input has not been templated.");let n=0;for(let t=1;t<e.length;t++)e.get(t).length>0&&(n+=1);if(n===a&&e.length-1===a)return e;for(;e.length-1<h;)e.pushInt(0);const o=[];for(const e of t.code)e.data&&o.push(e.data);let l=-1;for(let t=0;t<o.length;t++)if(o[t].equals(s.publicKey)){l=t;break}if(-1===l)return null;if((l+=1)<e.length&&n<a&&0===e.get(l).length&&(e.set(l,i),n+=1),n>=a){for(let t=e.length-1;t>=1;t--)0===e.get(t).length&&e.remove(t);for(;n>a;)e.pop(),n-=1;r(n===a),r(e.length-1===a)}return e}return null}isSigned(){for(let t=0;t<this.inputs.length;t++){const{prevout:e}=this.inputs[t],i=this.view.getOutput(e);if(!i)return!1;if(!this.isInputSigned(t,i))return!1}return!0}isInputSigned(t,e){const i=this.inputs[t];r(i,"Input does not exist."),r(e,"No coin passed.");const s=i.script;let n=e.script,o=!1;if(n.isScripthash()){if(!(n=i.script.getRedeem()))return!1;o=!0}const a=s.toStack();return o&&a.pop(),this.isVectorSigned(n,a)}isVectorSigned(t,e){if(t.isPubkey())return 1===e.length&&0!==e.get(0).length;if(t.isPubkeyhash())return 2===e.length&&0!==e.get(0).length&&0!==e.get(1).length;const[i]=t.getMultisig();if(-1!==i){if(e.length-1!==i)return!1;for(let t=1;t<e.length;t++)if(0===e.get(t).length)return!1;return!0}return!1}template(t){if(Array.isArray(t)){let e=0;for(const i of t)e+=this.template(i);return e}let e=0;for(let i=0;i<this.inputs.length;i++){const{prevout:s}=this.inputs[i],r=this.view.getOutput(s);r&&t.ownOutput(r)&&this.scriptInput(i,r,t)&&(e+=1)}return e}sign(t,e){if(Array.isArray(t)){let i=0;for(const s of t)i+=this.sign(s,e);return i}r(t.privateKey,"No private key available.");let i=0;for(let s=0;s<this.inputs.length;s++){const{prevout:r}=this.inputs[s],n=this.view.getOutput(r);n&&t.ownOutput(n)&&this.scriptInput(s,n,t)&&this.signInput(s,n,t,e)&&(i+=1)}return i}async signAsync(t,e,i){return i?await i.sign(this,t,e):this.sign(t,e)}async estimateSize(t){let e=0;e+=4,e+=n.sizeVarint(this.inputs.length),e+=40*this.inputs.length,e+=n.sizeVarint(this.outputs.length);for(const t of this.outputs)e+=t.getSize();e+=4;for(const{prevout:i}of this.inputs){const s=this.view.getOutput(i);if(!s){e+=110;continue}const r=s.script;if(r.isPubkey()){e+=1,e+=74;continue}if(r.isPubkeyhash()){e+=1,e+=74,e+=34;continue}const[o]=r.getMultisig();if(-1===o){if(t){const i=await t(r);if(-1!==i){e+=i;continue}}r.isScripthash()?(e+=1,e+=149):e+=110}else{let t=0;t+=1,t+=74*o,e+=t+=n.sizeVarint(t)}}return e}selectCoins(t,e){return new v(this,e).select(t)}subtractIndex(t,e){r("number"==typeof t),r("number"==typeof e);const i=this.outputs[t];if(!i)throw new Error("Subtraction index does not exist.");if(i.value<e+i.getDustThreshold())throw new Error("Could not subtract fee.");i.value-=e}subtractFee(t){r("number"==typeof t);let e=0;for(const t of this.outputs)t.script.isUnspendable()||(e+=1);if(0===e)throw new Error("Could not subtract fee.");const i=t%e,s=(t-i)/e;for(const t of this.outputs)if(!t.script.isUnspendable()){if(t.value<s+t.getDustThreshold())throw new Error("Could not subtract fee.");t.value-=s}for(const t of this.outputs)if(!t.script.isUnspendable()&&t.value>=i+t.getDustThreshold())return void(t.value-=i);throw new Error("Could not subtract fee.")}async fund(t,e){r(e,"Options are required."),r(e.changeAddress,"Change address is required."),r(0===this.inputs.length,"TX is already funded.");const i=await this.selectCoins(t,e);for(const t of i.chosen)this.addCoin(t);if(i.subtractFee){const t=i.subtractIndex;-1!==t?this.subtractIndex(t,i.fee):this.subtractFee(i.fee)}const s=new l;return s.value=i.change,s.script.fromAddress(i.changeAddress),s.isDust(g.MIN_RELAY)?(this.changeIndex=-1,r.strictEqual(this.getFee(),i.fee+i.change)):(this.outputs.push(s),this.changeIndex=this.outputs.length-1,r.strictEqual(this.getFee(),i.fee)),i}sortMembers(){let t=null;-1!==this.changeIndex&&(t=this.outputs[this.changeIndex],r(t)),this.inputs.sort(_),this.outputs.sort(x),-1!==this.changeIndex&&(this.changeIndex=this.outputs.indexOf(t),r(-1!==this.changeIndex))}avoidFeeSniping(t){r("number"==typeof t,"Must pass in height."),0==(10*Math.random()|0)&&(t-=100*Math.random()|0)<0&&(t=0),this.setLocktime(t)}setLocktime(t){r(t>>>0===t,"Locktime must be a uint32."),r(this.inputs.length>0,"Cannot set sequence with no inputs.");for(const t of this.inputs)4294967295===t.sequence&&(t.sequence=4294967294);this.locktime=t}setSequence(t,e,i){const s=this.inputs[t];r(s,"Input does not exist."),r(e>>>0===e,"Locktime must be a uint32."),this.version=2,i?(e>>>=p.SEQUENCE_GRANULARITY,e&=p.SEQUENCE_MASK,e|=p.SEQUENCE_TYPE_FLAG):e&=p.SEQUENCE_MASK,s.sequence=e}inspect(){return this.format()}format(){return super.format(this.view)}toJSON(){return super.toJSON(null,this.view)}getJSON(t){return super.getJSON(t,this.view)}fromJSON(t){super.fromJSON(t);for(let e=0;e<t.inputs.length;e++){const i=t.inputs[e],{prevout:s}=i;if(!i.coin)continue;const r=u.fromJSON(i.coin);r.hash=y.revHex(s.hash),r.index=s.index,this.view.addCoin(r)}return this}static fromJSON(t){return(new this).fromJSON(t)}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,e){return"string"==typeof t&&(t=s.from(t,e)),(new this).fromRaw(t)}toTX(){return(new a).inject(this)}commit(){return[this.toTX(),this.view]}static fromTX(t){return(new this).inject(t)}static isMTX(t){return t instanceof b}}class v{constructor(t,e){this.tx=t.clone(),this.coins=[],this.outputValue=0,this.index=0,this.chosen=[],this.change=0,this.fee=v.MIN_FEE,this.selection="value",this.subtractFee=!1,this.subtractIndex=-1,this.height=-1,this.depth=-1,this.hardFee=-1,this.rate=v.FEE_RATE,this.maxFee=-1,this.round=!1,this.changeAddress=null,this.estimate=null,e&&this.fromOptions(e)}fromOptions(t){if(t.selection&&(r("string"==typeof t.selection),this.selection=t.selection),null!=t.subtractFee&&("number"==typeof t.subtractFee?(r(Number.isSafeInteger(t.subtractFee)),r(t.subtractFee>=-1),this.subtractIndex=t.subtractFee,this.subtractFee=-1!==this.subtractIndex):(r("boolean"==typeof t.subtractFee),this.subtractFee=t.subtractFee)),null!=t.subtractIndex&&(r(Number.isSafeInteger(t.subtractIndex)),r(t.subtractIndex>=-1),this.subtractIndex=t.subtractIndex,this.subtractFee=-1!==this.subtractIndex),null!=t.height&&(r(Number.isSafeInteger(t.height)),r(t.height>=-1),this.height=t.height),null!=t.confirmations&&(r(Number.isSafeInteger(t.confirmations)),r(t.confirmations>=-1),this.depth=t.confirmations),null!=t.depth&&(r(Number.isSafeInteger(t.depth)),r(t.depth>=-1),this.depth=t.depth),null!=t.hardFee&&(r(Number.isSafeInteger(t.hardFee)),r(t.hardFee>=-1),this.hardFee=t.hardFee),null!=t.rate&&(r(Number.isSafeInteger(t.rate)),r(t.rate>=0),this.rate=t.rate),null!=t.maxFee&&(r(Number.isSafeInteger(t.maxFee)),r(t.maxFee>=-1),this.maxFee=t.maxFee),null!=t.round&&(r("boolean"==typeof t.round),this.round=t.round),t.changeAddress){const e=t.changeAddress;"string"==typeof e?this.changeAddress=d.fromString(e):(r(e instanceof d),this.changeAddress=e)}return t.estimate&&(r("function"==typeof t.estimate),this.estimate=t.estimate),this}init(t){switch(this.coins=t.slice(),this.outputValue=this.tx.getOutputValue(),this.index=0,this.chosen=[],this.change=0,this.fee=v.MIN_FEE,this.tx.inputs.length=0,this.selection){case"all":case"random":this.coins.sort(R);break;case"age":this.coins.sort(E);break;case"value":this.coins.sort(S);break;default:throw new k(`Bad selection type: ${this.selection}.`)}}total(){return this.subtractFee?this.outputValue:this.outputValue+this.fee}isFull(){return this.tx.getInputValue()>=this.total()}isSpendable(t){return-1===this.height||(t.coinbase?-1!==t.height&&!(this.height+1<t.height+p.COINBASE_MATURITY):-1===this.depth||!(t.getDepth(this.height)<this.depth))}getFee(t){if(this.round){const e=g.getRoundFee(t,this.rate);return Math.min(e,v.MAX_FEE)}const e=g.getMinFee(t,this.rate);return Math.min(e,v.MAX_FEE)}fund(){for(;this.index<this.coins.length;){const t=this.coins[this.index++];if(this.isSpendable(t)&&(this.tx.addCoin(t),this.chosen.push(t),"all"!==this.selection&&this.isFull()))break}}async select(t){if(this.init(t),-1!==this.hardFee?this.selectHard():await this.selectEstimate(),!this.isFull())throw new k("Not enough funds.",this.tx.getInputValue(),this.total());return this.change=this.tx.getInputValue()-this.total(),this}async selectEstimate(){this.fee=v.MIN_FEE,this.fund();const t=new l;this.changeAddress?t.script.fromAddress(this.changeAddress):t.script.fromPubkeyhash(s.allocUnsafe(20)),this.tx.outputs.push(t);do{const t=await this.tx.estimateSize(this.estimate);if(this.fee=this.getFee(t),this.maxFee>0&&this.fee>this.maxFee)throw new k("Fee is too high.");this.isFull()||this.fund()}while(!this.isFull()&&this.index<this.coins.length)}selectHard(){this.fee=Math.min(this.hardFee,v.MAX_FEE),this.fund()}}v.FEE_RATE=1e4,v.MIN_FEE=1e4,v.MAX_FEE=p.COIN/10;class k extends Error{constructor(t,e,i){super(),this.type="FundingError",this.message=t,this.availableFunds=-1,this.requiredFunds=-1,null!=e&&(this.message+=` (available=${m.btc(e)},`,this.message+=` required=${m.btc(i)})`,this.availableFunds=e,this.requiredFunds=i),Error.captureStackTrace&&Error.captureStackTrace(this,k)}}function E(t,e){return(t=-1===t.height?2147483647:t.height)-(-1===e.height?2147483647:e.height)}function R(t,e){return Math.random()>.5?1:-1}function S(t,e){return-1===t.height&&-1!==e.height?1:-1!==t.height&&-1===e.height?-1:e.value-t.value}function _(t,e){return t.compare(e)}function x(t,e){return t.compare(e)}(e=b).MTX=b,e.Selector=v,e.FundingError=k,t.exports=e}).call(this,i(1).Buffer)},function(t,e,i){(function(t){function i(t,e){for(var i=0,s=t.length-1;s>=0;s--){var r=t[s];"."===r?t.splice(s,1):".."===r?(t.splice(s,1),i++):i&&(t.splice(s,1),i--)}if(e)for(;i--;i)t.unshift("..");return t}var s=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,r=function(t){return s.exec(t).slice(1)};function n(t,e){if(t.filter)return t.filter(e);for(var i=[],s=0;s<t.length;s++)e(t[s],s,t)&&i.push(t[s]);return i}e.resolve=function(){for(var e="",s=!1,r=arguments.length-1;r>=-1&&!s;r--){var o=r>=0?arguments[r]:t.cwd();if("string"!=typeof o)throw new TypeError("Arguments to path.resolve must be strings");o&&(e=o+"/"+e,s="/"===o.charAt(0))}return e=i(n(e.split("/"),function(t){return!!t}),!s).join("/"),(s?"/":"")+e||"."},e.normalize=function(t){var s=e.isAbsolute(t),r="/"===o(t,-1);return(t=i(n(t.split("/"),function(t){return!!t}),!s).join("/"))||s||(t="."),t&&r&&(t+="/"),(s?"/":"")+t},e.isAbsolute=function(t){return"/"===t.charAt(0)},e.join=function(){var t=Array.prototype.slice.call(arguments,0);return e.normalize(n(t,function(t,e){if("string"!=typeof t)throw new TypeError("Arguments to path.join must be strings");return t}).join("/"))},e.relative=function(t,i){function s(t){for(var e=0;e<t.length&&""===t[e];e++);for(var i=t.length-1;i>=0&&""===t[i];i--);return e>i?[]:t.slice(e,i-e+1)}t=e.resolve(t).substr(1),i=e.resolve(i).substr(1);for(var r=s(t.split("/")),n=s(i.split("/")),o=Math.min(r.length,n.length),a=o,h=0;h<o;h++)if(r[h]!==n[h]){a=h;break}var l=[];for(h=a;h<r.length;h++)l.push("..");return(l=l.concat(n.slice(a))).join("/")},e.sep="/",e.delimiter=":",e.dirname=function(t){var e=r(t),i=e[0],s=e[1];return i||s?(s&&(s=s.substr(0,s.length-1)),i+s):"."},e.basename=function(t,e){var i=r(t)[2];return e&&i.substr(-1*e.length)===e&&(i=i.substr(0,i.length-e.length)),i},e.extname=function(t){return r(t)[3]};var o="b"==="ab".substr(-1)?function(t,e,i){return t.substr(e,i)}:function(t,e,i){return e<0&&(e=t.length+e),t.substr(e,i)}}).call(this,i(15))},function(t,e,i){"use strict";(function(e){
/*!
 * headers.js - headers object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(2),r=i(5),n=i(64);class o extends n{constructor(t){super(),t&&this.parseOptions(t)}verifyBody(){return!0}getSize(){return 81}toWriter(t){return this.writeHead(t),t.writeVarint(0),t}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}fromReader(t){return this.readHead(t),t.readVarint(),this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}static fromHead(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromHead(t)}static fromEntry(t){const i=new this;return i.version=t.version,i.prevBlock=t.prevBlock,i.merkleRoot=t.merkleRoot,i.time=t.time,i.bits=t.bits,i.nonce=t.nonce,i._hash=e.from(t.hash,"hex"),i._hhash=t.hash,i}toHeaders(){return this}static fromBlock(t){const e=new this(t);return e._hash=t._hash,e._hhash=t._hhash,e}toJSON(){return this.getJSON()}getJSON(t,e,i){return{hash:this.rhash(),height:i,version:this.version,prevBlock:r.revHex(this.prevBlock),merkleRoot:r.revHex(this.merkleRoot),time:this.time,bits:this.bits,nonce:this.nonce}}fromJSON(t){return this.parseJSON(t),this}static fromJSON(t){return(new this).fromJSON(t)}inspect(){return this.format()}format(t,e){return{hash:this.rhash(),height:null!=e?e:-1,date:r.date(this.time),version:this.version.toString(16),prevBlock:r.revHex(this.prevBlock),merkleRoot:r.revHex(this.merkleRoot),time:this.time,bits:this.bits,nonce:this.nonce}}static isHeaders(t){return t instanceof o}}t.exports=o}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * input.js - input object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(8),o=i(11),a=i(18);class h{constructor(t){this.prevout=new a,this.script=new o,this.sequence=4294967295,t&&this.fromOptions(t)}fromOptions(t){return s(t,"Input data is required."),this.prevout.fromOptions(t.prevout),t.script&&this.script.fromOptions(t.script),null!=t.sequence&&(s(t.sequence>>>0===t.sequence,"Sequence must be a uint32."),this.sequence=t.sequence),this}static fromOptions(t){return(new this).fromOptions(t)}clone(){const t=new this.constructor;return t.prevout=this.prevout,t.script.inject(this.script),t.sequence=this.sequence,t}equals(t){return s(h.isInput(t)),this.prevout.equals(t.prevout)}compare(t){return s(h.isInput(t)),this.prevout.compare(t.prevout)}getType(t){if(this.isCoinbase())return"coinbase";if(t)return t.getType();const e=this.script.getInputType();return o.typesByVal[e].toLowerCase()}getRedeem(t){if(this.isCoinbase())return null;if(!t)return this.script.isScripthashInput()?this.script.getRedeem():null;let e=t.script,i=null;return e.isScripthash()&&(i=e=this.script.getRedeem()),i}getSubtype(t){if(this.isCoinbase())return null;const e=this.getRedeem(t);if(!e)return null;const i=e.getType();return o.typesByVal[i].toLowerCase()}getAddress(t){return this.isCoinbase()?null:t?t.getAddress():this.script.code.length>0?this.script.getInputAddress():null}getHash(t,e){const i=this.getAddress(t);return i?i.getHash(e):null}isFinal(){return 4294967295===this.sequence}isRBF(){return this.sequence<4294967294}isCoinbase(){return this.prevout.isNull()}inspect(){return this.format()}format(t){return{type:this.getType(t),subtype:this.getSubtype(t),address:this.getAddress(t),script:this.script,redeem:this.getRedeem(t),sequence:this.sequence,prevout:this.prevout,coin:t||null}}toJSON(t,e){return this.getJSON()}getJSON(t,e){let i;return t=n.get(t),e||(i=this.getAddress())&&(i=i.toString(t)),{prevout:this.prevout.toJSON(),script:this.script.toJSON(),sequence:this.sequence,address:i,coin:e?e.getJSON(t,!0):void 0}}fromJSON(t){return s(t,"Input data is required."),s(t.sequence>>>0===t.sequence,"Sequence must be a uint32."),this.prevout.fromJSON(t.prevout),this.script.fromJSON(t.script),this.sequence=t.sequence,this}static fromJSON(t){return(new this).fromJSON(t)}getSize(){return 40+this.script.getVarSize()}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}toWriter(t){return this.prevout.toWriter(t),t.writeVarBytes(this.script.toRaw()),t.writeU32(this.sequence),t}fromReader(t){return this.prevout.fromReader(t),this.script.fromRaw(t.readVarBytes()),this.sequence=t.readU32(),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}fromOutpoint(t){return s("string"==typeof t.hash),s("number"==typeof t.index),this.prevout.hash=t.hash,this.prevout.index=t.index,this}static fromOutpoint(t){return(new this).fromOutpoint(t)}fromCoin(t){return s("string"==typeof t.hash),s("number"==typeof t.index),this.prevout.hash=t.hash,this.prevout.index=t.index,this}static fromCoin(t){return(new this).fromCoin(t)}fromTX(t,e){return s(t),s("number"==typeof e),s(e>=0&&e<t.outputs.length),this.prevout.hash=t.hash("hex"),this.prevout.index=e,this}static fromTX(t,e){return(new this).fromTX(t,e)}static isInput(t){return t instanceof h}}t.exports=h}).call(this,i(1).Buffer)},function(t,e,i){"use strict";var s=i(4).Buffer,r=i(153);function n(){this.negative=0,this.words=null,this.length=0}n.fromNumber=function(t){var e=new n;return e.words=[67108863&t],e.length=1,e},n.fromBuffer=function(t){var e=new n;return e.words=new Array(10),e.words[0]=(3&t[28])<<24|t[29]<<16|t[30]<<8|t[31],e.words[1]=(15&t[25])<<22|t[26]<<14|t[27]<<6|t[28]>>>2,e.words[2]=(63&t[22])<<20|t[23]<<12|t[24]<<4|t[25]>>>4,e.words[3]=(255&t[19])<<18|t[20]<<10|t[21]<<2|t[22]>>>6,e.words[4]=(3&t[15])<<24|t[16]<<16|t[17]<<8|t[18],e.words[5]=(15&t[12])<<22|t[13]<<14|t[14]<<6|t[15]>>>2,e.words[6]=(63&t[9])<<20|t[10]<<12|t[11]<<4|t[12]>>>4,e.words[7]=(255&t[6])<<18|t[7]<<10|t[8]<<2|t[9]>>>6,e.words[8]=(3&t[2])<<24|t[3]<<16|t[4]<<8|t[5],e.words[9]=t[0]<<14|t[1]<<6|t[2]>>>2,e.length=10,e.strip()},n.prototype.toBuffer=function(){for(var t=this.words,e=this.length;e<10;++e)t[e]=0;return s.from([t[9]>>>14&255,t[9]>>>6&255,(63&t[9])<<2|t[8]>>>24&3,t[8]>>>16&255,t[8]>>>8&255,255&t[8],t[7]>>>18&255,t[7]>>>10&255,t[7]>>>2&255,(3&t[7])<<6|t[6]>>>20&63,t[6]>>>12&255,t[6]>>>4&255,(15&t[6])<<4|t[5]>>>22&15,t[5]>>>14&255,t[5]>>>6&255,(63&t[5])<<2|t[4]>>>24&3,t[4]>>>16&255,t[4]>>>8&255,255&t[4],t[3]>>>18&255,t[3]>>>10&255,t[3]>>>2&255,(3&t[3])<<6|t[2]>>>20&63,t[2]>>>12&255,t[2]>>>4&255,(15&t[2])<<4|t[1]>>>22&15,t[1]>>>14&255,t[1]>>>6&255,(63&t[1])<<2|t[0]>>>24&3,t[0]>>>16&255,t[0]>>>8&255,255&t[0]])},n.prototype.clone=function(){var t=new n;t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];return t.length=this.length,t.negative=this.negative,t},n.prototype.strip=function(){for(;this.length>1&&0==(0|this.words[this.length-1]);)this.length--;return this},n.prototype.normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},n.prototype.isEven=function(){return 0==(1&this.words[0])},n.prototype.isOdd=function(){return 1==(1&this.words[0])},n.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},n.prototype.ucmp=function(t){if(this.length!==t.length)return this.length>t.length?1:-1;for(var e=this.length-1;e>=0;--e)if(this.words[e]!==t.words[e])return this.words[e]>t.words[e]?1:-1;return 0},n.prototype.gtOne=function(){return this.length>1||this.words[0]>1},n.prototype.isOverflow=function(){return this.ucmp(n.n)>=0},n.prototype.isHigh=function(){return 1===this.ucmp(n.nh)},n.prototype.bitLengthGT256=function(){return this.length>10||10===this.length&&this.words[9]>4194303},n.prototype.iuaddn=function(t){this.words[0]+=t;for(var e=0;this.words[e]>67108863&&e<this.length;++e)this.words[e]-=67108864,this.words[e+1]+=1;return e===this.length&&(this.words[e]=1,this.length+=1),this},n.prototype.iadd=function(t){if(this.negative!==t.negative)return 0!==this.negative?(this.negative=0,this.isub(t),this.negative^=1):(t.negative=0,this.isub(t),t.negative=1),this.normSign();var e,i;this.length>t.length?(e=this,i=t):(e=t,i=this);for(var s=0,r=0;s<i.length;++s){var n=e.words[s]+i.words[s]+r;this.words[s]=67108863&n,r=n>>>26}for(;0!==r&&s<e.length;++s)n=e.words[s]+r,this.words[s]=67108863&n,r=n>>>26;if(this.length=e.length,0!==r)this.words[this.length++]=r;else if(e!==this)for(;s<e.length;++s)this.words[s]=e.words[s];return this},n.prototype.add=function(t){return this.clone().iadd(t)},n.prototype.isub=function(t){if(this.negative!==t.negative)return 0!==this.negative?(this.negative=0,this.iadd(t),this.negative=1):(t.negative=0,this.iadd(t),t.negative=1),this.normSign();var e,i,s=this.ucmp(t);if(0===s)return this.negative=0,this.words[0]=0,this.length=1,this;s>0?(e=this,i=t):(e=t,i=this);for(var r=0,n=0;r<i.length;++r){var o=e.words[r]-i.words[r]+n;n=o>>26,this.words[r]=67108863&o}for(;0!==n&&r<e.length;++r)n=(o=e.words[r]+n)>>26,this.words[r]=67108863&o;if(0===n&&r<e.length&&e!==this)for(;r<e.length;++r)this.words[r]=e.words[r];return this.length=Math.max(this.length,r),e!==this&&(this.negative^=1),this.strip().normSign()},n.prototype.sub=function(t){return this.clone().isub(t)},n.umulTo=function(t,e,i){i.length=t.length+e.length-1;var s=t.words[0]*e.words[0],r=s/67108864|0;i.words[0]=67108863&s;for(var n=1,o=i.length;n<o;n++){for(var a=r>>>26,h=67108863&r,l=Math.max(0,n-t.length+1),u=Math.min(n,e.length-1);l<=u;l++){var c=n-l,f=t.words[c]*e.words[l]+h;a+=f/67108864|0,h=67108863&f}i.words[n]=h,r=a}return 0!==r&&(i.words[i.length++]=r),i.strip()},n.umulTo10x10=Math.imul?r.umulTo10x10:n.umulTo,n.umulnTo=function(t,e,i){if(0===e)return i.words=[0],i.length=1,i;for(var s=0,r=0;s<t.length;++s){var n=t.words[s]*e+r;i.words[s]=67108863&n,r=n/67108864|0}return r>0?(i.words[s]=r,i.length=t.length+1):i.length=t.length,i},n.prototype.umul=function(t){var e=new n;return e.words=new Array(this.length+t.length),10===this.length&&10===t.length?n.umulTo10x10(this,t,e):1===this.length?n.umulnTo(t,this.words[0],e):1===t.length?n.umulnTo(this,t.words[0],e):n.umulTo(this,t,e)},n.prototype.isplit=function(t){t.length=Math.min(this.length,9);for(var e=0;e<t.length;++e)t.words[e]=this.words[e];if(this.length<=9)return this.words[0]=0,this.length=1,this;var i=this.words[9];for(t.words[t.length++]=4194303&i,e=10;e<this.length;++e){var s=this.words[e];this.words[e-10]=(4194303&s)<<4|i>>>22,i=s}return i>>>=22,this.words[e-10]=i,0===i&&this.length>10?this.length-=10:this.length-=9,this},n.prototype.fireduce=function(){return this.isOverflow()&&this.isub(n.n),this},n.prototype.ureduce=function(){var t=this.clone().isplit(n.tmp).umul(n.nc).iadd(n.tmp);return t.bitLengthGT256()&&(t=t.isplit(n.tmp).umul(n.nc).iadd(n.tmp)).bitLengthGT256()&&(t=t.isplit(n.tmp).umul(n.nc).iadd(n.tmp)),t.fireduce()},n.prototype.ishrn=function(t){for(var e=(1<<t)-1,i=26-t,s=this.length-1,r=0;s>=0;--s){var n=this.words[s];this.words[s]=r<<i|n>>>t,r=n&e}return this.length>1&&0===this.words[this.length-1]&&(this.length-=1),this},n.prototype.uinvm=function(){for(var t=this.clone(),e=n.n.clone(),i=n.fromNumber(1),s=n.fromNumber(0),r=n.fromNumber(0),o=n.fromNumber(1);t.isEven()&&e.isEven();){for(var a=1,h=1;0==(t.words[0]&h)&&0==(e.words[0]&h)&&a<26;++a,h<<=1);t.ishrn(a),e.ishrn(a)}for(var l=e.clone(),u=t.clone();!t.isZero();){for(var c=0,f=1;0==(t.words[0]&f)&&c<26;++c,f<<=1);if(c>0)for(t.ishrn(c);c-- >0;)(i.isOdd()||s.isOdd())&&(i.iadd(l),s.isub(u)),i.ishrn(1),s.ishrn(1);for(var d=0,p=1;0==(e.words[0]&p)&&d<26;++d,p<<=1);if(d>0)for(e.ishrn(d);d-- >0;)(r.isOdd()||o.isOdd())&&(r.iadd(l),o.isub(u)),r.ishrn(1),o.ishrn(1);t.ucmp(e)>=0?(t.isub(e),i.isub(r),s.isub(o)):(e.isub(t),r.isub(i),o.isub(s))}if(1===r.negative){r.negative=0;var g=r.ureduce();return g.negative^=1,g.normSign().iadd(n.n)}return r.ureduce()},n.prototype.imulK=function(){this.words[this.length]=0,this.words[this.length+1]=0,this.length+=2;for(var t=0,e=0;t<this.length;++t){var i=0|this.words[t];e+=977*i,this.words[t]=67108863&e,e=64*i+(e/67108864|0)}return 0===this.words[this.length-1]&&(this.length-=1,0===this.words[this.length-1]&&(this.length-=1)),this},n.prototype.redIReduce=function(){this.isplit(n.tmp).imulK().iadd(n.tmp),this.bitLengthGT256()&&this.isplit(n.tmp).imulK().iadd(n.tmp);var t=this.ucmp(n.p);return 0===t?(this.words[0]=0,this.length=1):t>0?this.isub(n.p):this.strip(),this},n.prototype.redNeg=function(){return this.isZero()?n.fromNumber(0):n.p.sub(this)},n.prototype.redAdd=function(t){return this.clone().redIAdd(t)},n.prototype.redIAdd=function(t){return this.iadd(t),this.ucmp(n.p)>=0&&this.isub(n.p),this},n.prototype.redIAdd7=function(){return this.iuaddn(7),this.ucmp(n.p)>=0&&this.isub(n.p),this},n.prototype.redSub=function(t){return this.clone().redISub(t)},n.prototype.redISub=function(t){return this.isub(t),0!==this.negative&&this.iadd(n.p),this},n.prototype.redMul=function(t){return this.umul(t).redIReduce()},n.prototype.redSqr=function(){return this.umul(this).redIReduce()},n.prototype.redSqrt=function(){if(this.isZero())return this.clone();for(var t=this.redSqr(),e=t.redSqr(),i=e.redSqr().redMul(e),s=i.redMul(t),r=s.redMul(this),n=r,o=0;o<54;++o)n=n.redSqr().redSqr().redSqr().redSqr().redMul(r);for(n=n.redSqr().redSqr().redSqr().redSqr().redMul(s),o=0;o<5;++o)n=n.redSqr().redSqr().redSqr().redSqr().redMul(r);return 0===(n=(n=n.redSqr().redSqr().redSqr().redSqr().redMul(i)).redSqr().redSqr().redSqr().redSqr().redSqr().redSqr().redMul(i)).redSqr().ucmp(this)?n:null},n.prototype.redInvm=function(){for(var t,e=this.clone(),i=n.p.clone(),s=n.fromNumber(1),r=n.fromNumber(0);e.gtOne()&&i.gtOne();){for(var o=0,a=1;0==(e.words[0]&a)&&o<26;++o,a<<=1);if(o>0)for(e.ishrn(o);o-- >0;)s.isOdd()&&s.iadd(n.p),s.ishrn(1);for(var h=0,l=1;0==(i.words[0]&l)&&h<26;++h,l<<=1);if(h>0)for(i.ishrn(h);h-- >0;)r.isOdd()&&r.iadd(n.p),r.ishrn(1);e.ucmp(i)>=0?(e.isub(i),s.isub(r)):(i.isub(e),r.isub(s))}return 0!==(t=1===e.length&&1===e.words[0]?s:r).negative&&t.iadd(n.p),0!==t.negative?(t.negative=0,t.redIReduce().redNeg()):t.redIReduce()},n.prototype.getNAF=function(t){for(var e=[],i=1<<t+1,s=i-1,r=i>>1,n=this.clone();!n.isZero();){for(var o=0,a=1;0==(n.words[0]&a)&&o<26;++o,a<<=1)e.push(0);if(0!==o)n.ishrn(o);else{var h=n.words[0]&s;if(h>=r)e.push(r-h),n.iuaddn(h-r).ishrn(1);else if(e.push(h),n.words[0]-=h,!n.isZero()){for(o=t-1;o>0;--o)e.push(0);n.ishrn(t)}}}return e},n.prototype.inspect=function(){if(this.isZero())return"0";for(var t=this.toBuffer().toString("hex"),e=0;"0"===t[e];++e);return t.slice(e)},n.n=n.fromBuffer(s.from("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141","hex")),n.nh=n.n.clone().ishrn(1),n.nc=n.fromBuffer(s.from("000000000000000000000000000000014551231950B75FC4402DA1732FC9BEBF","hex")),n.p=n.fromBuffer(s.from("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F","hex")),n.psn=n.p.sub(n.n),n.tmp=new n,n.tmp.words=new Array(10),n.fromNumber(1).words[3]=0,t.exports=n},function(t,e,i){"use strict";(function(e){!e.version||0===e.version.indexOf("v0.")||0===e.version.indexOf("v1.")&&0!==e.version.indexOf("v1.8.")?t.exports={nextTick:function(t,i,s,r){if("function"!=typeof t)throw new TypeError('"callback" argument must be a function');var n,o,a=arguments.length;switch(a){case 0:case 1:return e.nextTick(t);case 2:return e.nextTick(function(){t.call(null,i)});case 3:return e.nextTick(function(){t.call(null,i,s)});case 4:return e.nextTick(function(){t.call(null,i,s,r)});default:for(n=new Array(a-1),o=0;o<n.length;)n[o++]=arguments[o];return e.nextTick(function(){t.apply(null,n)})}}}:t.exports=e}).call(this,i(15))},function(t,e,i){"use strict";(function(e){
/*!
 * coin.js - coin object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(5),o=i(19),a=i(16),h=i(8),l=i(3);class u extends a{constructor(t){super(),this.version=1,this.height=-1,this.coinbase=!1,this.hash=l.NULL_HASH,this.index=0,t&&this.fromOptions(t)}fromOptions(t){return s(t,"Coin data is required."),null!=t.version&&(s(t.version>>>0===t.version,"Version must be a uint32."),this.version=t.version),null!=t.height&&(-1!==t.height?(s(t.height>>>0===t.height,"Height must be a uint32."),this.height=t.height):this.height=-1),null!=t.value&&(s(Number.isSafeInteger(t.value)&&t.value>=0,"Value must be a uint64."),this.value=t.value),t.script&&this.script.fromOptions(t.script),null!=t.coinbase&&(s("boolean"==typeof t.coinbase,"Coinbase must be a boolean."),this.coinbase=t.coinbase),null!=t.hash&&(s("string"==typeof t.hash,"Hash must be a string."),this.hash=t.hash),null!=t.index&&(s(t.index>>>0===t.index,"Index must be a uint32."),this.index=t.index),this}static fromOptions(t){return(new this).fromOptions(t)}clone(){s(!1,"Coins are not cloneable.")}getDepth(t){return s("number"==typeof t,"Must pass a height."),-1===this.height?0:-1===t?0:t<this.height?0:t-this.height+1}toKey(){return this.hash+this.index}fromKey(t){return s(t.length>64),this.hash=t.slice(0,64),this.index=parseInt(t.slice(64),10),this}static fromKey(t){return(new this).fromKey(t)}rhash(){return n.revHex(this.hash)}txid(){return this.rhash()}inspect(){return{type:this.getType(),version:this.version,height:this.height,value:o.btc(this.value),script:this.script,coinbase:this.coinbase,hash:this.hash?n.revHex(this.hash):null,index:this.index,address:this.getAddress()}}toJSON(){return this.getJSON()}getJSON(t,e){let i=this.getAddress();return t=h.get(t),i&&(i=i.toString(t)),{version:this.version,height:this.height,value:this.value,script:this.script.toJSON(),address:i,coinbase:this.coinbase,hash:e?void 0:this.rhash(),index:e?void 0:this.index}}fromJSON(t){return s(t,"Coin data required."),s(t.version>>>0===t.version,"Version must be a uint32."),s(-1===t.height||t.height>>>0===t.height,"Height must be a uint32."),s(Number.isSafeInteger(t.value)&&t.value>=0,"Value must be a uint64."),s("boolean"==typeof t.coinbase,"Coinbase must be a boolean."),this.version=t.version,this.height=t.height,this.value=t.value,this.script.fromJSON(t.script),this.coinbase=t.coinbase,null!=t.hash&&(s("string"==typeof t.hash,"Hash must be a string."),s(64===t.hash.length,"Hash must be a string."),s(t.index>>>0===t.index,"Index must be a uint32."),this.hash=n.revHex(t.hash),this.index=t.index),this}static fromJSON(t){return(new this).fromJSON(t)}getSize(){return 17+this.script.getVarSize()}toWriter(t){let e=this.height;return-1===e&&(e=2147483647),t.writeU32(this.version),t.writeU32(e),t.writeI64(this.value),t.writeVarBytes(this.script.toRaw()),t.writeU8(this.coinbase?1:0),t}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}fromReader(t){return this.version=t.readU32(),this.height=t.readU32(),this.value=t.readI64(),this.script.fromRaw(t.readVarBytes()),this.coinbase=1===t.readU8(),2147483647===this.height&&(this.height=-1),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}fromTX(t,e,i){return s("number"==typeof e),s("number"==typeof i),s(e>=0&&e<t.outputs.length),this.version=t.version,this.height=i,this.value=t.outputs[e].value,this.script=t.outputs[e].script,this.coinbase=t.isCoinbase(),this.hash=t.hash("hex"),this.index=e,this}static fromTX(t,e,i){return(new this).fromTX(t,e,i)}static isCoin(t){return t instanceof u}}t.exports=u}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * coinentry.js - coin entry object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(2),n=i(46),o=i(16),a=i(117),{encoding:h}=r,l=2147483647;t.exports=class{constructor(){this.version=1,this.height=-1,this.coinbase=!1,this.output=new o,this.spent=!1,this.raw=null}toOutput(){return this.output}toCoin(t){const e=new n;return e.version=this.version,e.height=this.height,e.coinbase=this.coinbase,e.script=this.output.script,e.value=this.output.value,e.hash=t.hash,e.index=t.index,e}fromOutput(t){return this.output=t,this}static fromOutput(t){return(new this).fromOutput(t)}fromCoin(t){return this.version=t.version,this.height=t.height,this.coinbase=t.coinbase,this.output.script=t.script,this.output.value=t.value,this}static fromCoin(t){return(new this).fromCoin(t)}fromTX(t,e,i){return s("number"==typeof e),s("number"==typeof i),s(e>=0&&e<t.outputs.length),this.version=t.version,this.height=i,this.coinbase=t.isCoinbase(),this.output=t.outputs[e],this}static fromTX(t,e,i){return(new this).fromTX(t,e,i)}getSize(){if(this.raw)return this.raw.length;let t=0;return t+=h.sizeVarint(this.version),(t+=4)+a.size(this.output)}toWriter(t){if(this.raw)return t.writeBytes(this.raw),t;let e=this.height,i=0;return this.coinbase&&(i|=1),-1===e&&(e=l),i|=e<<1,t.writeVarint(this.version),t.writeU32(i),a.pack(this.output,t),t}toRaw(){if(this.raw)return this.raw;const t=this.getSize(),e=r.write(t);return this.toWriter(e),this.raw=e.render(),this.raw}fromReader(t){const e=t.readVarint(),i=t.readU32();let s=i>>>1;return s===l&&(s=-1),this.version=e,this.coinbase=0!=(1&i),this.height=s,a.unpack(this.output,t),this}static fromReader(t){return(new this).fromReader(t)}fromRaw(t){return this.fromReader(r.read(t)),this.raw=t,this}static fromRaw(t){return(new this).fromRaw(t)}}},function(t,e,i){(function(t,s){var r=/%[sdj%]/g;e.format=function(t){if(!w(t)){for(var e=[],i=0;i<arguments.length;i++)e.push(a(arguments[i]));return e.join(" ")}i=1;for(var s=arguments,n=s.length,o=String(t).replace(r,function(t){if("%%"===t)return"%";if(i>=n)return t;switch(t){case"%s":return String(s[i++]);case"%d":return Number(s[i++]);case"%j":try{return JSON.stringify(s[i++])}catch(t){return"[Circular]"}default:return t}}),h=s[i];i<n;h=s[++i])g(h)||!v(h)?o+=" "+h:o+=" "+a(h);return o},e.deprecate=function(i,r){if(y(t.process))return function(){return e.deprecate(i,r).apply(this,arguments)};if(!0===s.noDeprecation)return i;var n=!1;return function(){if(!n){if(s.throwDeprecation)throw new Error(r);s.traceDeprecation?console.trace(r):console.error(r),n=!0}return i.apply(this,arguments)}};var n,o={};function a(t,i){var s={seen:[],stylize:l};return arguments.length>=3&&(s.depth=arguments[2]),arguments.length>=4&&(s.colors=arguments[3]),p(i)?s.showHidden=i:i&&e._extend(s,i),y(s.showHidden)&&(s.showHidden=!1),y(s.depth)&&(s.depth=2),y(s.colors)&&(s.colors=!1),y(s.customInspect)&&(s.customInspect=!0),s.colors&&(s.stylize=h),u(s,t,s.depth)}function h(t,e){var i=a.styles[e];return i?"["+a.colors[i][0]+"m"+t+"["+a.colors[i][1]+"m":t}function l(t,e){return t}function u(t,i,s){if(t.customInspect&&i&&R(i.inspect)&&i.inspect!==e.inspect&&(!i.constructor||i.constructor.prototype!==i)){var r=i.inspect(s,t);return w(r)||(r=u(t,r,s)),r}var n=function(t,e){if(y(e))return t.stylize("undefined","undefined");if(w(e)){var i="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.stylize(i,"string")}return m(e)?t.stylize(""+e,"number"):p(e)?t.stylize(""+e,"boolean"):g(e)?t.stylize("null","null"):void 0}(t,i);if(n)return n;var o=Object.keys(i),a=function(t){var e={};return o.forEach(function(t,i){e[t]=!0}),e}();if(t.showHidden&&(o=Object.getOwnPropertyNames(i)),E(i)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return c(i);if(0===o.length){if(R(i)){var h=i.name?": "+i.name:"";return t.stylize("[Function"+h+"]","special")}if(b(i))return t.stylize(RegExp.prototype.toString.call(i),"regexp");if(k(i))return t.stylize(Date.prototype.toString.call(i),"date");if(E(i))return c(i)}var l,v="",S=!1,_=["{","}"];return d(i)&&(S=!0,_=["[","]"]),R(i)&&(v=" [Function"+(i.name?": "+i.name:"")+"]"),b(i)&&(v=" "+RegExp.prototype.toString.call(i)),k(i)&&(v=" "+Date.prototype.toUTCString.call(i)),E(i)&&(v=" "+c(i)),0!==o.length||S&&0!=i.length?s<0?b(i)?t.stylize(RegExp.prototype.toString.call(i),"regexp"):t.stylize("[Object]","special"):(t.seen.push(i),l=S?function(t,e,i,s,r){for(var n=[],o=0,a=e.length;o<a;++o)I(e,String(o))?n.push(f(t,e,i,s,String(o),!0)):n.push("");return r.forEach(function(r){r.match(/^\d+$/)||n.push(f(t,e,i,s,r,!0))}),n}(t,i,s,a,o):o.map(function(e){return f(t,i,s,a,e,S)}),t.seen.pop(),function(t,e,i){return t.reduce(function(t,e){return e.indexOf("\n"),t+e.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60?i[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+i[1]:i[0]+e+" "+t.join(", ")+" "+i[1]}(l,v,_)):_[0]+v+_[1]}function c(t){return"["+Error.prototype.toString.call(t)+"]"}function f(t,e,i,s,r,n){var o,a,h;if((h=Object.getOwnPropertyDescriptor(e,r)||{value:e[r]}).get?a=h.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):h.set&&(a=t.stylize("[Setter]","special")),I(s,r)||(o="["+r+"]"),a||(t.seen.indexOf(h.value)<0?(a=g(i)?u(t,h.value,null):u(t,h.value,i-1)).indexOf("\n")>-1&&(a=n?a.split("\n").map(function(t){return"  "+t}).join("\n").substr(2):"\n"+a.split("\n").map(function(t){return"   "+t}).join("\n")):a=t.stylize("[Circular]","special")),y(o)){if(n&&r.match(/^\d+$/))return a;(o=JSON.stringify(""+r)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(o=o.substr(1,o.length-2),o=t.stylize(o,"name")):(o=o.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),o=t.stylize(o,"string"))}return o+": "+a}function d(t){return Array.isArray(t)}function p(t){return"boolean"==typeof t}function g(t){return null===t}function m(t){return"number"==typeof t}function w(t){return"string"==typeof t}function y(t){return void 0===t}function b(t){return v(t)&&"[object RegExp]"===S(t)}function v(t){return"object"==typeof t&&null!==t}function k(t){return v(t)&&"[object Date]"===S(t)}function E(t){return v(t)&&("[object Error]"===S(t)||t instanceof Error)}function R(t){return"function"==typeof t}function S(t){return Object.prototype.toString.call(t)}function _(t){return t<10?"0"+t.toString(10):t.toString(10)}e.debuglog=function(t){if(y(n)&&(n=s.env.NODE_DEBUG||""),t=t.toUpperCase(),!o[t])if(new RegExp("\\b"+t+"\\b","i").test(n)){var i=s.pid;o[t]=function(){var s=e.format.apply(e,arguments);console.error("%s %d: %s",t,i,s)}}else o[t]=function(){};return o[t]},e.inspect=a,a.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},a.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},e.isArray=d,e.isBoolean=p,e.isNull=g,e.isNullOrUndefined=function(t){return null==t},e.isNumber=m,e.isString=w,e.isSymbol=function(t){return"symbol"==typeof t},e.isUndefined=y,e.isRegExp=b,e.isObject=v,e.isDate=k,e.isError=E,e.isFunction=R,e.isPrimitive=function(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t},e.isBuffer=i(195);var x=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function I(t,e){return Object.prototype.hasOwnProperty.call(t,e)}e.log=function(){var t,i;console.log("%s - %s",(i=[_((t=new Date).getHours()),_(t.getMinutes()),_(t.getSeconds())].join(":"),[t.getDate(),x[t.getMonth()],i].join(" ")),e.format.apply(e,arguments))},e.inherits=i(6),e._extend=function(t,e){if(!e||!v(e))return t;for(var i=Object.keys(e),s=i.length;s--;)t[i[s]]=e[i[s]];return t}}).call(this,i(10),i(15))},function(t,e,i){"use strict";
/*!
 * packets.js - worker packets for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(2),n=i(11),o=i(16),a=i(40),h=i(14),l=i(39),u=i(25),c=i(37),{encoding:f}=r,d={ENV:0,EVENT:1,LOG:2,ERROR:3,ERRORRESULT:4,CHECK:5,CHECKRESULT:6,SIGN:7,SIGNRESULT:8,CHECKINPUT:9,CHECKINPUTRESULT:10,SIGNINPUT:11,SIGNINPUTRESULT:12,ECVERIFY:13,ECVERIFYRESULT:14,ECSIGN:15,ECSIGNRESULT:16,MINE:17,MINERESULT:18,SCRYPT:19,SCRYPTRESULT:20};class p{constructor(){this.id=++p.id>>>0,this.cmd=-1}getSize(){throw new Error("Abstract method.")}toWriter(){throw new Error("Abstract method.")}fromRaw(){throw new Error("Abstract method.")}static fromRaw(){throw new Error("Abstract method.")}}p.id=0;class g extends p{constructor(t){super(),this.cmd=d.ENV,this.env=t||{},this.json=JSON.stringify(this.env)}getSize(){return f.sizeVarString(this.json,"utf8")}toWriter(t){return t.writeVarString(this.json,"utf8"),t}fromRaw(t){const e=r.read(t,!0);return this.json=e.readVarString("utf8"),this.env=JSON.parse(this.json),this}static fromRaw(t){return(new g).fromRaw(t)}}class m extends p{constructor(t){super(),this.cmd=d.EVENT,this.items=t||[],this.json=JSON.stringify(this.items)}getSize(){return f.sizeVarString(this.json,"utf8")}toWriter(t){return t.writeVarString(this.json,"utf8"),t}fromRaw(t){const e=r.read(t,!0);return this.json=e.readVarString("utf8"),this.items=JSON.parse(this.json),this}static fromRaw(t){return(new m).fromRaw(t)}}class w extends p{constructor(t){super(),this.cmd=d.LOG,this.text=t||""}getSize(){return f.sizeVarString(this.text,"utf8")}toWriter(t){return t.writeVarString(this.text,"utf8"),t}fromRaw(t){const e=r.read(t,!0);return this.text=e.readVarString("utf8"),this}static fromRaw(t){return(new w).fromRaw(t)}}class y extends p{constructor(t){super(),this.cmd=d.ERROR,this.error=t||new Error}getSize(){const t=this.error;let e=0;switch(e+=f.sizeVarString(L(t.message),"utf8"),e+=f.sizeVarString(L(t.stack),"utf8"),e+=f.sizeVarString(L(t.type),"utf8"),typeof t.code){case"number":e+=1,e+=4;break;case"string":e+=1,e+=f.sizeVarString(t.code,"utf8");break;default:e+=1}return e}toWriter(t){const e=this.error;switch(t.writeVarString(L(e.message),"utf8"),t.writeVarString(L(e.stack),"utf8"),t.writeVarString(L(e.type),"utf8"),typeof e.code){case"number":t.writeU8(2),t.writeI32(e.code);break;case"string":t.writeU8(1),t.writeVarString(e.code,"utf8");break;default:t.writeU8(0)}return t}fromRaw(t){const e=r.read(t,!0),i=this.error;switch(i.message=e.readVarString("utf8"),i.stack=e.readVarString("utf8"),i.type=e.readVarString("utf8"),e.readU8()){case 2:i.code=e.readI32();break;case 1:i.code=e.readVarString("utf8");break;default:i.code=null}return this}static fromRaw(t){return(new y).fromRaw(t)}}class b extends y{constructor(t){super(t),this.cmd=d.ERRORRESULT}static fromRaw(t){return(new b).fromRaw(t)}}class v extends p{constructor(t,e,i){super(),this.cmd=d.CHECK,this.tx=t||null,this.view=e||null,this.flags=null!=i?i:null}getSize(){return this.tx.getSize()+this.view.getSize(this.tx)+4}toWriter(t){return this.tx.toWriter(t),this.view.toWriter(t,this.tx),t.writeI32(null!=this.flags?this.flags:-1),t}fromRaw(t){const e=r.read(t,!0);return this.tx=h.fromReader(e),this.view=u.fromReader(e,this.tx),this.flags=e.readI32(),-1===this.flags&&(this.flags=null),this}static fromRaw(t){return(new v).fromRaw(t)}}class k extends p{constructor(t){super(),this.cmd=d.CHECKRESULT,this.error=t||null}getSize(){const t=this.error;let e=0;return t?(e+=1,e+=f.sizeVarString(L(t.message),"utf8"),e+=f.sizeVarString(L(t.stack),"utf8"),e+=f.sizeVarString(L(t.code),"utf8"),e+=1,e+=4):e+=1}toWriter(t){const e=this.error;return e?(t.writeU8(1),t.writeVarString(L(e.message),"utf8"),t.writeVarString(L(e.stack),"utf8"),t.writeVarString(L(e.code),"utf8"),t.writeU8(-1===e.op?255:e.op),t.writeU32(-1===e.ip?4294967295:e.ip),t):(t.writeU8(0),t)}fromRaw(t){const e=r.read(t,!0);if(0===e.readU8())return this;const i=new c("");return i.message=e.readVarString("utf8"),i.stack=e.readVarString("utf8"),i.code=e.readVarString("utf8"),i.op=e.readU8(),i.ip=e.readU32(),255===i.op&&(i.op=-1),4294967295===i.ip&&(i.ip=-1),this.error=i,this}static fromRaw(t){return(new k).fromRaw(t)}}class E extends p{constructor(t,e,i){super(),this.cmd=d.SIGN,this.tx=t||null,this.rings=e||[],this.type=null!=i?i:1}getSize(){let t=0;t+=this.tx.getSize(),t+=this.tx.view.getSize(this.tx),t+=f.sizeVarint(this.rings.length);for(const e of this.rings)t+=e.getSize();return t+1}toWriter(t){this.tx.toWriter(t),this.tx.view.toWriter(t,this.tx),t.writeVarint(this.rings.length);for(const e of this.rings)e.toWriter(t);return t.writeU8(this.type),t}fromRaw(t){const e=r.read(t,!0);this.tx=a.fromReader(e),this.tx.view.fromReader(e,this.tx);const i=e.readVarint();for(let t=0;t<i;t++){const t=l.fromReader(e);this.rings.push(t)}return this.type=e.readU8(),this}static fromRaw(t){return(new E).fromRaw(t)}}class R extends p{constructor(t,e,i){super(),this.cmd=d.SIGNRESULT,this.total=t||0,this.script=i||[]}fromTX(t,e){this.total=e;for(const e of t.inputs)this.script.push(e.script);return this}static fromTX(t,e){return(new R).fromTX(t,e)}getSize(){let t=0;t+=f.sizeVarint(this.total),t+=f.sizeVarint(this.script.length);for(let e=0;e<this.script.length;e++)t+=this.script[e].getVarSize();return t}toWriter(t){t.writeVarint(this.total),t.writeVarint(this.script.length);for(let e=0;e<this.script.length;e++)this.script[e].toWriter(t);return t}inject(t){s(this.script.length===t.inputs.length);for(let e=0;e<t.inputs.length;e++)t.inputs[e].script=this.script[e]}fromRaw(t){const e=r.read(t,!0);this.total=e.readVarint();const i=e.readVarint();for(let t=0;t<i;t++)this.script.push(n.fromReader(e));return this}static fromRaw(t){return(new R).fromRaw(t)}}class S extends p{constructor(t,e,i,s){super(),this.cmd=d.CHECKINPUT,this.tx=t||null,this.index=e,this.coin=i||null,this.flags=null!=s?s:null}getSize(){let t=0;return t+=this.tx.getSize(),t+=f.sizeVarint(this.index),t+=f.sizeVarint(this.coin.value),(t+=this.coin.script.getVarSize())+4}toWriter(t){return this.tx.toWriter(t),t.writeVarint(this.index),t.writeVarint(this.coin.value),this.coin.script.toWriter(t),t.writeI32(null!=this.flags?this.flags:-1),t}fromRaw(t){const e=r.read(t,!0);return this.tx=h.fromReader(e),this.index=e.readVarint(),this.coin=new o,this.coin.value=e.readVarint(),this.coin.script.fromReader(e),this.flags=e.readI32(),-1===this.flags&&(this.flags=null),this}static fromRaw(t){return(new S).fromRaw(t)}}class _ extends k{constructor(t){super(t),this.cmd=d.CHECKINPUTRESULT}static fromRaw(t){return(new _).fromRaw(t)}}class x extends p{constructor(t,e,i,s,r){super(),this.cmd=d.SIGNINPUT,this.tx=t||null,this.index=e,this.coin=i||null,this.ring=s||null,this.type=null!=r?r:1}getSize(){let t=0;return t+=this.tx.getSize(),t+=f.sizeVarint(this.index),t+=f.sizeVarint(this.coin.value),t+=this.coin.script.getVarSize(),(t+=this.ring.getSize())+1}toWriter(t){return this.tx.toWriter(t),t.writeVarint(this.index),t.writeVarint(this.coin.value),this.coin.script.toWriter(t),this.ring.toWriter(t),t.writeU8(this.type),t}fromRaw(t){const e=r.read(t,!0);return this.tx=a.fromReader(e),this.index=e.readVarint(),this.coin=new o,this.coin.value=e.readVarint(),this.coin.script.fromReader(e),this.ring=l.fromReader(e),this.type=e.readU8(),this}static fromRaw(t){return(new x).fromRaw(t)}}class I extends p{constructor(t,e){super(),this.cmd=d.SIGNINPUTRESULT,this.value=t||!1,this.script=e||null}fromTX(t,e,i){const r=t.inputs[e];return s(r),this.value=i,this.script=r.script,this}static fromTX(t,e,i){return(new I).fromTX(t,e,i)}getSize(){return 1+this.script.getVarSize()}toWriter(t){return t.writeU8(this.value?1:0),this.script.toWriter(t),t}inject(t,e){const i=t.inputs[e];s(i),i.script=this.script}fromRaw(t){const e=r.read(t,!0);return this.value=1===e.readU8(),this.script=n.fromReader(e),this}static fromRaw(t){return(new I).fromRaw(t)}}class A extends p{constructor(t,e,i){super(),this.cmd=d.ECVERIFY,this.msg=t||null,this.sig=e||null,this.key=i||null}getSize(){let t=0;return t+=f.sizeVarBytes(this.msg),(t+=f.sizeVarBytes(this.sig))+f.sizeVarBytes(this.key)}toWriter(t){return t.writeVarBytes(this.msg),t.writeVarBytes(this.sig),t.writeVarBytes(this.key),t}fromRaw(t){const e=r.read(t,!0);return this.msg=e.readVarBytes(),this.sig=e.readVarBytes(),this.key=e.readVarBytes(),this}static fromRaw(t){return(new A).fromRaw(t)}}class O extends p{constructor(t){super(),this.cmd=d.ECVERIFYRESULT,this.value=t}getSize(){return 1}toWriter(t){return t.writeU8(this.value?1:0),t}fromRaw(t){const e=r.read(t,!0);return this.value=1===e.readU8(),this}static fromRaw(t){return(new O).fromRaw(t)}}class B extends p{constructor(t,e){super(),this.cmd=d.ECSIGN,this.msg=t||null,this.key=e||null}getSize(){let t=0;return(t+=f.sizeVarBytes(this.msg))+f.sizeVarBytes(this.key)}toWriter(t){return t.writeVarBytes(this.msg),t.writeVarBytes(this.key),t}fromRaw(t){const e=r.read(t,!0);return this.msg=e.readVarBytes(),this.key=e.readVarBytes(),this}static fromRaw(t){return(new B).fromRaw(t)}}class P extends p{constructor(t){super(),this.cmd=d.ECSIGNRESULT,this.sig=t}getSize(){return f.sizeVarBytes(this.sig)}toWriter(t){return t.writeVarBytes(this.sig),t}fromRaw(t){const e=r.read(t,!0);return this.sig=e.readVarBytes(),this}static fromRaw(t){return(new P).fromRaw(t)}}class N extends p{constructor(t,e,i,s){super(),this.cmd=d.MINE,this.data=t||null,this.target=e||null,this.min=null!=i?i:-1,this.max=null!=s?s:-1}getSize(){return 120}toWriter(t){return t.writeBytes(this.data),t.writeBytes(this.target),t.writeU32(this.min),t.writeU32(this.max),t}fromRaw(t){const e=r.read(t,!0);return this.data=e.readBytes(80),this.target=e.readBytes(32),this.min=e.readU32(),this.max=e.readU32(),this}static fromRaw(t){return(new N).fromRaw(t)}}class T extends p{constructor(t){super(),this.cmd=d.MINERESULT,this.nonce=null!=t?t:-1}getSize(){return 5}toWriter(t){return t.writeU8(-1!==this.nonce?1:0),t.writeU32(this.nonce),t}fromRaw(t){const e=r.read(t,!0);return this.nonce=-1,1===e.readU8()&&(this.nonce=e.readU32()),this}static fromRaw(t){return(new T).fromRaw(t)}}class M extends p{constructor(t,e,i,s,r,n){super(),this.cmd=d.SCRYPT,this.passwd=t||null,this.salt=e||null,this.N=null!=i?i:-1,this.r=null!=s?s:-1,this.p=null!=r?r:-1,this.len=null!=n?n:-1}getSize(){let t=0;return t+=f.sizeVarBytes(this.passwd),(t+=f.sizeVarBytes(this.salt))+16}toWriter(t){return t.writeVarBytes(this.passwd),t.writeVarBytes(this.salt),t.writeU32(this.N),t.writeU32(this.r),t.writeU32(this.p),t.writeU32(this.len),t}fromRaw(t){const e=r.read(t,!0);return this.passwd=e.readVarBytes(),this.salt=e.readVarBytes(),this.N=e.readU32(),this.r=e.readU32(),this.p=e.readU32(),this.len=e.readU32(),this}static fromRaw(t){return(new M).fromRaw(t)}}class C extends p{constructor(t){super(),this.cmd=d.SCRYPTRESULT,this.key=t||null}getSize(){return f.sizeVarBytes(this.key)}toWriter(t){return t.writeVarBytes(this.key),t}fromRaw(t){const e=r.read(t,!0);return this.key=e.readVarBytes(),this}static fromRaw(t){return(new C).fromRaw(t)}}function L(t){return"string"!=typeof t?"":t}e.types=d,e.EnvPacket=g,e.EventPacket=m,e.LogPacket=w,e.ErrorPacket=y,e.ErrorResultPacket=b,e.CheckPacket=v,e.CheckResultPacket=k,e.SignPacket=E,e.SignResultPacket=R,e.CheckInputPacket=S,e.CheckInputResultPacket=_,e.SignInputPacket=x,e.SignInputResultPacket=I,e.ECVerifyPacket=A,e.ECVerifyResultPacket=O,e.ECSignPacket=B,e.ECSignResultPacket=P,e.MinePacket=N,e.MineResultPacket=T,e.ScryptPacket=M,e.ScryptResultPacket=C},function(t,e,i){"use strict";
/*!
 * blgr.js - basic logger for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(325)},function(t,e,i){"use strict";(function(e){
/*!
 * block.js - block object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(5),o=i(9),a=i(327),h=i(3),l=i(64),u=i(14),c=i(63),f=i(42),d=i(8),{encoding:p}=r;class g extends l{constructor(t){super(),this.txs=[],this._raw=null,this._size=-1,t&&this.fromOptions(t)}fromOptions(t){if(this.parseOptions(t),t.txs){s(Array.isArray(t.txs));for(const e of t.txs)s(e instanceof u),this.txs.push(e)}}static fromOptions(t){return(new this).fromOptions(t)}refresh(t){if(this._refresh(),this._raw=null,this._size=-1,t)for(const t of this.txs)t.refresh()}toRaw(){return this.frame().data}toWriter(t){if(this.mutable)return this.writeNormal(t);const e=this.frame();return t.writeBytes(e.data),t}frame(){if(this.mutable)return s(!this._raw),this.frameNormal();if(this._raw){s(this._size>=0);const t=new m(this._size);return t.data=this._raw,t}const t=this.frameNormal();return this._raw=t.data,this._size=t.size,t}getSize(){return this.mutable?this.getNormalSizes().size:this.frame().size}hasTX(t){return-1!==this.indexOf(t)}indexOf(t){for(let e=0;e<this.txs.length;e++)if(this.txs[e].hash("hex")===t)return e;return-1}createMerkleRoot(t){const e=[];for(const t of this.txs)e.push(t.hash());const[i,s]=a.createRoot(o,e);return s?null:"hex"===t?i.toString("hex"):i}getMerkleRoot(t){return"hex"===t?this.merkleRoot:e.from(this.merkleRoot,"hex")}verifyBody(){const[t]=this.checkBody();return t}checkBody(){const t=this.createMerkleRoot("hex");if(!t)return[!1,"bad-txns-duplicate",100];if(this.merkleRoot!==t)return[!1,"bad-txnmrklroot",100];if(0===this.txs.length||this.txs.length>h.MAX_FORK_BLOCK_SIZE/10||this.getSize()>h.MAX_FORK_BLOCK_SIZE)return[!1,"bad-blk-length",100];if(0===this.txs.length||!this.txs[0].isCoinbase())return[!1,"bad-cb-missing",100];const e=this.getSize();let i=0;for(let t=0;t<this.txs.length;t++){const s=this.txs[t];if(t>0&&s.isCoinbase())return[!1,"bad-cb-multiple",100];const[r,n,o]=s.checkSanity();if(!r)return[r,n,o];if((i+=s.getLegacySigops())>h.maxBlockSigops(e))return[!1,"bad-blk-sigops",100]}return[!0,"valid",0]}getCoinbaseHeight(){if(this.version<2)return-1;if(0===this.txs.length)return-1;const t=this.txs[0];return 0===t.inputs.length?-1:t.inputs[0].script.getCoinbaseHeight()}getClaimed(){return s(this.txs.length>0),s(this.txs[0].isCoinbase()),this.txs[0].getOutputValue()}getPrevout(){const t=Object.create(null);for(let e=1;e<this.txs.length;e++){const i=this.txs[e];for(const e of i.inputs)t[e.prevout.hash]=!0}return Object.keys(t)}inspect(){return this.format()}format(t,e){return{hash:this.rhash(),height:null!=e?e:-1,size:this.getSize(),date:n.date(this.time),version:this.version.toString(16),prevBlock:n.revHex(this.prevBlock),merkleRoot:n.revHex(this.merkleRoot),time:this.time,bits:this.bits,nonce:this.nonce,txs:this.txs.map((e,i)=>e.format(t,null,i))}}toJSON(){return this.getJSON()}getJSON(t,e,i,s){return t=d.get(t),{hash:this.rhash(),height:i,depth:s,version:this.version,prevBlock:n.revHex(this.prevBlock),merkleRoot:n.revHex(this.merkleRoot),time:this.time,bits:this.bits,nonce:this.nonce,txs:this.txs.map((i,s)=>i.getJSON(t,e,null,s))}}fromJSON(t){s(t,"Block data is required."),s(Array.isArray(t.txs)),this.parseJSON(t);for(const e of t.txs)this.txs.push(u.fromJSON(e));return this}static fromJSON(t){return(new this).fromJSON(t)}fromReader(t){t.start(),this.readHead(t);const e=t.readVarint();for(let i=0;i<e;i++){const e=u.fromReader(t);this.txs.push(e)}return this.mutable||(this._raw=t.endData(),this._size=this._raw.length),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}toMerkle(t){return c.fromBlock(this,t)}writeNormal(t){this.writeHead(t),t.writeVarint(this.txs.length);for(const e of this.txs)e.toWriter(t);return t}frameNormal(){const t=this.getNormalSizes(),e=r.write(t.size);return this.writeNormal(e),t.data=e.render(),t}toHeaders(){return f.fromBlock(this)}getNormalSizes(){let t=0;t+=80,t+=p.sizeVarint(this.txs.length);for(const e of this.txs)t+=e.getSize();return new m(t,0)}static isBlock(t){return t instanceof g}}class m{constructor(t){this.data=null,this.size=t}}t.exports=g}).call(this,i(1).Buffer)},function(t,e,i){(function(t){!function(t,e){"use strict";function s(t,e){if(!t)throw new Error(e||"Assertion failed")}function r(t,e){t.super_=e;var i=function(){};i.prototype=e.prototype,t.prototype=new i,t.prototype.constructor=t}function n(t,e,i){if(n.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(i=e,e=10),this._init(t||0,e||10,i||"be"))}var o;"object"==typeof t?t.exports=n:e.BN=n,n.BN=n,n.wordSize=26;try{o=i(189).Buffer}catch(t){}function a(t,e,i){for(var s=0,r=Math.min(t.length,i),n=e;n<r;n++){var o=t.charCodeAt(n)-48;s<<=4,s|=o>=49&&o<=54?o-49+10:o>=17&&o<=22?o-17+10:15&o}return s}function h(t,e,i,s){for(var r=0,n=Math.min(t.length,i),o=e;o<n;o++){var a=t.charCodeAt(o)-48;r*=s,r+=a>=49?a-49+10:a>=17?a-17+10:a}return r}n.isBN=function(t){return t instanceof n||null!==t&&"object"==typeof t&&t.constructor.wordSize===n.wordSize&&Array.isArray(t.words)},n.max=function(t,e){return t.cmp(e)>0?t:e},n.min=function(t,e){return t.cmp(e)<0?t:e},n.prototype._init=function(t,e,i){if("number"==typeof t)return this._initNumber(t,e,i);if("object"==typeof t)return this._initArray(t,e,i);"hex"===e&&(e=16),s(e===(0|e)&&e>=2&&e<=36);var r=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&r++,16===e?this._parseHex(t,r):this._parseBase(t,e,r),"-"===t[0]&&(this.negative=1),this.strip(),"le"===i&&this._initArray(this.toArray(),e,i)},n.prototype._initNumber=function(t,e,i){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(s(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===i&&this._initArray(this.toArray(),e,i)},n.prototype._initArray=function(t,e,i){if(s("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,o,a=0;if("be"===i)for(r=t.length-1,n=0;r>=0;r-=3)o=t[r]|t[r-1]<<8|t[r-2]<<16,this.words[n]|=o<<a&67108863,this.words[n+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,n++);else if("le"===i)for(r=0,n=0;r<t.length;r+=3)o=t[r]|t[r+1]<<8|t[r+2]<<16,this.words[n]|=o<<a&67108863,this.words[n+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,n++);return this.strip()},n.prototype._parseHex=function(t,e){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var s,r,n=0;for(i=t.length-6,s=0;i>=e;i-=6)r=a(t,i,i+6),this.words[s]|=r<<n&67108863,this.words[s+1]|=r>>>26-n&4194303,(n+=24)>=26&&(n-=26,s++);i+6!==e&&(r=a(t,e,i+6),this.words[s]|=r<<n&67108863,this.words[s+1]|=r>>>26-n&4194303),this.strip()},n.prototype._parseBase=function(t,e,i){this.words=[0],this.length=1;for(var s=0,r=1;r<=67108863;r*=e)s++;s--,r=r/e|0;for(var n=t.length-i,o=n%s,a=Math.min(n,n-o)+i,l=0,u=i;u<a;u+=s)l=h(t,u,u+s,e),this.imuln(r),this.words[0]+l<67108864?this.words[0]+=l:this._iaddn(l);if(0!==o){var c=1;for(l=h(t,u,t.length,e),u=0;u<o;u++)c*=e;this.imuln(c),this.words[0]+l<67108864?this.words[0]+=l:this._iaddn(l)}},n.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},n.prototype.clone=function(){var t=new n(null);return this.copy(t),t},n.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},n.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},n.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},n.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var l=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],u=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],c=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,i){i.negative=e.negative^t.negative;var s=t.length+e.length|0;i.length=s,s=s-1|0;var r=0|t.words[0],n=0|e.words[0],o=r*n,a=67108863&o,h=o/67108864|0;i.words[0]=a;for(var l=1;l<s;l++){for(var u=h>>>26,c=67108863&h,f=Math.min(l,e.length-1),d=Math.max(0,l-t.length+1);d<=f;d++){var p=l-d|0;u+=(o=(r=0|t.words[p])*(n=0|e.words[d])+c)/67108864|0,c=67108863&o}i.words[l]=0|c,h=0|u}return 0!==h?i.words[l]=0|h:i.length--,i.strip()}n.prototype.toString=function(t,e){var i;if(t=t||10,e=0|e||1,16===t||"hex"===t){i="";for(var r=0,n=0,o=0;o<this.length;o++){var a=this.words[o],h=(16777215&(a<<r|n)).toString(16);i=0!=(n=a>>>24-r&16777215)||o!==this.length-1?l[6-h.length]+h+i:h+i,(r+=2)>=26&&(r-=26,o--)}for(0!==n&&(i=n.toString(16)+i);i.length%e!=0;)i="0"+i;return 0!==this.negative&&(i="-"+i),i}if(t===(0|t)&&t>=2&&t<=36){var f=u[t],d=c[t];i="";var p=this.clone();for(p.negative=0;!p.isZero();){var g=p.modn(d).toString(t);i=(p=p.idivn(d)).isZero()?g+i:l[f-g.length]+g+i}for(this.isZero()&&(i="0"+i);i.length%e!=0;)i="0"+i;return 0!==this.negative&&(i="-"+i),i}s(!1,"Base should be between 2 and 36")},n.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&s(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},n.prototype.toJSON=function(){return this.toString(16)},n.prototype.toBuffer=function(t,e){return s(void 0!==o),this.toArrayLike(o,t,e)},n.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},n.prototype.toArrayLike=function(t,e,i){var r=this.byteLength(),n=i||Math.max(1,r);s(r<=n,"byte array longer than desired length"),s(n>0,"Requested array length <= 0"),this.strip();var o,a,h="le"===e,l=new t(n),u=this.clone();if(h){for(a=0;!u.isZero();a++)o=u.andln(255),u.iushrn(8),l[a]=o;for(;a<n;a++)l[a]=0}else{for(a=0;a<n-r;a++)l[a]=0;for(a=0;!u.isZero();a++)o=u.andln(255),u.iushrn(8),l[n-a-1]=o}return l},Math.clz32?n.prototype._countBits=function(t){return 32-Math.clz32(t)}:n.prototype._countBits=function(t){var e=t,i=0;return e>=4096&&(i+=13,e>>>=13),e>=64&&(i+=7,e>>>=7),e>=8&&(i+=4,e>>>=4),e>=2&&(i+=2,e>>>=2),i+e},n.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,i=0;return 0==(8191&e)&&(i+=13,e>>>=13),0==(127&e)&&(i+=7,e>>>=7),0==(15&e)&&(i+=4,e>>>=4),0==(3&e)&&(i+=2,e>>>=2),0==(1&e)&&i++,i},n.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},n.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var i=this._zeroBits(this.words[e]);if(t+=i,26!==i)break}return t},n.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},n.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},n.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},n.prototype.isNeg=function(){return 0!==this.negative},n.prototype.neg=function(){return this.clone().ineg()},n.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},n.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},n.prototype.ior=function(t){return s(0==(this.negative|t.negative)),this.iuor(t)},n.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},n.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},n.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var i=0;i<e.length;i++)this.words[i]=this.words[i]&t.words[i];return this.length=e.length,this.strip()},n.prototype.iand=function(t){return s(0==(this.negative|t.negative)),this.iuand(t)},n.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},n.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},n.prototype.iuxor=function(t){var e,i;this.length>t.length?(e=this,i=t):(e=t,i=this);for(var s=0;s<i.length;s++)this.words[s]=e.words[s]^i.words[s];if(this!==e)for(;s<e.length;s++)this.words[s]=e.words[s];return this.length=e.length,this.strip()},n.prototype.ixor=function(t){return s(0==(this.negative|t.negative)),this.iuxor(t)},n.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},n.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},n.prototype.inotn=function(t){s("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),i=t%26;this._expand(e),i>0&&e--;for(var r=0;r<e;r++)this.words[r]=67108863&~this.words[r];return i>0&&(this.words[r]=~this.words[r]&67108863>>26-i),this.strip()},n.prototype.notn=function(t){return this.clone().inotn(t)},n.prototype.setn=function(t,e){s("number"==typeof t&&t>=0);var i=t/26|0,r=t%26;return this._expand(i+1),this.words[i]=e?this.words[i]|1<<r:this.words[i]&~(1<<r),this.strip()},n.prototype.iadd=function(t){var e,i,s;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(i=this,s=t):(i=t,s=this);for(var r=0,n=0;n<s.length;n++)e=(0|i.words[n])+(0|s.words[n])+r,this.words[n]=67108863&e,r=e>>>26;for(;0!==r&&n<i.length;n++)e=(0|i.words[n])+r,this.words[n]=67108863&e,r=e>>>26;if(this.length=i.length,0!==r)this.words[this.length]=r,this.length++;else if(i!==this)for(;n<i.length;n++)this.words[n]=i.words[n];return this},n.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},n.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var i,s,r=this.cmp(t);if(0===r)return this.negative=0,this.length=1,this.words[0]=0,this;r>0?(i=this,s=t):(i=t,s=this);for(var n=0,o=0;o<s.length;o++)n=(e=(0|i.words[o])-(0|s.words[o])+n)>>26,this.words[o]=67108863&e;for(;0!==n&&o<i.length;o++)n=(e=(0|i.words[o])+n)>>26,this.words[o]=67108863&e;if(0===n&&o<i.length&&i!==this)for(;o<i.length;o++)this.words[o]=i.words[o];return this.length=Math.max(this.length,o),i!==this&&(this.negative=1),this.strip()},n.prototype.sub=function(t){return this.clone().isub(t)};var d=function(t,e,i){var s,r,n,o=t.words,a=e.words,h=i.words,l=0,u=0|o[0],c=8191&u,f=u>>>13,d=0|o[1],p=8191&d,g=d>>>13,m=0|o[2],w=8191&m,y=m>>>13,b=0|o[3],v=8191&b,k=b>>>13,E=0|o[4],R=8191&E,S=E>>>13,_=0|o[5],x=8191&_,I=_>>>13,A=0|o[6],O=8191&A,B=A>>>13,P=0|o[7],N=8191&P,T=P>>>13,M=0|o[8],C=8191&M,L=M>>>13,U=0|o[9],D=8191&U,F=U>>>13,H=0|a[0],z=8191&H,V=H>>>13,K=0|a[1],j=8191&K,q=K>>>13,Y=0|a[2],X=8191&Y,W=Y>>>13,G=0|a[3],J=8191&G,$=G>>>13,Z=0|a[4],Q=8191&Z,tt=Z>>>13,et=0|a[5],it=8191&et,st=et>>>13,rt=0|a[6],nt=8191&rt,ot=rt>>>13,at=0|a[7],ht=8191&at,lt=at>>>13,ut=0|a[8],ct=8191&ut,ft=ut>>>13,dt=0|a[9],pt=8191&dt,gt=dt>>>13;i.negative=t.negative^e.negative,i.length=19;var mt=(l+(s=Math.imul(c,z))|0)+((8191&(r=(r=Math.imul(c,V))+Math.imul(f,z)|0))<<13)|0;l=((n=Math.imul(f,V))+(r>>>13)|0)+(mt>>>26)|0,mt&=67108863,s=Math.imul(p,z),r=(r=Math.imul(p,V))+Math.imul(g,z)|0,n=Math.imul(g,V);var wt=(l+(s=s+Math.imul(c,j)|0)|0)+((8191&(r=(r=r+Math.imul(c,q)|0)+Math.imul(f,j)|0))<<13)|0;l=((n=n+Math.imul(f,q)|0)+(r>>>13)|0)+(wt>>>26)|0,wt&=67108863,s=Math.imul(w,z),r=(r=Math.imul(w,V))+Math.imul(y,z)|0,n=Math.imul(y,V),s=s+Math.imul(p,j)|0,r=(r=r+Math.imul(p,q)|0)+Math.imul(g,j)|0,n=n+Math.imul(g,q)|0;var yt=(l+(s=s+Math.imul(c,X)|0)|0)+((8191&(r=(r=r+Math.imul(c,W)|0)+Math.imul(f,X)|0))<<13)|0;l=((n=n+Math.imul(f,W)|0)+(r>>>13)|0)+(yt>>>26)|0,yt&=67108863,s=Math.imul(v,z),r=(r=Math.imul(v,V))+Math.imul(k,z)|0,n=Math.imul(k,V),s=s+Math.imul(w,j)|0,r=(r=r+Math.imul(w,q)|0)+Math.imul(y,j)|0,n=n+Math.imul(y,q)|0,s=s+Math.imul(p,X)|0,r=(r=r+Math.imul(p,W)|0)+Math.imul(g,X)|0,n=n+Math.imul(g,W)|0;var bt=(l+(s=s+Math.imul(c,J)|0)|0)+((8191&(r=(r=r+Math.imul(c,$)|0)+Math.imul(f,J)|0))<<13)|0;l=((n=n+Math.imul(f,$)|0)+(r>>>13)|0)+(bt>>>26)|0,bt&=67108863,s=Math.imul(R,z),r=(r=Math.imul(R,V))+Math.imul(S,z)|0,n=Math.imul(S,V),s=s+Math.imul(v,j)|0,r=(r=r+Math.imul(v,q)|0)+Math.imul(k,j)|0,n=n+Math.imul(k,q)|0,s=s+Math.imul(w,X)|0,r=(r=r+Math.imul(w,W)|0)+Math.imul(y,X)|0,n=n+Math.imul(y,W)|0,s=s+Math.imul(p,J)|0,r=(r=r+Math.imul(p,$)|0)+Math.imul(g,J)|0,n=n+Math.imul(g,$)|0;var vt=(l+(s=s+Math.imul(c,Q)|0)|0)+((8191&(r=(r=r+Math.imul(c,tt)|0)+Math.imul(f,Q)|0))<<13)|0;l=((n=n+Math.imul(f,tt)|0)+(r>>>13)|0)+(vt>>>26)|0,vt&=67108863,s=Math.imul(x,z),r=(r=Math.imul(x,V))+Math.imul(I,z)|0,n=Math.imul(I,V),s=s+Math.imul(R,j)|0,r=(r=r+Math.imul(R,q)|0)+Math.imul(S,j)|0,n=n+Math.imul(S,q)|0,s=s+Math.imul(v,X)|0,r=(r=r+Math.imul(v,W)|0)+Math.imul(k,X)|0,n=n+Math.imul(k,W)|0,s=s+Math.imul(w,J)|0,r=(r=r+Math.imul(w,$)|0)+Math.imul(y,J)|0,n=n+Math.imul(y,$)|0,s=s+Math.imul(p,Q)|0,r=(r=r+Math.imul(p,tt)|0)+Math.imul(g,Q)|0,n=n+Math.imul(g,tt)|0;var kt=(l+(s=s+Math.imul(c,it)|0)|0)+((8191&(r=(r=r+Math.imul(c,st)|0)+Math.imul(f,it)|0))<<13)|0;l=((n=n+Math.imul(f,st)|0)+(r>>>13)|0)+(kt>>>26)|0,kt&=67108863,s=Math.imul(O,z),r=(r=Math.imul(O,V))+Math.imul(B,z)|0,n=Math.imul(B,V),s=s+Math.imul(x,j)|0,r=(r=r+Math.imul(x,q)|0)+Math.imul(I,j)|0,n=n+Math.imul(I,q)|0,s=s+Math.imul(R,X)|0,r=(r=r+Math.imul(R,W)|0)+Math.imul(S,X)|0,n=n+Math.imul(S,W)|0,s=s+Math.imul(v,J)|0,r=(r=r+Math.imul(v,$)|0)+Math.imul(k,J)|0,n=n+Math.imul(k,$)|0,s=s+Math.imul(w,Q)|0,r=(r=r+Math.imul(w,tt)|0)+Math.imul(y,Q)|0,n=n+Math.imul(y,tt)|0,s=s+Math.imul(p,it)|0,r=(r=r+Math.imul(p,st)|0)+Math.imul(g,it)|0,n=n+Math.imul(g,st)|0;var Et=(l+(s=s+Math.imul(c,nt)|0)|0)+((8191&(r=(r=r+Math.imul(c,ot)|0)+Math.imul(f,nt)|0))<<13)|0;l=((n=n+Math.imul(f,ot)|0)+(r>>>13)|0)+(Et>>>26)|0,Et&=67108863,s=Math.imul(N,z),r=(r=Math.imul(N,V))+Math.imul(T,z)|0,n=Math.imul(T,V),s=s+Math.imul(O,j)|0,r=(r=r+Math.imul(O,q)|0)+Math.imul(B,j)|0,n=n+Math.imul(B,q)|0,s=s+Math.imul(x,X)|0,r=(r=r+Math.imul(x,W)|0)+Math.imul(I,X)|0,n=n+Math.imul(I,W)|0,s=s+Math.imul(R,J)|0,r=(r=r+Math.imul(R,$)|0)+Math.imul(S,J)|0,n=n+Math.imul(S,$)|0,s=s+Math.imul(v,Q)|0,r=(r=r+Math.imul(v,tt)|0)+Math.imul(k,Q)|0,n=n+Math.imul(k,tt)|0,s=s+Math.imul(w,it)|0,r=(r=r+Math.imul(w,st)|0)+Math.imul(y,it)|0,n=n+Math.imul(y,st)|0,s=s+Math.imul(p,nt)|0,r=(r=r+Math.imul(p,ot)|0)+Math.imul(g,nt)|0,n=n+Math.imul(g,ot)|0;var Rt=(l+(s=s+Math.imul(c,ht)|0)|0)+((8191&(r=(r=r+Math.imul(c,lt)|0)+Math.imul(f,ht)|0))<<13)|0;l=((n=n+Math.imul(f,lt)|0)+(r>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,s=Math.imul(C,z),r=(r=Math.imul(C,V))+Math.imul(L,z)|0,n=Math.imul(L,V),s=s+Math.imul(N,j)|0,r=(r=r+Math.imul(N,q)|0)+Math.imul(T,j)|0,n=n+Math.imul(T,q)|0,s=s+Math.imul(O,X)|0,r=(r=r+Math.imul(O,W)|0)+Math.imul(B,X)|0,n=n+Math.imul(B,W)|0,s=s+Math.imul(x,J)|0,r=(r=r+Math.imul(x,$)|0)+Math.imul(I,J)|0,n=n+Math.imul(I,$)|0,s=s+Math.imul(R,Q)|0,r=(r=r+Math.imul(R,tt)|0)+Math.imul(S,Q)|0,n=n+Math.imul(S,tt)|0,s=s+Math.imul(v,it)|0,r=(r=r+Math.imul(v,st)|0)+Math.imul(k,it)|0,n=n+Math.imul(k,st)|0,s=s+Math.imul(w,nt)|0,r=(r=r+Math.imul(w,ot)|0)+Math.imul(y,nt)|0,n=n+Math.imul(y,ot)|0,s=s+Math.imul(p,ht)|0,r=(r=r+Math.imul(p,lt)|0)+Math.imul(g,ht)|0,n=n+Math.imul(g,lt)|0;var St=(l+(s=s+Math.imul(c,ct)|0)|0)+((8191&(r=(r=r+Math.imul(c,ft)|0)+Math.imul(f,ct)|0))<<13)|0;l=((n=n+Math.imul(f,ft)|0)+(r>>>13)|0)+(St>>>26)|0,St&=67108863,s=Math.imul(D,z),r=(r=Math.imul(D,V))+Math.imul(F,z)|0,n=Math.imul(F,V),s=s+Math.imul(C,j)|0,r=(r=r+Math.imul(C,q)|0)+Math.imul(L,j)|0,n=n+Math.imul(L,q)|0,s=s+Math.imul(N,X)|0,r=(r=r+Math.imul(N,W)|0)+Math.imul(T,X)|0,n=n+Math.imul(T,W)|0,s=s+Math.imul(O,J)|0,r=(r=r+Math.imul(O,$)|0)+Math.imul(B,J)|0,n=n+Math.imul(B,$)|0,s=s+Math.imul(x,Q)|0,r=(r=r+Math.imul(x,tt)|0)+Math.imul(I,Q)|0,n=n+Math.imul(I,tt)|0,s=s+Math.imul(R,it)|0,r=(r=r+Math.imul(R,st)|0)+Math.imul(S,it)|0,n=n+Math.imul(S,st)|0,s=s+Math.imul(v,nt)|0,r=(r=r+Math.imul(v,ot)|0)+Math.imul(k,nt)|0,n=n+Math.imul(k,ot)|0,s=s+Math.imul(w,ht)|0,r=(r=r+Math.imul(w,lt)|0)+Math.imul(y,ht)|0,n=n+Math.imul(y,lt)|0,s=s+Math.imul(p,ct)|0,r=(r=r+Math.imul(p,ft)|0)+Math.imul(g,ct)|0,n=n+Math.imul(g,ft)|0;var _t=(l+(s=s+Math.imul(c,pt)|0)|0)+((8191&(r=(r=r+Math.imul(c,gt)|0)+Math.imul(f,pt)|0))<<13)|0;l=((n=n+Math.imul(f,gt)|0)+(r>>>13)|0)+(_t>>>26)|0,_t&=67108863,s=Math.imul(D,j),r=(r=Math.imul(D,q))+Math.imul(F,j)|0,n=Math.imul(F,q),s=s+Math.imul(C,X)|0,r=(r=r+Math.imul(C,W)|0)+Math.imul(L,X)|0,n=n+Math.imul(L,W)|0,s=s+Math.imul(N,J)|0,r=(r=r+Math.imul(N,$)|0)+Math.imul(T,J)|0,n=n+Math.imul(T,$)|0,s=s+Math.imul(O,Q)|0,r=(r=r+Math.imul(O,tt)|0)+Math.imul(B,Q)|0,n=n+Math.imul(B,tt)|0,s=s+Math.imul(x,it)|0,r=(r=r+Math.imul(x,st)|0)+Math.imul(I,it)|0,n=n+Math.imul(I,st)|0,s=s+Math.imul(R,nt)|0,r=(r=r+Math.imul(R,ot)|0)+Math.imul(S,nt)|0,n=n+Math.imul(S,ot)|0,s=s+Math.imul(v,ht)|0,r=(r=r+Math.imul(v,lt)|0)+Math.imul(k,ht)|0,n=n+Math.imul(k,lt)|0,s=s+Math.imul(w,ct)|0,r=(r=r+Math.imul(w,ft)|0)+Math.imul(y,ct)|0,n=n+Math.imul(y,ft)|0;var xt=(l+(s=s+Math.imul(p,pt)|0)|0)+((8191&(r=(r=r+Math.imul(p,gt)|0)+Math.imul(g,pt)|0))<<13)|0;l=((n=n+Math.imul(g,gt)|0)+(r>>>13)|0)+(xt>>>26)|0,xt&=67108863,s=Math.imul(D,X),r=(r=Math.imul(D,W))+Math.imul(F,X)|0,n=Math.imul(F,W),s=s+Math.imul(C,J)|0,r=(r=r+Math.imul(C,$)|0)+Math.imul(L,J)|0,n=n+Math.imul(L,$)|0,s=s+Math.imul(N,Q)|0,r=(r=r+Math.imul(N,tt)|0)+Math.imul(T,Q)|0,n=n+Math.imul(T,tt)|0,s=s+Math.imul(O,it)|0,r=(r=r+Math.imul(O,st)|0)+Math.imul(B,it)|0,n=n+Math.imul(B,st)|0,s=s+Math.imul(x,nt)|0,r=(r=r+Math.imul(x,ot)|0)+Math.imul(I,nt)|0,n=n+Math.imul(I,ot)|0,s=s+Math.imul(R,ht)|0,r=(r=r+Math.imul(R,lt)|0)+Math.imul(S,ht)|0,n=n+Math.imul(S,lt)|0,s=s+Math.imul(v,ct)|0,r=(r=r+Math.imul(v,ft)|0)+Math.imul(k,ct)|0,n=n+Math.imul(k,ft)|0;var It=(l+(s=s+Math.imul(w,pt)|0)|0)+((8191&(r=(r=r+Math.imul(w,gt)|0)+Math.imul(y,pt)|0))<<13)|0;l=((n=n+Math.imul(y,gt)|0)+(r>>>13)|0)+(It>>>26)|0,It&=67108863,s=Math.imul(D,J),r=(r=Math.imul(D,$))+Math.imul(F,J)|0,n=Math.imul(F,$),s=s+Math.imul(C,Q)|0,r=(r=r+Math.imul(C,tt)|0)+Math.imul(L,Q)|0,n=n+Math.imul(L,tt)|0,s=s+Math.imul(N,it)|0,r=(r=r+Math.imul(N,st)|0)+Math.imul(T,it)|0,n=n+Math.imul(T,st)|0,s=s+Math.imul(O,nt)|0,r=(r=r+Math.imul(O,ot)|0)+Math.imul(B,nt)|0,n=n+Math.imul(B,ot)|0,s=s+Math.imul(x,ht)|0,r=(r=r+Math.imul(x,lt)|0)+Math.imul(I,ht)|0,n=n+Math.imul(I,lt)|0,s=s+Math.imul(R,ct)|0,r=(r=r+Math.imul(R,ft)|0)+Math.imul(S,ct)|0,n=n+Math.imul(S,ft)|0;var At=(l+(s=s+Math.imul(v,pt)|0)|0)+((8191&(r=(r=r+Math.imul(v,gt)|0)+Math.imul(k,pt)|0))<<13)|0;l=((n=n+Math.imul(k,gt)|0)+(r>>>13)|0)+(At>>>26)|0,At&=67108863,s=Math.imul(D,Q),r=(r=Math.imul(D,tt))+Math.imul(F,Q)|0,n=Math.imul(F,tt),s=s+Math.imul(C,it)|0,r=(r=r+Math.imul(C,st)|0)+Math.imul(L,it)|0,n=n+Math.imul(L,st)|0,s=s+Math.imul(N,nt)|0,r=(r=r+Math.imul(N,ot)|0)+Math.imul(T,nt)|0,n=n+Math.imul(T,ot)|0,s=s+Math.imul(O,ht)|0,r=(r=r+Math.imul(O,lt)|0)+Math.imul(B,ht)|0,n=n+Math.imul(B,lt)|0,s=s+Math.imul(x,ct)|0,r=(r=r+Math.imul(x,ft)|0)+Math.imul(I,ct)|0,n=n+Math.imul(I,ft)|0;var Ot=(l+(s=s+Math.imul(R,pt)|0)|0)+((8191&(r=(r=r+Math.imul(R,gt)|0)+Math.imul(S,pt)|0))<<13)|0;l=((n=n+Math.imul(S,gt)|0)+(r>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,s=Math.imul(D,it),r=(r=Math.imul(D,st))+Math.imul(F,it)|0,n=Math.imul(F,st),s=s+Math.imul(C,nt)|0,r=(r=r+Math.imul(C,ot)|0)+Math.imul(L,nt)|0,n=n+Math.imul(L,ot)|0,s=s+Math.imul(N,ht)|0,r=(r=r+Math.imul(N,lt)|0)+Math.imul(T,ht)|0,n=n+Math.imul(T,lt)|0,s=s+Math.imul(O,ct)|0,r=(r=r+Math.imul(O,ft)|0)+Math.imul(B,ct)|0,n=n+Math.imul(B,ft)|0;var Bt=(l+(s=s+Math.imul(x,pt)|0)|0)+((8191&(r=(r=r+Math.imul(x,gt)|0)+Math.imul(I,pt)|0))<<13)|0;l=((n=n+Math.imul(I,gt)|0)+(r>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,s=Math.imul(D,nt),r=(r=Math.imul(D,ot))+Math.imul(F,nt)|0,n=Math.imul(F,ot),s=s+Math.imul(C,ht)|0,r=(r=r+Math.imul(C,lt)|0)+Math.imul(L,ht)|0,n=n+Math.imul(L,lt)|0,s=s+Math.imul(N,ct)|0,r=(r=r+Math.imul(N,ft)|0)+Math.imul(T,ct)|0,n=n+Math.imul(T,ft)|0;var Pt=(l+(s=s+Math.imul(O,pt)|0)|0)+((8191&(r=(r=r+Math.imul(O,gt)|0)+Math.imul(B,pt)|0))<<13)|0;l=((n=n+Math.imul(B,gt)|0)+(r>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,s=Math.imul(D,ht),r=(r=Math.imul(D,lt))+Math.imul(F,ht)|0,n=Math.imul(F,lt),s=s+Math.imul(C,ct)|0,r=(r=r+Math.imul(C,ft)|0)+Math.imul(L,ct)|0,n=n+Math.imul(L,ft)|0;var Nt=(l+(s=s+Math.imul(N,pt)|0)|0)+((8191&(r=(r=r+Math.imul(N,gt)|0)+Math.imul(T,pt)|0))<<13)|0;l=((n=n+Math.imul(T,gt)|0)+(r>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,s=Math.imul(D,ct),r=(r=Math.imul(D,ft))+Math.imul(F,ct)|0,n=Math.imul(F,ft);var Tt=(l+(s=s+Math.imul(C,pt)|0)|0)+((8191&(r=(r=r+Math.imul(C,gt)|0)+Math.imul(L,pt)|0))<<13)|0;l=((n=n+Math.imul(L,gt)|0)+(r>>>13)|0)+(Tt>>>26)|0,Tt&=67108863;var Mt=(l+(s=Math.imul(D,pt))|0)+((8191&(r=(r=Math.imul(D,gt))+Math.imul(F,pt)|0))<<13)|0;return l=((n=Math.imul(F,gt))+(r>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,h[0]=mt,h[1]=wt,h[2]=yt,h[3]=bt,h[4]=vt,h[5]=kt,h[6]=Et,h[7]=Rt,h[8]=St,h[9]=_t,h[10]=xt,h[11]=It,h[12]=At,h[13]=Ot,h[14]=Bt,h[15]=Pt,h[16]=Nt,h[17]=Tt,h[18]=Mt,0!==l&&(h[19]=l,i.length++),i};function p(t,e,i){return(new g).mulp(t,e,i)}function g(t,e){this.x=t,this.y=e}Math.imul||(d=f),n.prototype.mulTo=function(t,e){var i=this.length+t.length;return 10===this.length&&10===t.length?d(this,t,e):i<63?f(this,t,e):i<1024?function(t,e,i){i.negative=e.negative^t.negative,i.length=t.length+e.length;for(var s=0,r=0,n=0;n<i.length-1;n++){var o=r;r=0;for(var a=67108863&s,h=Math.min(n,e.length-1),l=Math.max(0,n-t.length+1);l<=h;l++){var u=n-l,c=(0|t.words[u])*(0|e.words[l]),f=67108863&c;a=67108863&(f=f+a|0),r+=(o=(o=o+(c/67108864|0)|0)+(f>>>26)|0)>>>26,o&=67108863}i.words[n]=a,s=o,o=r}return 0!==s?i.words[n]=s:i.length--,i.strip()}(this,t,e):p(this,t,e)},g.prototype.makeRBT=function(t){for(var e=new Array(t),i=n.prototype._countBits(t)-1,s=0;s<t;s++)e[s]=this.revBin(s,i,t);return e},g.prototype.revBin=function(t,e,i){if(0===t||t===i-1)return t;for(var s=0,r=0;r<e;r++)s|=(1&t)<<e-r-1,t>>=1;return s},g.prototype.permute=function(t,e,i,s,r,n){for(var o=0;o<n;o++)s[o]=e[t[o]],r[o]=i[t[o]]},g.prototype.transform=function(t,e,i,s,r,n){this.permute(n,t,e,i,s,r);for(var o=1;o<r;o<<=1)for(var a=o<<1,h=Math.cos(2*Math.PI/a),l=Math.sin(2*Math.PI/a),u=0;u<r;u+=a)for(var c=h,f=l,d=0;d<o;d++){var p=i[u+d],g=s[u+d],m=i[u+d+o],w=s[u+d+o],y=c*m-f*w;w=c*w+f*m,m=y,i[u+d]=p+m,s[u+d]=g+w,i[u+d+o]=p-m,s[u+d+o]=g-w,d!==a&&(y=h*c-l*f,f=h*f+l*c,c=y)}},g.prototype.guessLen13b=function(t,e){var i=1|Math.max(e,t),s=1&i,r=0;for(i=i/2|0;i;i>>>=1)r++;return 1<<r+1+s},g.prototype.conjugate=function(t,e,i){if(!(i<=1))for(var s=0;s<i/2;s++){var r=t[s];t[s]=t[i-s-1],t[i-s-1]=r,r=e[s],e[s]=-e[i-s-1],e[i-s-1]=-r}},g.prototype.normalize13b=function(t,e){for(var i=0,s=0;s<e/2;s++){var r=8192*Math.round(t[2*s+1]/e)+Math.round(t[2*s]/e)+i;t[s]=67108863&r,i=r<67108864?0:r/67108864|0}return t},g.prototype.convert13b=function(t,e,i,r){for(var n=0,o=0;o<e;o++)n+=0|t[o],i[2*o]=8191&n,n>>>=13,i[2*o+1]=8191&n,n>>>=13;for(o=2*e;o<r;++o)i[o]=0;s(0===n),s(0==(-8192&n))},g.prototype.stub=function(t){for(var e=new Array(t),i=0;i<t;i++)e[i]=0;return e},g.prototype.mulp=function(t,e,i){var s=2*this.guessLen13b(t.length,e.length),r=this.makeRBT(s),n=this.stub(s),o=new Array(s),a=new Array(s),h=new Array(s),l=new Array(s),u=new Array(s),c=new Array(s),f=i.words;f.length=s,this.convert13b(t.words,t.length,o,s),this.convert13b(e.words,e.length,l,s),this.transform(o,n,a,h,s,r),this.transform(l,n,u,c,s,r);for(var d=0;d<s;d++){var p=a[d]*u[d]-h[d]*c[d];h[d]=a[d]*c[d]+h[d]*u[d],a[d]=p}return this.conjugate(a,h,s),this.transform(a,h,f,n,s,r),this.conjugate(f,n,s),this.normalize13b(f,s),i.negative=t.negative^e.negative,i.length=t.length+e.length,i.strip()},n.prototype.mul=function(t){var e=new n(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},n.prototype.mulf=function(t){var e=new n(null);return e.words=new Array(this.length+t.length),p(this,t,e)},n.prototype.imul=function(t){return this.clone().mulTo(t,this)},n.prototype.imuln=function(t){s("number"==typeof t),s(t<67108864);for(var e=0,i=0;i<this.length;i++){var r=(0|this.words[i])*t,n=(67108863&r)+(67108863&e);e>>=26,e+=r/67108864|0,e+=n>>>26,this.words[i]=67108863&n}return 0!==e&&(this.words[i]=e,this.length++),this},n.prototype.muln=function(t){return this.clone().imuln(t)},n.prototype.sqr=function(){return this.mul(this)},n.prototype.isqr=function(){return this.imul(this.clone())},n.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),i=0;i<e.length;i++){var s=i/26|0,r=i%26;e[i]=(t.words[s]&1<<r)>>>r}return e}(t);if(0===e.length)return new n(1);for(var i=this,s=0;s<e.length&&0===e[s];s++,i=i.sqr());if(++s<e.length)for(var r=i.sqr();s<e.length;s++,r=r.sqr())0!==e[s]&&(i=i.mul(r));return i},n.prototype.iushln=function(t){s("number"==typeof t&&t>=0);var e,i=t%26,r=(t-i)/26,n=67108863>>>26-i<<26-i;if(0!==i){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&n,h=(0|this.words[e])-a<<i;this.words[e]=h|o,o=a>>>26-i}o&&(this.words[e]=o,this.length++)}if(0!==r){for(e=this.length-1;e>=0;e--)this.words[e+r]=this.words[e];for(e=0;e<r;e++)this.words[e]=0;this.length+=r}return this.strip()},n.prototype.ishln=function(t){return s(0===this.negative),this.iushln(t)},n.prototype.iushrn=function(t,e,i){var r;s("number"==typeof t&&t>=0),r=e?(e-e%26)/26:0;var n=t%26,o=Math.min((t-n)/26,this.length),a=67108863^67108863>>>n<<n,h=i;if(r-=o,r=Math.max(0,r),h){for(var l=0;l<o;l++)h.words[l]=this.words[l];h.length=o}if(0===o);else if(this.length>o)for(this.length-=o,l=0;l<this.length;l++)this.words[l]=this.words[l+o];else this.words[0]=0,this.length=1;var u=0;for(l=this.length-1;l>=0&&(0!==u||l>=r);l--){var c=0|this.words[l];this.words[l]=u<<26-n|c>>>n,u=c&a}return h&&0!==u&&(h.words[h.length++]=u),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},n.prototype.ishrn=function(t,e,i){return s(0===this.negative),this.iushrn(t,e,i)},n.prototype.shln=function(t){return this.clone().ishln(t)},n.prototype.ushln=function(t){return this.clone().iushln(t)},n.prototype.shrn=function(t){return this.clone().ishrn(t)},n.prototype.ushrn=function(t){return this.clone().iushrn(t)},n.prototype.testn=function(t){s("number"==typeof t&&t>=0);var e=t%26,i=(t-e)/26,r=1<<e;return!(this.length<=i||!(this.words[i]&r))},n.prototype.imaskn=function(t){s("number"==typeof t&&t>=0);var e=t%26,i=(t-e)/26;if(s(0===this.negative,"imaskn works only with positive numbers"),this.length<=i)return this;if(0!==e&&i++,this.length=Math.min(i,this.length),0!==e){var r=67108863^67108863>>>e<<e;this.words[this.length-1]&=r}return this.strip()},n.prototype.maskn=function(t){return this.clone().imaskn(t)},n.prototype.iaddn=function(t){return s("number"==typeof t),s(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},n.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},n.prototype.isubn=function(t){if(s("number"==typeof t),s(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},n.prototype.addn=function(t){return this.clone().iaddn(t)},n.prototype.subn=function(t){return this.clone().isubn(t)},n.prototype.iabs=function(){return this.negative=0,this},n.prototype.abs=function(){return this.clone().iabs()},n.prototype._ishlnsubmul=function(t,e,i){var r,n,o=t.length+i;this._expand(o);var a=0;for(r=0;r<t.length;r++){n=(0|this.words[r+i])+a;var h=(0|t.words[r])*e;a=((n-=67108863&h)>>26)-(h/67108864|0),this.words[r+i]=67108863&n}for(;r<this.length-i;r++)a=(n=(0|this.words[r+i])+a)>>26,this.words[r+i]=67108863&n;if(0===a)return this.strip();for(s(-1===a),a=0,r=0;r<this.length;r++)a=(n=-(0|this.words[r])+a)>>26,this.words[r]=67108863&n;return this.negative=1,this.strip()},n.prototype._wordDiv=function(t,e){var i=(this.length,t.length),s=this.clone(),r=t,o=0|r.words[r.length-1];0!=(i=26-this._countBits(o))&&(r=r.ushln(i),s.iushln(i),o=0|r.words[r.length-1]);var a,h=s.length-r.length;if("mod"!==e){(a=new n(null)).length=h+1,a.words=new Array(a.length);for(var l=0;l<a.length;l++)a.words[l]=0}var u=s.clone()._ishlnsubmul(r,1,h);0===u.negative&&(s=u,a&&(a.words[h]=1));for(var c=h-1;c>=0;c--){var f=67108864*(0|s.words[r.length+c])+(0|s.words[r.length+c-1]);for(f=Math.min(f/o|0,67108863),s._ishlnsubmul(r,f,c);0!==s.negative;)f--,s.negative=0,s._ishlnsubmul(r,1,c),s.isZero()||(s.negative^=1);a&&(a.words[c]=f)}return a&&a.strip(),s.strip(),"div"!==e&&0!==i&&s.iushrn(i),{div:a||null,mod:s}},n.prototype.divmod=function(t,e,i){return s(!t.isZero()),this.isZero()?{div:new n(0),mod:new n(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(r=a.div.neg()),"div"!==e&&(o=a.mod.neg(),i&&0!==o.negative&&o.iadd(t)),{div:r,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(r=a.div.neg()),{div:r,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),i&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new n(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new n(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new n(this.modn(t.words[0]))}:this._wordDiv(t,e);var r,o,a},n.prototype.div=function(t){return this.divmod(t,"div",!1).div},n.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},n.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},n.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var i=0!==e.div.negative?e.mod.isub(t):e.mod,s=t.ushrn(1),r=t.andln(1),n=i.cmp(s);return n<0||1===r&&0===n?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},n.prototype.modn=function(t){s(t<=67108863);for(var e=(1<<26)%t,i=0,r=this.length-1;r>=0;r--)i=(e*i+(0|this.words[r]))%t;return i},n.prototype.idivn=function(t){s(t<=67108863);for(var e=0,i=this.length-1;i>=0;i--){var r=(0|this.words[i])+67108864*e;this.words[i]=r/t|0,e=r%t}return this.strip()},n.prototype.divn=function(t){return this.clone().idivn(t)},n.prototype.egcd=function(t){s(0===t.negative),s(!t.isZero());var e=this,i=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var r=new n(1),o=new n(0),a=new n(0),h=new n(1),l=0;e.isEven()&&i.isEven();)e.iushrn(1),i.iushrn(1),++l;for(var u=i.clone(),c=e.clone();!e.isZero();){for(var f=0,d=1;0==(e.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(e.iushrn(f);f-- >0;)(r.isOdd()||o.isOdd())&&(r.iadd(u),o.isub(c)),r.iushrn(1),o.iushrn(1);for(var p=0,g=1;0==(i.words[0]&g)&&p<26;++p,g<<=1);if(p>0)for(i.iushrn(p);p-- >0;)(a.isOdd()||h.isOdd())&&(a.iadd(u),h.isub(c)),a.iushrn(1),h.iushrn(1);e.cmp(i)>=0?(e.isub(i),r.isub(a),o.isub(h)):(i.isub(e),a.isub(r),h.isub(o))}return{a:a,b:h,gcd:i.iushln(l)}},n.prototype._invmp=function(t){s(0===t.negative),s(!t.isZero());var e=this,i=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var r,o=new n(1),a=new n(0),h=i.clone();e.cmpn(1)>0&&i.cmpn(1)>0;){for(var l=0,u=1;0==(e.words[0]&u)&&l<26;++l,u<<=1);if(l>0)for(e.iushrn(l);l-- >0;)o.isOdd()&&o.iadd(h),o.iushrn(1);for(var c=0,f=1;0==(i.words[0]&f)&&c<26;++c,f<<=1);if(c>0)for(i.iushrn(c);c-- >0;)a.isOdd()&&a.iadd(h),a.iushrn(1);e.cmp(i)>=0?(e.isub(i),o.isub(a)):(i.isub(e),a.isub(o))}return(r=0===e.cmpn(1)?o:a).cmpn(0)<0&&r.iadd(t),r},n.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),i=t.clone();e.negative=0,i.negative=0;for(var s=0;e.isEven()&&i.isEven();s++)e.iushrn(1),i.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;i.isEven();)i.iushrn(1);var r=e.cmp(i);if(r<0){var n=e;e=i,i=n}else if(0===r||0===i.cmpn(1))break;e.isub(i)}return i.iushln(s)},n.prototype.invm=function(t){return this.egcd(t).a.umod(t)},n.prototype.isEven=function(){return 0==(1&this.words[0])},n.prototype.isOdd=function(){return 1==(1&this.words[0])},n.prototype.andln=function(t){return this.words[0]&t},n.prototype.bincn=function(t){s("number"==typeof t);var e=t%26,i=(t-e)/26,r=1<<e;if(this.length<=i)return this._expand(i+1),this.words[i]|=r,this;for(var n=r,o=i;0!==n&&o<this.length;o++){var a=0|this.words[o];n=(a+=n)>>>26,a&=67108863,this.words[o]=a}return 0!==n&&(this.words[o]=n,this.length++),this},n.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},n.prototype.cmpn=function(t){var e,i=t<0;if(0!==this.negative&&!i)return-1;if(0===this.negative&&i)return 1;if(this.strip(),this.length>1)e=1;else{i&&(t=-t),s(t<=67108863,"Number is too big");var r=0|this.words[0];e=r===t?0:r<t?-1:1}return 0!==this.negative?0|-e:e},n.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},n.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,i=this.length-1;i>=0;i--){var s=0|this.words[i],r=0|t.words[i];if(s!==r){s<r?e=-1:s>r&&(e=1);break}}return e},n.prototype.gtn=function(t){return 1===this.cmpn(t)},n.prototype.gt=function(t){return 1===this.cmp(t)},n.prototype.gten=function(t){return this.cmpn(t)>=0},n.prototype.gte=function(t){return this.cmp(t)>=0},n.prototype.ltn=function(t){return-1===this.cmpn(t)},n.prototype.lt=function(t){return-1===this.cmp(t)},n.prototype.lten=function(t){return this.cmpn(t)<=0},n.prototype.lte=function(t){return this.cmp(t)<=0},n.prototype.eqn=function(t){return 0===this.cmpn(t)},n.prototype.eq=function(t){return 0===this.cmp(t)},n.red=function(t){return new E(t)},n.prototype.toRed=function(t){return s(!this.red,"Already a number in reduction context"),s(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},n.prototype.fromRed=function(){return s(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},n.prototype._forceRed=function(t){return this.red=t,this},n.prototype.forceRed=function(t){return s(!this.red,"Already a number in reduction context"),this._forceRed(t)},n.prototype.redAdd=function(t){return s(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},n.prototype.redIAdd=function(t){return s(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},n.prototype.redSub=function(t){return s(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},n.prototype.redISub=function(t){return s(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},n.prototype.redShl=function(t){return s(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},n.prototype.redMul=function(t){return s(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},n.prototype.redIMul=function(t){return s(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},n.prototype.redSqr=function(){return s(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},n.prototype.redISqr=function(){return s(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},n.prototype.redSqrt=function(){return s(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},n.prototype.redInvm=function(){return s(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},n.prototype.redNeg=function(){return s(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},n.prototype.redPow=function(t){return s(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var m={k256:null,p224:null,p192:null,p25519:null};function w(t,e){this.name=t,this.p=new n(e,16),this.n=this.p.bitLength(),this.k=new n(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function y(){w.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function b(){w.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function v(){w.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function k(){w.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function E(t){if("string"==typeof t){var e=n._prime(t);this.m=e.p,this.prime=e}else s(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function R(t){E.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new n(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}w.prototype._tmp=function(){var t=new n(null);return t.words=new Array(Math.ceil(this.n/13)),t},w.prototype.ireduce=function(t){var e,i=t;do{this.split(i,this.tmp),e=(i=(i=this.imulK(i)).iadd(this.tmp)).bitLength()}while(e>this.n);var s=e<this.n?-1:i.ucmp(this.p);return 0===s?(i.words[0]=0,i.length=1):s>0?i.isub(this.p):i.strip(),i},w.prototype.split=function(t,e){t.iushrn(this.n,0,e)},w.prototype.imulK=function(t){return t.imul(this.k)},r(y,w),y.prototype.split=function(t,e){for(var i=Math.min(t.length,9),s=0;s<i;s++)e.words[s]=t.words[s];if(e.length=i,t.length<=9)return t.words[0]=0,void(t.length=1);var r=t.words[9];for(e.words[e.length++]=4194303&r,s=10;s<t.length;s++){var n=0|t.words[s];t.words[s-10]=(4194303&n)<<4|r>>>22,r=n}r>>>=22,t.words[s-10]=r,0===r&&t.length>10?t.length-=10:t.length-=9},y.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,i=0;i<t.length;i++){var s=0|t.words[i];e+=977*s,t.words[i]=67108863&e,e=64*s+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},r(b,w),r(v,w),r(k,w),k.prototype.imulK=function(t){for(var e=0,i=0;i<t.length;i++){var s=19*(0|t.words[i])+e,r=67108863&s;s>>>=26,t.words[i]=r,e=s}return 0!==e&&(t.words[t.length++]=e),t},n._prime=function(t){if(m[t])return m[t];var e;if("k256"===t)e=new y;else if("p224"===t)e=new b;else if("p192"===t)e=new v;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new k}return m[t]=e,e},E.prototype._verify1=function(t){s(0===t.negative,"red works only with positives"),s(t.red,"red works only with red numbers")},E.prototype._verify2=function(t,e){s(0==(t.negative|e.negative),"red works only with positives"),s(t.red&&t.red===e.red,"red works only with red numbers")},E.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},E.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},E.prototype.add=function(t,e){this._verify2(t,e);var i=t.add(e);return i.cmp(this.m)>=0&&i.isub(this.m),i._forceRed(this)},E.prototype.iadd=function(t,e){this._verify2(t,e);var i=t.iadd(e);return i.cmp(this.m)>=0&&i.isub(this.m),i},E.prototype.sub=function(t,e){this._verify2(t,e);var i=t.sub(e);return i.cmpn(0)<0&&i.iadd(this.m),i._forceRed(this)},E.prototype.isub=function(t,e){this._verify2(t,e);var i=t.isub(e);return i.cmpn(0)<0&&i.iadd(this.m),i},E.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},E.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},E.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},E.prototype.isqr=function(t){return this.imul(t,t.clone())},E.prototype.sqr=function(t){return this.mul(t,t)},E.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(s(e%2==1),3===e){var i=this.m.add(new n(1)).iushrn(2);return this.pow(t,i)}for(var r=this.m.subn(1),o=0;!r.isZero()&&0===r.andln(1);)o++,r.iushrn(1);s(!r.isZero());var a=new n(1).toRed(this),h=a.redNeg(),l=this.m.subn(1).iushrn(1),u=this.m.bitLength();for(u=new n(2*u*u).toRed(this);0!==this.pow(u,l).cmp(h);)u.redIAdd(h);for(var c=this.pow(u,r),f=this.pow(t,r.addn(1).iushrn(1)),d=this.pow(t,r),p=o;0!==d.cmp(a);){for(var g=d,m=0;0!==g.cmp(a);m++)g=g.redSqr();s(m<p);var w=this.pow(c,new n(1).iushln(p-m-1));f=f.redMul(w),c=w.redSqr(),d=d.redMul(c),p=m}return f},E.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},E.prototype.pow=function(t,e){if(e.isZero())return new n(1).toRed(this);if(0===e.cmpn(1))return t.clone();var i=new Array(16);i[0]=new n(1).toRed(this),i[1]=t;for(var s=2;s<i.length;s++)i[s]=this.mul(i[s-1],t);var r=i[0],o=0,a=0,h=e.bitLength()%26;for(0===h&&(h=26),s=e.length-1;s>=0;s--){for(var l=e.words[s],u=h-1;u>=0;u--){var c=l>>u&1;r!==i[0]&&(r=this.sqr(r)),0!==c||0!==o?(o<<=1,o|=c,(4==++a||0===s&&0===u)&&(r=this.mul(r,i[o]),a=0,o=0)):a=0}h=26}return r},E.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},E.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},n.mont=function(t){return new R(t)},r(R,E),R.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},R.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},R.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var i=t.imul(e),s=i.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),r=i.isub(s).iushrn(this.shift),n=r;return r.cmp(this.m)>=0?n=r.isub(this.m):r.cmpn(0)<0&&(n=r.iadd(this.m)),n._forceRed(this)},R.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new n(0)._forceRed(this);var i=t.mul(e),s=i.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),r=i.isub(s).iushrn(this.shift),o=r;return r.cmp(this.m)>=0?o=r.isub(this.m):r.cmpn(0)<0&&(o=r.iadd(this.m)),o._forceRed(this)},R.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(void 0===t||t,this)}).call(this,i(119)(t))},function(t,e,i){"use strict";
/*!
 * binary.js - binary search utils for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.search=function(t,e,i,s){let r=0,n=t.length-1;for(;r<=n;){const s=r+n>>>1,o=i(t[s],e);if(0===o)return s;o<0?r=s+1:n=s-1}return s?r:-1},e.insert=function(t,i,s,r){const n=e.search(t,i,s,!0);return r&&n<t.length&&0===s(t[n],i)?-1:(0===n?t.unshift(i):n===t.length?t.push(i):t.splice(n,0,i),n)},e.remove=function(t,i,s){const r=e.search(t,i,s,!1);return-1!==r&&(function(t,e){if(0===e)return void t.shift();let i=e+1;for(;i<t.length;)t[e++]=t[i++];t.pop()}(t,r),!0)}},function(t,e,i){"use strict";(function(t){
/*!
 * packets.js - packets for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),{BloomFilter:n}=i(62),o=i(34),a=i(5),h=i(108),l=i(67),u=i(3),c=i(42),f=i(35),d=i(219),p=i(63),g=i(14),{encoding:m}=r,w=t.alloc(0);e.types={VERSION:0,VERACK:1,PING:2,PONG:3,GETADDR:4,ADDR:5,INV:6,GETDATA:7,NOTFOUND:8,GETBLOCKS:9,GETHEADERS:10,HEADERS:11,SENDHEADERS:12,BLOCK:13,TX:14,REJECT:15,MEMPOOL:16,FILTERLOAD:17,FILTERADD:18,FILTERCLEAR:19,MERKLEBLOCK:20,FEEFILTER:21,SENDCMPCT:22,CMPCTBLOCK:23,GETBLOCKTXN:24,BLOCKTXN:25,ENCINIT:26,ENCACK:27,AUTHCHALLENGE:28,AUTHREPLY:29,AUTHPROPOSE:30,UNKNOWN:31,INTERNAL:32,DATA:33},e.typesByVal=["VERSION","VERACK","PING","PONG","GETADDR","ADDR","INV","GETDATA","NOTFOUND","GETBLOCKS","GETHEADERS","HEADERS","SENDHEADERS","BLOCK","TX","REJECT","MEMPOOL","FILTERLOAD","FILTERADD","FILTERCLEAR","MERKLEBLOCK","FEEFILTER","SENDCMPCT","CMPCTBLOCK","GETBLOCKTXN","BLOCKTXN","ENCINIT","ENCACK","AUTHCHALLENGE","AUTHREPLY","AUTHPROPOSE","UNKNOWN","INTERNAL","DATA"];class y{constructor(){this.type=-1,this.cmd=""}getSize(){return 0}toWriter(t){return t}toRaw(){return w}fromReader(t){return this}fromRaw(t){return this}}class b extends y{constructor(t){super(),this.cmd="version",this.type=e.types.VERSION,this.version=o.PROTOCOL_VERSION,this.services=o.LOCAL_SERVICES,this.time=a.now(),this.remote=new l,this.local=new l,this.nonce=o.ZERO_NONCE,this.agent=o.USER_AGENT,this.height=0,this.noRelay=!1,t&&this.fromOptions(t)}fromOptions(t){return null!=t.version&&(this.version=t.version),null!=t.services&&(this.services=t.services),null!=t.time&&(this.time=t.time),t.remote&&this.remote.fromOptions(t.remote),t.local&&this.local.fromOptions(t.local),t.nonce&&(this.nonce=t.nonce),t.agent&&(this.agent=t.agent),null!=t.height&&(this.height=t.height),null!=t.noRelay&&(this.noRelay=t.noRelay),this}static fromOptions(t){return(new this).fromOptions(t)}getSize(){let t=0;return t+=20,t+=this.remote.getSize(!1),t+=this.local.getSize(!1),t+=8,(t+=m.sizeVarString(this.agent,"ascii"))+5}toWriter(t){return t.writeI32(this.version),t.writeU32(this.services),t.writeU32(0),t.writeI64(this.time),this.remote.toWriter(t,!1),this.local.toWriter(t,!1),t.writeBytes(this.nonce),t.writeVarString(this.agent,"ascii"),t.writeI32(this.height),t.writeU8(this.noRelay?0:1),t}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}fromReader(t){return this.version=t.readI32(),this.services=t.readU32(),t.readU32(),this.time=t.readI64(),this.remote.fromReader(t,!1),t.left()>0&&(this.local.fromReader(t,!1),this.nonce=t.readBytes(8)),t.left()>0&&(this.agent=t.readVarString("ascii",256)),t.left()>0&&(this.height=t.readI32()),t.left()>0&&(this.noRelay=0===t.readU8()),10300===this.version&&(this.version=300),s(this.version>=0,"Version is negative."),s(this.time>=0,"Timestamp is negative."),this.height<0&&(this.height=0),this}static fromReader(t){return(new this).fromReader(t)}fromRaw(t){return this.fromReader(r.read(t))}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e,i)}}class v extends y{constructor(){super(),this.cmd="verack",this.type=e.types.VERACK}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class k extends y{constructor(t){super(),this.cmd="ping",this.type=e.types.PING,this.nonce=t||null}getSize(){return this.nonce?8:0}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}toWriter(t){return this.nonce&&t.writeBytes(this.nonce),t}fromReader(t){return t.left()>=8&&(this.nonce=t.readBytes(8)),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromRaw(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class E extends y{constructor(t){super(),this.cmd="pong",this.type=e.types.PONG,this.nonce=t||o.ZERO_NONCE}getSize(){return 8}toWriter(t){return t.writeBytes(this.nonce),t}toRaw(){return this.toWriter(r.write(8)).render()}fromReader(t){return this.nonce=t.readBytes(8),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class R extends y{constructor(){super(),this.cmd="getaddr",this.type=e.types.GETADDR}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class S extends y{constructor(t){super(),this.cmd="addr",this.type=e.types.ADDR,this.items=t||[]}getSize(){let t=0;return(t+=m.sizeVarint(this.items.length))+30*this.items.length}toWriter(t){t.writeVarint(this.items.length);for(const e of this.items)e.toWriter(t,!0);return t}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}fromRaw(t){const e=r.read(t),i=e.readVarint();for(let t=0;t<i;t++)this.items.push(l.fromReader(e,!0));return this}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class _ extends y{constructor(t){super(),this.cmd="inv",this.type=e.types.INV,this.items=t||[]}getSize(){let t=0;return(t+=m.sizeVarint(this.items.length))+36*this.items.length}toWriter(t){s(this.items.length<=5e4),t.writeVarint(this.items.length);for(const e of this.items)e.toWriter(t);return t}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}fromReader(t){const e=t.readVarint();s(e<=5e4,"Inv item count too high.");for(let i=0;i<e;i++)this.items.push(f.fromReader(t));return this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromRaw(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class x extends _{constructor(t){super(t),this.cmd="getdata",this.type=e.types.GETDATA}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class I extends _{constructor(t){super(t),this.cmd="notfound",this.type=e.types.NOTFOUND}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class A extends y{constructor(t,i){super(),this.cmd="getblocks",this.type=e.types.GETBLOCKS,this.version=o.PROTOCOL_VERSION,this.locator=t||[],this.stop=i||null}getSize(){let t=0;return t+=4,t+=m.sizeVarint(this.locator.length),(t+=32*this.locator.length)+32}toWriter(t){s(this.locator.length<=5e4,"Too many block hashes."),t.writeU32(this.version),t.writeVarint(this.locator.length);for(const e of this.locator)t.writeHash(e);return t.writeHash(this.stop||u.ZERO_HASH),t}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}fromReader(t){this.version=t.readU32();const e=t.readVarint();s(e<=5e4,"Too many block hashes.");for(let i=0;i<e;i++)this.locator.push(t.readHash("hex"));return this.stop=t.readHash("hex"),this.stop===u.NULL_HASH&&(this.stop=null),this}fromRaw(t){return this.fromReader(r.read(t))}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class O extends A{constructor(t,i){super(t,i),this.cmd="getheaders",this.type=e.types.GETHEADERS}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class B extends y{constructor(t){super(),this.cmd="headers",this.type=e.types.HEADERS,this.items=t||[]}getSize(){let t=0;t+=m.sizeVarint(this.items.length);for(const e of this.items)t+=e.getSize();return t}toWriter(t){s(this.items.length<=2e3,"Too many headers."),t.writeVarint(this.items.length);for(const e of this.items)e.toWriter(t);return t}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}fromReader(t){const e=t.readVarint();s(e<=2e3,"Too many headers.");for(let i=0;i<e;i++)this.items.push(c.fromReader(t));return this}fromRaw(t){return this.fromReader(r.read(t))}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class P extends y{constructor(){super(),this.cmd="sendheaders",this.type=e.types.SENDHEADERS}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class N extends y{constructor(t){super(),this.cmd="block",this.type=e.types.BLOCK,this.block=t||new d}getSize(){return this.block.getSize()}toWriter(t){return this.block.toWriter(t)}toRaw(){return this.block.toRaw()}fromReader(t){return this.block.fromReader(t),this}fromRaw(t){return this.block.fromRaw(t),this}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class T extends y{constructor(t){super(),this.cmd="tx",this.type=e.types.TX,this.tx=t||new g}getSize(){return this.tx.getSize()}toWriter(t){return this.tx.toWriter(t)}toRaw(){return this.tx.toRaw()}fromReader(t){return this.tx.fromRaw(t),this}fromRaw(t){return this.tx.fromRaw(t),this}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class M extends y{constructor(t){super(),this.cmd="reject",this.type=e.types.REJECT,this.message="",this.code=M.codes.INVALID,this.reason="",this.hash=null,t&&this.fromOptions(t)}fromOptions(t){let e=t.code;return t.message&&(this.message=t.message),null!=e&&("string"==typeof e&&(e=M.codes[e.toUpperCase()]),e>=M.codes.INTERNAL&&(e=M.codes.INVALID),this.code=e),t.reason&&(this.reason=t.reason),t.hash&&(this.hash=t.hash),this}static fromOptions(t){return(new this).fromOptions(t)}rhash(){return this.hash?a.revHex(this.hash):null}getCode(){const t=M.codesByVal[this.code];return t?t.toLowerCase():this.code.toString(10)}getSize(){let t=0;return t+=m.sizeVarString(this.message,"ascii"),t+=1,t+=m.sizeVarString(this.reason,"ascii"),this.hash&&(t+=32),t}toWriter(t){return s(this.message.length<=12),s(this.reason.length<=111),t.writeVarString(this.message,"ascii"),t.writeU8(this.code),t.writeVarString(this.reason,"ascii"),this.hash&&t.writeHash(this.hash),t}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}fromReader(t){switch(this.message=t.readVarString("ascii",12),this.code=t.readU8(),this.reason=t.readVarString("ascii",111),this.message){case"block":case"tx":this.hash=t.readHash("hex");break;default:this.hash=null}return this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e,i)}fromReason(t,e,i,r){return"string"==typeof t&&(t=M.codes[t.toUpperCase()]),t||(t=M.codes.INVALID),t>=M.codes.INTERNAL&&(t=M.codes.INVALID),this.message="",this.code=t,this.reason=e,i&&(s(r),this.message=i,this.hash=r),this}static fromReason(t,e,i,s){return(new this).fromReason(t,e,i,s)}static fromError(t,e){return this.fromReason(t.code,t.reason,e)}inspect(){const t=M.codesByVal[this.code]||this.code,e=this.hash?a.revHex(this.hash):null;return"<Reject:"+` msg=${this.message}`+` code=${t}`+` reason=${this.reason}`+` hash=${e}`+">"}}M.codes={MALFORMED:1,INVALID:16,OBSOLETE:17,DUPLICATE:18,NONSTANDARD:64,DUST:65,INSUFFICIENTFEE:66,CHECKPOINT:67,INTERNAL:256,HIGHFEE:257,ALREADYKNOWN:258,CONFLICT:259},M.codesByVal={1:"MALFORMED",16:"INVALID",17:"OBSOLETE",18:"DUPLICATE",64:"NONSTANDARD",65:"DUST",66:"INSUFFICIENTFEE",67:"CHECKPOINT",256:"INTERNAL",257:"HIGHFEE",258:"ALREADYKNOWN",259:"CONFLICT"};class C extends y{constructor(){super(),this.cmd="mempool",this.type=e.types.MEMPOOL}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class L extends y{constructor(t){super(),this.cmd="filterload",this.type=e.types.FILTERLOAD,this.filter=t||new n}getSize(){return this.filter.getSize()}toWriter(t){return this.filter.toWriter(t)}toRaw(){return this.filter.toRaw()}fromReader(t){return this.filter.fromReader(t),this}fromRaw(t){return this.filter.fromRaw(t),this}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}isWithinConstraints(){return this.filter.isWithinConstraints()}}class U extends y{constructor(t){super(),this.cmd="filteradd",this.type=e.types.FILTERADD,this.data=t||w}getSize(){return m.sizeVarBytes(this.data)}toWriter(t){return t.writeVarBytes(this.data),t}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}fromReader(t){return this.data=t.readVarBytes(),this}fromRaw(t){return this.fromReader(r.read(t))}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class D extends y{constructor(){super(),this.cmd="filterclear",this.type=e.types.FILTERCLEAR}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class F extends y{constructor(t){super(),this.cmd="merkleblock",this.type=e.types.MERKLEBLOCK,this.block=t||new p}getSize(){return this.block.getSize()}toWriter(t){return this.block.toWriter(t)}toRaw(){return this.block.toRaw()}fromReader(t){return this.block.fromReader(t),this}fromRaw(t){return this.block.fromRaw(t),this}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class H extends y{constructor(t){super(),this.cmd="feefilter",this.type=e.types.FEEFILTER,this.rate=t||0}getSize(){return 8}toWriter(t){return t.writeI64(this.rate),t}toRaw(){return this.toWriter(r.write(8)).render()}fromReader(t){return this.rate=t.readI64(),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class z extends y{constructor(t,i){super(),this.cmd="sendcmpct",this.type=e.types.SENDCMPCT,this.mode=t||0,this.version=i||1}getSize(){return 9}toWriter(t){return t.writeU8(this.mode),t.writeU64(this.version),t}toRaw(){return this.toWriter(r.write(9)).render()}fromReader(t){return this.mode=t.readU8(),this.version=t.readU64(),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class V extends y{constructor(t){super(),this.cmd="cmpctblock",this.type=e.types.CMPCTBLOCK,this.block=t||new h.CompactBlock}getSize(){return this.block.getSize()}toWriter(t){return this.block.toWriter(t)}toRaw(){return this.block.toRaw()}fromReader(t){return this.block.fromReader(t),this}fromRaw(t){return this.block.fromRaw(t),this}static fromReader(t){return(new this).fromRaw(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class K extends y{constructor(t){super(),this.cmd="getblocktxn",this.type=e.types.GETBLOCKTXN,this.request=t||new h.TXRequest}getSize(){return this.request.getSize()}toWriter(t){return this.request.toWriter(t)}toRaw(){return this.request.toRaw()}fromReader(t){return this.request.fromReader(t),this}fromRaw(t){return this.request.fromRaw(t),this}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class j extends y{constructor(t){super(),this.cmd="blocktxn",this.type=e.types.BLOCKTXN,this.response=t||new h.TXResponse}getSize(){return this.response.getSize()}toWriter(t){return this.response.toWriter(t)}toRaw(){return this.response.toRaw()}fromReader(t){return this.response.fromReader(t),this}fromRaw(t){return this.response.fromRaw(t),this}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class q extends y{constructor(t,i){super(),this.cmd="encinit",this.type=e.types.ENCINIT,this.publicKey=t||o.ZERO_KEY,this.cipher=i||0}getSize(){return 34}toWriter(t){return t.writeBytes(this.publicKey),t.writeU8(this.cipher),t}toRaw(){return this.toWriter(r.write(34)).render()}fromReader(t){return this.publicKey=t.readBytes(33),this.cipher=t.readU8(),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class Y extends y{constructor(t){super(),this.cmd="encack",this.type=e.types.ENCACK,this.publicKey=t||o.ZERO_KEY}getSize(){return 33}toWriter(t){return t.writeBytes(this.publicKey),t}toRaw(){return this.publicKey}fromReader(t){return this.publicKey=t.readBytes(33),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class X extends y{constructor(t){super(),this.cmd="authchallenge",this.type=e.types.AUTHCHALLENGE,this.hash=t||u.ZERO_HASH}getSize(){return 32}toWriter(t){return t.writeBytes(this.hash),t}toRaw(){return this.hash}fromReader(t){return this.hash=t.readHash(),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class W extends y{constructor(t){super(),this.cmd="authreply",this.type=e.types.AUTHREPLY,this.signature=t||o.ZERO_SIG}getSize(){return 64}toWriter(t){return t.writeBytes(this.signature),t}toRaw(){return this.signature}fromReader(t){return this.signature=t.readBytes(64),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class G extends y{constructor(t){super(),this.cmd="authpropose",this.type=e.types.AUTHPROPOSE,this.hash=t||u.ZERO_HASH}getSize(){return 32}toWriter(t){return t.writeBytes(this.hash),t}toRaw(){return this.hash}fromReader(t){return this.hash=t.readHash(),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class J extends y{constructor(t,i){super(),this.cmd=t,this.type=e.types.UNKNOWN,this.data=i}getSize(){return this.data.length}toWriter(t){return t.writeBytes(this.data),t}toRaw(){return this.data}fromRaw(e,i){return s(t.isBuffer(i)),this.cmd=e,this.data=i,this}static fromRaw(e,i,s){return"string"==typeof i&&(i=t.from(i,s)),(new this).fromRaw(e,i)}}e.fromRaw=function(t,e){switch(t){case"version":return b.fromRaw(e);case"verack":return v.fromRaw(e);case"ping":return k.fromRaw(e);case"pong":return E.fromRaw(e);case"getaddr":return R.fromRaw(e);case"addr":return S.fromRaw(e);case"inv":return _.fromRaw(e);case"getdata":return x.fromRaw(e);case"notfound":return I.fromRaw(e);case"getblocks":return A.fromRaw(e);case"getheaders":return O.fromRaw(e);case"headers":return B.fromRaw(e);case"sendheaders":return P.fromRaw(e);case"block":return N.fromRaw(e);case"tx":return T.fromRaw(e);case"reject":return M.fromRaw(e);case"mempool":return C.fromRaw(e);case"filterload":return L.fromRaw(e);case"filteradd":return U.fromRaw(e);case"filterclear":return D.fromRaw(e);case"merkleblock":return F.fromRaw(e);case"feefilter":return H.fromRaw(e);case"sendcmpct":return z.fromRaw(e);case"cmpctblock":return V.fromRaw(e);case"getblocktxn":return K.fromRaw(e);case"blocktxn":return j.fromRaw(e);case"encinit":return q.fromRaw(e);case"encack":return Y.fromRaw(e);case"authchallenge":return X.fromRaw(e);case"authreply":return W.fromRaw(e);case"authpropose":return G.fromRaw(e);default:return J.fromRaw(t,e)}},e.Packet=y,e.VersionPacket=b,e.VerackPacket=v,e.PingPacket=k,e.PongPacket=E,e.GetAddrPacket=R,e.AddrPacket=S,e.InvPacket=_,e.GetDataPacket=x,e.NotFoundPacket=I,e.GetBlocksPacket=A,e.GetHeadersPacket=O,e.HeadersPacket=B,e.SendHeadersPacket=P,e.BlockPacket=N,e.TXPacket=T,e.RejectPacket=M,e.MempoolPacket=C,e.FilterLoadPacket=L,e.FilterAddPacket=U,e.FilterClearPacket=D,e.MerkleBlockPacket=F,e.FeeFilterPacket=H,e.SendCmpctPacket=z,e.CmpctBlockPacket=V,e.GetBlockTxnPacket=K,e.BlockTxnPacket=j,e.EncinitPacket=q,e.EncackPacket=Y,e.AuthChallengePacket=X,e.AuthReplyPacket=W,e.AuthProposePacket=G,e.UnknownPacket=J}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * stack.js - stack object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(36),n=i(28);class o{constructor(t){this.items=t||[]}get length(){return this.items.length}set length(t){this.items.length=t}[Symbol.iterator](){return this.items[Symbol.iterator]()}values(){return this.items.values()}entries(){return this.items.entries()}inspect(){return`<Stack: ${this.toString()}>`}toString(){const t=[];for(const e of this.items)t.push(e.toString("hex"));return t.join(" ")}toASM(t){const e=[];for(const i of this.items)e.push(r.toASM(i,t));return e.join(" ")}clone(){return new this.constructor(this.items.slice())}clear(){return this.items.length=0,this}get(t){return t<0&&(t+=this.items.length),t<0||t>=this.items.length?null:this.items[t]}pop(){return this.items.pop()||null}shift(){return this.items.shift()||null}remove(t){if(t<0&&(t+=this.items.length),t<0||t>=this.items.length)return null;const e=this.items.splice(t,1);return 0===e.length?null:e[0]}set(t,i){return t<0&&(t+=this.items.length),s(e.isBuffer(i)),s(t>=0&&t<=this.items.length),this.items[t]=i,this}push(t){return s(e.isBuffer(t)),this.items.push(t),this}unshift(t){return s(e.isBuffer(t)),this.items.unshift(t),this}insert(t,i){return t<0&&(t+=this.items.length),s(e.isBuffer(i)),s(t>=0&&t<=this.items.length),this.items.splice(t,0,i),this}erase(t,e){t<0&&(t=this.items.length+t),e<0&&(e=this.items.length+e),this.items.splice(t,e-t)}swap(t,e){t<0&&(t=this.items.length+t),e<0&&(e=this.items.length+e);const i=this.items[t],s=this.items[e];this.items[t]=s,this.items[e]=i}getData(t){return this.get(t)}popData(){return this.pop()}shiftData(){return this.shift()}removeData(t){return this.remove(t)}setData(t,e){return this.set(t,e)}pushData(t){return this.push(t)}unshiftData(t){return this.unshift(t)}insertData(t,e){return this.insert(t,e)}getLength(t){const e=this.get(t);return e?e.length:-1}getString(t,e){const i=this.get(t);return i?o.toString(i,e):null}popString(t){const e=this.pop();return e?o.toString(e,t):null}shiftString(t){const e=this.shift();return e?o.toString(e,t):null}removeString(t,e){const i=this.remove(t);return i?o.toString(i,e):null}setString(t,e,i){return this.set(t,o.fromString(e,i))}pushString(t,e){return this.push(o.fromString(t,e))}unshiftString(t,e){return this.unshift(o.fromString(t,e))}insertString(t,e,i){return this.insert(t,o.fromString(e,i))}getNum(t,e,i){const s=this.get(t);return s?o.toNum(s,e,i):null}popNum(t,e){const i=this.pop();return i?o.toNum(i,t,e):null}shiftNum(t,e){const i=this.shift();return i?o.toNum(i,t,e):null}removeNum(t,e,i){const s=this.remove(t);return s?o.toNum(s,e,i):null}setNum(t,e){return this.set(t,o.fromNum(e))}pushNum(t){return this.push(o.fromNum(t))}unshiftNum(t){return this.unshift(o.fromNum(t))}insertNum(t,e){return this.insert(t,o.fromNum(e))}getInt(t,e,i){const s=this.get(t);return s?o.toInt(s,e,i):-1}popInt(t,e){const i=this.pop();return i?o.toInt(i,t,e):-1}shiftInt(t,e){const i=this.shift();return i?o.toInt(i,t,e):-1}removeInt(t,e,i){const s=this.remove(t);return s?o.toInt(s,e,i):-1}setInt(t,e){return this.set(t,o.fromInt(e))}pushInt(t){return this.push(o.fromInt(t))}unshiftInt(t){return this.unshift(o.fromInt(t))}insertInt(t,e){return this.insert(t,o.fromInt(e))}getBool(t){const e=this.get(t);return!!e&&o.toBool(e)}popBool(){const t=this.pop();return!!t&&o.toBool(t)}shiftBool(){const t=this.shift();return!!t&&o.toBool(t)}removeBool(t){const e=this.remove(t);return!!e&&o.toBool(e)}setBool(t,e){return this.set(t,o.fromBool(e))}pushBool(t){return this.push(o.fromBool(t))}unshiftBool(t){return this.unshift(o.fromBool(t))}insertBool(t,e){return this.insert(t,o.fromBool(e))}static isStack(t){return t instanceof o}static toString(t,i){return s(e.isBuffer(t)),t.toString(i||"utf8")}static fromString(t,i){return s("string"==typeof t),e.from(t,i||"utf8")}static toNum(t,e,i){return n.decode(t,e,i)}static fromNum(t){return s(n.isScriptNum(t)),t.encode()}static toInt(t,e,i){return o.toNum(t,e,i).getInt()}static fromInt(t){if(s("number"==typeof t),t>=-1&&t<=16)return r.small[t+1];const e=n.fromNumber(t);return o.fromNum(e)}static toBool(t){s(e.isBuffer(t));for(let e=0;e<t.length;e++)if(0!==t[e])return e!==t.length-1||128!==t[e];return!1}static fromBool(t){return s("boolean"==typeof t),o.fromInt(t?1:0)}}t.exports=o}).call(this,i(1).Buffer)},function(t,e,i){var s=i(4).Buffer,r=i(89).Transform,n=i(57).StringDecoder;function o(t){r.call(this),this.hashMode="string"==typeof t,this.hashMode?this[t]=this._finalOrDigest:this.final=this._finalOrDigest,this._final&&(this.__final=this._final,this._final=null),this._decoder=null,this._encoding=null}i(6)(o,r),o.prototype.update=function(t,e,i){"string"==typeof t&&(t=s.from(t,e));var r=this._update(t);return this.hashMode?this:(i&&(r=this._toString(r,i)),r)},o.prototype.setAutoPadding=function(){},o.prototype.getAuthTag=function(){throw new Error("trying to get auth tag in unsupported state")},o.prototype.setAuthTag=function(){throw new Error("trying to set auth tag in unsupported state")},o.prototype.setAAD=function(){throw new Error("trying to set aad in unsupported state")},o.prototype._transform=function(t,e,i){var s;try{this.hashMode?this._update(t):this.push(this._update(t))}catch(t){s=t}finally{i(s)}},o.prototype._flush=function(t){var e;try{this.push(this.__final())}catch(t){e=t}t(e)},o.prototype._finalOrDigest=function(t){var e=this.__final()||s.alloc(0);return t&&(e=this._toString(e,t,!0)),e},o.prototype._toString=function(t,e,i){if(this._decoder||(this._decoder=new n(e),this._encoding=e),this._encoding!==e)throw new Error("can't switch encodings");var s=this._decoder.write(t);return i&&(s+=this._decoder.end()),s},t.exports=o},function(t,e,i){"use strict";var s=i(4).Buffer,r=s.isEncoding||function(t){switch((t=""+t)&&t.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function n(t){var e;switch(this.encoding=function(t){var e=function(t){if(!t)return"utf8";for(var e;;)switch(t){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return t;default:if(e)return;t=(""+t).toLowerCase(),e=!0}}(t);if("string"!=typeof e&&(s.isEncoding===r||!r(t)))throw new Error("Unknown encoding: "+t);return e||t}(t),this.encoding){case"utf16le":this.text=h,this.end=l,e=4;break;case"utf8":this.fillLast=a,e=4;break;case"base64":this.text=u,this.end=c,e=3;break;default:return this.write=f,void(this.end=d)}this.lastNeed=0,this.lastTotal=0,this.lastChar=s.allocUnsafe(e)}function o(t){return t<=127?0:t>>5==6?2:t>>4==14?3:t>>3==30?4:t>>6==2?-1:-2}function a(t){var e=this.lastTotal-this.lastNeed,i=function(t,e,i){if(128!=(192&e[0]))return t.lastNeed=0,"�";if(t.lastNeed>1&&e.length>1){if(128!=(192&e[1]))return t.lastNeed=1,"�";if(t.lastNeed>2&&e.length>2&&128!=(192&e[2]))return t.lastNeed=2,"�"}}(this,t);return void 0!==i?i:this.lastNeed<=t.length?(t.copy(this.lastChar,e,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(t.copy(this.lastChar,e,0,t.length),void(this.lastNeed-=t.length))}function h(t,e){if((t.length-e)%2==0){var i=t.toString("utf16le",e);if(i){var s=i.charCodeAt(i.length-1);if(s>=55296&&s<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1],i.slice(0,-1)}return i}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=t[t.length-1],t.toString("utf16le",e,t.length-1)}function l(t){var e=t&&t.length?this.write(t):"";if(this.lastNeed){var i=this.lastTotal-this.lastNeed;return e+this.lastChar.toString("utf16le",0,i)}return e}function u(t,e){var i=(t.length-e)%3;return 0===i?t.toString("base64",e):(this.lastNeed=3-i,this.lastTotal=3,1===i?this.lastChar[0]=t[t.length-1]:(this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1]),t.toString("base64",e,t.length-i))}function c(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+this.lastChar.toString("base64",0,3-this.lastNeed):e}function f(t){return t.toString(this.encoding)}function d(t){return t&&t.length?this.write(t):""}e.StringDecoder=n,n.prototype.write=function(t){if(0===t.length)return"";var e,i;if(this.lastNeed){if(void 0===(e=this.fillLast(t)))return"";i=this.lastNeed,this.lastNeed=0}else i=0;return i<t.length?e?e+this.text(t,i):this.text(t,i):e||""},n.prototype.end=function(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+"�":e},n.prototype.text=function(t,e){var i=function(t,e,i){var s=e.length-1;if(s<i)return 0;var r=o(e[s]);return r>=0?(r>0&&(t.lastNeed=r-1),r):--s<i||-2===r?0:(r=o(e[s]))>=0?(r>0&&(t.lastNeed=r-2),r):--s<i||-2===r?0:(r=o(e[s]))>=0?(r>0&&(2===r?r=0:t.lastNeed=r-3),r):0}(this,t,e);if(!this.lastNeed)return t.toString("utf8",e);this.lastTotal=i;var s=t.length-(i-this.lastNeed);return t.copy(this.lastChar,0,s),t.toString("utf8",e,s)},n.prototype.fillLast=function(t){if(this.lastNeed<=t.length)return t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,t.length),this.lastNeed-=t.length}},function(t,e,i){"use strict";(function(e,s,r){var n=i(45);function o(t){var e=this;this.next=null,this.entry=null,this.finish=function(){!function(t,e,i){var s=t.entry;for(t.entry=null;s;){var r=s.callback;e.pendingcb--,r(void 0),s=s.next}e.corkedRequestsFree?e.corkedRequestsFree.next=t:e.corkedRequestsFree=t}(e,t)}}t.exports=y;var a,h=!e.browser&&["v0.10","v0.9."].indexOf(e.version.slice(0,5))>-1?s:n.nextTick;y.WritableState=w;var l=i(29);l.inherits=i(6);var u,c={deprecate:i(168)},f=i(87),d=i(4).Buffer,p=r.Uint8Array||function(){},g=i(86);function m(){}function w(t,e){a=a||i(20),t=t||{};var s=e instanceof a;this.objectMode=!!t.objectMode,s&&(this.objectMode=this.objectMode||!!t.writableObjectMode);var r=t.highWaterMark,l=t.writableHighWaterMark,u=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:s&&(l||0===l)?l:u,this.highWaterMark=Math.floor(this.highWaterMark),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var c=!1===t.decodeStrings;this.decodeStrings=!c,this.defaultEncoding=t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(t){!function(t,e){var i=t._writableState,s=i.sync,r=i.writecb;if(function(t){t.writing=!1,t.writecb=null,t.length-=t.writelen,t.writelen=0}(i),e)!function(t,e,i,s,r){--e.pendingcb,i?(n.nextTick(r,s),n.nextTick(S,t,e),t._writableState.errorEmitted=!0,t.emit("error",s)):(r(s),t._writableState.errorEmitted=!0,t.emit("error",s),S(t,e))}(t,i,s,e,r);else{var o=E(i);o||i.corked||i.bufferProcessing||!i.bufferedRequest||k(t,i),s?h(v,t,i,o,r):v(t,i,o,r)}}(e,t)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new o(this)}function y(t){if(a=a||i(20),!(u.call(y,this)||this instanceof a))return new y(t);this._writableState=new w(t,this),this.writable=!0,t&&("function"==typeof t.write&&(this._write=t.write),"function"==typeof t.writev&&(this._writev=t.writev),"function"==typeof t.destroy&&(this._destroy=t.destroy),"function"==typeof t.final&&(this._final=t.final)),f.call(this)}function b(t,e,i,s,r,n,o){e.writelen=s,e.writecb=o,e.writing=!0,e.sync=!0,i?t._writev(r,e.onwrite):t._write(r,n,e.onwrite),e.sync=!1}function v(t,e,i,s){i||function(t,e){0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit("drain"))}(t,e),e.pendingcb--,s(),S(t,e)}function k(t,e){e.bufferProcessing=!0;var i=e.bufferedRequest;if(t._writev&&i&&i.next){var s=e.bufferedRequestCount,r=new Array(s),n=e.corkedRequestsFree;n.entry=i;for(var a=0,h=!0;i;)r[a]=i,i.isBuf||(h=!1),i=i.next,a+=1;r.allBuffers=h,b(t,e,!0,e.length,r,"",n.finish),e.pendingcb++,e.lastBufferedRequest=null,n.next?(e.corkedRequestsFree=n.next,n.next=null):e.corkedRequestsFree=new o(e),e.bufferedRequestCount=0}else{for(;i;){var l=i.chunk,u=i.encoding,c=i.callback;if(b(t,e,!1,e.objectMode?1:l.length,l,u,c),i=i.next,e.bufferedRequestCount--,e.writing)break}null===i&&(e.lastBufferedRequest=null)}e.bufferedRequest=i,e.bufferProcessing=!1}function E(t){return t.ending&&0===t.length&&null===t.bufferedRequest&&!t.finished&&!t.writing}function R(t,e){t._final(function(i){e.pendingcb--,i&&t.emit("error",i),e.prefinished=!0,t.emit("prefinish"),S(t,e)})}function S(t,e){var i=E(e);return i&&(function(t,e){e.prefinished||e.finalCalled||("function"==typeof t._final?(e.pendingcb++,e.finalCalled=!0,n.nextTick(R,t,e)):(e.prefinished=!0,t.emit("prefinish")))}(t,e),0===e.pendingcb&&(e.finished=!0,t.emit("finish"))),i}l.inherits(y,f),w.prototype.getBuffer=function(){for(var t=this.bufferedRequest,e=[];t;)e.push(t),t=t.next;return e},function(){try{Object.defineProperty(w.prototype,"buffer",{get:c.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(t){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(u=Function.prototype[Symbol.hasInstance],Object.defineProperty(y,Symbol.hasInstance,{value:function(t){return!!u.call(this,t)||this===y&&t&&t._writableState instanceof w}})):u=function(t){return t instanceof this},y.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))},y.prototype.write=function(t,e,i){var s,r=this._writableState,o=!1,a=!r.objectMode&&(s=t,d.isBuffer(s)||s instanceof p);return a&&!d.isBuffer(t)&&(t=function(t){return d.from(t)}(t)),"function"==typeof e&&(i=e,e=null),a?e="buffer":e||(e=r.defaultEncoding),"function"!=typeof i&&(i=m),r.ended?function(t,e){var i=new Error("write after end");t.emit("error",i),n.nextTick(e,i)}(this,i):(a||function(t,e,i,s){var r=!0,o=!1;return null===i?o=new TypeError("May not write null values to stream"):"string"==typeof i||void 0===i||e.objectMode||(o=new TypeError("Invalid non-string/buffer chunk")),o&&(t.emit("error",o),n.nextTick(s,o),r=!1),r}(this,r,t,i))&&(r.pendingcb++,o=function(t,e,i,s,r,n){if(!i){var o=function(t,e,i){return t.objectMode||!1===t.decodeStrings||"string"!=typeof e||(e=d.from(e,i)),e}(e,s,r);s!==o&&(i=!0,r="buffer",s=o)}var a=e.objectMode?1:s.length;e.length+=a;var h=e.length<e.highWaterMark;if(h||(e.needDrain=!0),e.writing||e.corked){var l=e.lastBufferedRequest;e.lastBufferedRequest={chunk:s,encoding:r,isBuf:i,callback:n,next:null},l?l.next=e.lastBufferedRequest:e.bufferedRequest=e.lastBufferedRequest,e.bufferedRequestCount+=1}else b(t,e,!1,a,s,r,n);return h}(this,r,a,t,e,i)),o},y.prototype.cork=function(){this._writableState.corked++},y.prototype.uncork=function(){var t=this._writableState;t.corked&&(t.corked--,t.writing||t.corked||t.finished||t.bufferProcessing||!t.bufferedRequest||k(this,t))},y.prototype.setDefaultEncoding=function(t){if("string"==typeof t&&(t=t.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((t+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+t);return this._writableState.defaultEncoding=t,this},Object.defineProperty(y.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),y.prototype._write=function(t,e,i){i(new Error("_write() is not implemented"))},y.prototype._writev=null,y.prototype.end=function(t,e,i){var s=this._writableState;"function"==typeof t?(i=t,t=null,e=null):"function"==typeof e&&(i=e,e=null),null!==t&&void 0!==t&&this.write(t,e),s.corked&&(s.corked=1,this.uncork()),s.ending||s.finished||function(t,e,i){e.ending=!0,S(t,e),i&&(e.finished?n.nextTick(i):t.once("finish",i)),e.ended=!0,t.writable=!1}(this,s,i)},Object.defineProperty(y.prototype,"destroyed",{get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(t){this._writableState&&(this._writableState.destroyed=t)}}),y.prototype.destroy=g.destroy,y.prototype._undestroy=g.undestroy,y.prototype._destroy=function(t,e){this.end(),e(t)}}).call(this,i(15),i(26).setImmediate,i(10))},function(t,e,i){(e=t.exports=i(88)).Stream=e,e.Readable=e,e.Writable=i(58),e.Duplex=i(20),e.Transform=i(85),e.PassThrough=i(167)},function(t,e,i){"use strict";(function(e){
/*!
 * sha256.js - SHA256 implementation for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 * Parts of this software based on hash.js.
 */
const s=i(0),r=i(23),n=-1,o=e.alloc(8,0),a=e.alloc(64,0);a[0]=128;const h=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);class l{constructor(){this.state=new Uint32Array(8),this.msg=new Uint32Array(64),this.block=e.allocUnsafe(64),this.size=n}init(){return this.state[0]=1779033703,this.state[1]=3144134277,this.state[2]=1013904242,this.state[3]=2773480762,this.state[4]=1359893119,this.state[5]=2600822924,this.state[6]=528734635,this.state[7]=1541459225,this.size=0,this}update(t){return s(e.isBuffer(t)),this._update(t,t.length),this}final(){return this._final(e.allocUnsafe(32))}_update(t,e){s(this.size!==n,"Context already finalized.");let i=63&this.size,r=0;if(this.size+=e,i>0){let s=64-i;if(s>e&&(s=e),t.copy(this.block,i,r,r+s),e-=s,r+=s,(i+=s)<64)return;this.transform(this.block,0)}for(;e>=64;)this.transform(t,r),r+=64,e-=64;e>0&&t.copy(this.block,0,r,r+e)}_final(t){s(this.size!==n,"Context already finalized.");const e=this.size%64,i=8*this.size;g(o,i*(1/4294967296),0),g(o,i,4),this._update(a,1+(119-e)%64),this._update(o,8);for(let e=0;e<8;e++)g(t,this.state[e],4*e),this.state[e]=0;for(let t=0;t<64;t++)this.msg[t]=0;for(let t=0;t<64;t++)this.block[t]=0;return this.size=n,t}transform(t,e){const i=this.msg;let s=this.state[0],r=this.state[1],n=this.state[2],o=this.state[3],a=this.state[4],l=this.state[5],g=this.state[6],m=this.state[7],w=0;for(;w<16;w++)i[w]=16777216*(255&(y=t)[b=e+4*w])+((255&y[b+1])<<16|(255&y[b+2])<<8|255&y[b+3]);for(var y,b,v;w<64;w++)i[w]=(((v=i[w-2])>>>17|v<<15)^(v>>>19|v<<13)^v>>>10)+i[w-7]+f(i[w-15])+i[w-16];for(w=0;w<64;w++){let t=m+c(a);t+=d(a,l,g),t+=h[w]+i[w];let e=u(s);e+=p(s,r,n),m=g,g=l,l=a,a=o+t,o=n,n=r,r=s,s=t+e}this.state[0]+=s,this.state[1]+=r,this.state[2]+=n,this.state[3]+=o,this.state[4]+=a,this.state[5]+=l,this.state[6]+=g,this.state[7]+=m}static hash(){return new l}static hmac(){return new r(l,64)}static digest(t){return l.ctx.init().update(t).final()}static root(t,i){return s(e.isBuffer(t)&&32===t.length),s(e.isBuffer(i)&&32===i.length),l.ctx.init().update(t).update(i).final()}static multi(t,e,i){const s=l.ctx;return s.init(),s.update(t),s.update(e),i&&s.update(i),s.final()}static mac(t,e){return l.hmac().init(e).update(t).final()}}function u(t){return(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10)}function c(t){return(t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7)}function f(t){return(t>>>7|t<<25)^(t>>>18|t<<14)^t>>>3}function d(t,e,i){return i^t&(e^i)}function p(t,e,i){return t&e|i&(t|e)}function g(t,e,i){t[i]=e>>>24,t[i+1]=e>>16&255,t[i+2]=e>>8&255,t[i+3]=255&e}l.id="sha256",l.size=32,l.bits=256,l.blockSize=64,l.zero=e.alloc(32,0),l.ctx=new l,t.exports=l}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * common.js - commonly required functions for wallet.
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=e;s.isName=function(t){if("string"!=typeof t)return!1;if(0===t.length)return!1;if(!/^[\-\._0-9A-Za-z]+$/.test(t))return!1;switch(t[0]){case"_":case"-":case".":return!1}switch(t[t.length-1]){case"_":case"-":case".":return!1}return t.length>=1&&t.length<=40},s.sortTX=function(t){return t.sort((t,e)=>t.mtime-e.mtime)},s.sortCoins=function(t){return t.sort((t,e)=>(t=-1===t.height?2147483647:t.height)-(e=-1===e.height?2147483647:e.height))},s.sortDeps=function(t){const e=new Map;for(const i of t){const t=i.hash("hex");e.set(t,i)}const i=new Map,s=new Map,r=[];for(const[t,n]of e){s.set(t,0);let o=!1;for(const r of n.inputs){const a=r.prevout.hash;if(!e.has(a))continue;const h=s.get(t);s.set(t,h+1),o=!0,i.has(a)||i.set(a,[]),i.get(a).push(n)}o||r.push(n)}const n=[];for(const t of r){const e=t.hash("hex"),o=i.get(e);if(n.push(t),o)for(const t of o){const e=t.hash("hex");let i=s.get(e);0==--i&&r.push(t),s.set(e,i)}}return n}},function(t,e,i){"use strict";
/*!
 * bfilter.js - bloom filters for javascript
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(298),r=i(296);e.BloomFilter=s,e.RollingFilter=r},function(t,e,i){"use strict";(function(e){
/*!
 * merkleblock.js - merkleblock object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(5),o=i(9),a=i(3),h=i(64),l=i(42),u=e.from([0]),{encoding:c}=r;class f extends h{constructor(t){super(),this.txs=[],this.hashes=[],this.flags=u,this.totalTX=0,this._tree=null,t&&this.fromOptions(t)}fromOptions(t){if(this.parseOptions(t),s(t,"MerkleBlock data is required."),s(Array.isArray(t.hashes)),s(e.isBuffer(t.flags)),s(t.totalTX>>>0===t.totalTX),t.hashes)for(let i of t.hashes)"string"==typeof i&&(i=e.from(i,"hex")),s(e.isBuffer(i)),this.hashes.push(i);return t.flags&&(s(e.isBuffer(t.flags)),this.flags=t.flags),null!=t.totalTX&&(s(t.totalTX>>>0===t.totalTX),this.totalTX=t.totalTX),this}static fromOptions(t){return(new this).fromOptions(t)}refresh(t){if(this._refresh(),this._tree=null,t)for(const t of this.txs)t.refresh()}hasTX(t){return-1!==this.indexOf(t)}indexOf(t){const e=this.getTree().map.get(t);return null==e?-1:e}verifyBody(){const[t]=this.checkBody();return t}checkBody(){return this.getTree().root!==this.merkleRoot?[!1,"bad-txnmrklroot",100]:[!0,"valid",0]}getTree(){if(!this._tree)try{this._tree=this.extractTree()}catch(t){this._tree=new d}return this._tree}extractTree(){const t=[],e=[],i=new Map,s=this.hashes,r=this.flags,n=this.totalTX;let h=0,l=0,u=!1,c=0;const f=t=>n+(1<<t)-1>>>t,p=(n,c)=>{if(h>=8*r.length)return u=!0,a.ZERO_HASH;const d=r[h/8|0]>>>h%8&1;if(h+=1,0===n||!d){if(l>=s.length)return u=!0,a.ZERO_HASH;const r=s[l];if(l+=1,0===n&&d){const s=r.toString("hex");t.push(r),e.push(c),i.set(s,c)}return r}const g=p(n-1,2*c);let m;return 2*c+1<f(n-1)?(m=p(n-1,2*c+1)).equals(g)&&(u=!0):m=g,o.root(g,m)};if(0===n)throw new Error("Zero transactions.");if(s.length>n)throw new Error("Too many hashes.");if(8*r.length<s.length)throw new Error("Flags too small.");for(;f(c)>1;)c+=1;const g=p(c,0);if(u)throw new Error("Mutated merkle tree.");if(((h+7)/8|0)!==r.length)throw new Error("Too many flag bits.");if(l!==s.length)throw new Error("Incorrect number of hashes.");return new d(g,t,e,i)}getCoinbaseHeight(){return-1}inspect(){return this.format()}format(t,e){return{hash:this.rhash(),height:null!=e?e:-1,date:n.date(this.time),version:this.version.toString(16),prevBlock:n.revHex(this.prevBlock),merkleRoot:n.revHex(this.merkleRoot),time:this.time,bits:this.bits,nonce:this.nonce,totalTX:this.totalTX,hashes:this.hashes.map(t=>t.toString("hex")),flags:this.flags,map:this.getTree().map,txs:this.txs.length}}getSize(){let t=0;return t+=80,t+=4,t+=c.sizeVarint(this.hashes.length),t+=32*this.hashes.length,(t+=c.sizeVarint(this.flags.length))+this.flags.length}toWriter(t){this.writeHead(t),t.writeU32(this.totalTX),t.writeVarint(this.hashes.length);for(const e of this.hashes)t.writeHash(e);return t.writeVarBytes(this.flags),t}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}fromReader(t){this.readHead(t),this.totalTX=t.readU32();const e=t.readVarint();for(let i=0;i<e;i++)this.hashes.push(t.readHash());return this.flags=t.readVarBytes(),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}toJSON(){return this.getJSON()}getJSON(t,e,i){return{hash:this.rhash(),height:i,version:this.version,prevBlock:n.revHex(this.prevBlock),merkleRoot:n.revHex(this.merkleRoot),time:this.time,bits:this.bits,nonce:this.nonce,totalTX:this.totalTX,hashes:this.hashes.map(t=>n.revHex(t.toString("hex"))),flags:this.flags.toString("hex")}}fromJSON(t){s(t,"MerkleBlock data is required."),s(Array.isArray(t.hashes)),s("string"==typeof t.flags),s(t.totalTX>>>0===t.totalTX),this.parseJSON(t);for(let i of t.hashes)i=n.revHex(i),this.hashes.push(e.from(i,"hex"));return this.flags=e.from(t.flags,"hex"),this.totalTX=t.totalTX,this}static fromJSON(t){return(new this).fromJSON(t)}static fromBlock(t,e){const i=[];for(const s of t.txs)i.push(s.isWatched(e)?1:0);return this.fromMatches(t,i)}static fromHashes(t,i){const s=new Set;for(let t of i)e.isBuffer(t)&&(t=t.toString("hex")),s.add(t);const r=[];for(const e of t.txs){const t=e.hash("hex");r.push(s.has(t)?1:0)}return this.fromMatches(t,r)}static fromMatches(t,i){const s=[],r=[],n=[],a=[],h=t.txs.length;let l=0;const u=t=>h+(1<<t)-1>>>t,c=(t,e,i)=>{if(0===t)return i[e];const s=c(t-1,2*e,i);let r;return r=2*e+1<u(t-1)?c(t-1,2*e+1,i):s,o.root(s,r)},f=(t,e,i,s)=>{let r=0;for(let i=e<<t;i<e+1<<t&&i<h;i++)r|=s[i];n.push(r),0!==t&&r?(f(t-1,2*e,i,s),2*e+1<u(t-1)&&f(t-1,2*e+1,i,s)):a.push(c(t,e,i))};for(let e=0;e<t.txs.length;e++){const n=t.txs[e];i[e]&&s.push(n),r.push(n.hash())}for(;u(l)>1;)l+=1;f(l,0,r,i);const d=e.allocUnsafe((n.length+7)/8|0);d.fill(0);for(let t=0;t<n.length;t++)d[t/8|0]|=n[t]<<t%8;const p=new this;return p._hash=t._hash,p._hhash=t._hhash,p.version=t.version,p.prevBlock=t.prevBlock,p.merkleRoot=t.merkleRoot,p.time=t.time,p.bits=t.bits,p.nonce=t.nonce,p.totalTX=h,p.hashes=a,p.flags=d,p.txs=s,p}static isMerkleBlock(t){return t instanceof f}toHeaders(){return l.fromBlock(this)}}class d{constructor(t,e,i,s){this.root=t?t.toString("hex"):a.NULL_HASH,this.matches=e||[],this.indexes=i||[],this.map=s||new Map}}t.exports=f}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * abstractblock.js - abstract block object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(9),n=i(2),o=i(5),a=i(35),h=i(3);t.exports=class{constructor(){this.version=1,this.prevBlock=h.NULL_HASH,this.merkleRoot=h.NULL_HASH,this.time=0,this.bits=0,this.nonce=0,this.mutable=!1,this._hash=null,this._hhash=null}parseOptions(t){return s(t,"Block data is required."),s(t.version>>>0===t.version),s("string"==typeof t.prevBlock),s("string"==typeof t.merkleRoot),s(t.time>>>0===t.time),s(t.bits>>>0===t.bits),s(t.nonce>>>0===t.nonce),this.version=t.version,this.prevBlock=t.prevBlock,this.merkleRoot=t.merkleRoot,this.time=t.time,this.bits=t.bits,this.nonce=t.nonce,null!=t.mutable&&(s("boolean"==typeof t.mutable),this.mutable=t.mutable),this}parseJSON(t){return s(t,"Block data is required."),s(t.version>>>0===t.version),s("string"==typeof t.prevBlock),s("string"==typeof t.merkleRoot),s(t.time>>>0===t.time),s(t.bits>>>0===t.bits),s(t.nonce>>>0===t.nonce),this.version=t.version,this.prevBlock=o.revHex(t.prevBlock),this.merkleRoot=o.revHex(t.merkleRoot),this.time=t.time,this.bits=t.bits,this.nonce=t.nonce,this}isMemory(){return!1}_refresh(){this._hash=null,this._hhash=null}refresh(){return this._refresh()}hash(t){let e=this._hash;if(e||(e=r.digest(this.toHead()),this.mutable||(this._hash=e)),"hex"===t){let t=this._hhash;t||(t=e.toString("hex"),this.mutable||(this._hhash=t)),e=t}return e}toHead(){return this.writeHead(n.write(80)).render()}fromHead(t){return this.readHead(n.read(t))}writeHead(t){return t.writeU32(this.version),t.writeHash(this.prevBlock),t.writeHash(this.merkleRoot),t.writeU32(this.time),t.writeU32(this.bits),t.writeU32(this.nonce),t}readHead(t){return this.version=t.readU32(),this.prevBlock=t.readHash("hex"),this.merkleRoot=t.readHash("hex"),this.time=t.readU32(),this.bits=t.readU32(),this.nonce=t.readU32(),this}verify(){return!!this.verifyPOW()&&!!this.verifyBody()}verifyPOW(){return h.verifyPOW(this.hash(),this.bits)}verifyBody(){throw new Error("Abstract method.")}rhash(){return o.revHex(this.hash("hex"))}toInv(){return new a(a.types.BLOCK,this.hash("hex"))}}},function(t,e,i){"use strict";
/*!
 * path.js - path object for wallets
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(2),n=i(12),{encoding:o}=r;class a{constructor(t){this.keyType=a.types.HD,this.name=null,this.account=0,this.type=n.types.PUBKEYHASH,this.version=-1,this.branch=-1,this.index=-1,this.encrypted=!1,this.data=null,this.hash=null,t&&this.fromOptions(t)}fromOptions(t){return this.keyType=t.keyType,this.name=t.name,this.account=t.account,this.branch=t.branch,this.index=t.index,this.encrypted=t.encrypted,this.data=t.data,this.type=t.type,this.version=t.version,this.hash=t.hash,this}static fromOptions(t){return(new this).fromOptions(t)}clone(){const t=new this.constructor;return t.keyType=this.keyType,t.name=this.name,t.account=this.account,t.branch=this.branch,t.index=this.index,t.encrypted=this.encrypted,t.data=this.data,t.type=this.type,t.version=this.version,t.hash=this.hash,t}fromRaw(t){const e=r.read(t);this.account=e.readU32(),this.keyType=e.readU8();const i=e.readU8();switch(this.type=7&i,this.version=i>>>3,31===this.version&&(this.version=-1),this.keyType){case a.types.HD:this.branch=e.readU32(),this.index=e.readU32();break;case a.types.KEY:this.encrypted=1===e.readU8(),this.data=e.readVarBytes();break;case a.types.ADDRESS:break;default:s(!1)}return this}static fromRaw(t){return(new this).fromRaw(t)}getSize(){let t=0;switch(t+=6,this.keyType){case a.types.HD:t+=8;break;case a.types.KEY:t+=1,t+=o.sizeVarBytes(this.data)}return t}toRaw(){const t=this.getSize(),e=r.write(t);e.writeU32(this.account),e.writeU8(this.keyType);let i=this.version;-1===i&&(i=31);const n=i<<3|this.type;switch(e.writeU8(n),this.keyType){case a.types.HD:s(!this.data),s(-1!==this.index),e.writeU32(this.branch),e.writeU32(this.index);break;case a.types.KEY:s(this.data),s(-1===this.index),e.writeU8(this.encrypted?1:0),e.writeVarBytes(this.data);break;case a.types.ADDRESS:s(!this.data),s(-1===this.index);break;default:s(!1)}return e.render()}fromAddress(t,e){return this.keyType=a.types.ADDRESS,this.name=t.name,this.account=t.accountIndex,this.version=e.version,this.type=e.type,this.hash=e.getHash("hex"),this}static fromAddress(t,e){return(new this).fromAddress(t,e)}toPath(){return this.keyType!==a.types.HD?null:`m/${this.account}'/${this.branch}/${this.index}`}toAddress(){return n.fromHash(this.hash,this.type,this.version)}toJSON(){return{name:this.name,account:this.account,change:1===this.branch,derivation:this.toPath()}}inspect(){return`<Path: ${this.name}:${this.toPath()}>`}}a.types={HD:0,KEY:1,ADDRESS:2},a.typesByVal=["HD","KEY","ADDRESS"],t.exports=a},function(t,e,i){"use strict";
/*!
 * node.js - node object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(7),n=i(72),o=i(50),a=i(271),h=i(8),l=i(131);t.exports=class extends r{constructor(t,e,i,s){super(),this.config=new a(t,{suffix:"network",fallback:"main",alias:{n:"network"}}),this.config.inject(s),this.config.load(s),s.config&&this.config.open(e),this.network=h.get(this.config.getSuffix()),this.memory=this.config.bool("memory",!0),this.startTime=-1,this.bound=[],this.plugins=Object.create(null),this.stack=[],this.logger=null,this.workers=null,this.spv=!1,this.chain=null,this.fees=null,this.mempool=null,this.pool=null,this.miner=null,this.http=null,this.txindex=null,this.addrindex=null,this._init(i)}_init(t){const e=this.config;let i=new o;e.has("logger")&&(i=e.obj("logger")),i.set({filename:!this.memory&&e.bool("log-file")?e.location(t):null,level:e.str("log-level"),console:e.bool("log-console"),shrink:e.bool("log-shrink")}),this.logger=i.context("node"),this.workers=new l({enabled:e.bool("workers"),size:e.uint("workers-size"),timeout:e.uint("workers-timeout"),file:e.str("worker-file")}),this.on("error",()=>{}),this.workers.on("spawn",t=>{this.logger.info("Spawning worker process: %d.",t.id)}),this.workers.on("exit",(t,e)=>{this.logger.warning("Worker %d exited: %s.",e.id,t)}),this.workers.on("log",(t,e)=>{this.logger.debug("Worker %d says:",e.id),this.logger.debug(t)}),this.workers.on("error",(t,e)=>{e?this.logger.error("Worker %d error: %s",e.id,t.message):this.emit("error",t)})}async ensure(){if(!n.unsupported&&!this.memory)return n.mkdirp(this.config.prefix)}location(t){return this.config.location(t)}async handlePreopen(){await this.logger.open(),await this.workers.open(),this._bind(this.network.time,"offset",t=>{this.logger.info("Time offset: %d (%d minutes).",t,t/60|0)}),this._bind(this.network.time,"sample",(t,e)=>{this.logger.debug("Added time data: samples=%d, offset=%d (%d minutes).",e,t,t/60|0)}),this._bind(this.network.time,"mismatch",()=>{this.logger.warning("Adjusted time mismatch!"),this.logger.warning("Please make sure your system clock is correct!")})}async handleOpen(){this.startTime=Date.now(),this.workers.enabled||(this.logger.warning("Warning: worker pool is disabled."),this.logger.warning("Verification will be slow."))}async handlePreclose(){}async handleClose(){for(const[t,e,i]of this.bound)t.removeListener(e,i);this.bound.length=0,this.startTime=-1,await this.workers.close(),await this.logger.close()}_bind(t,e,i){this.bound.push([t,e,i]),t.on(e,i)}error(t){this.logger.error(t),this.emit("error",t)}uptime(){return-1===this.startTime?0:Math.floor((Date.now()-this.startTime)/1e3)}use(t){s(t,"Plugin must be an object."),s("function"==typeof t.init,"`init` must be a function."),s(!this.loaded,"Cannot add plugin after node is loaded.");const e=t.init(this);if(s(!e.open||"function"==typeof e.open,"`open` must be a function."),s(!e.close||"function"==typeof e.close,"`close` must be a function."),t.id){switch(s("string"==typeof t.id,"`id` must be a string."),t.id){case"chain":case"fees":case"mempool":case"miner":case"pool":case"rpc":case"http":s(!1,`${t.id} is already added.`)}s(!this.plugins[t.id],`${t.id} is already added.`),this.plugins[t.id]=e}return this.stack.push(e),"function"==typeof e.on&&e.on("error",t=>this.error(t)),e}has(t){return null!=this.plugins[t]}get(t){switch(s("string"==typeof t,"Plugin name must be a string."),t){case"chain":return s(this.chain,"chain is not loaded."),this.chain;case"fees":return s(this.fees,"fees is not loaded."),this.fees;case"mempool":return s(this.mempool,"mempool is not loaded."),this.mempool;case"miner":return s(this.miner,"miner is not loaded."),this.miner;case"pool":return s(this.pool,"pool is not loaded."),this.pool;case"rpc":return s(this.rpc,"rpc is not loaded."),this.rpc;case"http":return s(this.http,"http is not loaded."),this.http}return this.plugins[t]||null}require(t){const e=this.get(t);return s(e,`${t} is not loaded.`),e}loadPlugins(){const t=this.config.array("plugins",[]),e=this.config.func("loader");for(let i of t)"string"==typeof i&&(s(e,"Must pass a loader function."),i=e(i)),this.use(i)}async openPlugins(){for(const t of this.stack)t.open&&await t.open()}async closePlugins(){for(const t of this.stack)t.close&&await t.close()}}},function(t,e,i){"use strict";
/*!
 * netaddress.js - network address object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(2),n=i(70),o=i(8),a=i(5),h=i(34);class l{constructor(t){this.host="0.0.0.0",this.port=0,this.services=0,this.time=0,this.hostname="0.0.0.0:0",this.raw=n.ZERO_IP,t&&this.fromOptions(t)}fromOptions(t){return s("string"==typeof t.host),s("number"==typeof t.port),this.raw=n.toBuffer(t.host),this.host=n.toString(this.raw),this.port=t.port,t.services&&(s("number"==typeof t.services),this.services=t.services),t.time&&(s("number"==typeof t.time),this.time=t.time),this.hostname=n.toHostname(this.host,this.port),this}static fromOptions(t){return(new this).fromOptions(t)}hasServices(t){return(this.services&t)===t}isIPv4(){return n.isIPv4(this.raw)}isIPv6(){return n.isIPv6(this.raw)}isNull(){return n.isNull(this.raw)}isLocal(){return n.isLocal(this.raw)}isValid(){return n.isValid(this.raw)}isRoutable(){return n.isRoutable(this.raw)}isOnion(){return n.isOnion(this.raw)}equal(t){return 0===this.compare(t)}compare(t){const e=this.raw.compare(t.raw);return 0!==e?e:this.port-t.port}getReachability(t){return n.getReachability(this.raw,t.raw)}setNull(){this.raw=n.ZERO_IP,this.host="0.0.0.0",this.hostname=n.toHostname(this.host,this.port)}setHost(t){this.raw=n.toBuffer(t),this.host=n.toString(this.raw),this.hostname=n.toHostname(this.host,this.port)}setPort(t){s(t>=0&&t<=65535),this.port=t,this.hostname=n.toHostname(this.host,t)}fromHost(t,e,i){return i=o.get(i),s(e>=0&&e<=65535),this.raw=n.toBuffer(t),this.host=n.toString(this.raw),this.port=e,this.services=l.DEFAULT_SERVICES,this.time=i.now(),this.hostname=n.toHostname(this.host,this.port),this}static fromHost(t,e,i){return(new this).fromHost(t,e,i)}fromHostname(t,e){e=o.get(e);const i=n.fromHostname(t,e.port);return this.fromHost(i.host,i.port,e)}static fromHostname(t,e){return(new this).fromHostname(t,e)}fromSocket(t,e){const i=t.remoteAddress,r=t.remotePort;return s("string"==typeof i),s("number"==typeof r),this.fromHost(n.normalize(i),r,e)}static fromSocket(t,e){return(new this).fromSocket(t,e)}fromReader(t,e){return this.time=e?t.readU32():0,this.services=t.readU32(),t.readU32(),this.raw=t.readBytes(16),this.host=n.toString(this.raw),this.port=t.readU16BE(),this.hostname=n.toHostname(this.host,this.port),this}fromRaw(t,e){return this.fromReader(r.read(t),e)}static fromReader(t,e){return(new this).fromReader(t,e)}static fromRaw(t,e){return(new this).fromRaw(t,e)}toWriter(t,e){return e&&t.writeU32(this.time),t.writeU32(this.services),t.writeU32(0),t.writeBytes(this.raw),t.writeU16BE(this.port),t}getSize(t){return 26+(t?4:0)}toRaw(t){const e=this.getSize(t);return this.toWriter(r.write(e),t).render()}toJSON(){return{host:this.host,port:this.port,services:this.services,time:this.time}}fromJSON(t){return s((65535&t.port)===t.port),s(t.services>>>0===t.services),s(t.time>>>0===t.time),this.raw=n.toBuffer(t.host),this.host=t.host,this.port=t.port,this.services=t.services,this.time=t.time,this.hostname=n.toHostname(this.host,this.port),this}static fromJSON(t){return(new this).fromJSON(t)}inspect(){return"<NetAddress:"+` hostname=${this.hostname}`+` services=${this.services.toString(2)}`+` date=${a.date(this.time)}`+">"}}l.DEFAULT_SERVICES=0|h.services.NETWORK|h.services.BLOOM,t.exports=l},function(t,e,i){"use strict";
/*!
 * pkg.js - package constants
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.version="v1.0.0-alpha",e.url="https://github.com/bcoin-org/bcash"},function(t,e,i){"use strict";(function(e){
/*!
 * ccmp.js - constant-time compare for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0);t.exports=function(t,i){if(s(e.isBuffer(t)),s(e.isBuffer(i)),0===i.length)return 0===t.length;let r=t.length^i.length;for(let e=0;e<t.length;e++)r|=t[e]^i[e%i.length];return 0===r}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";t.exports=i(291)},function(t,e,i){"use strict";
/*!
 * mine.js - mining function for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(9);function n(t,e){s(t.length===e.length);for(let i=t.length-1;i>=0;i--){if(t[i]<e[i])return-1;if(t[i]>e[i])return 1}return 0}t.exports=function(t,e,i,s){let o=i;for(t.writeUInt32LE(o,76,!0);o<=s;){if(n(r.digest(t),e)<=0)return o;o+=1,t.writeUInt32LE(o,76,!0)}return-1}},function(t,e,i){"use strict";t.exports=i(304)},function(t,e,i){"use strict";
/*!
 * pbkdf2.js - pbkdf2 for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 */t.exports=i(146)},function(t,e,i){"use strict";
/*!
 * cleanse.js - cleanse for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 */t.exports=i(318)},function(t,e,i){"use strict";(function(e){
/*!
 * mnemonic.js - hd mnemonics for bcoin
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(30),o=i(74),a=i(38),h=i(73),l=i(145),u=i(226),c=i(114),f=i(308),d=Object.create(null);class p{constructor(t){this.bits=c.MIN_ENTROPY,this.language="english",this.entropy=null,this.phrase=null,t&&this.fromOptions(t)}fromOptions(t){return"string"==typeof t&&(t={phrase:t}),null!=t.bits&&(s((65535&t.bits)===t.bits),s(t.bits>=c.MIN_ENTROPY),s(t.bits<=c.MAX_ENTROPY),s(t.bits%32==0),this.bits=t.bits),t.language&&(s("string"==typeof t.language),s(-1!==p.languages.indexOf(t.language)),this.language=t.language),t.phrase?(this.fromPhrase(t.phrase),this):t.entropy?(this.fromEntropy(t.entropy),this):this}static fromOptions(t){return(new this).fromOptions(t)}destroy(){this.bits=c.MIN_ENTROPY,this.language="english",this.entropy&&(o(this.entropy),this.entropy=null),this.phrase=null}toSeed(t){t||(t="");const i=f(this.getPhrase()),s=f(`mnemonic${t}`);return h.derive(l,e.from(i,"utf8"),e.from(s,"utf8"),2048,64)}getEntropy(){return this.entropy||(this.entropy=a.randomBytes(this.bits/8)),s(this.bits/8===this.entropy.length),this.entropy}getPhrase(){if(this.phrase)return this.phrase;const t=this.bits+this.bits/32,i=this.getEntropy(),s=n.digest(i),r=Math.ceil(t/8),o=e.allocUnsafe(r);i.copy(o,0),s.copy(o,i.length);const a=p.getWordlist(this.language);let h=[];for(let e=0;e<t/11;e++){let t=0;for(let i=0;i<11;i++){const s=11*e+i,r=s%8;t<<=1,t|=o[(s-r)/8]>>>7-r&1}h.push(a.words[t])}return h="japanese"===this.language?h.join("　"):h.join(" "),this.phrase=h,h}fromPhrase(t){s("string"==typeof t),s(t.length<=1e3);const i=t.trim().split(/[\s\u3000]+/),r=11*i.length,o=r%32;s(0!==o,"Invalid checksum.");const a=r-o;s(a>=c.MIN_ENTROPY),s(a<=c.MAX_ENTROPY),s(a%32==0);const h=Math.ceil(r/8),l=e.allocUnsafe(h);l.fill(0);const u=p.getLanguage(i[0]),f=p.getWordlist(u);for(let t=0;t<i.length;t++){const e=i[t],s=f.map[e];if(null==s)throw new Error("Could not find word.");for(let e=0;e<11;e++){const i=11*t+e,r=i%8,n=s>>>10-e&1;l[(i-r)/8]|=n<<7-r}}const d=Math.ceil(o/8),g=l.slice(0,l.length-d),m=l.slice(l.length-d),w=n.digest(g);for(let t=0;t<o;t++){const e=t%8,i=(t-e)/8;if((m[i]>>>7-e&1)!=(w[i]>>>7-e&1))throw new Error("Invalid checksum.")}return s(a/8===g.length),this.bits=a,this.language=u,this.entropy=g,this.phrase=t,this}static fromPhrase(t){return(new this).fromPhrase(t)}fromEntropy(t,i){return s(e.isBuffer(t)),s(8*t.length>=c.MIN_ENTROPY),s(8*t.length<=c.MAX_ENTROPY),s(8*t.length%32==0),s(!i||-1!==p.languages.indexOf(i)),this.entropy=t,this.bits=8*t.length,i&&(this.language=i),this}static fromEntropy(t,e){return(new this).fromEntropy(t,e)}static getLanguage(t){for(const e of p.languages)if(null!=p.getWordlist(e).map[t])return e;throw new Error("Could not determine language.")}static getWordlist(t){const e=d[t];if(e)return e;const i=u.get(t),s=new g(i);return d[t]=s,s}toJSON(){return{bits:this.bits,language:this.language,entropy:this.getEntropy().toString("hex"),phrase:this.getPhrase()}}fromJSON(t){return s(t),s((65535&t.bits)===t.bits),s("string"==typeof t.language),s("string"==typeof t.entropy),s("string"==typeof t.phrase),s(t.bits>=c.MIN_ENTROPY),s(t.bits<=c.MAX_ENTROPY),s(t.bits%32==0),s(t.bits/8==t.entropy.length/2),this.bits=t.bits,this.language=t.language,this.entropy=e.from(t.entropy,"hex"),this.phrase=t.phrase,this}static fromJSON(t){return(new this).fromJSON(t)}getSize(){let t=0;return(t+=3)+this.getEntropy().length}toWriter(t){const e=p.languages.indexOf(this.language);return s(-1!==e),t.writeU16(this.bits),t.writeU8(e),t.writeBytes(this.getEntropy()),t}toRaw(t){const e=this.getSize();return this.toWriter(r.write(e)).render()}fromReader(t){const e=t.readU16();s(e>=c.MIN_ENTROPY),s(e<=c.MAX_ENTROPY),s(e%32==0);const i=p.languages[t.readU8()];return s(i),this.bits=e,this.language=i,this.entropy=t.readBytes(e/8),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t){return(new this).fromRaw(t)}toString(){return this.getPhrase()}inspect(){return`<Mnemonic: ${this.getPhrase()}>`}static isMnemonic(t){return t instanceof p}}p.languages=["simplified chinese","traditional chinese","english","french","italian","japanese","spanish"];class g{constructor(t){this.words=t,this.map=Object.create(null);for(let e=0;e<t.length;e++){const i=t[e];this.map[i]=e}}}t.exports=p}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * common.js - bitcoin constants for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.lockFlags={VERIFY_SEQUENCE:1,MEDIAN_TIME_PAST:2},e.lockFlags.MANDATORY_LOCKTIME_FLAGS=0,e.lockFlags.STANDARD_LOCKTIME_FLAGS=0|e.lockFlags.VERIFY_SEQUENCE|e.lockFlags.MEDIAN_TIME_PAST,e.thresholdStates={DEFINED:0,STARTED:1,LOCKED_IN:2,ACTIVE:3,FAILED:4},e.flags={VERIFY_NONE:0,VERIFY_POW:1,VERIFY_BODY:2},e.flags.DEFAULT_FLAGS=0|e.flags.VERIFY_POW|e.flags.VERIFY_BODY},function(t,e,i){"use strict";
/*!
 * undocoins.js - undocoins object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(2),n=i(47);t.exports=class{constructor(){this.items=[]}push(t){return this.items.push(t)}getSize(){let t=0;t+=4;for(const e of this.items)t+=e.getSize();return t}toRaw(){const t=this.getSize(),e=r.write(t);e.writeU32(this.items.length);for(const t of this.items)t.toWriter(e);return e.render()}fromRaw(t){const e=r.read(t),i=e.readU32();for(let t=0;t<i;t++)this.items.push(n.fromReader(e));return this}static fromRaw(t){return(new this).fromRaw(t)}isEmpty(){return 0===this.items.length}commit(){const t=this.toRaw();return this.items.length=0,t}apply(t,e){const i=this.items.pop();s(i),t.addEntry(e,i)}}},function(t,e,i){"use strict";(function(e){
/*!
 * opcode.js - opcode object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(28),o=i(36),a=o.opcodes,h=[];let l=null;class u{constructor(t,e){this.value=t||0,this.data=e||null}isMinimal(){if(!this.data)return!0;if(1===this.data.length){if(129===this.data[0])return!1;if(this.data[0]>=1&&this.data[0]<=16)return!1}return this.data.length<=75?this.value===this.data.length:this.data.length<=255?this.value===a.OP_PUSHDATA1:this.data.length<=65535?this.value===a.OP_PUSHDATA2:(s(this.value===a.OP_PUSHDATA4),!0)}isDisabled(t){switch(this.value){case a.OP_INVERT:case a.OP_2MUL:case a.OP_2DIV:case a.OP_MUL:case a.OP_LSHIFT:case a.OP_RSHIFT:return!0;case a.OP_CAT:case a.OP_SPLIT:case a.OP_AND:case a.OP_OR:case a.OP_XOR:case a.OP_NUM2BIN:case a.OP_BIN2NUM:case a.OP_DIV:case a.OP_MOD:if(!(t&o.flags.VERIFY_MONOLITH_OPCODES))return!0}return!1}isBranch(){return this.value>=a.OP_IF&&this.value<=a.OP_ENDIF}equals(t){return s(u.isOpcode(t)),this.value===t.value&&(this.data?(s(t.data),this.data.equals(t.data)):(s(!t.data),!0))}toOp(){return this.value}toData(){return this.data}toLength(){return this.data?this.data.length:-1}toPush(){return this.value===a.OP_0?o.small[1]:this.value===a.OP_1NEGATE?o.small[0]:this.value>=a.OP_1&&this.value<=a.OP_16?o.small[this.value-80+1]:this.toData()}toString(t){const e=this.toPush();return e?e.toString(t||"utf8"):null}toSmall(){return this.value===a.OP_0?0:this.value>=a.OP_1&&this.value<=a.OP_16?this.value-80:-1}toNum(t,e){return this.value===a.OP_0?n.fromInt(0):this.value===a.OP_1NEGATE?n.fromInt(-1):this.value>=a.OP_1&&this.value<=a.OP_16?n.fromInt(this.value-80):this.data?n.decode(this.data,t,e):null}toInt(t,e){const i=this.toNum(t,e);return i?i.getInt():-1}toBool(){const t=this.toSmall();return-1!==t&&1===t}toSymbol(){if(-1===this.value)return"OP_INVALIDOPCODE";return o.opcodesByVal[this.value]||`0x${c(this.value)}`}getSize(){if(!this.data)return 1;switch(this.value){case a.OP_PUSHDATA1:return 2+this.data.length;case a.OP_PUSHDATA2:return 3+this.data.length;case a.OP_PUSHDATA4:return 5+this.data.length;default:return 1+this.data.length}}toWriter(t){if(-1===this.value)throw new Error("Cannot reserialize a parse error.");if(!this.data)return t.writeU8(this.value),t;switch(this.value){case a.OP_PUSHDATA1:t.writeU8(this.value),t.writeU8(this.data.length),t.writeBytes(this.data);break;case a.OP_PUSHDATA2:t.writeU8(this.value),t.writeU16(this.data.length),t.writeBytes(this.data);break;case a.OP_PUSHDATA4:t.writeU8(this.value),t.writeU32(this.data.length),t.writeBytes(this.data);break;default:s(this.value===this.data.length),t.writeU8(this.value),t.writeBytes(this.data)}return t}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}toFormat(){if(-1===this.value)return"0x01";if(this.data){if(this.data.length<=4){const t=this.toNum();if(this.equals(u.fromNum(t)))return t.toString(10)}const t=o.opcodesByVal[this.value],e=this.data.toString("hex");if(!t)return`0x${c(this.value)} 0x${e}`;let i=this.data.length.toString(16);for(;i.length%2!=0;)i="0"+i;return`${t} 0x${i} 0x${e}`}return o.opcodesByVal[this.value]||`0x${c(this.value)}`}toASM(t){return-1===this.value?"[error]":this.data?o.toASM(this.data,t):o.opcodesByVal[this.value]||"OP_UNKNOWN"}static fromOp(t){s("number"==typeof t);const e=h[t];return s(e,"Bad opcode."),e}static fromData(t){if(s(e.isBuffer(t)),1===t.length){if(129===t[0])return this.fromOp(a.OP_1NEGATE);if(t[0]>=1&&t[0]<=16)return this.fromOp(t[0]+80)}return this.fromPush(t)}static fromPush(t){if(s(e.isBuffer(t)),0===t.length)return this.fromOp(a.OP_0);if(t.length<=75)return new this(t.length,t);if(t.length<=255)return new this(a.OP_PUSHDATA1,t);if(t.length<=65535)return new this(a.OP_PUSHDATA2,t);if(t.length<=4294967295)return new this(a.OP_PUSHDATA4,t);throw new Error("Pushdata size too large.")}static fromString(t,i){s("string"==typeof t);const r=e.from(t,i||"utf8");return this.fromData(r)}static fromSmall(t){return s((255&t)===t&&t>=0&&t<=16),this.fromOp(0===t?0:t+80)}static fromNum(t){return s(n.isScriptNum(t)),this.fromData(t.encode())}static fromInt(t){return s(Number.isSafeInteger(t)),0===t?this.fromOp(a.OP_0):-1===t?this.fromOp(a.OP_1NEGATE):t>=1&&t<=16?this.fromOp(t+80):this.fromNum(n.fromNumber(t))}static fromBool(t){return s("boolean"==typeof t),this.fromSmall(t?1:0)}static fromSymbol(t){s("string"==typeof t),s(t.length>0),32&t.charCodeAt(0)&&(t=t.toUpperCase()),/^OP_/.test(t)||(t=`OP_${t}`);const e=o.opcodes[t];if(null!=e)return this.fromOp(e);s(/^OP_0X/.test(t),"Unknown opcode."),s(7===t.length,"Unknown opcode.");const i=parseInt(t.substring(5),16);return s((255&i)===i,"Unknown opcode."),this.fromOp(i)}static fromReader(t){const e=t.readU8(),i=h[e];if(i)return i;switch(e){case a.OP_PUSHDATA1:{if(t.left()<1)return l;const i=t.readU8();return t.left()<i?(t.seek(t.left()),l):new this(e,t.readBytes(i))}case a.OP_PUSHDATA2:{if(t.left()<2)return t.seek(t.left()),l;const i=t.readU16();return t.left()<i?(t.seek(t.left()),l):new this(e,t.readBytes(i))}case a.OP_PUSHDATA4:{if(t.left()<4)return t.seek(t.left()),l;const i=t.readU32();return t.left()<i?(t.seek(t.left()),l):new this(e,t.readBytes(i))}default:return t.left()<e?(t.seek(t.left()),l):new this(e,t.readBytes(e))}}static fromRaw(t){return this.fromReader(r.read(t))}static isOpcode(t){return t instanceof u}}function c(t){return t<=15?"0"+t.toString(16):t.toString(16)}l=Object.freeze(new u(-1));for(let t=0;t<=255;t++){if(t>=1&&t<=78){h.push(null);continue}const e=new u(t);h.push(Object.freeze(e))}t.exports=u}).call(this,i(1).Buffer)},function(t,e,i){"use strict";var s=i(44);function r(t,e,i){null===t&&null===e&&null===i?(this.x=r.one,this.y=r.one,this.z=r.zero):(this.x=t,this.y=e,this.z=i),this.zOne=this.z===r.one}r.zero=s.fromNumber(0),r.one=s.fromNumber(1),r.prototype.neg=function(){return this.inf?this:new r(this.x,this.y.redNeg(),this.z)},r.prototype.add=function(t){if(this.inf)return t;if(t.inf)return this;var e=t.z.redSqr(),i=this.z.redSqr(),s=this.x.redMul(e),n=t.x.redMul(i),o=this.y.redMul(e).redMul(t.z),a=t.y.redMul(i).redMul(this.z),h=s.redSub(n),l=o.redSub(a);if(h.isZero())return l.isZero()?this.dbl():new r(null,null,null);var u=h.redSqr(),c=s.redMul(u),f=u.redMul(h),d=l.redSqr().redIAdd(f).redISub(c).redISub(c);return new r(d,l.redMul(c.redISub(d)).redISub(o.redMul(f)),this.z.redMul(t.z).redMul(h))},r.prototype.mixedAdd=function(t){if(this.inf)return t.toECJPoint();if(t.inf)return this;var e=this.z.redSqr(),i=this.x,s=t.x.redMul(e),n=this.y,o=t.y.redMul(e).redMul(this.z),a=i.redSub(s),h=n.redSub(o);if(a.isZero())return h.isZero()?this.dbl():new r(null,null,null);var l=a.redSqr(),u=i.redMul(l),c=l.redMul(a),f=h.redSqr().redIAdd(c).redISub(u).redISub(u);return new r(f,h.redMul(u.redISub(f)).redISub(n.redMul(c)),this.z.redMul(a))},r.prototype.dbl=function(){if(this.inf)return this;var t,e,i;if(this.zOne){var s=this.x.redSqr(),n=this.y.redSqr(),o=n.redSqr(),a=this.x.redAdd(n).redSqr().redISub(s).redISub(o);a=a.redIAdd(a);var h=s.redAdd(s).redIAdd(s),l=h.redSqr().redISub(a).redISub(a),u=o.redIAdd(o).redIAdd(o).redIAdd(o);t=l,e=h.redMul(a.redISub(l)).redISub(u),i=this.y.redAdd(this.y)}else{var c=this.x.redSqr(),f=this.y.redSqr(),d=f.redSqr(),p=this.x.redAdd(f).redSqr().redISub(c).redISub(d);p=p.redIAdd(p);var g=c.redAdd(c).redIAdd(c),m=g.redSqr(),w=d.redIAdd(d).redIAdd(d).redIAdd(d);t=m.redISub(p).redISub(p),e=g.redMul(p.redISub(t)).redISub(w),i=(i=this.y.redMul(this.z)).redIAdd(i)}return new r(t,e,i)},r.prototype.dblp=function(t){if(0===t||this.inf)return this;for(var e=this,i=0;i<t;i++)e=e.dbl();return e},Object.defineProperty(r.prototype,"inf",{enumerable:!0,get:function(){return this.z.isZero()}}),t.exports=r},function(t,e,i){"use strict";var s=i(4).Buffer,r=i(44),n=i(79);function o(t,e){null===t&&null===e?(this.x=this.y=null,this.inf=!0):(this.x=t,this.y=e,this.inf=!1)}o.fromPublicKey=function(t){var e,i,s=t[0];return 33!==t.length||2!==s&&3!==s?65!==t.length||4!==s&&6!==s&&7!==s?null:(e=r.fromBuffer(t.slice(1,33)),i=r.fromBuffer(t.slice(33,65)),e.ucmp(r.p)>=0||i.ucmp(r.p)>=0?null:6!==s&&7!==s||i.isOdd()===(7===s)?0!==e.redSqr().redMul(e).redIAdd7().ucmp(i.redSqr())?null:new o(e,i):null):(e=r.fromBuffer(t.slice(1,33))).ucmp(r.p)>=0?null:null===(i=e.redSqr().redMul(e).redIAdd7().redSqrt())?null:(3===s!==i.isOdd()&&(i=i.redNeg()),new o(e,i))},o.prototype.toPublicKey=function(t){var e,i=this.x,r=this.y;return t?((e=s.alloc(33))[0]=r.isOdd()?3:2,i.toBuffer().copy(e,1)):((e=s.alloc(65))[0]=4,i.toBuffer().copy(e,1),r.toBuffer().copy(e,33)),e},o.fromECJPoint=function(t){if(t.inf)return new o(null,null);var e=t.z.redInvm(),i=e.redSqr();return new o(t.x.redMul(i),t.y.redMul(i).redMul(e))},o.prototype.toECJPoint=function(){return this.inf?new n(null,null,null):new n(this.x,this.y,n.one)},o.prototype.neg=function(){return this.inf?this:new o(this.x,this.y.redNeg())},o.prototype.add=function(t){if(this.inf)return t;if(t.inf)return this;if(0===this.x.ucmp(t.x))return 0===this.y.ucmp(t.y)?this.dbl():new o(null,null);var e=this.y.redSub(t.y);e.isZero()||(e=e.redMul(this.x.redSub(t.x).redInvm()));var i=e.redSqr().redISub(this.x).redISub(t.x);return new o(i,e.redMul(this.x.redSub(i)).redISub(this.y))},o.prototype.dbl=function(){if(this.inf)return this;var t=this.y.redAdd(this.y);if(t.isZero())return new o(null,null);var e=this.x.redSqr(),i=e.redAdd(e).redIAdd(e).redMul(t.redInvm()),s=i.redSqr().redISub(this.x.redAdd(this.x));return new o(s,i.redMul(this.x.redSub(s)).redISub(this.y))},o.prototype.mul=function(t){for(var e=this._getNAFPoints(4),i=e.points,s=t.getNAF(e.wnd),r=new n(null,null,null),a=s.length-1;a>=0;a--){for(var h=0;a>=0&&0===s[a];a--,++h);if(a>=0&&(h+=1),r=r.dblp(h),a<0)break;var l=s[a];r=l>0?r.mixedAdd(i[l-1>>1]):r.mixedAdd(i[-l-1>>1].neg())}return o.fromECJPoint(r)},o.prototype._getNAFPoints1=function(){return{wnd:1,points:[this]}},o.prototype._getNAFPoints=function(t){var e=new Array((1<<t)-1);e[0]=this;for(var i=this.dbl(),s=1;s<e.length;++s)e[s]=e[s-1].add(i);return{wnd:t,points:e}},t.exports=o},function(t,e,i){var s=i(6),r=i(21),n=i(4).Buffer,o=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],a=new Array(160);function h(){this.init(),this._w=a,r.call(this,128,112)}function l(t,e,i){return i^t&(e^i)}function u(t,e,i){return t&e|i&(t|e)}function c(t,e){return(t>>>28|e<<4)^(e>>>2|t<<30)^(e>>>7|t<<25)}function f(t,e){return(t>>>14|e<<18)^(t>>>18|e<<14)^(e>>>9|t<<23)}function d(t,e){return(t>>>1|e<<31)^(t>>>8|e<<24)^t>>>7}function p(t,e){return(t>>>1|e<<31)^(t>>>8|e<<24)^(t>>>7|e<<25)}function g(t,e){return(t>>>19|e<<13)^(e>>>29|t<<3)^t>>>6}function m(t,e){return(t>>>19|e<<13)^(e>>>29|t<<3)^(t>>>6|e<<26)}function w(t,e){return t>>>0<e>>>0?1:0}s(h,r),h.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this},h.prototype._update=function(t){for(var e=this._w,i=0|this._ah,s=0|this._bh,r=0|this._ch,n=0|this._dh,a=0|this._eh,h=0|this._fh,y=0|this._gh,b=0|this._hh,v=0|this._al,k=0|this._bl,E=0|this._cl,R=0|this._dl,S=0|this._el,_=0|this._fl,x=0|this._gl,I=0|this._hl,A=0;A<32;A+=2)e[A]=t.readInt32BE(4*A),e[A+1]=t.readInt32BE(4*A+4);for(;A<160;A+=2){var O=e[A-30],B=e[A-30+1],P=d(O,B),N=p(B,O),T=g(O=e[A-4],B=e[A-4+1]),M=m(B,O),C=e[A-14],L=e[A-14+1],U=e[A-32],D=e[A-32+1],F=N+L|0,H=P+C+w(F,N)|0;H=(H=H+T+w(F=F+M|0,M)|0)+U+w(F=F+D|0,D)|0,e[A]=H,e[A+1]=F}for(var z=0;z<160;z+=2){H=e[z],F=e[z+1];var V=u(i,s,r),K=u(v,k,E),j=c(i,v),q=c(v,i),Y=f(a,S),X=f(S,a),W=o[z],G=o[z+1],J=l(a,h,y),$=l(S,_,x),Z=I+X|0,Q=b+Y+w(Z,I)|0;Q=(Q=(Q=Q+J+w(Z=Z+$|0,$)|0)+W+w(Z=Z+G|0,G)|0)+H+w(Z=Z+F|0,F)|0;var tt=q+K|0,et=j+V+w(tt,q)|0;b=y,I=x,y=h,x=_,h=a,_=S,a=n+Q+w(S=R+Z|0,R)|0,n=r,R=E,r=s,E=k,s=i,k=v,i=Q+et+w(v=Z+tt|0,Z)|0}this._al=this._al+v|0,this._bl=this._bl+k|0,this._cl=this._cl+E|0,this._dl=this._dl+R|0,this._el=this._el+S|0,this._fl=this._fl+_|0,this._gl=this._gl+x|0,this._hl=this._hl+I|0,this._ah=this._ah+i+w(this._al,v)|0,this._bh=this._bh+s+w(this._bl,k)|0,this._ch=this._ch+r+w(this._cl,E)|0,this._dh=this._dh+n+w(this._dl,R)|0,this._eh=this._eh+a+w(this._el,S)|0,this._fh=this._fh+h+w(this._fl,_)|0,this._gh=this._gh+y+w(this._gl,x)|0,this._hh=this._hh+b+w(this._hl,I)|0},h.prototype._hash=function(){var t=n.allocUnsafe(64);function e(e,i,s){t.writeInt32BE(e,s),t.writeInt32BE(i,s+4)}return e(this._ah,this._al,0),e(this._bh,this._bl,8),e(this._ch,this._cl,16),e(this._dh,this._dl,24),e(this._eh,this._el,32),e(this._fh,this._fl,40),e(this._gh,this._gl,48),e(this._hh,this._hl,56),t},t.exports=h},function(t,e,i){var s=i(6),r=i(21),n=i(4).Buffer,o=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],a=new Array(64);function h(){this.init(),this._w=a,r.call(this,64,56)}function l(t,e,i){return i^t&(e^i)}function u(t,e,i){return t&e|i&(t|e)}function c(t){return(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10)}function f(t){return(t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7)}function d(t){return(t>>>7|t<<25)^(t>>>18|t<<14)^t>>>3}s(h,r),h.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},h.prototype._update=function(t){for(var e,i=this._w,s=0|this._a,r=0|this._b,n=0|this._c,a=0|this._d,h=0|this._e,p=0|this._f,g=0|this._g,m=0|this._h,w=0;w<16;++w)i[w]=t.readInt32BE(4*w);for(;w<64;++w)i[w]=0|(((e=i[w-2])>>>17|e<<15)^(e>>>19|e<<13)^e>>>10)+i[w-7]+d(i[w-15])+i[w-16];for(var y=0;y<64;++y){var b=m+f(h)+l(h,p,g)+o[y]+i[y]|0,v=c(s)+u(s,r,n)|0;m=g,g=p,p=h,h=a+b|0,a=n,n=r,r=s,s=b+v|0}this._a=s+this._a|0,this._b=r+this._b|0,this._c=n+this._c|0,this._d=a+this._d|0,this._e=h+this._e|0,this._f=p+this._f|0,this._g=g+this._g|0,this._h=m+this._h|0},h.prototype._hash=function(){var t=n.allocUnsafe(32);return t.writeInt32BE(this._a,0),t.writeInt32BE(this._b,4),t.writeInt32BE(this._c,8),t.writeInt32BE(this._d,12),t.writeInt32BE(this._e,16),t.writeInt32BE(this._f,20),t.writeInt32BE(this._g,24),t.writeInt32BE(this._h,28),t},t.exports=h},function(t,e,i){(e=t.exports=function(t){t=t.toLowerCase();var i=e[t];if(!i)throw new Error(t+" is not supported (we accept pull requests)");return new i}).sha=i(162),e.sha1=i(161),e.sha224=i(160),e.sha256=i(82),e.sha384=i(159),e.sha512=i(81)},function(t,e,i){"use strict";var s=i(1).Buffer,r=i(6),n=i(90),o=new Array(16),a=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],h=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],l=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],u=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],c=[0,1518500249,1859775393,2400959708,2840853838],f=[1352829926,1548603684,1836072691,2053994217,0];function d(){n.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520}function p(t,e){return t<<e|t>>>32-e}function g(t,e,i,s,r,n,o,a){return p(t+(e^i^s)+n+o|0,a)+r|0}function m(t,e,i,s,r,n,o,a){return p(t+(e&i|~e&s)+n+o|0,a)+r|0}function w(t,e,i,s,r,n,o,a){return p(t+((e|~i)^s)+n+o|0,a)+r|0}function y(t,e,i,s,r,n,o,a){return p(t+(e&s|i&~s)+n+o|0,a)+r|0}function b(t,e,i,s,r,n,o,a){return p(t+(e^(i|~s))+n+o|0,a)+r|0}r(d,n),d.prototype._update=function(){for(var t=o,e=0;e<16;++e)t[e]=this._block.readInt32LE(4*e);for(var i=0|this._a,s=0|this._b,r=0|this._c,n=0|this._d,d=0|this._e,v=0|this._a,k=0|this._b,E=0|this._c,R=0|this._d,S=0|this._e,_=0;_<80;_+=1){var x,I;_<16?(x=g(i,s,r,n,d,t[a[_]],c[0],l[_]),I=b(v,k,E,R,S,t[h[_]],f[0],u[_])):_<32?(x=m(i,s,r,n,d,t[a[_]],c[1],l[_]),I=y(v,k,E,R,S,t[h[_]],f[1],u[_])):_<48?(x=w(i,s,r,n,d,t[a[_]],c[2],l[_]),I=w(v,k,E,R,S,t[h[_]],f[2],u[_])):_<64?(x=y(i,s,r,n,d,t[a[_]],c[3],l[_]),I=m(v,k,E,R,S,t[h[_]],f[3],u[_])):(x=b(i,s,r,n,d,t[a[_]],c[4],l[_]),I=g(v,k,E,R,S,t[h[_]],f[4],u[_])),i=d,d=n,n=p(r,10),r=s,s=x,v=S,S=R,R=p(E,10),E=k,k=I}var A=this._b+r+R|0;this._b=this._c+n+S|0,this._c=this._d+d+v|0,this._d=this._e+i+k|0,this._e=this._a+s+E|0,this._a=A},d.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var t=s.alloc?s.alloc(20):new s(20);return t.writeInt32LE(this._a,0),t.writeInt32LE(this._b,4),t.writeInt32LE(this._c,8),t.writeInt32LE(this._d,12),t.writeInt32LE(this._e,16),t},t.exports=d},function(t,e,i){"use strict";t.exports=n;var s=i(20),r=i(29);function n(t){if(!(this instanceof n))return new n(t);s.call(this,t),this._transformState={afterTransform:function(t,e){var i=this._transformState;i.transforming=!1;var s=i.writecb;if(!s)return this.emit("error",new Error("write callback called multiple times"));i.writechunk=null,i.writecb=null,null!=e&&this.push(e),s(t);var r=this._readableState;r.reading=!1,(r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,t&&("function"==typeof t.transform&&(this._transform=t.transform),"function"==typeof t.flush&&(this._flush=t.flush)),this.on("prefinish",o)}function o(){var t=this;"function"==typeof this._flush?this._flush(function(e,i){a(t,e,i)}):a(this,null,null)}function a(t,e,i){if(e)return t.emit("error",e);if(null!=i&&t.push(i),t._writableState.length)throw new Error("Calling transform done when ws.length != 0");if(t._transformState.transforming)throw new Error("Calling transform done when still transforming");return t.push(null)}r.inherits=i(6),r.inherits(n,s),n.prototype.push=function(t,e){return this._transformState.needTransform=!1,s.prototype.push.call(this,t,e)},n.prototype._transform=function(t,e,i){throw new Error("_transform() is not implemented")},n.prototype._write=function(t,e,i){var s=this._transformState;if(s.writecb=i,s.writechunk=t,s.writeencoding=e,!s.transforming){var r=this._readableState;(s.needTransform||r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}},n.prototype._read=function(t){var e=this._transformState;null!==e.writechunk&&e.writecb&&!e.transforming?(e.transforming=!0,this._transform(e.writechunk,e.writeencoding,e.afterTransform)):e.needTransform=!0},n.prototype._destroy=function(t,e){var i=this;s.prototype._destroy.call(this,t,function(t){e(t),i.emit("close")})}},function(t,e,i){"use strict";var s=i(45);function r(t,e){t.emit("error",e)}t.exports={destroy:function(t,e){var i=this,n=this._readableState&&this._readableState.destroyed,o=this._writableState&&this._writableState.destroyed;return n||o?(e?e(t):!t||this._writableState&&this._writableState.errorEmitted||s.nextTick(r,this,t),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(t||null,function(t){!e&&t?(s.nextTick(r,i,t),i._writableState&&(i._writableState.errorEmitted=!0)):e&&e(t)}),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}}},function(t,e,i){t.exports=i(7).EventEmitter},function(t,e,i){"use strict";(function(e,s){var r=i(45);t.exports=b;var n,o=i(99);b.ReadableState=y,i(7).EventEmitter;var a=function(t,e){return t.listeners(e).length},h=i(87),l=i(4).Buffer,u=e.Uint8Array||function(){},c=i(29);c.inherits=i(6);var f=i(171),d=void 0;d=f&&f.debuglog?f.debuglog("stream"):function(){};var p,g=i(170),m=i(86);c.inherits(b,h);var w=["error","close","destroy","pause","resume"];function y(t,e){n=n||i(20),t=t||{};var s=e instanceof n;this.objectMode=!!t.objectMode,s&&(this.objectMode=this.objectMode||!!t.readableObjectMode);var r=t.highWaterMark,o=t.readableHighWaterMark,a=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:s&&(o||0===o)?o:a,this.highWaterMark=Math.floor(this.highWaterMark),this.buffer=new g,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.destroyed=!1,this.defaultEncoding=t.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(p||(p=i(57).StringDecoder),this.decoder=new p(t.encoding),this.encoding=t.encoding)}function b(t){if(n=n||i(20),!(this instanceof b))return new b(t);this._readableState=new y(t,this),this.readable=!0,t&&("function"==typeof t.read&&(this._read=t.read),"function"==typeof t.destroy&&(this._destroy=t.destroy)),h.call(this)}function v(t,e,i,s,r){var n,o=t._readableState;return null===e?(o.reading=!1,function(t,e){if(!e.ended){if(e.decoder){var i=e.decoder.end();i&&i.length&&(e.buffer.push(i),e.length+=e.objectMode?1:i.length)}e.ended=!0,S(t)}}(t,o)):(r||(n=function(t,e){var i,s;return s=e,l.isBuffer(s)||s instanceof u||"string"==typeof e||void 0===e||t.objectMode||(i=new TypeError("Invalid non-string/buffer chunk")),i}(o,e)),n?t.emit("error",n):o.objectMode||e&&e.length>0?("string"==typeof e||o.objectMode||Object.getPrototypeOf(e)===l.prototype||(e=function(t){return l.from(t)}(e)),s?o.endEmitted?t.emit("error",new Error("stream.unshift() after end event")):k(t,o,e,!0):o.ended?t.emit("error",new Error("stream.push() after EOF")):(o.reading=!1,o.decoder&&!i?(e=o.decoder.write(e),o.objectMode||0!==e.length?k(t,o,e,!1):x(t,o)):k(t,o,e,!1))):s||(o.reading=!1)),function(t){return!t.ended&&(t.needReadable||t.length<t.highWaterMark||0===t.length)}(o)}function k(t,e,i,s){e.flowing&&0===e.length&&!e.sync?(t.emit("data",i),t.read(0)):(e.length+=e.objectMode?1:i.length,s?e.buffer.unshift(i):e.buffer.push(i),e.needReadable&&S(t)),x(t,e)}Object.defineProperty(b.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(t){this._readableState&&(this._readableState.destroyed=t)}}),b.prototype.destroy=m.destroy,b.prototype._undestroy=m.undestroy,b.prototype._destroy=function(t,e){this.push(null),e(t)},b.prototype.push=function(t,e){var i,s=this._readableState;return s.objectMode?i=!0:"string"==typeof t&&((e=e||s.defaultEncoding)!==s.encoding&&(t=l.from(t,e),e=""),i=!0),v(this,t,e,!1,i)},b.prototype.unshift=function(t){return v(this,t,null,!0,!1)},b.prototype.isPaused=function(){return!1===this._readableState.flowing},b.prototype.setEncoding=function(t){return p||(p=i(57).StringDecoder),this._readableState.decoder=new p(t),this._readableState.encoding=t,this};var E=8388608;function R(t,e){return t<=0||0===e.length&&e.ended?0:e.objectMode?1:t!=t?e.flowing&&e.length?e.buffer.head.data.length:e.length:(t>e.highWaterMark&&(e.highWaterMark=function(t){return t>=E?t=E:(t--,t|=t>>>1,t|=t>>>2,t|=t>>>4,t|=t>>>8,t|=t>>>16,t++),t}(t)),t<=e.length?t:e.ended?e.length:(e.needReadable=!0,0))}function S(t){var e=t._readableState;e.needReadable=!1,e.emittedReadable||(d("emitReadable",e.flowing),e.emittedReadable=!0,e.sync?r.nextTick(_,t):_(t))}function _(t){d("emit readable"),t.emit("readable"),B(t)}function x(t,e){e.readingMore||(e.readingMore=!0,r.nextTick(I,t,e))}function I(t,e){for(var i=e.length;!e.reading&&!e.flowing&&!e.ended&&e.length<e.highWaterMark&&(d("maybeReadMore read 0"),t.read(0),i!==e.length);)i=e.length;e.readingMore=!1}function A(t){d("readable nexttick read 0"),t.read(0)}function O(t,e){e.reading||(d("resume read 0"),t.read(0)),e.resumeScheduled=!1,e.awaitDrain=0,t.emit("resume"),B(t),e.flowing&&!e.reading&&t.read(0)}function B(t){var e=t._readableState;for(d("flow",e.flowing);e.flowing&&null!==t.read(););}function P(t,e){return 0===e.length?null:(e.objectMode?i=e.buffer.shift():!t||t>=e.length?(i=e.decoder?e.buffer.join(""):1===e.buffer.length?e.buffer.head.data:e.buffer.concat(e.length),e.buffer.clear()):i=function(t,e,i){var s;return t<e.head.data.length?(s=e.head.data.slice(0,t),e.head.data=e.head.data.slice(t)):s=t===e.head.data.length?e.shift():i?function(t,e){var i=e.head,s=1,r=i.data;for(t-=r.length;i=i.next;){var n=i.data,o=t>n.length?n.length:t;if(o===n.length?r+=n:r+=n.slice(0,t),0==(t-=o)){o===n.length?(++s,i.next?e.head=i.next:e.head=e.tail=null):(e.head=i,i.data=n.slice(o));break}++s}return e.length-=s,r}(t,e):function(t,e){var i=l.allocUnsafe(t),s=e.head,r=1;for(s.data.copy(i),t-=s.data.length;s=s.next;){var n=s.data,o=t>n.length?n.length:t;if(n.copy(i,i.length-t,0,o),0==(t-=o)){o===n.length?(++r,s.next?e.head=s.next:e.head=e.tail=null):(e.head=s,s.data=n.slice(o));break}++r}return e.length-=r,i}(t,e),s}(t,e.buffer,e.decoder),i);var i}function N(t){var e=t._readableState;if(e.length>0)throw new Error('"endReadable()" called on non-empty stream');e.endEmitted||(e.ended=!0,r.nextTick(T,e,t))}function T(t,e){t.endEmitted||0!==t.length||(t.endEmitted=!0,e.readable=!1,e.emit("end"))}function M(t,e){for(var i=0,s=t.length;i<s;i++)if(t[i]===e)return i;return-1}b.prototype.read=function(t){d("read",t),t=parseInt(t,10);var e=this._readableState,i=t;if(0!==t&&(e.emittedReadable=!1),0===t&&e.needReadable&&(e.length>=e.highWaterMark||e.ended))return d("read: emitReadable",e.length,e.ended),0===e.length&&e.ended?N(this):S(this),null;if(0===(t=R(t,e))&&e.ended)return 0===e.length&&N(this),null;var s,r=e.needReadable;return d("need readable",r),(0===e.length||e.length-t<e.highWaterMark)&&d("length less than watermark",r=!0),e.ended||e.reading?d("reading or ended",r=!1):r&&(d("do read"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0),this._read(e.highWaterMark),e.sync=!1,e.reading||(t=R(i,e))),null===(s=t>0?P(t,e):null)?(e.needReadable=!0,t=0):e.length-=t,0===e.length&&(e.ended||(e.needReadable=!0),i!==t&&e.ended&&N(this)),null!==s&&this.emit("data",s),s},b.prototype._read=function(t){this.emit("error",new Error("_read() is not implemented"))},b.prototype.pipe=function(t,e){var i=this,n=this._readableState;switch(n.pipesCount){case 0:n.pipes=t;break;case 1:n.pipes=[n.pipes,t];break;default:n.pipes.push(t)}n.pipesCount+=1,d("pipe count=%d opts=%j",n.pipesCount,e);var h=e&&!1===e.end||t===s.stdout||t===s.stderr?y:l;function l(){d("onend"),t.end()}n.endEmitted?r.nextTick(h):i.once("end",h),t.on("unpipe",function e(s,r){d("onunpipe"),s===i&&r&&!1===r.hasUnpiped&&(r.hasUnpiped=!0,d("cleanup"),t.removeListener("close",m),t.removeListener("finish",w),t.removeListener("drain",u),t.removeListener("error",g),t.removeListener("unpipe",e),i.removeListener("end",l),i.removeListener("end",y),i.removeListener("data",p),c=!0,!n.awaitDrain||t._writableState&&!t._writableState.needDrain||u())});var u=function(t){return function(){var e=t._readableState;d("pipeOnDrain",e.awaitDrain),e.awaitDrain&&e.awaitDrain--,0===e.awaitDrain&&a(t,"data")&&(e.flowing=!0,B(t))}}(i);t.on("drain",u);var c=!1,f=!1;function p(e){d("ondata"),f=!1,!1!==t.write(e)||f||((1===n.pipesCount&&n.pipes===t||n.pipesCount>1&&-1!==M(n.pipes,t))&&!c&&(d("false write response, pause",i._readableState.awaitDrain),i._readableState.awaitDrain++,f=!0),i.pause())}function g(e){d("onerror",e),y(),t.removeListener("error",g),0===a(t,"error")&&t.emit("error",e)}function m(){t.removeListener("finish",w),y()}function w(){d("onfinish"),t.removeListener("close",m),y()}function y(){d("unpipe"),i.unpipe(t)}return i.on("data",p),function(t,e,i){if("function"==typeof t.prependListener)return t.prependListener(e,i);t._events&&t._events[e]?o(t._events[e])?t._events[e].unshift(i):t._events[e]=[i,t._events[e]]:t.on(e,i)}(t,"error",g),t.once("close",m),t.once("finish",w),t.emit("pipe",i),n.flowing||(d("pipe resume"),i.resume()),t},b.prototype.unpipe=function(t){var e=this._readableState,i={hasUnpiped:!1};if(0===e.pipesCount)return this;if(1===e.pipesCount)return t&&t!==e.pipes?this:(t||(t=e.pipes),e.pipes=null,e.pipesCount=0,e.flowing=!1,t&&t.emit("unpipe",this,i),this);if(!t){var s=e.pipes,r=e.pipesCount;e.pipes=null,e.pipesCount=0,e.flowing=!1;for(var n=0;n<r;n++)s[n].emit("unpipe",this,i);return this}var o=M(e.pipes,t);return-1===o?this:(e.pipes.splice(o,1),e.pipesCount-=1,1===e.pipesCount&&(e.pipes=e.pipes[0]),t.emit("unpipe",this,i),this)},b.prototype.on=function(t,e){var i=h.prototype.on.call(this,t,e);if("data"===t)!1!==this._readableState.flowing&&this.resume();else if("readable"===t){var s=this._readableState;s.endEmitted||s.readableListening||(s.readableListening=s.needReadable=!0,s.emittedReadable=!1,s.reading?s.length&&S(this):r.nextTick(A,this))}return i},b.prototype.addListener=b.prototype.on,b.prototype.resume=function(){var t=this._readableState;return t.flowing||(d("resume"),t.flowing=!0,function(t,e){e.resumeScheduled||(e.resumeScheduled=!0,r.nextTick(O,t,e))}(this,t)),this},b.prototype.pause=function(){return d("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(d("pause"),this._readableState.flowing=!1,this.emit("pause")),this},b.prototype.wrap=function(t){var e=this,i=this._readableState,s=!1;for(var r in t.on("end",function(){if(d("wrapped end"),i.decoder&&!i.ended){var t=i.decoder.end();t&&t.length&&e.push(t)}e.push(null)}),t.on("data",function(r){d("wrapped data"),i.decoder&&(r=i.decoder.write(r)),(!i.objectMode||null!==r&&void 0!==r)&&(i.objectMode||r&&r.length)&&(e.push(r)||(s=!0,t.pause()))}),t)void 0===this[r]&&"function"==typeof t[r]&&(this[r]=function(e){return function(){return t[e].apply(t,arguments)}}(r));for(var n=0;n<w.length;n++)t.on(w[n],this.emit.bind(this,w[n]));return this._read=function(e){d("wrapped _read",e),s&&(s=!1,t.resume())},this},Object.defineProperty(b.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),b._fromList=P}).call(this,i(10),i(15))},function(t,e,i){t.exports=r;var s=i(7).EventEmitter;function r(){s.call(this)}i(6)(r,s),r.Readable=i(59),r.Writable=i(166),r.Duplex=i(165),r.Transform=i(164),r.PassThrough=i(163),r.Stream=r,r.prototype.pipe=function(t,e){var i=this;function r(e){t.writable&&!1===t.write(e)&&i.pause&&i.pause()}function n(){i.readable&&i.resume&&i.resume()}i.on("data",r),t.on("drain",n),t._isStdio||e&&!1===e.end||(i.on("end",a),i.on("close",h));var o=!1;function a(){o||(o=!0,t.end())}function h(){o||(o=!0,"function"==typeof t.destroy&&t.destroy())}function l(t){if(u(),0===s.listenerCount(this,"error"))throw t}function u(){i.removeListener("data",r),t.removeListener("drain",n),i.removeListener("end",a),i.removeListener("close",h),i.removeListener("error",l),t.removeListener("error",l),i.removeListener("end",u),i.removeListener("close",u),t.removeListener("close",u)}return i.on("error",l),t.on("error",l),i.on("end",u),i.on("close",u),t.on("close",u),t.emit("pipe",i),t}},function(t,e,i){"use strict";var s=i(4).Buffer,r=i(89).Transform;function n(t){r.call(this),this._block=s.allocUnsafe(t),this._blockSize=t,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}i(6)(n,r),n.prototype._transform=function(t,e,i){var s=null;try{this.update(t,e)}catch(t){s=t}i(s)},n.prototype._flush=function(t){var e=null;try{this.push(this.digest())}catch(t){e=t}t(e)},n.prototype.update=function(t,e){if(function(t,e){if(!s.isBuffer(t)&&"string"!=typeof t)throw new TypeError("Data must be a string or a buffer")}(t),this._finalized)throw new Error("Digest already called");s.isBuffer(t)||(t=s.from(t,e));for(var i=this._block,r=0;this._blockOffset+t.length-r>=this._blockSize;){for(var n=this._blockOffset;n<this._blockSize;)i[n++]=t[r++];this._update(),this._blockOffset=0}for(;r<t.length;)i[this._blockOffset++]=t[r++];for(var o=0,a=8*t.length;a>0;++o)this._length[o]+=a,(a=this._length[o]/4294967296|0)>0&&(this._length[o]-=4294967296*a);return this},n.prototype._update=function(){throw new Error("_update is not implemented")},n.prototype.digest=function(t){if(this._finalized)throw new Error("Digest already called");this._finalized=!0;var e=this._digest();void 0!==t&&(e=e.toString(t)),this._block.fill(0),this._blockOffset=0;for(var i=0;i<4;++i)this._length[i]=0;return e},n.prototype._digest=function(){throw new Error("_digest is not implemented")},t.exports=n},function(t,e,i){"use strict";(function(e){var s=i(6),r=i(90),n=new Array(16);function o(){r.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878}function a(t,e){return t<<e|t>>>32-e}function h(t,e,i,s,r,n,o){return a(t+(e&i|~e&s)+r+n|0,o)+e|0}function l(t,e,i,s,r,n,o){return a(t+(e&s|i&~s)+r+n|0,o)+e|0}function u(t,e,i,s,r,n,o){return a(t+(e^i^s)+r+n|0,o)+e|0}function c(t,e,i,s,r,n,o){return a(t+(i^(e|~s))+r+n|0,o)+e|0}s(o,r),o.prototype._update=function(){for(var t=n,e=0;e<16;++e)t[e]=this._block.readInt32LE(4*e);var i=this._a,s=this._b,r=this._c,o=this._d;s=c(s=c(s=c(s=c(s=u(s=u(s=u(s=u(s=l(s=l(s=l(s=l(s=h(s=h(s=h(s=h(s,r=h(r,o=h(o,i=h(i,s,r,o,t[0],3614090360,7),s,r,t[1],3905402710,12),i,s,t[2],606105819,17),o,i,t[3],3250441966,22),r=h(r,o=h(o,i=h(i,s,r,o,t[4],4118548399,7),s,r,t[5],1200080426,12),i,s,t[6],2821735955,17),o,i,t[7],4249261313,22),r=h(r,o=h(o,i=h(i,s,r,o,t[8],1770035416,7),s,r,t[9],2336552879,12),i,s,t[10],4294925233,17),o,i,t[11],2304563134,22),r=h(r,o=h(o,i=h(i,s,r,o,t[12],1804603682,7),s,r,t[13],4254626195,12),i,s,t[14],2792965006,17),o,i,t[15],1236535329,22),r=l(r,o=l(o,i=l(i,s,r,o,t[1],4129170786,5),s,r,t[6],3225465664,9),i,s,t[11],643717713,14),o,i,t[0],3921069994,20),r=l(r,o=l(o,i=l(i,s,r,o,t[5],3593408605,5),s,r,t[10],38016083,9),i,s,t[15],3634488961,14),o,i,t[4],3889429448,20),r=l(r,o=l(o,i=l(i,s,r,o,t[9],568446438,5),s,r,t[14],3275163606,9),i,s,t[3],4107603335,14),o,i,t[8],1163531501,20),r=l(r,o=l(o,i=l(i,s,r,o,t[13],2850285829,5),s,r,t[2],4243563512,9),i,s,t[7],1735328473,14),o,i,t[12],2368359562,20),r=u(r,o=u(o,i=u(i,s,r,o,t[5],4294588738,4),s,r,t[8],2272392833,11),i,s,t[11],1839030562,16),o,i,t[14],4259657740,23),r=u(r,o=u(o,i=u(i,s,r,o,t[1],2763975236,4),s,r,t[4],1272893353,11),i,s,t[7],4139469664,16),o,i,t[10],3200236656,23),r=u(r,o=u(o,i=u(i,s,r,o,t[13],681279174,4),s,r,t[0],3936430074,11),i,s,t[3],3572445317,16),o,i,t[6],76029189,23),r=u(r,o=u(o,i=u(i,s,r,o,t[9],3654602809,4),s,r,t[12],3873151461,11),i,s,t[15],530742520,16),o,i,t[2],3299628645,23),r=c(r,o=c(o,i=c(i,s,r,o,t[0],4096336452,6),s,r,t[7],1126891415,10),i,s,t[14],2878612391,15),o,i,t[5],4237533241,21),r=c(r,o=c(o,i=c(i,s,r,o,t[12],1700485571,6),s,r,t[3],2399980690,10),i,s,t[10],4293915773,15),o,i,t[1],2240044497,21),r=c(r,o=c(o,i=c(i,s,r,o,t[8],1873313359,6),s,r,t[15],4264355552,10),i,s,t[6],2734768916,15),o,i,t[13],1309151649,21),r=c(r,o=c(o,i=c(i,s,r,o,t[4],4149444226,6),s,r,t[11],3174756917,10),i,s,t[2],718787259,15),o,i,t[9],3951481745,21),this._a=this._a+i|0,this._b=this._b+s|0,this._c=this._c+r|0,this._d=this._d+o|0},o.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var t=new e(16);return t.writeInt32LE(this._a,0),t.writeInt32LE(this._b,4),t.writeInt32LE(this._c,8),t.writeInt32LE(this._d,12),t},t.exports=o}).call(this,i(1).Buffer)},function(t){t.exports={COMPRESSED_TYPE_INVALID:"compressed should be a boolean",EC_PRIVATE_KEY_TYPE_INVALID:"private key should be a Buffer",EC_PRIVATE_KEY_LENGTH_INVALID:"private key length is invalid",EC_PRIVATE_KEY_RANGE_INVALID:"private key range is invalid",EC_PRIVATE_KEY_TWEAK_ADD_FAIL:"tweak out of range or resulting private key is invalid",EC_PRIVATE_KEY_TWEAK_MUL_FAIL:"tweak out of range",EC_PRIVATE_KEY_EXPORT_DER_FAIL:"couldn't export to DER format",EC_PRIVATE_KEY_IMPORT_DER_FAIL:"couldn't import from DER format",EC_PUBLIC_KEYS_TYPE_INVALID:"public keys should be an Array",EC_PUBLIC_KEYS_LENGTH_INVALID:"public keys Array should have at least 1 element",EC_PUBLIC_KEY_TYPE_INVALID:"public key should be a Buffer",EC_PUBLIC_KEY_LENGTH_INVALID:"public key length is invalid",EC_PUBLIC_KEY_PARSE_FAIL:"the public key could not be parsed or is invalid",EC_PUBLIC_KEY_CREATE_FAIL:"private was invalid, try again",EC_PUBLIC_KEY_TWEAK_ADD_FAIL:"tweak out of range or resulting public key is invalid",EC_PUBLIC_KEY_TWEAK_MUL_FAIL:"tweak out of range",EC_PUBLIC_KEY_COMBINE_FAIL:"the sum of the public keys is not valid",ECDH_FAIL:"scalar was invalid (zero or overflow)",ECDSA_SIGNATURE_TYPE_INVALID:"signature should be a Buffer",ECDSA_SIGNATURE_LENGTH_INVALID:"signature length is invalid",ECDSA_SIGNATURE_PARSE_FAIL:"couldn't parse signature",ECDSA_SIGNATURE_PARSE_DER_FAIL:"couldn't parse DER signature",ECDSA_SIGNATURE_SERIALIZE_DER_FAIL:"couldn't serialize signature to DER format",ECDSA_SIGN_FAIL:"nonce generation function failed or private key is invalid",ECDSA_RECOVER_FAIL:"couldn't recover public key from signature",MSG32_TYPE_INVALID:"message should be a Buffer",MSG32_LENGTH_INVALID:"message length is invalid",OPTIONS_TYPE_INVALID:"options should be an Object",OPTIONS_DATA_TYPE_INVALID:"options.data should be a Buffer",OPTIONS_DATA_LENGTH_INVALID:"options.data length is invalid",OPTIONS_NONCEFN_TYPE_INVALID:"options.noncefn should be a Function",RECOVERY_ID_TYPE_INVALID:"recovery should be a Number",RECOVERY_ID_VALUE_INVALID:"recovery should have value between -1 and 4",TWEAK_TYPE_INVALID:"tweak should be a Buffer",TWEAK_LENGTH_INVALID:"tweak length is invalid"}},function(t,e,i){"use strict";(function(e){
/*!
 * ripemd160.js - RIPEMD160 implementation for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 * Parts of this software based on hash.js.
 */
const s=i(0),r=i(23),n=-1,o=e.alloc(8,0),a=e.alloc(64,0);a[0]=128;const h=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],l=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],u=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],c=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11];class f{constructor(){this.state=new Uint32Array(5),this.msg=new Uint32Array(16),this.block=e.allocUnsafe(64),this.size=n}init(){return this.state[0]=1732584193,this.state[1]=4023233417,this.state[2]=2562383102,this.state[3]=271733878,this.state[4]=3285377520,this.size=0,this}update(t){return s(e.isBuffer(t)),this._update(t,t.length),this}final(){return this._final(e.allocUnsafe(20))}_update(t,e){s(this.size!==n,"Context already finalized.");let i=63&this.size,r=0;if(this.size+=e,i>0){let s=64-i;if(s>e&&(s=e),t.copy(this.block,i,r,r+s),e-=s,r+=s,(i+=s)<64)return;this.transform(this.block,0)}for(;e>=64;)this.transform(t,r),r+=64,e-=64;e>0&&t.copy(this.block,0,r,r+e)}_final(t){s(this.size!==n,"Context already finalized.");const e=this.size%64,i=8*this.size;w(o,i,0),w(o,i*(1/4294967296),4),this._update(a,1+(119-e)%64),this._update(o,8);for(let e=0;e<5;e++)w(t,this.state[e],4*e),this.state[e]=0;for(let t=0;t<16;t++)this.msg[t]=0;for(let t=0;t<64;t++)this.block[t]=0;return this.size=n,t}transform(t,e){const i=this.msg;let s=this.state[0],r=this.state[1],n=this.state[2],o=this.state[3],a=this.state[4],f=s,w=r,y=n,b=o,v=a;for(let s=0;s<16;s++)i[s]=16777216*(255&(k=t)[(E=e+4*s)+3])+((255&k[E+2])<<16|(255&k[E+1])<<8|255&k[E]);var k,E;for(let t=0;t<80;t++){let e=s+p(t,r,n,o)+i[h[t]]+g(t),k=d(e,u[t]),E=k+a;s=a,a=o,o=d(n,10),n=r,r=E,E=(k=d(e=f+p(79-t,w,y,b)+i[l[t]]+m(t),c[t]))+v,f=v,v=b,b=d(y,10),y=w,w=E}const R=this.state[1]+n+b;this.state[1]=this.state[2]+o+v,this.state[2]=this.state[3]+a+f,this.state[3]=this.state[4]+s+w,this.state[4]=this.state[0]+r+y,this.state[0]=R}static hash(){return new f}static hmac(){return new r(f,64)}static digest(t){return f.ctx.init().update(t).final()}static root(t,i){return s(e.isBuffer(t)&&20===t.length),s(e.isBuffer(i)&&20===i.length),f.ctx.init().update(t).update(i).final()}static multi(t,e,i){const s=f.ctx;return s.init(),s.update(t),s.update(e),i&&s.update(i),s.final()}static mac(t,e){return f.hmac().init(e).update(t).final()}}function d(t,e){return t<<e|t>>>32-e}function p(t,e,i,s){return t<=15?e^i^s:t<=31?e&i|~e&s:t<=47?(e|~i)^s:t<=63?e&s|i&~s:e^(i|~s)}function g(t){return t<=15?0:t<=31?1518500249:t<=47?1859775393:t<=63?2400959708:2840853838}function m(t){return t<=15?1352829926:t<=31?1548603684:t<=47?1836072691:t<=63?2053994217:0}function w(t,e,i){t[i+3]=e>>>24,t[i+2]=e>>16&255,t[i+1]=e>>8&255,t[i]=255&e}f.id="ripemd160",f.size=20,f.bits=160,f.blockSize=64,f.zero=e.alloc(20,0),f.ctx=new f,t.exports=f}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * coins.js - coins object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(47);t.exports=class{constructor(){this.outputs=new Map}add(t,e){return s(t>>>0===t),s(e),this.outputs.set(t,e),e}addOutput(t,e){return this.add(t,r.fromOutput(e))}addIndex(t,e,i){return this.add(e,r.fromTX(t,e,i))}addCoin(t){return this.add(t.index,r.fromCoin(t))}has(t){return this.outputs.has(t)}isUnspent(t){const e=this.outputs.get(t);return!(!e||e.spent)}get(t){return this.outputs.get(t)||null}getOutput(t){const e=this.outputs.get(t);return e?e.output:null}getCoin(t){const e=this.outputs.get(t.index);return e?e.toCoin(t):null}spend(t){const e=this.get(t);return!e||e.spent?null:(e.spent=!0,e)}remove(t){const e=this.get(t);return e?(this.outputs.delete(t),e):null}isEmpty(){return 0===this.outputs.size}fromTX(t,e){s("number"==typeof e);for(let i=0;i<t.outputs.length;i++){if(t.outputs[i].script.isUnspendable())continue;const s=r.fromTX(t,i,e);this.outputs.set(i,s)}return this}static fromTX(t,e){return(new this).fromTX(t,e)}}},function(t,e,i){"use strict";
/*!
 * network.js - bitcoin networks for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(52),r=e;r.types=["main","testnet","regtest","simnet"];const n={type:"main",seeds:["seed.bitcoinabc.org","seed-abc.bitcoinforks.org","btccash-seeder.bitcoinunlimited.info","seed.bitprim.org","seed.deadalnix.me","seeder.criptolayer.net"],magic:3908297187,port:8333,checkpointMap:{11111:"1d7c6eb2fd42f55925e92efad68b61edd22fba29fde8783df744e26900000000",33333:"a6d0b5df7d0df069ceb1e736a216ad187a50b07aaa4e78748a58d52d00000000",74000:"201a66b853f9e7814a820e2af5f5dc79c07144e31ce4c9a39339570000000000",105000:"97dc6b1d15fbeef373a744fee0b254b0d2c820a3ae7f0228ce91020000000000",134444:"feb0d2420d4a18914c81ac30f494a5d4ff34cd15d34cfd2fb105000000000000",168000:"63b703835cb735cb9a89d733cbe66f212f63795e0172ea619e09000000000000",193000:"17138bca83bdc3e6f60f01177c3877a98266de40735f2a459f05000000000000",210000:"2e3471a19b8e22b7f939c63663076603cf692f19837e34958b04000000000000",216116:"4edf231bf170234e6a811460f95c94af9464e41ee833b4f4b401000000000000",225430:"32595730b165f097e7b806a679cf7f3e439040f750433808c101000000000000",250000:"14d2f24d29bed75354f3f88a5fb50022fc064b02291fdf873800000000000000",279000:"407ebde958e44190fa9e810ea1fc3a7ef601c3b0a0728cae0100000000000000",295000:"83a93246c67003105af33ae0b29dd66f689d0f0ff54e9b4d0000000000000000",300255:"b2f3a0f0de4120c1089d5f5280a263059f9b6e7c520428160000000000000000",319400:"3bf115fd057391587ca39a531c5d4989e1adec9b2e05c6210000000000000000",343185:"548536d48e7678fcfa034202dd45d4a76b1ad061f38b2b070000000000000000",352940:"ffc9520143e41c94b6e03c2fa3e62bb76b55ba2df45d75100000000000000000",382320:"b28afdde92b0899715e40362f56afdb20e3d135bedc68d0a0000000000000000",401465:"eed16cb3e893ed9366f27c39a9ecd95465d02e3ef40e45010000000000000000",420000:"a1ff746b2d42b834cb7d6b8981b09c265c2cabc016e8cc020000000000000000",440000:"9bf296b8de5f834f7635d5e258a434ad51b4dbbcf7c08c030000000000000000",450000:"0ba2070c62cd9da1f8cef88a0648c661a411d33e728340010000000000000000",460000:"8c25fc7e414d3e868d6ce0ec473c30ad44e7e8bc1b75ef000000000000000000",470000:"89756d1ed75901437300af10d5ab69070a282e729c536c000000000000000000",478559:"ec5e1a193601f25ff1d94b421ddead0dbefcb99cf91e65000000000000000000",504031:"9cabb6ee1b1a4c3b659d70be75810be83d0a0db665bf1e010000000000000000"},lastCheckpoint:504031,halvingInterval:21e4,genesis:{version:1,hash:"6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000",prevBlock:"0000000000000000000000000000000000000000000000000000000000000000",merkleRoot:"3ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a",time:1231006505,bits:486604799,nonce:2083236893,height:0},genesisBlock:"0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a29ab5f49ffff001d1dac2b7c0101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff4d04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73ffffffff0100f2052a01000000434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5fac00000000"};n.pow={limit:new s("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff","hex"),bits:486604799,chainwork:new s("000000000000000000000000000000000000000000a0f3064330647e2f6c4828","hex"),targetTimespan:1209600,targetSpacing:600,retargetInterval:2016,targetReset:!1,noRetargeting:!1},n.block={bip34height:227931,bip34hash:"b808089c756add1591b1d17bab44bba3fed9e02f942ab4894b02000000000000",bip65height:388381,bip65hash:"f035476cfaeb9f677c2cdad00fd908c556775ded24b6c2040000000000000000",bip66height:363725,bip66hash:"3109b588941188a9f1c2576aae462d729b8cce9da1ea79030000000000000000",daaheight:504031,daahash:"9cabb6ee1b1a4c3b659d70be75810be83d0a0db665bf1e010000000000000000",pruneAfterHeight:1e3,keepBlocks:288,maxTipAge:86400,slowHeight:325e3},n.bip30={91842:"eccae000e3c8e4e093936360431f3b7603c563c1ff6181390a4d0a0000000000",91880:"21d77ccb4c08386a04ac0196ae10f6a1d2c2a377558ca190f143070000000000"},n.activationThreshold=1916,n.minerWindow=2016,n.deployments={csv:{name:"csv",bit:0,startTime:1462060800,timeout:1493596800,threshold:-1,window:-1,required:!1,force:!0},testdummy:{name:"testdummy",bit:28,startTime:1199145601,timeout:1230767999,threshold:-1,window:-1,required:!1,force:!0}},n.deploys=[n.deployments.csv,n.deployments.testdummy],n.keyPrefix={privkey:128,xpubkey:76067358,xprivkey:76066276,xpubkey58:"xpub",xprivkey58:"xprv",coinType:0},n.addressPrefix={pubkeyhash:0,scripthash:5,cashaddr:"bitcoincash"},n.requireStandard=!0,n.rpcPort=8332,n.walletPort=8334,n.minRelay=1e3,n.feeRate=1e5,n.maxFeeRate=4e5,n.selfConnect=!1,n.requestMempool=!1;const o={type:"testnet",seeds:["testnet-seed.bitcoinabc.org","testnet-seed-abc.bitcoinforks.org","testnet-seed.bitprim.org","testnet-seed.deadalnix.me","testnet-seeder.criptolayer.net"],magic:4109624820,port:18333,checkpointMap:{546:"70cb6af7ebbcb1315d3414029c556c55f3e2fc353c4c9063a76c932a00000000",10000:"02a1b43f52591e53b660069173ac83b675798e12599dbb0442b7580000000000",100000:"1e0a16bbadccde1d80c66597b1939e45f91b570d29f95fc158299e0000000000",170000:"508125560d202b89757889bb0e49c712477be20440058f05db4f0e0000000000",210000:"32365454b5f29a826bff8ad9b0448cad0072fc73d50e482d91a3dece00000000",300000:"a141bf3972424853f04367b47995e220e0b5a2706e5618766f22000000000000",390000:"f217e183484fb6d695609cc71fa2ae24c3020943407e0150b298030000000000",420000:"de9e73a3b91fbb014e036e8583a17d6b638a699aeb2de8573d12580800000000",500000:"06f60922a2aab2757317820fc6ffaf6a470e2cbb0f63a2aac0a7010000000000",630000:"bbbe117035432a6a4effcb297207a02b031735b43e0d19a9217c000000000000",700000:"c14d3f6a1e7c7d66fd940951e44f3c3be1273bea4d2ab1786140000000000000",780000:"0381582e34c3755964dc2813e2b33e521e5596367144e1670851050000000000",840000:"dac1648107bd4394e57e4083c86d42b548b1cfb119665f179ea80a0000000000",900000:"9bd8ac418beeb1a2cf5d68c8b5c6ebaa947a5b766e5524898d6f350000000000",1050000:"d8190cf0af7f08e179cab51d67db0b44b87951a78f7fdc31b4a01a0000000000",1155875:"38f1ae7f0ea8c1b589884c5fbd0b83721e3ab6759a4b897206857cf100000000",1188697:"fb47e0ab0d2448f71192a09fe61bc9c46cd3b4e7bd778091d00e170000000000"},lastCheckpoint:1188697,halvingInterval:21e4,genesis:{version:1,hash:"43497fd7f826957108f4a30fd9cec3aeba79972084e90ead01ea330900000000",prevBlock:"0000000000000000000000000000000000000000000000000000000000000000",merkleRoot:"3ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a",time:1296688602,bits:486604799,nonce:414098458,height:0},genesisBlock:"0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4adae5494dffff001d1aa4ae180101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff4d04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73ffffffff0100f2052a01000000434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5fac00000000"};o.pow={limit:new s("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff","hex"),bits:486604799,chainwork:new s("00000000000000000000000000000000000000000000002a650f6ff7649485da","hex"),targetTimespan:1209600,targetSpacing:600,retargetInterval:2016,targetReset:!0,noRetargeting:!1},o.block={bip34height:21111,bip34hash:"f88ecd9912d00d3f5c2a8e0f50417d3e415c75b3abe584346da9b32300000000",bip65height:581885,bip65hash:"b61e864fbec41dfaf09da05d1d76dc068b0dd82ee7982ff255667f0000000000",bip66height:330776,bip66hash:"82a14b9e5ea81d4832b8e2cd3c2a6092b5a3853285a8995ec4c8042100000000",daaheight:1188697,daahash:"fb47e0ab0d2448f71192a09fe61bc9c46cd3b4e7bd778091d00e170000000000",pruneAfterHeight:1e3,keepBlocks:1e4,maxTipAge:86400,slowHeight:95e4},o.bip30={},o.activationThreshold=1512,o.minerWindow=2016,o.deployments={csv:{name:"csv",bit:0,startTime:1456790400,timeout:1493596800,threshold:-1,window:-1,required:!1,force:!0},testdummy:{name:"testdummy",bit:28,startTime:1199145601,timeout:1230767999,threshold:-1,window:-1,required:!1,force:!0}},o.deploys=[o.deployments.csv,o.deployments.testdummy],o.keyPrefix={privkey:239,xpubkey:70617039,xprivkey:70615956,xpubkey58:"tpub",xprivkey58:"tprv",coinType:1},o.addressPrefix={pubkeyhash:111,scripthash:196,cashaddr:"bchtest"},o.requireStandard=!1,o.rpcPort=18332,o.walletPort=18334,o.minRelay=1e3,o.feeRate=2e4,o.maxFeeRate=6e4,o.selfConnect=!1,o.requestMempool=!1;const a={type:"regtest",seeds:["127.0.0.1"],magic:4206867930,port:48444,checkpointMap:{},lastCheckpoint:0,halvingInterval:150,genesis:{version:1,hash:"06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f",prevBlock:"0000000000000000000000000000000000000000000000000000000000000000",merkleRoot:"3ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a",time:1296688602,bits:545259519,nonce:2,height:0},genesisBlock:"0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4adae5494dffff7f20020000000101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff4d04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73ffffffff0100f2052a01000000434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5fac00000000"};a.pow={limit:new s("7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","hex"),bits:545259519,chainwork:new s("0000000000000000000000000000000000000000000000000000000000000002","hex"),targetTimespan:1209600,targetSpacing:600,retargetInterval:2016,targetReset:!0,noRetargeting:!0},a.block={bip34height:1e8,bip34hash:null,bip65height:1351,bip65hash:null,bip66height:1251,bip66hash:null,daaheight:0,daahash:null,pruneAfterHeight:1e3,keepBlocks:1e4,maxTipAge:4294967295,slowHeight:0},a.bip30={},a.activationThreshold=108,a.minerWindow=144,a.deployments={csv:{name:"csv",bit:0,startTime:0,timeout:4294967295,threshold:-1,window:-1,required:!1,force:!0},testdummy:{name:"testdummy",bit:28,startTime:0,timeout:4294967295,threshold:-1,window:-1,required:!1,force:!0}},a.deploys=[a.deployments.csv,a.deployments.testdummy],a.keyPrefix={privkey:90,xpubkey:3937729029,xprivkey:3937666247,xpubkey58:"rpub",xprivkey58:"rprv",coinType:1},a.addressPrefix={pubkeyhash:60,scripthash:38,cashaddr:"bchreg"},a.requireStandard=!1,a.rpcPort=48332,a.walletPort=48334,a.minRelay=1e3,a.feeRate=2e4,a.maxFeeRate=6e4,a.selfConnect=!0,a.requestMempool=!0;const h={type:"simnet",seeds:["127.0.0.1"],magic:4076531172,port:18555,checkpointMap:{},lastCheckpoint:0,halvingInterval:21e4,genesis:{version:1,hash:"f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68",prevBlock:"0000000000000000000000000000000000000000000000000000000000000000",merkleRoot:"3ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a",time:1401292357,bits:545259519,nonce:2,height:0},genesisBlock:"0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a45068653ffff7f20020000000101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff4d04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73ffffffff0100f2052a01000000434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5fac00000000"};h.pow={limit:new s("7fffff0000000000000000000000000000000000000000000000000000000000","hex"),bits:545259519,chainwork:new s("0000000000000000000000000000000000000000000000000000000000000002","hex"),targetTimespan:1209600,targetSpacing:600,retargetInterval:2016,targetReset:!0,noRetargeting:!1},h.block={bip34height:0,bip34hash:"f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68",bip65height:0,bip65hash:"f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68",bip66height:0,bip66hash:"f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68",daaheight:0,daahash:null,pruneAfterHeight:1e3,keepBlocks:1e4,maxTipAge:4294967295,slowHeight:0},h.bip30={},h.activationThreshold=75,h.minerWindow=100,h.deployments={csv:{name:"csv",bit:0,startTime:0,timeout:4294967295,threshold:-1,window:-1,required:!1,force:!0},testdummy:{name:"testdummy",bit:28,startTime:1199145601,timeout:1230767999,threshold:-1,window:-1,required:!1,force:!0}},h.deploys=[h.deployments.csv,h.deployments.testdummy],h.keyPrefix={privkey:100,xpubkey:69254458,xprivkey:69253376,xpubkey58:"spub",xprivkey58:"sprv",coinType:115},h.addressPrefix={pubkeyhash:63,scripthash:123,cashaddr:"bchsim"},h.requireStandard=!1,h.rpcPort=18556,h.walletPort=18558,h.minRelay=1e3,h.feeRate=2e4,h.maxFeeRate=6e4,h.selfConnect=!1,h.requestMempool=!1,r.main=n,r.testnet=o,r.regtest=a,r.simnet=h},function(t,e,i){"use strict";(function(e){
/*!
 * staticwriter.js - buffer writer for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(22),n=i(32),o=e.alloc(0),a=102400;let h=null;class l{constructor(t){this.data=o,this.offset=0,null!=t&&this.init(t)}init(t){return e.isBuffer(t)?(this.data=t,this.offset=0,this):(s(t>>>0===t),this.data=e.allocUnsafe(t),this.offset=0,this)}static pool(t){if(t<=a){h||(h=e.allocUnsafeSlow(a));const i=new l;return i.data=h.slice(0,t),i}return new l(t)}render(){const{data:t,offset:e}=this;if(e!==t.length)throw new n(e,"Out of bounds write");return this.destroy(),t}slice(){const{data:t,offset:e}=this;if(e>t.length)throw new n(e,"Out of bounds write");return this.destroy(),t.slice(0,e)}getSize(){return this.offset}seek(t){return this.offset+=t,this}destroy(){return this.data=o,this.offset=0,this}writeU8(t){return this.offset=r.writeU8(this.data,t,this.offset),this}writeU16(t){return this.offset=r.writeU16(this.data,t,this.offset),this}writeU16BE(t){return this.offset=r.writeU16BE(this.data,t,this.offset),this}writeU32(t){return this.offset=r.writeU32(this.data,t,this.offset),this}writeU32BE(t){return this.offset=r.writeU32BE(this.data,t,this.offset),this}writeU64(t){return this.offset=r.writeU64(this.data,t,this.offset),this}writeU64BE(t){return this.offset=r.writeU64BE(this.data,t,this.offset),this}writeI8(t){return this.offset=r.writeI8(this.data,t,this.offset),this}writeI16(t){return this.offset=r.writeI16(this.data,t,this.offset),this}writeI16BE(t){return this.offset=r.writeI16BE(this.data,t,this.offset),this}writeI32(t){return this.offset=r.writeI32(this.data,t,this.offset),this}writeI32BE(t){return this.offset=r.writeI32BE(this.data,t,this.offset),this}writeI64(t){return this.offset=r.writeI64(this.data,t,this.offset),this}writeI64BE(t){return this.offset=r.writeI64BE(this.data,t,this.offset),this}writeFloat(t){return this.offset=r.writeFloat(this.data,t,this.offset),this}writeFloatBE(t){return this.offset=r.writeFloatBE(this.data,t,this.offset),this}writeDouble(t){return this.offset=r.writeDouble(this.data,t,this.offset),this}writeDoubleBE(t){return this.offset=r.writeDoubleBE(this.data,t,this.offset),this}writeVarint(t){return this.offset=r.writeVarint(this.data,t,this.offset),this}writeVarint2(t){return this.offset=r.writeVarint2(this.data,t,this.offset),this}writeBytes(t){return 0===t.length?this:(t.copy(this.data,this.offset),this.offset+=t.length,this)}writeVarBytes(t){return this.writeVarint(t.length),this.writeBytes(t),this}copy(t,e,i){const s=i-e;return 0===s?this:(t.copy(this.data,this.offset,e,i),this.offset+=s,this)}writeString(t,i){if(0===t.length)return this;const s=e.byteLength(t,i);return this.data.write(t,this.offset,i),this.offset+=s,this}writeHash(t){return"string"!=typeof t?(s(32===t.length),this.writeBytes(t),this):(s(64===t.length),this.data.write(t,this.offset,"hex"),this.offset+=32,this)}writeVarString(t,i){if(0===t.length)return this.writeVarint(0),this;const s=e.byteLength(t,i);return this.writeVarint(s),this.data.write(t,this.offset,i),this.offset+=s,this}writeNullString(t,e){return this.writeString(t,e),this.writeU8(0),this}writeChecksum(t){return t(this.data.slice(0,this.offset)).copy(this.data,this.offset,0,4),this.offset+=4,this}fill(t,e){return s(e>=0),0===e?this:(this.data.fill(t,this.offset,this.offset+e),this.offset+=e,this)}}t.exports=l}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * writer.js - buffer writer for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(22),n=i(32);class o{constructor(t){this.type=t}}class a extends o{constructor(t,e){super(t),this.value=e}}class h extends o{constructor(t,e){super(t),this.data=e}}class l extends o{constructor(t,e,i){super(t),this.value=e,this.enc=i}}t.exports=class{constructor(){this.ops=[],this.offset=0}render(){const t=e.allocUnsafe(this.offset);let i=0;for(const e of this.ops)switch(e.type){case 0:i+=e.value;break;case 1:i=r.writeU8(t,e.value,i);break;case 2:i=r.writeU16(t,e.value,i);break;case 3:i=r.writeU16BE(t,e.value,i);break;case 4:i=r.writeU32(t,e.value,i);break;case 5:i=r.writeU32BE(t,e.value,i);break;case 6:i=r.writeU64(t,e.value,i);break;case 7:i=r.writeU64BE(t,e.value,i);break;case 8:i=r.writeI8(t,e.value,i);break;case 9:i=r.writeI16(t,e.value,i);break;case 10:i=r.writeI16BE(t,e.value,i);break;case 11:i=r.writeI32(t,e.value,i);break;case 12:i=r.writeI32BE(t,e.value,i);break;case 13:i=r.writeI64(t,e.value,i);break;case 14:i=r.writeI64BE(t,e.value,i);break;case 15:i=r.writeFloat(t,e.value,i);break;case 16:i=r.writeFloatBE(t,e.value,i);break;case 17:i=r.writeDouble(t,e.value,i);break;case 18:i=r.writeDoubleBE(t,e.value,i);break;case 19:i=r.writeVarint(t,e.value,i);break;case 20:i=r.writeVarint2(t,e.value,i);break;case 21:i+=e.data.copy(t,i);break;case 22:i+=t.write(e.value,i,e.enc);break;case 23:i+=e.func(t.slice(0,i)).copy(t,i,0,4);break;case 24:t.fill(e.value,i,i+e.size),i+=e.size;break;default:s(!1,"Bad type.")}if(i!==t.length)throw new n(i,"Out of bounds write");return this.destroy(),t}getSize(){return this.offset}seek(t){return this.offset+=t,this.ops.push(new a(0,t)),this}destroy(){return this.ops.length=0,this.offset=0,this}writeU8(t){return this.offset+=1,this.ops.push(new a(1,t)),this}writeU16(t){return this.offset+=2,this.ops.push(new a(2,t)),this}writeU16BE(t){return this.offset+=2,this.ops.push(new a(3,t)),this}writeU32(t){return this.offset+=4,this.ops.push(new a(4,t)),this}writeU32BE(t){return this.offset+=4,this.ops.push(new a(5,t)),this}writeU64(t){return this.offset+=8,this.ops.push(new a(6,t)),this}writeU64BE(t){return this.offset+=8,this.ops.push(new a(7,t)),this}writeI8(t){return this.offset+=1,this.ops.push(new a(8,t)),this}writeI16(t){return this.offset+=2,this.ops.push(new a(9,t)),this}writeI16BE(t){return this.offset+=2,this.ops.push(new a(10,t)),this}writeI32(t){return this.offset+=4,this.ops.push(new a(11,t)),this}writeI32BE(t){return this.offset+=4,this.ops.push(new a(12,t)),this}writeI64(t){return this.offset+=8,this.ops.push(new a(13,t)),this}writeI64BE(t){return this.offset+=8,this.ops.push(new a(14,t)),this}writeFloat(t){return this.offset+=4,this.ops.push(new a(15,t)),this}writeFloatBE(t){return this.offset+=4,this.ops.push(new a(16,t)),this}writeDouble(t){return this.offset+=8,this.ops.push(new a(17,t)),this}writeDoubleBE(t){return this.offset+=8,this.ops.push(new a(18,t)),this}writeVarint(t){return this.offset+=r.sizeVarint(t),this.ops.push(new a(19,t)),this}writeVarint2(t){return this.offset+=r.sizeVarint2(t),this.ops.push(new a(20,t)),this}writeBytes(t){return 0===t.length?this:(this.offset+=t.length,this.ops.push(new h(21,t)),this)}writeVarBytes(t){return this.offset+=r.sizeVarint(t.length),this.ops.push(new a(19,t.length)),0===t.length?this:(this.offset+=t.length,this.ops.push(new h(21,t)),this)}copy(t,e,i){return s(i>=e),t=t.slice(e,i),this.writeBytes(t),this}writeString(t,i){return 0===t.length?this:(this.offset+=e.byteLength(t,i),this.ops.push(new l(22,t,i)),this)}writeHash(t){return"string"!=typeof t?(s(32===t.length),this.writeBytes(t),this):(s(64===t.length),this.writeString(t,"hex"),this)}writeVarString(t,i){if(0===t.length)return this.ops.push(new a(19,0)),this;const s=e.byteLength(t,i);return this.offset+=r.sizeVarint(s),this.offset+=s,this.ops.push(new a(19,s)),this.ops.push(new l(22,t,i)),this}writeNullString(t,e){return this.writeString(t,e),this.writeU8(0),this}writeChecksum(t){return this.offset+=4,this.ops.push(new class extends o{constructor(t,e){super(t),this.func=e}}(23,t)),this}fill(t,e){return s(e>=0),0===e?this:(this.offset+=e,this.ops.push(new class extends o{constructor(t,e,i){super(t),this.value=e,this.size=i}}(24,t,e)),this)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * reader.js - buffer reader for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(22),n=i(32),o=e.alloc(0);t.exports=class{constructor(t,i){s(e.isBuffer(t),"Must pass a Buffer."),this.data=t,this.offset=0,this.zeroCopy=i||!1,this.stack=[]}assert(t){if(!t)throw new n(this.offset,"Out of bounds read",this.assert)}enforce(t,e){if(!t)throw new n(this.offset,e,this.enforce)}getSize(){return this.data.length}left(){return this.assert(this.offset<=this.data.length),this.data.length-this.offset}seek(t){return this.assert(this.offset+t>=0),this.assert(this.offset+t<=this.data.length),this.offset+=t,this}start(){return this.stack.push(this.offset),this.offset}end(){s(this.stack.length>0);const t=this.stack.pop();return this.offset-t}endData(t){s(this.stack.length>0);const i=this.stack.pop(),r=this.offset,n=r-i,o=this.data;if(n===o.length)return o;if(this.zeroCopy||t)return o.slice(i,r);const a=e.allocUnsafe(n);return o.copy(a,0,i,r),a}destroy(){return this.data=o,this.offset=0,this.stack.length=0,this}readU8(){this.assert(this.offset+1<=this.data.length);const t=this.data[this.offset];return this.offset+=1,t}readU16(){this.assert(this.offset+2<=this.data.length);const t=r.readU16(this.data,this.offset);return this.offset+=2,t}readU16BE(){this.assert(this.offset+2<=this.data.length);const t=r.readU16BE(this.data,this.offset);return this.offset+=2,t}readU32(){this.assert(this.offset+4<=this.data.length);const t=r.readU32(this.data,this.offset);return this.offset+=4,t}readU32BE(){this.assert(this.offset+4<=this.data.length);const t=r.readU32BE(this.data,this.offset);return this.offset+=4,t}readU64(){this.assert(this.offset+8<=this.data.length);const t=r.readU64(this.data,this.offset);return this.offset+=8,t}readU64BE(){this.assert(this.offset+8<=this.data.length);const t=r.readU64BE(this.data,this.offset);return this.offset+=8,t}readI8(){this.assert(this.offset+1<=this.data.length);const t=r.readI8(this.data,this.offset);return this.offset+=1,t}readI16(){this.assert(this.offset+2<=this.data.length);const t=r.readI16(this.data,this.offset);return this.offset+=2,t}readI16BE(){this.assert(this.offset+2<=this.data.length);const t=r.readI16BE(this.data,this.offset);return this.offset+=2,t}readI32(){this.assert(this.offset+4<=this.data.length);const t=r.readI32(this.data,this.offset);return this.offset+=4,t}readI32BE(){this.assert(this.offset+4<=this.data.length);const t=r.readI32BE(this.data,this.offset);return this.offset+=4,t}readI64(){this.assert(this.offset+8<=this.data.length);const t=r.readI64(this.data,this.offset);return this.offset+=8,t}readI64BE(){this.assert(this.offset+8<=this.data.length);const t=r.readI64BE(this.data,this.offset);return this.offset+=8,t}readFloat(){this.assert(this.offset+4<=this.data.length);const t=r.readFloat(this.data,this.offset);return this.offset+=4,t}readFloatBE(){this.assert(this.offset+4<=this.data.length);const t=r.readFloatBE(this.data,this.offset);return this.offset+=4,t}readDouble(){this.assert(this.offset+8<=this.data.length);const t=r.readDouble(this.data,this.offset);return this.offset+=8,t}readDoubleBE(){this.assert(this.offset+8<=this.data.length);const t=r.readDoubleBE(this.data,this.offset);return this.offset+=8,t}readVarint(){const{size:t,value:e}=r.readVarint(this.data,this.offset);return this.offset+=t,e}readVarint2(){const{size:t,value:e}=r.readVarint2(this.data,this.offset);return this.offset+=t,e}readBytes(t,i){let r;return s(t>=0),this.assert(this.offset+t<=this.data.length),this.zeroCopy||i?r=this.data.slice(this.offset,this.offset+t):(r=e.allocUnsafe(t),this.data.copy(r,0,this.offset,this.offset+t)),this.offset+=t,r}readVarBytes(t){return this.readBytes(this.readVarint(),t)}readChild(t){s(t>=0),this.assert(this.offset+t<=this.data.length);const e=this.data.slice(0,this.offset+t),i=new this.constructor(e);return i.offset=this.offset,this.offset+=t,i}readString(t,e){s(e>=0),this.assert(this.offset+e<=this.data.length);const i=this.data.toString(t,this.offset,this.offset+e);return this.offset+=e,i}readHash(t){return t?this.readString(t,32):this.readBytes(32)}readVarString(t,e){const i=this.readVarint();return this.enforce(!e||i<=e,"String exceeds limit."),this.readString(t,i)}readNullString(t){this.assert(this.offset+1<=this.data.length);let e=this.offset;for(;e<this.data.length&&0!==this.data[e];e++);this.assert(e!==this.data.length);const i=this.readString(t,e-this.offset);return this.offset=e+1,i}createChecksum(t){let e=0;this.stack.length>0&&(e=this.stack[this.stack.length-1]);const i=this.data.slice(e,this.offset);return r.readU32(t(i),0)}verifyChecksum(t){const e=this.createChecksum(t),i=this.readU32();return this.enforce(e===i,"Checksum mismatch."),i}}}).call(this,i(1).Buffer)},function(t,e){var i={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==i.call(t)}},function(t,e,i){"use strict";(function(e){
/*!
 * walletdb.js - storage for wallets
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(41),n=i(7),o=i(2),{BloomFilter:a}=i(62),{Lock:h,MapLock:l}=i(27),u=i(33),c=i(50),f=i(69),d=i(201),p=i(5),g=i(8),m=i(65),w=i(61),y=i(199),b=i(127),v=i(18),k=i(123),E=i(122),R=i(235),S=k.wdb,_=k.txdb,{ChainState:x,BlockMeta:I,TXRecord:A,MapRecord:O}=E;function B(t){const i=e.allocUnsafe(4);return i.writeUInt32LE(t,0,!0),i}function P(t){const i=e.alloc(1+t.length);return i[0]=t.length,i.write(t,1,t.length,"ascii"),i}function N(t){return s(t.length>0),s(t[0]===t.length-1),t.toString("ascii",1,t.length)}t.exports=class extends n{constructor(t){super(),this.options=new class{constructor(t){this.network=g.primary,this.logger=c.global,this.workers=null,this.client=null,this.feeRate=0,this.prefix=null,this.location=null,this.memory=!0,this.maxFiles=64,this.cacheSize=16<<20,this.compression=!0,this.spv=!1,this.checkpoints=!1,this.wipeNoReally=!1,t&&this.fromOptions(t)}fromOptions(t){return null!=t.network&&(this.network=g.get(t.network)),null!=t.logger&&(s("object"==typeof t.logger),this.logger=t.logger),null!=t.workers&&(s("object"==typeof t.workers),this.workers=t.workers),null!=t.client&&(s("object"==typeof t.client),this.client=t.client),null!=t.feeRate&&(s(t.feeRate>>>0===t.feeRate),this.feeRate=t.feeRate),null!=t.prefix&&(s("string"==typeof t.prefix),this.prefix=t.prefix,this.location=r.join(this.prefix,"wallet")),null!=t.location&&(s("string"==typeof t.location),this.location=t.location),null!=t.memory&&(s("boolean"==typeof t.memory),this.memory=t.memory),null!=t.maxFiles&&(s(t.maxFiles>>>0===t.maxFiles),this.maxFiles=t.maxFiles),null!=t.cacheSize&&(s(Number.isSafeInteger(t.cacheSize)&&t.cacheSize>=0),this.cacheSize=t.cacheSize),null!=t.compression&&(s("boolean"==typeof t.compression),this.compression=t.compression),null!=t.spv&&(s("boolean"==typeof t.spv),this.spv=t.spv),null!=t.checkpoints&&(s("boolean"==typeof t.checkpoints),this.checkpoints=t.checkpoints),null!=t.wipeNoReally&&(s("boolean"==typeof t.wipeNoReally),this.wipeNoReally=t.wipeNoReally),this}static fromOptions(t){return(new this).fromOptions(t)}}(t),this.network=this.options.network,this.logger=this.options.logger.context("wallet"),this.workers=this.options.workers,this.client=this.options.client||new R(this),this.feeRate=this.options.feeRate,this.db=u.create(this.options),this.primary=null,this.state=new x,this.height=0,this.wallets=new Map,this.depth=0,this.rescanning=!1,this.filterSent=!1,this.readLock=new l,this.writeLock=new h,this.txLock=new h,this.filter=new a,this.init()}init(){let t=3e6,e=-1;this.options.spv&&(t=2e4,e=a.flags.ALL),this.filter=a.fromRate(t,.001,e),this._bind()}_bind(){this.client.on("error",t=>{this.emit("error",t)}),this.client.on("connect",async()=>{try{await this.syncNode()}catch(t){this.emit("error",t)}}),this.client.on("disconnect",async()=>{this.filterSent=!1}),this.client.bind("block connect",async(t,e)=>{try{await this.addBlock(t,e)}catch(t){this.emit("error",t)}}),this.client.bind("block disconnect",async t=>{try{await this.removeBlock(t)}catch(t){this.emit("error",t)}}),this.client.hook("block rescan",async(t,e)=>{try{await this.rescanBlock(t,e)}catch(t){this.emit("error",t)}}),this.client.bind("tx",async t=>{try{await this.addTX(t)}catch(t){this.emit("error",t)}}),this.client.bind("chain reset",async t=>{try{await this.resetChain(t)}catch(t){this.emit("error",t)}})}async open(){await this.db.open(),await this.db.verify(S.V.build(),"wallet",135),await this.verifyNetwork(),this.depth=await this.getDepth(),this.options.wipeNoReally&&await this.wipe(),await this.watch(),await this.connect(),this.logger.info("WalletDB loaded (depth=%d, height=%d, start=%d).",this.depth,this.state.height,this.state.startHeight);const t=await this.ensure({id:"primary"}),e=await t.receiveAddress();this.logger.info("Loaded primary wallet (id=%s, wid=%d, address=%s)",t.id,t.wid,e.toString(this.network)),this.primary=t}async verifyNetwork(){const t=await this.db.get(S.O.build());if(!t){const t=this.db.batch();return t.put(S.O.build(),B(this.network.magic)),t.write()}if(t.readUInt32LE(0,!0)!==this.network.magic)throw new Error("Network mismatch for WalletDB.")}async close(){await this.disconnect();for(const t of this.wallets.values())await t.destroy(),this.unregister(t);return this.db.close()}async watch(){const t=this.db.iterator({gte:S.p.min(),lte:S.p.max()});let e=0;await t.each(t=>{const i=S.p.parse(t);this.filter.add(i,"hex"),e+=1}),this.logger.info("Added %d hashes to WalletDB filter.",e);const i=this.db.iterator({gte:S.o.min(),lte:S.o.max()});let s=0;await i.each(t=>{const[e,i]=S.o.parse(t),r=new v(e,i).toRaw();this.filter.add(r),s+=1}),this.logger.info("Added %d outpoints to WalletDB filter.",s)}async connect(){return this.client.open()}async disconnect(){return this.client.close()}async syncNode(){const t=await this.txLock.lock();try{this.logger.info("Resyncing from server..."),await this.syncState(),await this.syncFilter(),await this.syncChain(),await this.resend()}finally{t()}}async syncState(){const t=await this.getState();if(t)return await this.getBlock(0)?(this.state=t,void(this.height=t.height)):this.migrateState(t);this.logger.info("Initializing database state from server.");const e=this.db.batch(),i=await this.client.getHashes();let r=null;for(let t=0;t<i.length;t++){const s=i[t],n=new I(s,t);e.put(S.h.build(t),n.toHash()),r=n}s(r);const n=this.state.clone();n.startHeight=r.height,n.startHash=r.hash,n.height=r.height,n.marked=!1,e.put(S.R.build(),n.toRaw()),await e.write(),this.state=n,this.height=n.height}async migrateState(t){const e=this.db.batch();this.logger.info("Migrating to new sync state.");const i=await this.client.getHashes(0,t.height);for(let t=0;t<i.length;t++){const s=i[t],r=new I(s,t);e.put(S.h.build(t),r.toHash())}await e.write(),this.state=t,this.height=t.height}async syncChain(){let t=this.state.height;for(this.logger.info("Syncing state from height %d.",t);;){const e=await this.getBlock(t);if(s(e),await this.client.getEntry(e.hash))break;s(0!==t),t-=1}return this.scan(t)}async scan(t){null==t&&(t=this.state.startHeight),s(t>>>0===t,"WDB: Must pass in a height."),this.logger.info("WalletDB is scanning %d blocks.",this.state.height-t+1),await this.rollback(t);const e=await this.getTip();try{this.rescanning=!0,await this.client.rescan(e.hash)}finally{this.rescanning=!1}}async rescan(t){const e=await this.txLock.lock();try{return await this._rescan(t)}finally{e()}}async _rescan(t){return this.scan(t)}async send(t){return this.client.send(t)}async estimateFee(t){if(this.feeRate>0)return this.feeRate;const e=await this.client.estimateFee(t);return e<this.network.feeRate?this.network.feeRate:e>this.network.maxFeeRate?this.network.maxFeeRate:e}syncFilter(){return this.logger.info("Sending filter to server (%dmb).",this.filter.size/8/(1<<20)),this.filterSent=!0,this.client.setFilter(this.filter)}addFilter(t){if(this.filterSent)return this.client.addFilter(t)}resetFilter(){if(this.filterSent)return this.client.resetFilter()}backup(t){return this.db.backup(t)}async wipe(){this.logger.warning("Wiping WalletDB TXDB..."),this.logger.warning("I hope you know what you're doing.");const t=this.db.iterator(),e=this.db.batch();let i=0;return await t.each(t=>{switch(t[0]){case 98:case 99:case 101:case 116:case 111:case 104:case 82:e.del(t),i+=1}}),this.logger.warning("Wiped %d txdb records.",i),e.write()}async getDepth(){const t=await this.db.get(S.D.build());return t?t.readUInt32LE(0,!0):0}testFilter(t){return this.filter.test(t,"hex")}addHash(t){return this.filter.add(t,"hex"),this.addFilter(t)}addOutpoint(t,e){const i=new v(t,e);this.filter.add(i.toRaw())}dump(){return this.db.dump()}register(t){s(!this.wallets.has(t.wid)),this.wallets.set(t.wid,t)}unregister(t){s(this.wallets.has(t.wid)),this.wallets.delete(t.wid)}async ensureWID(t){return"number"==typeof t?await this.db.has(S.W.build(t))?t:-1:this.getWID(t)}async getWID(t){const e=await this.db.get(S.l.build(t));return e?(s(4===e.length),e.readUInt32LE(0,!0)):-1}async getID(t){const e=await this.db.get(S.W.build(t));return e?N(e):null}async get(t){const e=await this.ensureWID(t);if(-1===e)return null;const i=await this.readLock.lock(e);try{return await this._get(e)}finally{i()}}async _get(t){const e=this.wallets.get(t);if(e)return e;const i=await this.getID(t);if(!i)return null;const r=await this.db.get(S.w.build(t));s(r);const n=y.fromRaw(this,r);return n.wid=t,n.id=i,await n.open(),this.register(n),n}save(t,e){const i=e.wid,s=e.id;t.put(S.w.build(i),e.toRaw()),t.put(S.W.build(i),P(s)),t.put(S.l.build(s),B(i))}increment(t,e){t.put(S.D.build(),B(e+1))}async rename(t,e){const i=await this.writeLock.lock();try{return await this._rename(t,e)}finally{i()}}async _rename(t,e){if(!w.isName(e))throw new Error("WDB: Bad wallet ID.");if(await this.has(e))throw new Error("WDB: ID not available.");const i=this.db.batch();i.put(S.W.build(t.wid),P(e)),i.del(S.l.build(t.id)),i.put(S.l.build(e),B(t.wid)),await i.write(),t.id=e}renameAccount(t,e,i){const s=e.wid,r=e.accountIndex;t.del(S.i.build(s,e.name)),t.put(S.i.build(s,i),B(r)),t.put(S.n.build(s,r),P(i)),e.name=i}async remove(t){const e=await this.ensureWID(t);if(-1===e)return!1;const i=await this.readLock.lock(e),s=await this.writeLock.lock(),r=await this.txLock.lock();try{return await this._remove(e)}finally{r(),s(),i()}}async _remove(t){const e=await this.getID(t);if(!e)return!1;if("primary"===e)throw new Error("Cannot remove primary wallet.");const i=this.db.batch();i.del(S.w.build(t)),i.del(S.W.build(t)),i.del(S.l.build(e));const s=this.db.iterator({gte:S.P.min(t),lte:S.P.max(t)});await s.each((e,s)=>{const[,r]=S.P.parse(e);return i.del(e),this.removePathMap(i,r,t)});const r=t=>this.db.iterator(t).each(t=>i.del(t));await r({gte:S.r.min(t),lte:S.r.max(t)}),await r({gte:S.a.min(t),lte:S.a.max(t)}),await r({gte:S.i.min(t),lte:S.i.max(t)}),await r({gte:S.n.min(t),lte:S.n.max(t)}),await r({gt:S.t.build(t),lt:S.t.build(t+1)});const n=this.db.bucket(S.t.build(t)),o=n.iterator({gte:_.b.min(),lte:_.b.max()});await o.each((e,s)=>{const r=_.b.parse(e);return this.removeBlockMap(i,r,t)});const a=n.iterator({gte:_.s.min(),lte:_.s.max(),keys:!0});await a.each((e,s)=>{const[r,n]=_.s.parse(e);return this.removeOutpointMap(i,r,n,t)});const h=n.iterator({gte:_.p.min(),lte:_.p.max(),keys:!0});await h.each((e,s)=>{const r=_.p.parse(e);return this.removeTXMap(i,r,t)});const l=this.wallets.get(t);return l&&(await l.destroy(),this.unregister(l)),await i.write(),!0}async auth(t,e){const i=await this.get(t);if(!i)return null;if(!f(e,i.token))throw new Error("WDB: Authentication error.");return i}async create(t){const e=await this.writeLock.lock();t||(t={});try{return await this._create(t)}finally{e()}}async _create(t){if(t.id&&await this.has(t.id))throw new Error("WDB: Wallet already exists.");const e=y.fromOptions(this,t);return e.wid=this.depth,await e.init(t,t.passphrase),this.depth+=1,this.register(e),this.logger.info("Created wallet %s in WalletDB.",e.id),e}async has(t){return-1!==await this.ensureWID(t)}async ensure(t){if(t.id){const e=await this.get(t.id);if(e)return e}return this.create(t)}async getAccount(t,e){const i=await this.getAccountName(t,e);if(!i)return null;const r=await this.db.get(S.a.build(t,e));s(r);const n=b.fromRaw(this,r);return n.accountIndex=e,n.name=i,n}async getAccounts(t){return this.db.values({gte:S.n.min(t),lte:S.n.max(t),parse:N})}async getAccountIndex(t,e){const i=await this.db.get(S.i.build(t,e));return i?i.readUInt32LE(0,!0):-1}async getAccountName(t,e){const i=await this.db.get(S.n.build(t,e));return i?N(i):null}saveAccount(t,e){const i=e.wid,s=e.accountIndex,r=e.name;t.put(S.a.build(i,s),e.toRaw()),t.put(S.i.build(i,r),B(s)),t.put(S.n.build(i,s),P(r))}async hasAccount(t,e){return this.db.has(S.a.build(t,e))}async saveKey(t,e,i){return this.savePath(t,e,i.toPath())}async savePath(t,e,i){await this.addPathMap(t,i.hash,e),t.put(S.P.build(e,i.hash),i.toRaw()),t.put(S.r.build(e,i.account,i.hash),null)}async getPath(t,e){const i=await this.readPath(t,e);return i?(i.name=await this.getAccountName(t,i.account),s(i.name),i):null}async readPath(t,e){const i=await this.db.get(S.P.build(t,e));if(!i)return null;const s=m.fromRaw(i);return s.hash=e,s}async hasPath(t,e){return this.db.has(S.P.build(t,e))}async getHashes(){return this.db.keys({gte:S.p.min(),lte:S.p.max(),parse:t=>S.p.parse(t)})}async getOutpoints(){return this.db.keys({gte:S.o.min(),lte:S.o.max(),parse:t=>{const[e,i]=S.o.parse(t);return new v(e,i)}})}async getWalletHashes(t){return this.db.keys({gte:S.P.min(t),lte:S.P.max(t),parse:t=>S.P.parse(t)[1]})}async getAccountHashes(t,e){return this.db.keys({gte:S.r.min(t,e),lte:S.r.max(t,e),parse:t=>S.r.parse(t)[2]})}async getWalletPaths(t){const e=await this.db.range({gte:S.P.min(t),lte:S.P.min(t)}),i=[];for(const{key:r,value:n}of e){const[,e]=S.P.parse(r),o=m.fromRaw(n);o.hash=e,o.name=await this.getAccountName(t,o.account),s(o.name),i.push(o)}return i}async getWallets(){return this.db.values({gte:S.W.min(),lte:S.W.max(),parse:N})}async encryptKeys(t,i,r){const n=this.db.iterator({gte:S.P.min(i),lte:S.P.max(i),values:!0});await n.each((i,n)=>{const[,o]=S.P.parse(i),a=m.fromRaw(n);if(!a.data)return;s(!a.encrypted);const h=e.from(o,"hex").slice(0,16);a.data=d.encipher(a.data,r,h),a.encrypted=!0,t.put(i,a.toRaw())})}async decryptKeys(t,i,r){const n=this.db.iterator({gte:S.P.min(i),lte:S.P.max(i),values:!0});await n.each((i,n)=>{const[,o]=S.P.parse(i),a=m.fromRaw(n);if(!a.data)return;s(a.encrypted);const h=e.from(o,"hex").slice(0,16);a.data=d.decipher(a.data,r,h),a.encrypted=!1,t.put(i,a.toRaw())})}async resend(){const t=await this.db.keys({gte:S.w.min(),lte:S.w.max(),parse:t=>S.w.parse(t)});this.logger.info("Resending from %d wallets.",t.length);for(const e of t)await this.resendPending(e)}async resendPending(t){const e=S.t.build(t),i=this.db.bucket(e),s=await i.keys({gte:_.p.min(),lte:_.p.max(),parse:t=>_.p.parse(t)});if(0===s.length)return;this.logger.info("Rebroadcasting %d transactions for %d.",s.length,t);const r=[];for(const t of s){const e=await i.get(_.t.build(t));if(!e)continue;const s=A.fromRaw(e);s.tx.isCoinbase()||r.push(s.tx)}for(const t of w.sortDeps(r))await this.send(t)}async getWalletsByTX(t){const e=new Set;if(!t.isCoinbase())for(const{prevout:i}of t.inputs){const{hash:t,index:s}=i;if(!this.testFilter(i.toRaw()))continue;const r=await this.getOutpointMap(t,s);if(r)for(const t of r.wids)e.add(t)}const i=t.getOutputHashes("hex");for(const t of i){if(!this.testFilter(t))continue;const i=await this.getPathMap(t);if(i)for(const t of i.wids)e.add(t)}return 0===e.size?null:e}async getState(){const t=await this.db.get(S.R.build());return t?x.fromRaw(t):null}async setTip(t){const e=this.db.batch(),i=this.state.clone();if(t.height<i.height)for(;i.height!==t.height;)e.del(S.h.build(i.height)),i.height-=1;else t.height>i.height&&(s(t.height===i.height+1,"Bad chain sync."),i.height+=1);t.height<i.startHeight&&(i.startHeight=t.height,i.startHash=t.hash,i.marked=!1),e.put(S.h.build(t.height),t.toHash()),e.put(S.R.build(),i.toRaw()),await e.write(),this.state=i,this.height=i.height}async markState(t){const e=this.state.clone();e.startHeight=t.height,e.startHash=t.hash,e.marked=!0;const i=this.db.batch();i.put(S.R.build(),e.toRaw()),await i.write(),this.state=e,this.height=e.height}async getMap(t){const e=await this.db.get(t);return e?O.fromRaw(e):null}async addMap(t,e,i){const r=await this.db.get(e);if(!r){const s=new O;return s.add(i),void t.put(e,s.toRaw())}s(r.length>=4);const n=r.readUInt32LE(0,!0),a=o.write(r.length+4);a.writeU32(n+1),a.copy(r,4,r.length),a.writeU32(i),t.put(e,a.render())}async removeMap(t,e,i){const s=await this.getMap(e);s&&s.remove(i)&&(0!==s.size?t.put(e,s.toRaw()):t.del(e))}async getPathMap(t){return this.getMap(S.p.build(t))}async addPathMap(t,e,i){return await this.addHash(e),this.addMap(t,S.p.build(e),i)}async removePathMap(t,e,i){return this.removeMap(t,S.p.build(e),i)}async getBlockMap(t){return this.getMap(S.b.build(t))}async addBlockMap(t,e,i){return this.addMap(t,S.b.build(e),i)}async removeBlockMap(t,e,i){return this.removeMap(t,S.b.build(e),i)}async getTXMap(t){return this.getMap(S.T.build(t))}async addTXMap(t,e,i){return this.addMap(t,S.T.build(e),i)}async removeTXMap(t,e,i){return this.removeMap(t,S.T.build(e),i)}async getOutpointMap(t,e){return this.getMap(S.o.build(t,e))}async addOutpointMap(t,e,i,s){return await this.addOutpoint(e,i),this.addMap(t,S.o.build(e,i),s)}async removeOutpointMap(t,e,i,s){return this.removeMap(t,S.o.build(e,i),s)}async getBlock(t){const e=await this.db.get(S.h.build(t));if(!e)return null;const i=new I;return i.hash=e.toString("hex"),i.height=t,i}async getTip(){const t=await this.getBlock(this.state.height);if(!t)throw new Error("WDB: Tip not found!");return t}async rollback(t){if(t>this.state.height)throw new Error("WDB: Cannot rollback to the future.");if(t===this.state.height)return void this.logger.info("Rolled back to same height (%d).",t);this.logger.info("Rolling back %d WalletDB blocks to height %d.",this.state.height-t,t);const e=await this.getBlock(t);s(e),await this.revert(e.height),await this.setTip(e)}async revert(t){const e=this.db.iterator({gte:S.b.build(t+1),lte:S.b.max(),reverse:!0,values:!0});let i=0;await e.each(async(t,e)=>{const r=S.b.parse(t),n=O.fromRaw(e);for(const t of n.wids){const e=await this.get(t);s(e),i+=await e.revert(r)}}),this.logger.info("Rolled back %d WalletDB transactions.",i)}async addBlock(t,e){const i=await this.txLock.lock();try{return await this._addBlock(t,e)}finally{i()}}async _addBlock(t,e){const i=I.fromEntry(t);if(i.height<this.state.height)return this.logger.warning("WalletDB is connecting low blocks (%d).",i.height),0;if(i.height>=this.network.block.slowHeight&&this.logger.debug("Adding block: %d.",i.height),i.height===this.state.height)this.logger.warning("Already saw WalletDB block (%d).",i.height);else if(i.height!==this.state.height+1)return await this.scan(this.state.height),0;if(await this.setTip(i),this.options.checkpoints&&!this.state.marked&&i.height<=this.network.lastCheckpoint)return 0;let s=0;for(const t of e)await this._addTX(t,i)&&(s+=1);return s>0&&this.logger.info("Connected WalletDB block %s (tx=%d).",p.revHex(i.hash),s),s}async removeBlock(t){const e=await this.txLock.lock();try{return await this._removeBlock(t)}finally{e()}}async _removeBlock(t){const e=I.fromEntry(t);if(0===e.height)throw new Error("WDB: Bad disconnection (genesis block).");if(e.height>this.state.height)return this.logger.warning("WalletDB is disconnecting high blocks (%d).",e.height),0;if(e.height!==this.state.height)throw new Error("WDB: Bad disconnection (height mismatch).");const i=await this.getBlock(e.height-1);s(i);const r=await this.getBlockMap(e.height);if(!r)return await this.setTip(i),0;let n=0;for(const t of r.wids){const i=await this.get(t);s(i),n+=await i.revert(e.height)}return await this.setTip(i),this.logger.warning("Disconnected wallet block %s (tx=%d).",p.revHex(e.hash),n),n}async rescanBlock(t,e){if(this.rescanning)if(t.height>this.state.height+1)this.logger.warning("Rescan block too high: %d.",t.height);else try{await this._addBlock(t,e)}catch(t){throw this.emit("error",t),t}else this.logger.warning("Unsolicited rescan block: %d.",t.height)}async addTX(t){const e=await this.txLock.lock();try{return await this._addTX(t)}finally{e()}}async _addTX(t,e){const i=await this.getWalletsByTX(t);if(s(!t.mutable,"WDB: Cannot add mutable TX."),!i)return null;e&&!this.state.marked&&await this.markState(e),this.logger.info("Incoming transaction for %d wallets in WalletDB (%s).",i.size,t.txid());let r=!1;for(const n of i){const i=await this.get(n);s(i),await i.add(t,e)&&(this.logger.info("Added transaction to wallet in WalletDB: %s (%d).",i.id,n),r=!0)}return r?i:null}async resetChain(t){const e=await this.txLock.lock();try{return await this._resetChain(t)}finally{e()}}async _resetChain(t){if(t.height>this.state.height)throw new Error("WDB: Bad reset height.");return this.rollback(t.height)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";t.exports=i(262)},function(t,e,i){"use strict";
/*!
 * bweb.js - a web server
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bweb
 */const s=i(267),r=i(266),{RPC:n,RPCError:o,errors:a}=i(210),h=i(263);e.Server=s,e.createServer=(t=>new s(t)),e.server=(t=>new s(t)),e.Router=r,e.router=(()=>new r),e.RPC=n,e.rpc=(()=>new n),e.RPCError=o,e.errors=a,e.middleware=h},function(t,e,i){"use strict";
/*!
 * workers.js - worker processes for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(2);t.exports=class{constructor(){}packet(t){const e=10+t.getSize(),i=s.write(e);i.writeU32(t.id),i.writeU8(t.cmd),i.seek(4),t.toWriter(i),i.writeU8(10);const r=i.render();return r.writeUInt32LE(r.length-10,5,!0),r}}},function(t,e,i){"use strict";(function(e){
/*!
 * parser.js - worker parser for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(7),n=i(49);t.exports=class extends r{constructor(){super(),this.waiting=9,this.header=null,this.pending=[],this.total=0}feed(t){for(this.total+=t.length,this.pending.push(t);this.total>=this.waiting;){const t=this.read(this.waiting);this.parse(t)}}read(t){if(s(this.total>=t,"Reading too much."),0===t)return e.alloc(0);const i=this.pending[0];if(i.length>t){const e=i.slice(0,t);return this.pending[0]=i.slice(t),this.total-=e.length,e}if(i.length===t){const t=this.pending.shift();return this.total-=t.length,t}const r=e.allocUnsafe(t);let n=0;for(;n<r.length;){const t=this.pending[0],e=t.copy(r,n);e===t.length?this.pending.shift():this.pending[0]=t.slice(e),n+=e}return s.strictEqual(n,r.length),this.total-=r.length,r}parse(t){let e,i=this.header;if(!i){try{i=this.parseHeader(t)}catch(t){return void this.emit("error",t)}return this.header=i,void(this.waiting=i.size+1)}this.waiting=9,this.header=null;try{e=this.parsePacket(i,t)}catch(t){return void this.emit("error",t)}10===t[t.length-1]?(e.id=i.id,this.emit("packet",e)):this.emit("error",new Error("No trailing newline."))}parseHeader(t){return new class{constructor(t,e,i){this.id=t,this.cmd=e,this.size=i}}(t.readUInt32LE(0,!0),t.readUInt8(4,!0),t.readUInt32LE(5,!0))}parsePacket(t,e){switch(t.cmd){case n.types.ENV:return n.EnvPacket.fromRaw(e);case n.types.EVENT:return n.EventPacket.fromRaw(e);case n.types.LOG:return n.LogPacket.fromRaw(e);case n.types.ERROR:return n.ErrorPacket.fromRaw(e);case n.types.ERRORRESULT:return n.ErrorResultPacket.fromRaw(e);case n.types.CHECK:return n.CheckPacket.fromRaw(e);case n.types.CHECKRESULT:return n.CheckResultPacket.fromRaw(e);case n.types.SIGN:return n.SignPacket.fromRaw(e);case n.types.SIGNRESULT:return n.SignResultPacket.fromRaw(e);case n.types.CHECKINPUT:return n.CheckInputPacket.fromRaw(e);case n.types.CHECKINPUTRESULT:return n.CheckInputResultPacket.fromRaw(e);case n.types.SIGNINPUT:return n.SignInputPacket.fromRaw(e);case n.types.SIGNINPUTRESULT:return n.SignInputResultPacket.fromRaw(e);case n.types.ECVERIFY:return n.ECVerifyPacket.fromRaw(e);case n.types.ECVERIFYRESULT:return n.ECVerifyResultPacket.fromRaw(e);case n.types.ECSIGN:return n.ECSignPacket.fromRaw(e);case n.types.ECSIGNRESULT:return n.ECSignResultPacket.fromRaw(e);case n.types.MINE:return n.MinePacket.fromRaw(e);case n.types.MINERESULT:return n.MineResultPacket.fromRaw(e);case n.types.SCRYPT:return n.ScryptPacket.fromRaw(e);case n.types.SCRYPTRESULT:return n.ScryptResultPacket.fromRaw(e);default:throw new Error("Unknown packet.")}}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * scrypt.js - scrypt for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 */t.exports=i(130)},function(t,e,i){"use strict";
/*!
 * jobs.js - worker jobs for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(13),{derive:r}=i(105),n=i(71),o=i(49),a=e;a.execute=function(t){try{return a.handle(t)}catch(t){return new o.ErrorResultPacket(t)}},a.handle=function(t){switch(t.cmd){case o.types.CHECK:return a.check(t.tx,t.view,t.flags);case o.types.CHECKINPUT:return a.checkInput(t.tx,t.index,t.coin,t.flags);case o.types.SIGN:return a.sign(t.tx,t.rings,t.type);case o.types.SIGNINPUT:return a.signInput(t.tx,t.index,t.coin,t.ring,t.type);case o.types.ECVERIFY:return a.ecVerify(t.msg,t.sig,t.key);case o.types.ECSIGN:return a.ecSign(t.msg,t.key);case o.types.MINE:return a.mine(t.data,t.target,t.min,t.max);case o.types.SCRYPT:return a.scrypt(t.passwd,t.salt,t.N,t.r,t.p,t.len);default:throw new Error(`Unknown command: "${t.cmd}".`)}},a.check=function(t,e,i){try{t.check(e,i)}catch(t){if("ScriptError"===t.type)return new o.CheckResultPacket(t);throw t}return new o.CheckResultPacket},a.checkInput=function(t,e,i,s){try{t.checkInput(e,i,s)}catch(t){if("ScriptError"===t.type)return new o.CheckInputResultPacket(t);throw t}return new o.CheckInputResultPacket},a.sign=function(t,e,i){const s=t.sign(e,i);return o.SignResultPacket.fromTX(t,s)},a.signInput=function(t,e,i,s,r){const n=t.signInput(t,e,i,s,r);return o.SignInputResultPacket.fromTX(t,e,n)},a.ecVerify=function(t,e,i){const r=s.verifyDER(t,e,i);return new o.ECVerifyResultPacket(r)},a.ecSign=function(t,e){const i=s.signDER(t,e);return new o.ECSignResultPacket(i)},a.mine=function(t,e,i,s){const r=n(t,e,i,s);return new o.MineResultPacket(r)},a.scrypt=function(t,e,i,s,n,a){const h=r(t,e,i,s,n,a);return new o.ScryptResultPacket(h)}},function(t,e,i){"use strict";(function(e){
/*!
 * pool.js - peer management for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(7),{Lock:n}=i(27),o=i(70),a=i(109),h=i(212),l=i(276),u=i(274),c=i(214),{BloomFilter:f,RollingFilter:d}=i(62),p=i(13),g=i(5),m=i(34),w=i(76),y=i(12),b=i(135),v=i(133),k=i(108),E=i(8),R=i(132),S=i(215),_=i(35),x=i(54),I=m.services,A=_.types,O=x.types,B=S.scores;class P extends r{constructor(t){super(),this.opened=!1,this.options=new N(t),this.network=this.options.network,this.logger=this.options.logger.context("net"),this.chain=this.options.chain,this.mempool=this.options.mempool,this.server=this.options.createServer(),this.nonces=this.options.nonces,this.locker=new n(!0),this.connected=!1,this.disconnecting=!1,this.syncing=!1,this.discovering=!1,this.spvFilter=null,this.txFilter=null,this.blockMap=new Set,this.txMap=new Set,this.compactBlocks=new Set,this.invMap=new Map,this.pendingFilter=null,this.pendingRefill=null,this.checkpoints=!1,this.headerChain=new c,this.headerNext=null,this.headerTip=null,this.peers=new T,this.authdb=new b.AuthDB(this.options),this.hosts=new S(this.options),this.id=0,this.options.spv&&(this.spvFilter=f.fromRate(2e4,.001,f.flags.ALL)),this.options.mempool||(this.txFilter=new d(5e4,1e-6)),this.init()}init(){this.server.on("error",t=>{this.emit("error",t)}),this.server.on("connection",t=>{this.handleSocket(t),this.emit("connection",t)}),this.server.on("listening",()=>{const t=this.server.address();this.logger.info("Pool server listening on %s (port=%d).",t.address,t.port),this.emit("listening",t)}),this.chain.on("block",(t,e)=>{this.emit("block",t,e)}),this.chain.on("reset",()=>{this.checkpoints&&this.resetChain(),this.forceSync()}),this.chain.on("full",()=>{this.sync(),this.emit("full"),this.logger.info("Chain is fully synced (height=%d).",this.chain.height)}),this.chain.on("bad orphan",(t,e)=>{this.handleBadOrphan("block",t,e)}),this.mempool&&(this.mempool.on("tx",t=>{this.emit("tx",t)}),this.mempool.on("bad orphan",(t,e)=>{this.handleBadOrphan("tx",t,e)})),this.options.selfish||this.options.spv||(this.mempool&&this.mempool.on("tx",t=>{this.announceTX(t)}),this.chain.on("block",t=>{this.chain.synced&&this.announceBlock(t)}))}async open(){if(s(!this.opened,"Pool is already open."),this.opened=!0,this.logger.info("Pool loaded (maxpeers=%d).",this.options.maxOutbound),this.options.bip150){const t=p.publicKeyCreate(this.options.identityKey,!0);this.logger.info("Identity public key: %s.",t.toString("hex")),this.logger.info("Identity address: %s.",b.address(t))}this.resetChain()}async close(){return s(this.opened,"Pool is not open."),this.opened=!1,this.disconnect()}resetChain(){if(!this.options.checkpoints)return;this.checkpoints=!1,this.headerTip=null,this.headerChain.reset(),this.headerNext=null;const t=this.chain.tip;t.height<this.network.lastCheckpoint&&(this.checkpoints=!0,this.headerTip=this.getNextTip(t.height),this.headerChain.push(new L(t.hash,t.height)),this.logger.info("Initialized header chain to height %d (checkpoint=%s).",t.height,g.revHex(this.headerTip.hash)))}async connect(){const t=await this.locker.lock();try{return await this._connect()}finally{t()}}async _connect(){s(this.opened,"Pool is not opened."),this.connected||(await this.hosts.open(),await this.authdb.open(),await this.discoverGateway(),await this.discoverExternal(),await this.discoverSeeds(),this.fillOutbound(),await this.listen(),this.startTimer(),this.connected=!0)}async disconnect(){const t=await this.locker.lock();try{return await this._disconnect()}finally{t()}}async _disconnect(){if(this.connected){this.disconnecting=!0;for(const t of this.invMap.values())t.resolve();this.peers.destroy(),this.blockMap.clear(),this.txMap.clear(),null!=this.pendingFilter&&(clearTimeout(this.pendingFilter),this.pendingFilter=null),null!=this.pendingRefill&&(clearTimeout(this.pendingRefill),this.pendingRefill=null),this.checkpoints=!1,this.headerTip=null,this.headerChain.reset(),this.headerNext=null,this.stopTimer(),await this.authdb.close(),await this.hosts.close(),await this.unlisten(),this.disconnecting=!1,this.syncing=!1,this.connected=!1}}async listen(){s(this.server),s(!this.connected,"Already listening."),this.options.listen&&(this.server.maxConnections=this.options.maxInbound,await this.server.listen(this.options.port,this.options.host))}async unlisten(){s(this.server),s(this.connected,"Not listening."),this.options.listen&&await this.server.close()}startTimer(){s(null==this.timer,"Timer already started."),this.timer=setInterval(()=>this.discover(),P.DISCOVERY_INTERVAL)}stopTimer(){s(null!=this.timer,"Timer already stopped."),clearInterval(this.timer),this.timer=null}async discover(){if(!this.discovering)try{this.discovering=!0,await this.discoverGateway(),await this.discoverSeeds(!0)}finally{this.discovering=!1}}async discoverGateway(){const t=this.options.publicPort,e=this.options.port;if(!this.options.listen)return!1;if(!this.options.upnp)return!1;let i,s;try{this.logger.debug("Discovering internet gateway (upnp)."),i=await l.discover()}catch(t){return this.logger.debug("Could not discover internet gateway (upnp)."),this.logger.debug(t),!1}try{s=await i.getExternalIP()}catch(t){return this.logger.debug("Could not find external IP (upnp)."),this.logger.debug(t),!1}this.hosts.addLocal(s,t,B.UPNP)&&this.logger.info("External IP found (upnp): %s.",s),this.logger.debug("Adding port mapping %d->%d.",t,e);try{await i.addPortMapping(s,t,e)}catch(t){return this.logger.debug("Could not add port mapping (upnp)."),this.logger.debug(t),!1}return!0}async discoverSeeds(t){if(0===this.hosts.dnsSeeds.length)return;const e=Math.min(2,this.options.maxOutbound),i=this.hosts.size();let s=0;for(let t=this.peers.head();t&&!(t.outbound&&t.connected&&++s>e);t=t.next);(0===i||t&&s<e)&&(this.logger.warning("Could not find enough peers."),this.logger.warning("Hitting DNS seeds..."),await this.hosts.discoverSeeds(),this.logger.info("Resolved %d hosts from DNS seeds.",this.hosts.size()-i),this.refill())}async discoverExternal(){const t=this.options.publicPort;if(!this.options.listen)return;if(this.options.proxy)return;if(this.hosts.local.size>0)return;let e=null;try{e=await a.getIPv4(2e3)}catch(t){this.logger.debug("Could not find external IPv4 (dns)."),this.logger.debug(t)}e&&this.hosts.addLocal(e,t,B.DNS)&&this.logger.info("External IPv4 found (dns): %s.",e);let i=null;try{i=await a.getIPv6(2e3)}catch(t){this.logger.debug("Could not find external IPv6 (dns)."),this.logger.debug(t)}i&&this.hosts.addLocal(i,t,B.DNS)&&this.logger.info("External IPv6 found (dns): %s.",i)}handleSocket(t){if(!t.remoteAddress)return this.logger.debug("Ignoring disconnected peer."),void t.destroy();const e=o.normalize(t.remoteAddress);if(this.peers.inbound>=this.options.maxInbound)return this.logger.debug("Ignoring peer: too many inbound (%s).",e),void t.destroy();if(this.hosts.isBanned(e))return this.logger.debug("Ignoring banned peer (%s).",e),void t.destroy();const i=o.toHostname(e,t.remotePort);s(!this.peers.map.has(i),"Port collision."),this.addInbound(t)}addLoader(){if(!this.opened)return;s(!this.peers.load);for(let t=this.peers.head();t;t=t.next)if(t.outbound)return this.logger.info("Repurposing peer for loader (%s).",t.hostname()),void this.setLoader(t);const t=this.getHost();if(!t)return;const e=this.createOutbound(t);this.logger.info("Adding loader peer (%s).",e.hostname()),this.peers.add(e),this.setLoader(e)}setLoader(t){this.opened&&(s(t.outbound),s(!this.peers.load),s(!t.loader),t.loader=!0,this.peers.load=t,this.sendSync(t),this.emit("loader",t))}startSync(){this.opened&&(s(this.connected,"Pool is not connected!"),this.syncing=!0,this.resync(!1))}forceSync(){this.opened&&(s(this.connected,"Pool is not connected!"),this.resync(!0))}sync(t){this.resync(!1)}stopSync(){if(this.syncing){this.syncing=!1;for(let t=this.peers.head();t;t=t.next)t.outbound&&t.syncing&&(t.syncing=!1,t.merkleBlock=null,t.merkleTime=-1,t.merkleMatches=0,t.merkleMap=null,t.blockTime=-1,t.blockMap.clear(),t.compactBlocks.clear());this.blockMap.clear(),this.compactBlocks.clear()}}async resync(t){if(!this.syncing)return;let e;try{e=await this.chain.getLocator()}catch(t){return void this.emit("error",t)}for(let i=this.peers.head();i;i=i.next)i.outbound&&(!t&&i.syncing||this.sendLocator(e,i))}isSyncable(t){return!(!this.syncing||t.destroyed||!t.handshake||!(t.services&I.NETWORK)||!t.loader&&!this.chain.synced)}async sendSync(t){if(t.syncing)return!1;if(!this.isSyncable(t))return!1;let e;t.syncing=!0,t.blockTime=Date.now();try{e=await this.chain.getLocator()}catch(e){return t.syncing=!1,t.blockTime=-1,this.emit("error",e),!1}return this.sendLocator(e,t)}sendLocator(t,e){return!!this.isSyncable(e)&&(this.network.requestMempool&&e.loader&&this.chain.synced&&e.sendMempool(),e.syncing=!0,e.blockTime=Date.now(),this.checkpoints?(e.sendGetHeaders(t,this.headerTip.hash),!0):(e.sendGetBlocks(t),!0))}sendMempool(){for(let t=this.peers.head();t;t=t.next)t.sendMempool()}sendGetAddr(){for(let t=this.peers.head();t;t=t.next)t.sendGetAddr()}resolveHeaders(t){const e=[];for(let t=this.headerNext;t&&(this.headerNext=t.next,e.push(t.hash),5e4!==e.length);t=t.next);this.getBlock(t,e)}resolveHeight(t,e){let i=0;for(let s=this.peers.head();s;s=s.next)s.bestHash===t&&s.bestHeight!==e&&(s.bestHeight=e,i+=1);i>0&&this.logger.debug("Resolved height for %d peers.",i)}getNextTip(t){for(const e of this.network.checkpoints)if(e.height>t)return new L(e.hash,e.height);throw new Error("Next checkpoint not found.")}announceList(t){const e=[],i=[];for(const t of this.invMap.values())switch(t.type){case A.BLOCK:e.push(t.msg);break;case A.TX:i.push(t.msg);break;default:s(!1,"Bad item type.")}e.length>0&&t.announceBlock(e),i.length>0&&t.announceTX(i)}getBroadcasted(t,e){const i=e.isTX()?A.TX:A.BLOCK,s=this.invMap.get(e.hash);return s?i!==s.type?(this.logger.debug("Peer requested item with the wrong type (%s).",t.hostname()),null):(this.logger.debug("Peer requested %s %s as a %s packet (%s).",e.isTX()?"tx":"block",e.rhash(),"normal",t.hostname()),s.handleAck(t),s.msg):null}async getItem(t,e){return this.getBroadcasted(t,e)||(this.options.selfish?null:e.isTX()?this.mempool?this.mempool.getTX(e.hash):null:this.chain.options.spv?null:this.chain.options.prune?null:this.chain.getBlock(e.hash))}async sendBlock(t,e){const i=this.getBroadcasted(t,e);if(i)return t.send(new x.BlockPacket(i)),!0;if(this.options.selfish||this.chain.options.spv||this.chain.options.prune)return!1;const s=await this.chain.getRawBlock(e.hash);return!!s&&(t.sendRaw("block",s),!0)}createOutbound(t){const e=v.ciphers.CHACHAPOLY,i=this.options.identityKey,s=R.fromOutbound(this.options,t);return this.hosts.markAttempt(t.hostname),this.options.bip151&&s.setCipher(e),this.options.bip150&&s.setAuth(this.authdb,i),this.bindPeer(s),this.logger.debug("Connecting to %s.",s.hostname()),s.tryOpen(),s}createInbound(t){const e=v.ciphers.CHACHAPOLY,i=this.options.identityKey,s=R.fromInbound(this.options,t);return this.options.bip151&&s.setCipher(e),this.options.bip150&&s.setAuth(this.authdb,i),this.bindPeer(s),s.tryOpen(),s}uid(){const t=Number.MAX_SAFE_INTEGER;this.id>=t-this.peers.size()-1&&(this.id=0);do{this.id+=1}while(this.peers.find(this.id));return this.id}bindPeer(t){t.id=this.uid(),t.onPacket=(e=>this.handlePacket(t,e)),t.on("error",t=>{this.logger.debug(t)}),t.once("connect",()=>{this.handleConnect(t)}),t.once("open",()=>{this.handleOpen(t)}),t.once("close",e=>{this.handleClose(t,e)}),t.once("ban",()=>{this.handleBan(t)})}async handlePacket(t,e){switch(e.type){case O.VERSION:await this.handleVersion(t,e);break;case O.VERACK:await this.handleVerack(t,e);break;case O.PING:await this.handlePing(t,e);break;case O.PONG:await this.handlePong(t,e);break;case O.GETADDR:await this.handleGetAddr(t,e);break;case O.ADDR:await this.handleAddr(t,e);break;case O.INV:await this.handleInv(t,e);break;case O.GETDATA:await this.handleGetData(t,e);break;case O.NOTFOUND:await this.handleNotFound(t,e);break;case O.GETBLOCKS:await this.handleGetBlocks(t,e);break;case O.GETHEADERS:await this.handleGetHeaders(t,e);break;case O.HEADERS:await this.handleHeaders(t,e);break;case O.SENDHEADERS:await this.handleSendHeaders(t,e);break;case O.BLOCK:await this.handleBlock(t,e);break;case O.TX:await this.handleTX(t,e);break;case O.REJECT:await this.handleReject(t,e);break;case O.MEMPOOL:await this.handleMempool(t,e);break;case O.FILTERLOAD:await this.handleFilterLoad(t,e);break;case O.FILTERADD:await this.handleFilterAdd(t,e);break;case O.FILTERCLEAR:await this.handleFilterClear(t,e);break;case O.MERKLEBLOCK:await this.handleMerkleBlock(t,e);break;case O.FEEFILTER:await this.handleFeeFilter(t,e);break;case O.SENDCMPCT:await this.handleSendCmpct(t,e);break;case O.CMPCTBLOCK:await this.handleCmpctBlock(t,e);break;case O.GETBLOCKTXN:await this.handleGetBlockTxn(t,e);break;case O.BLOCKTXN:await this.handleBlockTxn(t,e);break;case O.ENCINIT:await this.handleEncinit(t,e);break;case O.ENCACK:await this.handleEncack(t,e);break;case O.AUTHCHALLENGE:await this.handleAuthChallenge(t,e);break;case O.AUTHREPLY:await this.handleAuthReply(t,e);break;case O.AUTHPROPOSE:await this.handleAuthPropose(t,e);break;case O.UNKNOWN:await this.handleUnknown(t,e);break;default:s(!1,"Bad packet type.")}this.emit("packet",e,t)}async handleConnect(t){this.logger.info("Connected to %s.",t.hostname()),t.outbound&&this.hosts.markSuccess(t.hostname()),this.emit("peer connect",t)}async handleOpen(t){if(!this.options.selfish&&this.options.listen){const e=this.hosts.getLocal(t.address);e&&t.send(new x.AddrPacket([e]))}this.options.compact&&t.sendCompact(this.options.blockMode),this.hosts.isFull()||t.sendGetAddr(),this.spvFilter&&t.sendFilterLoad(this.spvFilter),this.announceList(t),-1!==this.options.feeRate&&t.sendFeeRate(this.options.feeRate),t.outbound&&this.sendSync(t),t.outbound&&(this.hosts.markAck(t.hostname(),t.services),t.loader||this.peers.load&&!this.peers.load.handshake&&(s(this.peers.load.loader),this.peers.load.loader=!1,this.peers.load=null),this.peers.load||this.setLoader(t)),this.emit("peer open",t)}async handleClose(t,e){const i=t.outbound,s=t.loader,r=t.blockMap.size;this.removePeer(t),s&&(this.logger.info("Removed loader peer (%s).",t.hostname()),this.checkpoints&&this.resetChain()),this.nonces.remove(t.hostname()),this.emit("peer close",t,e),this.opened&&(this.disconnecting||(this.chain.synced&&r>0&&(this.logger.warning("Peer disconnected with requested blocks."),this.logger.warning("Resending sync..."),this.forceSync()),i&&this.refill()))}async handleBan(t){this.ban(t.address),this.emit("ban",t)}async handleVersion(t,e){this.logger.info("Received version (%s): version=%d height=%d services=%s agent=%s",t.hostname(),e.version,e.height,e.services.toString(2),e.agent),this.network.time.add(t.hostname(),e.time),this.nonces.remove(t.hostname()),!t.outbound&&e.remote.isRoutable()&&this.hosts.markLocal(e.remote)}async handleVerack(t,e){}async handlePing(t,e){}async handlePong(t,e){}async handleGetAddr(t,e){if(this.options.selfish)return;if(t.sentAddr)return void this.logger.debug("Ignoring repeated getaddr (%s).",t.hostname());t.sentAddr=!0;const i=this.hosts.toArray(),s=[];for(const e of i)if(t.addrFilter.added(e.hostname,"ascii")&&(s.push(e),1e3===s.length))break;0!==s.length&&(this.logger.debug("Sending %d addrs to peer (%s)",s.length,t.hostname()),t.send(new x.AddrPacket(s)))}async handleAddr(t,e){const i=e.items,s=this.network.now(),r=this.options.getRequiredServices();for(const e of i)t.addrFilter.add(e.hostname,"ascii"),e.isRoutable()&&e.hasServices(r)&&((e.time<=1e8||e.time>s+600)&&(e.time=s-432e3),0!==e.port&&this.hosts.add(e,t.address));this.logger.info("Received %d addrs (hosts=%d, peers=%d) (%s).",i.length,this.hosts.size(),this.peers.size(),t.hostname()),this.fillOutbound()}async handleInv(t,e){const i=await this.locker.lock();try{return await this._handleInv(t,e)}finally{i()}}async _handleInv(t,e){const i=e.items;if(i.length>5e4)return void t.increaseBan(100);const s=[],r=[];let n=-1;for(const e of i){switch(e.type){case A.BLOCK:s.push(e.hash);break;case A.TX:r.push(e.hash);break;default:n=e.type;continue}t.invFilter.add(e.hash,"hex")}this.logger.spam("Received inv packet with %d items: blocks=%d txs=%d (%s).",i.length,s.length,r.length,t.hostname()),-1!==n&&this.logger.warning("Peer sent an unknown inv type: %d (%s).",n,t.hostname()),s.length>0&&await this.handleBlockInv(t,s),r.length>0&&await this.handleTXInv(t,r)}async handleBlockInv(t,e){if(s(e.length>0),!this.syncing)return;if(!t.loader||this.chain.synced){const i=e[e.length-1];t.bestHash=i}if(!this.chain.synced&&!t.loader)return;if(this.checkpoints)return;this.logger.debug("Received %s block hashes from peer (%s).",e.length,t.hostname());const i=[];let r=null;for(let s=0;s<e.length;s++){const n=e[s];this.chain.hasOrphan(n)?(this.logger.debug("Received known orphan hash (%s).",t.hostname()),await this.resolveOrphan(t,n)):await this.hasBlock(n)?(r=n,s===e.length-1&&(this.logger.debug("Received existing hash (%s).",t.hostname()),await this.getBlocks(t,n))):i.push(n)}if(r&&this.chain.synced){const e=await this.chain.getHeight(r);-1!==e&&(t.bestHeight=e)}this.getBlock(t,i)}async handleTXInv(t,e){s(e.length>0),this.syncing&&!this.chain.synced||this.ensureTX(t,e)}async handleGetData(t,e){const i=e.items;if(i.length>5e4)return this.logger.warning("Peer sent inv with >50k items (%s).",t.hostname()),t.increaseBan(100),void t.destroy();const s=[];let r=0,n=0,o=0,a=-1;for(const e of i)if(e.isTX()){const i=await this.getItem(t,e);if(!i){s.push(e);continue}if(i.isCoinbase()){s.push(e),this.logger.warning("Failsafe: tried to relay a coinbase.");continue}t.send(new x.TXPacket(i)),r+=1}else{switch(e.type){case A.BLOCK:if(!await this.sendBlock(t,e)){s.push(e);continue}n+=1;break;case A.FILTERED_BLOCK:{if(!this.options.bip37)return this.logger.debug("Peer requested a merkleblock without bip37 enabled (%s).",t.hostname()),void t.destroy();if(!t.spvFilter){s.push(e);continue}const i=await this.getItem(t,e);if(!i){s.push(e);continue}const o=i.toMerkle(t.spvFilter);t.send(new x.MerkleBlockPacket(o));for(const e of o.txs)t.send(new x.TXPacket(e)),r+=1;n+=1;break}case A.CMPCT_BLOCK:{if(await this.chain.getHeight(e.hash)<this.chain.tip.height-10){if(!await this.sendBlock(t,e)){s.push(e);continue}n+=1;break}const i=await this.getItem(t,e);if(!i){s.push(e);continue}t.sendCompactBlock(i),n+=1,o+=1;break}default:a=e.type,s.push(e);continue}e.hash===t.hashContinue&&(t.sendInv([new _(A.BLOCK,this.chain.tip.hash)]),t.hashContinue=null),await t.drain()}s.length>0&&t.send(new x.NotFoundPacket(s)),r>0&&this.logger.debug("Served %d txs with getdata (notfound=%d) (%s).",r,s.length,t.hostname()),n>0&&this.logger.debug("Served %d blocks with getdata (notfound=%d, cmpct=%d) (%s).",n,s.length,o,t.hostname()),-1!==a&&this.logger.warning("Peer sent an unknown getdata type: %s (%d).",a,t.hostname())}async handleNotFound(t,e){const i=e.items;for(const e of i)if(!this.resolveItem(t,e))return this.logger.warning("Peer sent notfound for unrequested item: %s (%s).",e.hash,t.hostname()),void t.destroy()}async handleGetBlocks(t,e){if(!this.chain.synced)return;if(this.options.selfish)return;if(this.chain.options.spv)return;if(this.chain.options.prune)return;let i=await this.chain.findLocator(e.locator);i&&(i=await this.chain.getNextHash(i));const s=[];for(;i&&(s.push(new _(A.BLOCK,i)),i!==e.stop);){if(500===s.length){t.hashContinue=i;break}i=await this.chain.getNextHash(i)}t.sendInv(s)}async handleGetHeaders(t,e){if(!this.chain.synced)return;if(this.options.selfish)return;if(this.chain.options.spv)return;if(this.chain.options.prune)return;let i,s;e.locator.length>0?(i=await this.chain.findLocator(e.locator))&&(i=await this.chain.getNextHash(i)):i=e.stop,i&&(s=await this.chain.getEntry(i));const r=[];for(;s&&(r.push(s.toHeaders()),s.hash!==e.stop)&&2e3!==r.length;)s=await this.chain.getNext(s);t.sendHeaders(r)}async handleHeaders(t,e){const i=await this.locker.lock();try{return await this._handleHeaders(t,e)}finally{i()}}async _handleHeaders(t,e){const i=e.items;if(!this.checkpoints)return;if(!this.syncing)return;if(!t.loader)return;if(0===i.length)return;if(i.length>2e3)return void t.increaseBan(100);s(this.headerChain.size>0);let r=!1,n=null;for(const e of i){const i=this.headerChain.tail,s=e.hash("hex"),o=i.height+1;if(!e.verify())return this.logger.warning("Peer sent an invalid header (%s).",t.hostname()),t.increaseBan(100),void t.destroy();if(e.prevBlock!==i.hash)return this.logger.warning("Peer sent a bad header chain (%s).",t.hostname()),void t.destroy();if((n=new L(s,o)).height===this.headerTip.height){if(n.hash!==this.headerTip.hash)return this.logger.warning("Peer sent an invalid checkpoint (%s).",t.hostname()),void t.destroy();r=!0}this.headerNext||(this.headerNext=n),this.headerChain.push(n)}if(this.logger.debug("Received %s headers from peer (%s).",i.length,t.hostname()),t.blockTime=Date.now(),r)return this.headerChain.shift(),void this.resolveHeaders(t);t.sendGetHeaders([n.hash],this.headerTip.hash)}async handleSendHeaders(t,e){}async handleBlock(t,e){const i=w.flags.DEFAULT_FLAGS;this.options.spv?this.logger.warning("Peer sent unsolicited block (%s).",t.hostname()):await this.addBlock(t,e.block,i)}async addBlock(t,e,i){const s=e.hash("hex"),r=await this.locker.lock(s);try{return await this._addBlock(t,e,i)}finally{r()}}async _addBlock(t,e,i){if(!this.syncing)return;const s=e.hash("hex");if(!this.resolveBlock(t,s))return this.logger.warning("Received unrequested block: %s (%s).",e.rhash(),t.hostname()),void t.destroy();let r;t.blockTime=Date.now();try{r=await this.chain.add(e,i,t.id)}catch(e){if("VerifyError"===e.type)return t.reject("block",e),void this.logger.warning(e);throw e}if(!r){if(this.checkpoints)return void this.logger.warning("Peer sent orphan block with getheaders (%s).",t.hostname());const i=e.getCoinbaseHeight();return-1!==i&&(t.bestHash=s,t.bestHeight=i,this.resolveHeight(s,i)),this.logger.debug("Peer sent an orphan block. Resolving."),void await this.resolveOrphan(t,s)}this.chain.synced&&(t.bestHash=r.hash,t.bestHeight=r.height,this.resolveHeight(r.hash,r.height)),this.logStatus(e),await this.resolveChain(t,s)}async resolveChain(t,e){if(!this.checkpoints)return;if(!t.loader)return;if(t.destroyed)throw new Error("Peer was destroyed (header chain resolution).");const i=this.headerChain.head;return s(i),e!==i.hash?(this.logger.warning("Header hash mismatch %s != %s (%s).",g.revHex(e),g.revHex(i.hash),t.hostname()),void t.destroy()):i.height<this.network.lastCheckpoint?i.height===this.headerTip.height?(this.logger.info("Received checkpoint %s (%d).",g.revHex(i.hash),i.height),this.headerTip=this.getNextTip(i.height),void t.sendGetHeaders([e],this.headerTip.hash)):(this.headerChain.shift(),void this.resolveHeaders(t)):(this.logger.info("Switching to getblocks (%s).",t.hostname()),void await this.switchSync(t,e))}async switchSync(t,e){s(this.checkpoints),this.checkpoints=!1,this.headerTip=null,this.headerChain.reset(),this.headerNext=null,await this.getBlocks(t,e)}handleBadOrphan(t,e,i){const s=this.peers.find(i);s?(this.logger.debug("Punishing peer for sending a bad orphan (%s).",s.hostname()),s.reject(t,e)):this.logger.warning("Could not find offending peer for orphan: %s (%d).",g.revHex(e.hash),i)}logStatus(t){this.chain.height%20==0&&this.logger.debug("Status: time=%s height=%d progress=%s orphans=%d active=%d target=%s peers=%d",g.date(t.time),this.chain.height,(100*this.chain.getProgress()).toFixed(2)+"%",this.chain.orphanMap.size,this.blockMap.size,t.bits,this.peers.size()),this.chain.height%2e3==0&&this.logger.info("Received 2000 more blocks (height=%d, hash=%s).",this.chain.height,t.rhash())}async handleTX(t,e){const i=e.tx.hash("hex"),s=await this.locker.lock(i);try{return await this._handleTX(t,e)}finally{s()}}async _handleTX(t,e){const i=e.tx,r=i.hash("hex"),n=w.flags.VERIFY_NONE,o=t.merkleBlock;if(o&&(s(t.merkleMatches>0),s(t.merkleMap),o.hasTX(r)))return t.merkleMap.has(r)?(this.logger.warning("Peer sent duplicate merkle tx: %s (%s).",i.txid(),t.hostname()),void t.increaseBan(100)):(t.merkleMap.add(r),o.txs.push(i),void(0==--t.merkleMatches&&(t.merkleBlock=null,t.merkleTime=-1,t.merkleMatches=0,t.merkleMap=null,await this._addBlock(t,o,n))));if(!this.resolveTX(t,r))return this.logger.warning("Peer sent unrequested tx: %s (%s).",i.txid(),t.hostname()),void t.destroy();if(!this.mempool)return void this.emit("tx",i);let a;try{a=await this.mempool.addTX(i,t.id)}catch(e){if("VerifyError"===e.type)return t.reject("tx",e),void this.logger.info(e);throw e}a&&a.length>0&&(this.logger.debug("Requesting %d missing transactions (%s).",a.length,t.hostname()),this.ensureTX(t,a))}async handleReject(t,e){if(this.logger.warning("Received reject (%s): msg=%s code=%s reason=%s hash=%s.",t.hostname(),e.message,e.getCode(),e.reason,e.rhash()),!e.hash)return;const i=this.invMap.get(e.hash);i&&i.handleReject(t)}async handleMempool(t,e){if(!this.mempool)return;if(!this.chain.synced)return;if(this.options.selfish)return;if(!this.options.bip37)return this.logger.debug("Peer requested mempool without bip37 enabled (%s).",t.hostname()),void t.destroy();const i=[];for(const t of this.mempool.map.keys())i.push(new _(A.TX,t));this.logger.debug("Sending mempool snapshot (%s).",t.hostname()),t.queueInv(i)}async handleFilterLoad(t,e){}async handleFilterAdd(t,e){}async handleFilterClear(t,e){}async handleMerkleBlock(t,e){const i=e.block.hash("hex"),s=await this.locker.lock(i);try{return await this._handleMerkleBlock(t,e)}finally{s()}}async _handleMerkleBlock(t,e){if(!this.syncing)return;if(!this.options.spv)return this.logger.warning("Peer sent unsolicited merkleblock (%s).",t.hostname()),void t.increaseBan(100);const i=e.block,s=i.hash("hex");if(!t.blockMap.has(s))return this.logger.warning("Peer sent an unrequested merkleblock (%s).",t.hostname()),void t.destroy();if(t.merkleBlock)return this.logger.warning("Peer sent a merkleblock prematurely (%s).",t.hostname()),void t.increaseBan(100);if(!i.verify())return this.logger.warning("Peer sent an invalid merkleblock (%s).",t.hostname()),void t.increaseBan(100);const r=i.getTree();if(0!==r.matches.length)t.merkleBlock=i,t.merkleTime=Date.now(),t.merkleMatches=r.matches.length,t.merkleMap=new Set;else{const e=w.flags.VERIFY_NONE;await this._addBlock(t,i,e)}}async handleFeeFilter(t,e){}async handleSendCmpct(t,e){}async handleCmpctBlock(t,e){const i=e.block,r=i.hash("hex");if(!this.syncing)return;if(!this.options.compact)return this.logger.info("Peer sent unsolicited cmpctblock (%s).",t.hostname()),void this.destroy();if(!t.hasCompactSupport()||!t.hasCompact())return this.logger.info("Peer sent unsolicited cmpctblock (%s).",t.hostname()),void this.destroy();if(t.compactBlocks.has(r))return void this.logger.debug("Peer sent us a duplicate compact block (%s).",t.hostname());if(this.compactBlocks.has(r))return void this.logger.debug("Already waiting for compact block %s (%s).",r,t.hostname());if(!t.blockMap.has(r)){if(1!==this.options.blockMode)return this.logger.warning("Peer sent us an unrequested compact block (%s).",t.hostname()),void t.destroy();t.blockMap.set(r,Date.now()),s(!this.blockMap.has(r)),this.blockMap.add(r)}if(!this.mempool)return void this.logger.warning("Requesting compact blocks without a mempool!");if(!i.verify())return this.logger.debug("Peer sent an invalid compact block (%s).",t.hostname()),void t.increaseBan(100);let n;try{n=i.init()}catch(e){return this.logger.debug("Peer sent an invalid compact block (%s).",t.hostname()),void t.increaseBan(100)}if(!n)return this.logger.warning("Siphash collision for %s. Requesting full block (%s).",i.rhash(),t.hostname()),t.getFullBlock(r),void t.increaseBan(10);if(i.fillMempool(this.mempool)){this.logger.debug("Received full compact block %s (%s).",i.rhash(),t.hostname());const e=w.flags.VERIFY_BODY;await this.addBlock(t,i.toBlock(),e)}else{if(1===this.options.blockMode&&t.compactBlocks.size>=15)return this.logger.warning("Compact block DoS attempt (%s).",t.hostname()),void t.destroy();i.now=Date.now(),s(!t.compactBlocks.has(r)),t.compactBlocks.set(r,i),this.compactBlocks.add(r),this.logger.debug("Received non-full compact block %s tx=%d/%d (%s).",i.rhash(),i.count,i.totalTX,t.hostname()),t.send(new x.GetBlockTxnPacket(i.toRequest()))}}async handleGetBlockTxn(t,e){const i=e.request;if(this.chain.options.spv)return;if(this.chain.options.prune)return;if(this.options.selfish)return;const s=new _(A.BLOCK,i.hash),r=await this.getItem(t,s);if(!r)return this.logger.debug("Peer sent getblocktxn for non-existent block (%s).",t.hostname()),void t.increaseBan(100);if(await this.chain.getHeight(i.hash)<this.chain.tip.height-15)return void this.logger.debug("Peer sent a getblocktxn for a block > 15 deep (%s)",t.hostname());this.logger.debug("Sending blocktxn for %s to peer (%s).",r.rhash(),t.hostname());const n=k.TXResponse.fromBlock(r,i);t.send(new x.BlockTxnPacket(n))}async handleBlockTxn(t,e){const i=e.response,r=t.compactBlocks.get(i.hash),n=w.flags.VERIFY_BODY;if(r){if(t.compactBlocks.delete(i.hash),s(this.compactBlocks.has(i.hash)),this.compactBlocks.delete(i.hash),!r.fillMissing(i))return this.logger.warning("Peer sent non-full blocktxn for %s. Requesting full block (%s).",r.rhash(),t.hostname()),t.getFullBlock(i.hash),void t.increaseBan(10);this.logger.debug("Filled compact block %s (%s).",r.rhash(),t.hostname()),await this.addBlock(t,r.toBlock(),n)}else this.logger.debug("Peer sent unsolicited blocktxn (%s).",t.hostname())}async handleEncinit(t,e){}async handleEncack(t,e){}async handleAuthChallenge(t,e){}async handleAuthReply(t,e){}async handleAuthPropose(t,e){}async handleUnknown(t,e){this.logger.warning("Unknown packet: %s (%s).",e.cmd,t.hostname())}addInbound(t){if(!this.opened)return void t.destroy();const e=this.createInbound(t);this.logger.info("Added inbound peer (%s).",e.hostname()),this.peers.add(e)}getHost(){for(const t of this.hosts.nodes)if(!this.peers.has(t.hostname))return t;const t=this.options.getRequiredServices(),e=this.network.now();for(let i=0;i<100;i++){const s=this.hosts.getHost();if(!s)break;const r=s.addr;if(!this.peers.has(r.hostname)&&r.isValid()&&r.hasServices(t)&&(this.options.onion||!r.isOnion())&&!(i<30&&e-s.lastAttempt<600||i<50&&r.port!==this.network.port||i<95&&this.hosts.isBanned(r.host)))return s.addr}return null}addOutbound(){if(!this.opened)return;if(this.peers.outbound>=this.options.maxOutbound)return;if(!this.peers.load)return;const t=this.getHost();if(!t)return;const e=this.createOutbound(t);this.peers.add(e),this.emit("peer",e)}fillOutbound(){const t=this.options.maxOutbound-this.peers.outbound;if(this.peers.load||this.addLoader(),!(t<=0)){this.logger.debug("Refilling peers (%d/%d).",this.peers.outbound,this.options.maxOutbound);for(let e=0;e<t;e++)this.addOutbound()}}refill(){null==this.pendingRefill&&(this.pendingRefill=setTimeout(()=>{this.pendingRefill=null,this.fillOutbound()},3e3))}removePeer(t){this.peers.remove(t);for(const e of t.blockMap.keys())this.resolveBlock(t,e);for(const e of t.txMap.keys())this.resolveTX(t,e);for(const e of t.compactBlocks.keys())s(this.compactBlocks.has(e)),this.compactBlocks.delete(e);t.compactBlocks.clear()}ban(t){const e=this.peers.get(t.hostname);this.logger.debug("Banning peer (%s).",t.hostname),this.hosts.ban(t.host),this.hosts.remove(t.hostname),e&&e.destroy()}unban(t){this.hosts.unban(t.host)}setFilter(t){this.options.spv&&(this.spvFilter=t,this.queueFilterLoad())}watch(t,e){this.options.spv&&(this.spvFilter.add(t,e),this.queueFilterLoad())}unwatch(){this.options.spv&&(this.spvFilter.reset(),this.queueFilterLoad())}queueFilterLoad(){this.options.spv&&null==this.pendingFilter&&(this.pendingFilter=setTimeout(()=>{this.pendingFilter=null,this.sendFilterLoad()},100))}sendFilterLoad(){if(this.options.spv){s(this.spvFilter);for(let t=this.peers.head();t;t=t.next)t.sendFilterLoad(this.spvFilter)}}watchAddress(t){const e=y.getHash(t);this.watch(e)}watchOutpoint(t){this.watch(t.toRaw())}async resolveOrphan(t,e){const i=await this.chain.getLocator(),r=this.chain.getOrphanRoot(e);s(r),t.sendGetBlocks(i,r)}async getHeaders(t,e,i){const s=await this.chain.getLocator(e);t.sendGetHeaders(s,i)}async getBlocks(t,e,i){const s=await this.chain.getLocator(e);t.sendGetBlocks(s,i)}getBlock(t,e){if(!this.opened)return;if(!t.handshake)throw new Error("Peer handshake not complete (getdata).");if(t.destroyed)throw new Error("Peer is destroyed (getdata).");let i=Date.now();const s=[];for(const r of e)this.blockMap.has(r)||(this.blockMap.add(r),t.blockMap.set(r,i),this.chain.synced&&(i+=100),s.push(r));0!==s.length&&(this.logger.debug("Requesting %d/%d blocks from peer with getdata (%s).",s.length,this.blockMap.size,t.hostname()),t.getBlock(s))}getTX(t,e){if(!this.opened)return;if(!t.handshake)throw new Error("Peer handshake not complete (getdata).");if(t.destroyed)throw new Error("Peer is destroyed (getdata).");let i=Date.now();const s=[];for(const r of e)this.txMap.has(r)||(this.txMap.add(r),t.txMap.set(r,i),i+=50,s.push(r));0!==s.length&&(this.logger.debug("Requesting %d/%d txs from peer with getdata (%s).",s.length,this.txMap.size,t.hostname()),t.getTX(s))}async hasBlock(t){return!!this.locker.has(t)||!!await this.chain.has(t)}hasTX(t){if(this.locker.has(t))return!0;if(this.mempool){if(this.mempool.has(t))return!0;if(this.mempool.hasReject(t))return this.logger.spam("Saw known reject of %s.",g.revHex(t)),!0}else if(!this.txFilter.added(t,"hex"))return!0;return!1}ensureTX(t,e){const i=[];for(const t of e)this.hasTX(t)||i.push(t);this.getTX(t,i)}resolveTX(t,e){return!!t.txMap.has(e)&&(t.txMap.delete(e),s(this.txMap.has(e)),this.txMap.delete(e),!0)}resolveBlock(t,e){return!!t.blockMap.has(e)&&(t.blockMap.delete(e),s(this.blockMap.has(e)),this.blockMap.delete(e),!0)}resolveItem(t,e){return e.isBlock()?this.resolveBlock(t,e.hash):!!e.isTX()&&this.resolveTX(t,e.hash)}broadcast(t){const e=t.hash("hex");let i=this.invMap.get(e);return i?(i.refresh(),i.announce()):((i=new M(this,t)).start(),i.announce()),new Promise((t,e)=>{i.addJob(t,e)})}announceBlock(t){for(let e=this.peers.head();e;e=e.next)e.announceBlock(t)}announceTX(t){for(let e=this.peers.head();e;e=e.next)e.announceTX(t)}}P.DISCOVERY_INTERVAL=12e4;class N{constructor(t){this.network=E.primary,this.logger=null,this.chain=null,this.mempool=null,this.nonces=new C,this.prefix=null,this.checkpoints=!0,this.spv=!1,this.bip37=!1,this.listen=!1,this.compact=!0,this.noRelay=!1,this.host="0.0.0.0",this.port=this.network.port,this.publicHost="0.0.0.0",this.publicPort=this.network.port,this.maxOutbound=8,this.maxInbound=8,this.createSocket=this._createSocket.bind(this),this.createServer=h.createServer,this.resolve=this._resolve.bind(this),this.proxy=null,this.onion=!1,this.upnp=!1,this.selfish=!1,this.version=m.PROTOCOL_VERSION,this.agent=m.USER_AGENT,this.bip151=!1,this.bip150=!1,this.authPeers=[],this.knownPeers={},this.identityKey=p.generatePrivateKey(),this.banScore=m.BAN_SCORE,this.banTime=m.BAN_TIME,this.feeRate=-1,this.seeds=this.network.seeds,this.nodes=[],this.invTimeout=6e4,this.blockMode=0,this.services=m.LOCAL_SERVICES,this.requiredServices=m.REQUIRED_SERVICES,this.memory=!0,this.fromOptions(t)}fromOptions(t){if(s(t,"Pool requires options."),s(t.chain&&"object"==typeof t.chain,"Pool options require a blockchain."),this.chain=t.chain,this.network=t.chain.network,this.logger=t.chain.logger,this.port=this.network.port,this.seeds=this.network.seeds,this.port=this.network.port,this.publicPort=this.network.port,null!=t.logger&&(s("object"==typeof t.logger),this.logger=t.logger),null!=t.mempool&&(s("object"==typeof t.mempool),this.mempool=t.mempool),null!=t.prefix&&(s("string"==typeof t.prefix),this.prefix=t.prefix),null!=t.checkpoints?(s("boolean"==typeof t.checkpoints),s(t.checkpoints===this.chain.options.checkpoints),this.checkpoints=t.checkpoints):this.checkpoints=this.chain.options.checkpoints,null!=t.spv?(s("boolean"==typeof t.spv),s(t.spv===this.chain.options.spv),this.spv=t.spv):this.spv=this.chain.options.spv,null!=t.bip37&&(s("boolean"==typeof t.bip37),this.bip37=t.bip37),null!=t.listen&&(s("boolean"==typeof t.listen),this.listen=t.listen),null!=t.compact&&(s("boolean"==typeof t.compact),this.compact=t.compact),null!=t.noRelay&&(s("boolean"==typeof t.noRelay),this.noRelay=t.noRelay),null!=t.host){s("string"==typeof t.host);const e=o.toBuffer(t.host);this.host=o.toString(e),o.isRoutable(e)&&(this.publicHost=this.host)}return null!=t.port&&(s((65535&t.port)===t.port),this.port=t.port,this.publicPort=t.port),null!=t.publicHost&&(s("string"==typeof t.publicHost),this.publicHost=o.normalize(t.publicHost)),null!=t.publicPort&&(s((65535&t.publicPort)===t.publicPort),this.publicPort=t.publicPort),null!=t.maxOutbound&&(s("number"==typeof t.maxOutbound),s(t.maxOutbound>0),this.maxOutbound=t.maxOutbound),null!=t.maxInbound&&(s("number"==typeof t.maxInbound),this.maxInbound=t.maxInbound),t.createSocket&&(s("function"==typeof t.createSocket),this.createSocket=t.createSocket),t.createServer&&(s("function"==typeof t.createServer),this.createServer=t.createServer),t.resolve&&(s("function"==typeof t.resolve),this.resolve=t.resolve),t.proxy&&(s("string"==typeof t.proxy),this.proxy=t.proxy),null!=t.onion&&(s("boolean"==typeof t.onion),this.onion=t.onion),null!=t.upnp&&(s("boolean"==typeof t.upnp),this.upnp=t.upnp),t.selfish&&(s("boolean"==typeof t.selfish),this.selfish=t.selfish),t.version&&(s("number"==typeof t.version),this.version=t.version),t.agent&&(s("string"==typeof t.agent),s(t.agent.length<=255),this.agent=t.agent),null!=t.bip151&&(s("boolean"==typeof t.bip151),this.bip151=t.bip151),null!=t.bip150&&(s("boolean"==typeof t.bip150),s(!t.bip150||this.bip151,"Cannot enable bip150 without bip151."),t.knownPeers&&(s("object"==typeof t.knownPeers),s(!Array.isArray(t.knownPeers)),this.knownPeers=t.knownPeers),t.authPeers&&(s(Array.isArray(t.authPeers)),this.authPeers=t.authPeers),t.identityKey&&(s(e.isBuffer(t.identityKey),"Identity key must be a buffer."),s(p.privateKeyVerify(t.identityKey),"Invalid identity key."),this.identityKey=t.identityKey)),null!=t.banScore&&(s("number"==typeof this.options.banScore),this.banScore=this.options.banScore),null!=t.banTime&&(s("number"==typeof this.options.banTime),this.banTime=this.options.banTime),null!=t.feeRate&&(s("number"==typeof this.options.feeRate),this.feeRate=this.options.feeRate),t.seeds&&(s(Array.isArray(t.seeds)),this.seeds=t.seeds),t.nodes&&(s(Array.isArray(t.nodes)),this.nodes=t.nodes),null!=t.only&&(s(Array.isArray(t.only)),t.only.length>0&&(this.nodes=t.only,this.maxOutbound=t.only.length)),null!=t.invTimeout&&(s("number"==typeof t.invTimeout),this.invTimeout=t.invTimeout),null!=t.blockMode&&(s("number"==typeof t.blockMode),this.blockMode=t.blockMode),null!=t.memory&&(s("boolean"==typeof t.memory),this.memory=t.memory),this.spv&&(this.requiredServices|=m.services.BLOOM,this.services&=~m.services.NETWORK,this.noRelay=!0,this.checkpoints=!0,this.compact=!1,this.bip37=!1,this.listen=!1),this.selfish&&(this.services&=~m.services.NETWORK,this.bip37=!1),this.bip37&&(this.services|=m.services.BLOOM),this.proxy&&(this.listen=!1),null!=t.services&&(s(t.services>>>0===t.services),this.services=t.services),null!=t.requiredServices&&(s(t.requiredServices>>>0===t.requiredServices),this.requiredServices=t.requiredServices),this}static fromOptions(t){return(new N).fromOptions(t)}getHeight(){return this.chain.height}isFull(){return this.chain.synced}getRequiredServices(){return this.requiredServices}createNonce(t){return this.nonces.alloc(t)}hasNonce(t){return this.nonces.has(t)}getRate(t){if(!this.mempool)return-1;const e=this.mempool.getEntry(t);return e?e.getRate():-1}_createSocket(t,e){return this.proxy?u.connect(this.proxy,t,e):h.createSocket(t,e)}_resolve(t){return this.onion?u.resolve(this.proxy,t):a.lookup(t)}}class T{constructor(){this.map=new Map,this.ids=new Map,this.list=new c,this.load=null,this.inbound=0,this.outbound=0}head(){return this.list.head}tail(){return this.list.tail}size(){return this.list.size}add(t){s(this.list.push(t)),s(!this.map.has(t.hostname())),this.map.set(t.hostname(),t),s(!this.ids.has(t.id)),this.ids.set(t.id,t),t.outbound?this.outbound+=1:this.inbound+=1}remove(t){s(this.list.remove(t)),s(this.ids.has(t.id)),this.ids.delete(t.id),s(this.map.has(t.hostname())),this.map.delete(t.hostname()),t===this.load&&(s(t.loader),t.loader=!1,this.load=null),t.outbound?this.outbound-=1:this.inbound-=1}get(t){return this.map.get(t)}has(t){return this.map.has(t)}find(t){return this.ids.get(t)}destroy(){let t;for(let e=this.list.head;e;e=t)t=e.next,e.destroy()}}class M extends r{constructor(t,e){super(),s(!e.mutable,"Cannot broadcast mutable item.");const i=e.toInv();this.pool=t,this.hash=i.hash,this.type=i.type,this.msg=e,this.jobs=[]}addJob(t,e){this.jobs.push({resolve:t,reject:e})}start(){return s(!this.timeout,"Already started."),s(!this.pool.invMap.has(this.hash),"Already started."),this.pool.invMap.set(this.hash,this),this.refresh(),this}refresh(){null!=this.timeout&&(clearTimeout(this.timeout),this.timeout=null),this.timeout=setTimeout(()=>{this.emit("timeout"),this.reject(new Error("Timed out."))},this.pool.options.invTimeout)}announce(){switch(this.type){case A.TX:this.pool.announceTX(this.msg);break;case A.BLOCK:this.pool.announceBlock(this.msg);break;default:s(!1,"Bad type.")}}cleanup(){s(null!=this.timeout,"Already finished."),s(this.pool.invMap.has(this.hash),"Already finished."),clearTimeout(this.timeout),this.timeout=null,this.pool.invMap.delete(this.hash)}reject(t){this.cleanup();for(const e of this.jobs)e.reject(t);this.jobs.length=0}resolve(){this.cleanup();for(const t of this.jobs)t.resolve(!1);this.jobs.length=0}handleAck(t){setTimeout(()=>{this.emit("ack",t);for(const t of this.jobs)t.resolve(!0);this.jobs.length=0},1e3)}handleReject(t){this.emit("reject",t);for(const t of this.jobs)t.resolve(!1);this.jobs.length=0}inspect(){return`<BroadcastItem: type=${this.type===A.TX?"tx":"block"} hash=${g.revHex(this.hash)}>`}}class C{constructor(){this.map=new Map,this.hosts=new Map}alloc(t){for(;;){const e=m.nonce(),i=e.toString("hex");if(!this.map.has(i))return this.map.set(i,t),s(!this.hosts.has(t)),this.hosts.set(t,i),e}}has(t){const e=t.toString("hex");return this.map.has(e)}remove(t){const e=this.hosts.get(t);return!!e&&(this.hosts.delete(t),s(this.map.has(e)),this.map.delete(e),!0)}}class L{constructor(t,e){this.hash=t,this.height=e,this.prev=null,this.next=null}}t.exports=P}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * bip152.js - compact block object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(3),o=i(30),{siphash:a}=i(287),h=i(64),l=i(14),u=i(42),c=i(51),f=i(34),{encoding:d}=r;class p{constructor(t){this.hash=n.NULL_HASH,this.indexes=[],t&&this.fromOptions(t)}fromOptions(t){return this.hash=t.hash,t.indexes&&(this.indexes=t.indexes),this}static fromOptions(t){return(new this).fromOptions(t)}fromCompact(t){this.hash=t.hash("hex");for(let e=0;e<t.available.length;e++)t.available[e]||this.indexes.push(e);return this}static fromCompact(t){return(new this).fromCompact(t)}fromReader(t){this.hash=t.readHash("hex");const e=t.readVarint();for(let i=0;i<e;i++){const e=t.readVarint();s(e<=65535),this.indexes.push(e)}let i=0;for(let t=0;t<e;t++){let e=this.indexes[t];s((e+=i)<=65535),this.indexes[t]=e,i=e+1}return this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t){return(new this).fromRaw(t)}getSize(){let t=0;t+=32,t+=d.sizeVarint(this.indexes.length);for(let e=0;e<this.indexes.length;e++){let i=this.indexes[e];e>0&&(i-=this.indexes[e-1]+1),t+=d.sizeVarint(i)}return t}toWriter(t){t.writeHash(this.hash),t.writeVarint(this.indexes.length);for(let e=0;e<this.indexes.length;e++){let i=this.indexes[e];e>0&&(i-=this.indexes[e-1]+1),t.writeVarint(i)}return t}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}}e.CompactBlock=class extends h{constructor(t){super(),this.keyNonce=null,this.ids=[],this.ptx=[],this.available=[],this.idMap=new Map,this.count=0,this.sipKey=null,this.totalTX=0,this.now=0,t&&this.fromOptions(t)}fromOptions(e){return this.parseOptions(e),s(t.isBuffer(e.keyNonce)),s(Array.isArray(e.ids)),s(Array.isArray(e.ptx)),this.keyNonce=e.keyNonce,this.ids=e.ids,this.ptx=e.ptx,e.available&&(this.available=e.available),e.idMap&&(this.idMap=e.idMap),e.count&&(this.count=e.count),null!=e.totalTX&&(this.totalTX=e.totalTX),this.sipKey=this.getKey(),this}static fromOptions(t){return(new this).fromOptions(t)}verifyBody(){return!0}fromRaw(t){const e=r.read(t);this.readHead(e),this.keyNonce=e.readBytes(8),this.sipKey=this.getKey();const i=e.readVarint();this.totalTX+=i;for(let t=0;t<i;t++){const t=e.readU32(),i=e.readU16();this.ids.push(4294967296*i+t)}const n=e.readVarint();this.totalTX+=n;for(let t=0;t<n;t++){const t=e.readVarint();s(t<=65535),s(t<this.totalTX);const i=l.fromReader(e);this.ptx.push([t,i])}return this}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}toRaw(){return this.frameRaw()}toWriter(t){return this.writeRaw(t)}frameRaw(){const t=this.getSize();return this.writeRaw(r.write(t)).render()}getSize(){let t=0;t+=80,t+=8,t+=d.sizeVarint(this.ids.length),t+=6*this.ids.length,t+=d.sizeVarint(this.ptx.length);for(const[e,i]of this.ptx)t+=d.sizeVarint(e),t+=i.getSize();return t}writeRaw(t){this.writeHead(t),t.writeBytes(this.keyNonce),t.writeVarint(this.ids.length);for(const e of this.ids){const i=e%4294967296,r=(e-i)/4294967296;s(r<=65535),t.writeU32(i),t.writeU16(r)}t.writeVarint(this.ptx.length);for(const[e,i]of this.ptx)t.writeVarint(e),i.toWriter(t);return t}toRequest(){return p.fromCompact(this)}fillMempool(t){if(this.count===this.totalTX)return!0;const e=new Set;for(const{tx:i}of t.map.values()){const t=i.hash(),s=this.sid(t),r=this.idMap.get(s);if(null!=r)if(e.has(r))this.available[r]=null,this.count-=1;else if(this.available[r]=i,e.add(r),this.count+=1,this.count===this.totalTX)return!0}return!1}fillMissing(t){let e=0;for(let i=0;i<this.available.length;i++)if(!this.available[i]){if(e>=t.txs.length)return!1;this.available[i]=t.txs[e++]}return e===t.txs.length}sid(e){"string"==typeof e&&(e=t.from(e,"hex"));const[i,s]=a(e,this.sipKey);return 4294967296*(65535&i)+(s>>>0)}hasIndex(t){return null!=this.available[t]}getKey(){const e=t.concat([this.toHead(),this.keyNonce]);return o.digest(e).slice(0,16)}init(){if(0===this.totalTX)throw new Error("Empty vectors.");if(this.totalTX>n.MAX_FORK_BLOCK_SIZE/10)throw new Error("Compact block too big.");if(this.totalTX>(n.MAX_FORK_BLOCK_SIZE-81)/60)throw new Error("Compact block too big.");for(let t=0;t<this.totalTX;t++)this.available.push(null);let t=-1,e=0;for(let e=0;e<this.ptx.length;e++){const[i,r]=this.ptx[e];s((t+=i+1)<=65535),s(t<=this.ids.length+e),this.available[t]=r,this.count+=1}for(let t=0;t<this.ids.length;t++){const i=this.ids[t];for(;this.available[t+e];)e+=1;if(this.idMap.has(i))return!1;this.idMap.set(i,t+e)}return!0}toBlock(){const t=new c;t.version=this.version,t.prevBlock=this.prevBlock,t.merkleRoot=this.merkleRoot,t.time=this.time,t.bits=this.bits,t.nonce=this.nonce,t._hash=this._hash,t._hhash=this._hhash;for(const e of this.available)s(e,"Compact block is not full."),t.txs.push(e);return t}fromBlock(t,e){this.version=t.version,this.prevBlock=t.prevBlock,this.merkleRoot=t.merkleRoot,this.time=t.time,this.bits=t.bits,this.nonce=t.nonce,this.totalTX=t.txs.length,this._hash=t._hash,this._hhash=t._hhash,e||(e=f.nonce()),this.keyNonce=e,this.sipKey=this.getKey();for(let e=1;e<t.txs.length;e++){const i=t.txs[e].hash(),s=this.sid(i);this.ids.push(s)}return this.ptx.push([0,t.txs[0]]),this}static fromBlock(t,e){return(new this).fromBlock(t,e)}toHeaders(){return u.fromBlock(this)}},e.TXRequest=p,e.TXResponse=class{constructor(t){this.hash=n.NULL_HASH,this.txs=[],t&&this.fromOptions(t)}fromOptions(t){return this.hash=t.hash,t.txs&&(this.txs=t.txs),this}static fromOptions(t){return(new this).fromOptions(t)}fromReader(t){this.hash=t.readHash("hex");const e=t.readVarint();for(let i=0;i<e;i++)this.txs.push(l.fromReader(t));return this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t){return(new this).fromRaw(t)}fromBlock(t,e){this.hash=e.hash;for(const i of e.indexes){if(i>=t.txs.length)break;this.txs.push(t.txs[i])}return this}static fromBlock(t,e){return(new this).fromBlock(t,e)}toRaw(){return this.frameRaw()}toWriter(t){return this.writeRaw(t)}getSize(){let t=0;t+=32,t+=d.sizeVarint(this.txs.length);for(const e of this.txs)t+=e.getSize();return t}writeRaw(t){t.writeHash(this.hash),t.writeVarint(this.txs.length);for(const e of this.txs)e.toWriter(t);return t}frameRaw(){const t=this.getSize();return this.writeRaw(r.write(t)).render()}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * bdns.js - dns backend for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(292)},function(t,e,i){"use strict";
/*!
 * fees.js - fee estimation for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 * Ported from:
 * https://github.com/bitcoin/bitcoin/blob/master/src/policy/fees.cpp
 */const s=i(0),r=i(2),n=i(50),o=i(5),a=i(53),h=i(3),l=i(17),{encoding:u}=r,c=15,f=.998,d=.95,p=.5,g=1,m=.2,w=10,y=1e6,b=h.MAX_MONEY,v=10,k=1e16,E=1e9*h.MAX_MONEY,R=1.1,S=2;class _{constructor(t,e){this.logger=n.global,this.type=t,this.decay=0,this.maxConfirms=0,this.buckets=new Float64Array(0),this.bucketMap=new A,this.confAvg=[],this.curBlockConf=[],this.unconfTX=[],this.oldUnconfTX=new Int32Array(0),this.curBlockTX=new Int32Array(0),this.txAvg=new Float64Array(0),this.curBlockVal=new Float64Array(0),this.avg=new Float64Array(0),e&&(s("object"==typeof e),this.logger=e.context("fees"))}init(t,e,i){this.maxConfirms=e,this.decay=i,this.buckets=new Float64Array(t.length),this.bucketMap=new A;for(let e=0;e<t.length;e++)this.buckets[e]=t[e],this.bucketMap.insert(t[e],e);this.confAvg=new Array(e),this.curBlockConf=new Array(e),this.unconfTX=new Array(e);for(let i=0;i<e;i++)this.confAvg[i]=new Float64Array(t.length),this.curBlockConf[i]=new Int32Array(t.length),this.unconfTX[i]=new Int32Array(t.length);this.oldUnconfTX=new Int32Array(t.length),this.curBlockTX=new Int32Array(t.length),this.txAvg=new Float64Array(t.length),this.curBlockVal=new Float64Array(t.length),this.avg=new Float64Array(t.length)}clearCurrent(t){for(let e=0;e<this.buckets.length;e++){this.oldUnconfTX[e]=this.unconfTX[t%this.unconfTX.length][e],this.unconfTX[t%this.unconfTX.length][e]=0;for(let t=0;t<this.curBlockConf.length;t++)this.curBlockConf[t][e]=0;this.curBlockTX[e]=0,this.curBlockVal[e]=0}}record(t,e){if(t<1)return;const i=this.bucketMap.search(e);for(let e=t;e<=this.curBlockConf.length;e++)this.curBlockConf[e-1][i]++;this.curBlockTX[i]++,this.curBlockVal[i]+=e}updateAverages(){for(let t=0;t<this.buckets.length;t++){for(let e=0;e<this.confAvg.length;e++)this.confAvg[e][t]=this.confAvg[e][t]*this.decay+this.curBlockConf[e][t];this.avg[t]=this.avg[t]*this.decay+this.curBlockVal[t],this.txAvg[t]=this.txAvg[t]*this.decay+this.curBlockTX[t]}}estimateMedian(t,e,i,s,r){const n=this.buckets.length-1,o=s?n:0,a=s?-1:1,h=this.unconfTX.length;let l=0,u=0,c=0,f=o,d=o,p=o,g=o,m=!1,w=-1,y=0;for(let w=o;w>=0&&w<=n;w+=a){d=w,l+=this.confAvg[t-1][w],u+=this.txAvg[w];for(let e=t;e<this.maxConfirms;e++)c+=this.unconfTX[Math.max(r-e,0)%h][w];if(c+=this.oldUnconfTX[w],u>=e/(1-this.decay)){const t=l/(u+c);if(s&&t<i)break;if(!s&&t>i)break;m=!0,l=0,u=0,c=0,p=f,g=d,f=w+a}}const b=p<g?p:g,v=p>g?p:g;for(let t=b;t<=v;t++)y+=this.txAvg[t];if(m&&0!==y){y/=2;for(let t=b;t<=v;t++){if(!(this.txAvg[t]<y)){w=this.avg[t]/this.txAvg[t];break}y-=this.txAvg[t]}}return w}addTX(t,e){const i=this.bucketMap.search(e),s=t%this.unconfTX.length;return this.unconfTX[s][i]++,this.logger.spam("Adding tx to %s.",this.type),i}removeTX(t,e,i){let s=e-t;if(0===e&&(s=0),s<0)this.logger.debug("Blocks ago is negative for mempool tx.");else if(s>=this.unconfTX.length)this.oldUnconfTX[i]>0?this.oldUnconfTX[i]--:this.logger.debug("Mempool tx removed >25 blocks (bucket=%d).",i);else{const e=t%this.unconfTX.length;this.unconfTX[e][i]>0?this.unconfTX[e][i]--:this.logger.debug("Mempool tx removed (block=%d, bucket=%d).",e,i)}}getSize(){let t=0;t+=8,t+=B(this.buckets),t+=B(this.avg),t+=B(this.txAvg),t+=u.sizeVarint(this.maxConfirms);for(let e=0;e<this.maxConfirms;e++)t+=B(this.confAvg[e]);return t}toRaw(){const t=this.getSize(),e=r.write(t);e.writeDouble(this.decay),P(e,this.buckets),P(e,this.avg),P(e,this.txAvg),e.writeVarint(this.maxConfirms);for(let t=0;t<this.maxConfirms;t++)P(e,this.confAvg[t]);return e.render()}fromRaw(t){const e=r.read(t),i=e.readDouble(),s=N(e),n=N(e),o=N(e),a=e.readVarint(),h=new Array(a);for(let t=0;t<a;t++)h[t]=N(e);if(i<=0||i>=1)throw new Error("Decay must be between 0 and 1 (non-inclusive).");if(s.length<=1||s.length>1e3)throw new Error("Must have between 2 and 1000 fee/pri buckets.");if(n.length!==s.length)throw new Error("Mismatch in fee/pri average bucket count.");if(o.length!==s.length)throw new Error("Mismatch in tx count bucket count.");if(a<=0||a>1008)throw new Error("Must maintain estimates for between 1-1008 confirms.");for(let t=0;t<a;t++)if(h[t].length!==s.length)throw new Error("Mismatch in fee/pri conf average bucket count.");return this.init(s,a,i),this.avg=n,this.txAvg=o,this.confAvg=h,this}static fromRaw(t,e,i){return new this(e,i).fromRaw(t)}}class x{constructor(t){this.logger=n.global,this.minTrackedFee=w,this.minTrackedPri=v,this.feeStats=new _("FeeRate"),this.priStats=new _("Priority"),this.feeUnlikely=0,this.feeLikely=b,this.priUnlikely=0,this.priLikely=E,this.map=new Map,this.bestHeight=0,l.MIN_RELAY>=w&&(this.minTrackedFee=l.MIN_RELAY),l.FREE_THRESHOLD>=v&&(this.minTrackedPri=l.FREE_THRESHOLD),t&&(s("object"==typeof t),this.logger=t.context("fees"),this.feeStats.logger=this.logger,this.priStats.logger=this.logger)}init(){const t=this.minTrackedFee,e=this.minTrackedPri,i=[];for(let e=t;e<=y;e*=R)i.push(e);i.push(b);const s=[];for(let t=e;t<=k;t*=S)s.push(t);s.push(E),this.feeStats.init(i,c,f),this.priStats.init(s,c,f)}reset(){this.feeUnlikely=0,this.feeLikely=b,this.priUnlikely=0,this.priLikely=E,this.map.clear(),this.bestHeight=0,this.init()}removeTX(t){const e=this.map.get(t);e?(this.feeStats.removeTX(e.blockHeight,this.bestHeight,e.bucketIndex),this.map.delete(t)):this.logger.spam("Mempool tx %s not found.",o.revHex(t))}isFeePoint(t,e){return e<this.minTrackedPri&&t>=this.minTrackedFee||e<this.priUnlikely&&t>this.feeLikely}isPriPoint(t,e){return t<this.minTrackedFee&&e>=this.minTrackedPri||t<this.feeUnlikely&&e>this.priLikely}processTX(t,e){const i=t.height,s=t.hash("hex");if(this.map.has(s))return void this.logger.debug("Mempool tx %s already tracked.",t.txid());if(i<this.bestHeight)return;if(!e)return;if(t.dependencies)return;const r=t.getFee(),n=t.getRate(),o=t.getPriority(i);if(this.logger.spam("Processing mempool tx %s.",t.txid()),0===r||this.isPriPoint(n,o)){const t=new I;t.blockHeight=i,t.bucketIndex=this.priStats.addTX(i,o),this.map.set(s,t)}else if(this.isFeePoint(n,o)){const t=new I;t.blockHeight=i,t.bucketIndex=this.feeStats.addTX(i,n),this.map.set(s,t)}else this.logger.spam("Not adding tx %s.",t.txid())}processBlockTX(t,e){if(e.dependencies)return;const i=t-e.height;if(i<=0)return void this.logger.debug("Block tx %s had negative blocks to confirm (%d, %d).",e.txid(),t,e.height);const s=e.getFee(),r=e.getRate(),n=e.getPriority(t);0===s||this.isPriPoint(r,n)?this.priStats.record(i,n):this.isFeePoint(r,n)&&this.feeStats.record(i,r)}processBlock(t,e,i){if(!(t<=this.bestHeight)&&(this.bestHeight=t,0!==e.length&&i)){this.logger.debug("Recalculating dynamic cutoffs."),this.feeLikely=this.feeStats.estimateMedian(2,g,d,!0,t),-1===this.feeLikely&&(this.feeLikely=b),this.feeUnlikely=this.feeStats.estimateMedian(10,g,p,!1,t),-1===this.feeUnlikely&&(this.feeUnlikely=0),this.priLikely=this.priStats.estimateMedian(2,m,d,!0,t),-1===this.priLikely&&(this.priLikely=E),this.priUnlikely=this.priStats.estimateMedian(10,m,p,!1,t),-1===this.priUnlikely&&(this.priUnlikely=0),this.feeStats.clearCurrent(t),this.priStats.clearCurrent(t);for(const i of e)this.processBlockTX(t,i);this.feeStats.updateAverages(),this.priStats.updateAverages(),this.logger.debug("Done updating estimates for %d confirmed entries. New mempool map size %d.",e.length,this.map.size),this.logger.debug("New fee rate: %d.",this.estimateFee())}}estimateFee(t,e){if(t||(t=1),null==e&&(e=!0),s(t>>>0===t,"Target must be a number."),s(t<=this.feeStats.maxConfirms,"Too many confirmations for estimate."),!e){const e=this.feeStats.estimateMedian(t,g,d,!0,this.bestHeight);return e<0?0:Math.floor(e)}let i=-1;for(;i<0&&t<=this.feeStats.maxConfirms;)i=this.feeStats.estimateMedian(t++,g,d,!0,this.bestHeight);return t-=1,i<0?0:Math.floor(i)}estimatePriority(t,e){if(t||(t=1),null==e&&(e=!0),s(t>>>0===t,"Target must be a number."),s(t<=this.priStats.maxConfirms,"Too many confirmations for estimate."),!e){const e=this.priStats.estimateMedian(t,m,d,!0,this.bestHeight);return Math.floor(e)}let i=-1;for(;i<0&&t<=this.priStats.maxConfirms;)i=this.priStats.estimateMedian(t++,m,d,!0,this.bestHeight);return t-=1,i<0?0:Math.floor(i)}getSize(){let t=0;return(t+=5)+u.sizeVarlen(this.feeStats.getSize())}toRaw(){const t=this.getSize(),e=r.write(t);return e.writeU8(x.VERSION),e.writeU32(this.bestHeight),e.writeVarBytes(this.feeStats.toRaw()),e.render()}fromRaw(t){const e=r.read(t);if(e.readU8()!==x.VERSION)throw new Error("Bad serialization version for estimator.");return this.bestHeight=e.readU32(),this.feeStats.fromRaw(e.readVarBytes()),this}static fromRaw(t,e){return new this(e).fromRaw(t)}inject(t){return this.bestHeight=t.bestHeight,this.feeStats=t.feeStats,this}}x.VERSION=0;class I{constructor(){this.blockHeight=-1,this.bucketIndex=-1}}class A{constructor(){this.buckets=[]}insert(t,e){const i=a.search(this.buckets,t,O,!0);this.buckets.splice(i,0,[t,e])}search(t){s(0!==this.buckets.length,"Cannot search.");const e=a.search(this.buckets,t,O,!0);return this.buckets[e][1]}}function O(t,e){return t[0]-e}function B(t){return u.sizeVarint(t.length)+8*t.length}function P(t,e){t.writeVarint(e.length);for(let i=0;i<e.length;i++)t.writeDouble(e[i])}function N(t){const e=new Float64Array(t.readVarint());for(let i=0;i<e.length;i++)e[i]=t.readDouble();return e}t.exports=x},function(t,e,i){"use strict";(function(e){
/*!
 * indexer.js - storage for indexes
 * Copyright (c) 2018, the bcoin developers (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(41),n=i(72),o=i(7),{Lock:a}=i(27),h=i(50),l=i(8),u=i(144),c=i(303),f=i(143),d=i(302),{ChainState:p,BlockMeta:g}=c;t.exports=class extends o{constructor(t,e){super(),s("string"==typeof t),s(t.length>0),this.options=new class{constructor(t,e){this.module=t,this.network=l.primary,this.logger=h.global,this.workers=null,this.client=null,this.chain=null,this.indexers=null,this.prefix=null,this.location=null,this.memory=!0,this.maxFiles=64,this.cacheSize=16<<20,this.compression=!0,e&&this.fromOptions(e)}fromOptions(t){if(null!=t.network&&(this.network=l.get(t.network)),null!=t.logger&&(s("object"==typeof t.logger),this.logger=t.logger),null!=t.workers&&(s("object"==typeof t.workers),this.workers=t.workers),null!=t.client&&(s("object"==typeof t.client),this.client=t.client),null!=t.chain&&(s("object"==typeof t.chain),this.client=new f(t.chain)),!this.client)throw new Error("Client is required");return null!=t.prefix&&(s("string"==typeof t.prefix),this.prefix=t.prefix,this.prefix=r.join(this.prefix,"index"),this.location=r.join(this.prefix,this.module)),null!=t.location&&(s("string"==typeof t.location),this.location=t.location),null!=t.memory&&(s("boolean"==typeof t.memory),this.memory=t.memory),null!=t.maxFiles&&(s(t.maxFiles>>>0===t.maxFiles),this.maxFiles=t.maxFiles),null!=t.cacheSize&&(s(Number.isSafeInteger(t.cacheSize)&&t.cacheSize>=0),this.cacheSize=t.cacheSize),null!=t.compression&&(s("boolean"==typeof t.compression),this.compression=t.compression),this}static fromOptions(t){return(new this).fromOptions(t)}}(t,e),this.network=this.options.network,this.logger=this.options.logger.context(`${t}indexer`),this.workers=this.options.workers,this.client=this.options.client||new d(this),this.db=null,this.rescanning=!1,this.state=new p,this.height=0,this.lock=new a,this.init()}init(){this._bind()}_bind(){this.client.on("error",t=>{this.emit("error",t)}),this.client.on("connect",async()=>{try{await this.syncNode()}catch(t){this.emit("error",t)}}),this.client.on("block connect",async(t,e,i)=>{if(!this.rescanning)try{await this.addBlock(t,e,i)}catch(t){this.emit("error",t)}}),this.client.on("block disconnect",async(t,e,i)=>{if(!this.rescanning)try{await this.removeBlock(t,e,i)}catch(t){this.emit("error",t)}}),this.client.on("block rescan",async(t,e,i)=>{try{await this.rescanBlock(t,e,i)}catch(t){this.emit("error",t)}}),this.client.on("chain reset",async t=>{try{await this.resetChain(t)}catch(t){this.emit("error",t)}})}async ensure(){if(!n.unsupported&&!this.memory)return n.mkdirp(this.options.prefix)}async open(){await this.ensure(),await this.db.open(),await this.db.verify(u.V.build(),"index",7),await this.verifyNetwork(),await this.connect()}async verifyNetwork(){const t=await this.db.get(u.O.build());if(!t){const t=this.db.batch();return t.put(u.O.build(),function(t){const i=e.allocUnsafe(4);return i.writeUInt32LE(t,0,!0),i}(this.network.magic)),t.write()}if(t.readUInt32LE(0,!0)!==this.network.magic)throw new Error("Network mismatch for Indexer.")}async close(){return await this.disconnect(),this.db.close()}async connect(){return this.client.open()}async disconnect(){return this.client.close()}async syncNode(){const t=await this.lock.lock();try{this.logger.info("Resyncing from server..."),await this.syncState(),await this.syncChain()}finally{t()}}async syncState(){const t=await this.getState();if(t)return this.state=t,this.height=t.height,void this.logger.info("Indexer loaded (height=%d, start=%d).",this.state.height,this.state.startHeight);this.logger.info("Initializing database state from server.");const e=this.db.batch(),i=await this.client.getHashes();let r=null;for(let t=0;t<i.length;t++){const s=i[t],n=new g(s,t);e.put(u.h.build(t),n.toHash()),r=n}s(r);const n=this.state.clone();n.startHeight=0,n.height=r.height,e.put(u.R.build(),n.toRaw()),await e.write(),this.state=n,this.height=n.height}async syncChain(){let t=this.state.height;for(this.logger.info("Syncing state from height %d.",t);;){const e=await this.getBlock(t);if(s(e),await this.client.getEntry(e.hash))break;s(0!==t),t-=1}return this.state.startHeight<t&&(t=this.state.startHeight),this.scan(t)}async rescanBlock(t,e,i){if(this.rescanning)if(t.height%1e3==0&&this.logger.debug("rescanned block: %d.",t.height),t.height>this.state.height+1)this.logger.warning("Rescan block too high: %d.",t.height);else try{await this._addBlock(t,e,i)}catch(t){throw this.emit("error",t),t}else this.logger.warning("Unsolicited rescan block: %d.",t.height)}async scan(t){s(t>>>0===t,"WDB: Must pass in a height."),await this.rollback(t);const e=this.state.height;this.logger.info("Indexer is scanning %d blocks.",e-t+1);try{this.rescanning=!0,this.logger.debug("rescanning from %d to %d",t,e),await this.client.rescan(t)}finally{this.rescanning=!1}}async rescan(t){const e=await this.lock.lock();try{return await this._rescan(t)}finally{e()}}async _rescan(t){return this.scan(t)}async getState(){const t=await this.db.get(u.R.build());return t?p.fromRaw(t):null}async setTip(t){const e=this.db.batch(),i=this.state.clone();if(t.height<i.height)for(;i.height!==t.height;)e.del(u.h.build(i.height)),i.height-=1;else t.height>i.height&&(s(t.height===i.height+1,"Bad chain sync."),i.height+=1);i.startHeight=t.height,e.put(u.h.build(t.height),t.toHash()),e.put(u.R.build(),i.toRaw()),await e.write(),this.state=i,this.height=i.height}async getBlock(t){const e=await this.db.get(u.h.build(t));if(!e)return null;const i=new g;return i.hash=e.toString("hex"),i.height=t,i}async getTip(){const t=await this.getBlock(this.state.height);if(!t)throw new Error("WDB: Tip not found!");return t}async rollback(t){if(t>this.state.height)throw new Error("WDB: Cannot rollback to the future.");if(t===this.state.height)return void this.logger.info("Rolled back to same height (%d).",t);this.logger.info("Rolling back %d Indexer blocks to height %d.",this.state.height-t,t);const e=await this.getBlock(t);s(e),await this.revert(e.height),await this.setTip(e)}async addBlock(t,e,i){const s=await this.lock.lock();try{return await this._addBlock(t,e,i)}finally{s()}}async _addBlock(t,e,i){const s=g.fromEntry(t);if(s.height>=this.network.block.slowHeight&&!this.rescanning&&this.logger.debug("Adding block: %d.",s.height),s.height===this.state.height)this.logger.warning("Already saw Indexer block (%d).",s.height);else if(s.height!==this.state.startHeight+1)return void await this.scan(this.state.height);await this.indexBlock(t,e,i),await this.setTip(s)}async indexBlock(t,e,i){}async unindexBlock(t,e,i){}async revert(t){}async removeBlock(t,e,i){const s=await this.lock.lock();try{return await this._removeBlock(t,e,i)}finally{s()}}async _removeBlock(t,e,i){const r=g.fromEntry(t);if(0===r.height)throw new Error("WDB: Bad disconnection (genesis block).");if(r.height>this.state.height)return void this.logger.warning("Indexer is disconnecting high blocks (%d).",r.height);if(r.height!==this.state.height)throw new Error("WDB: Bad disconnection (height mismatch).");await this.unindexBlock(t,e,i);const n=await this.getBlock(r.height-1);s(n),await this.setTip(n)}async resetChain(t){const e=await this.lock.lock();try{return await this._resetChain(t)}finally{e()}}async _resetChain(t){if(t.height>this.state.height)throw new Error("WDB: Bad reset height.");return this.rollback(t.height)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * public.js - hd public keys for bcoin
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),{base58:n}=i(31),o=i(145),a=i(24),h=i(9),l=i(74),u=i(13),c=i(8),f=i(3),d=i(114);class p{constructor(t){this.depth=0,this.parentFingerPrint=0,this.childIndex=0,this.chainCode=f.ZERO_HASH,this.publicKey=d.ZERO_KEY,this.fingerPrint=-1,t&&this.fromOptions(t)}fromOptions(t){return s(t,"No options for HDPublicKey"),s((255&t.depth)===t.depth),s(t.parentFingerPrint>>>0===t.parentFingerPrint),s(t.childIndex>>>0===t.childIndex),s(e.isBuffer(t.chainCode)),s(e.isBuffer(t.publicKey)),this.depth=t.depth,this.parentFingerPrint=t.parentFingerPrint,this.childIndex=t.childIndex,this.chainCode=t.chainCode,this.publicKey=t.publicKey,this}static fromOptions(t){return(new this).fromOptions(t)}toPublic(){return this}xprivkey(t){return null}xpubkey(t){return this.toBase58(t)}destroy(){this.depth=0,this.childIndex=0,this.parentFingerPrint=0,l(this.chainCode),l(this.publicKey),this.fingerPrint=-1}derive(t,e){if(s("number"==typeof t),t>>>0!==t)throw new Error("Index out of range.");if(t&d.HARDENED||e)throw new Error("Cannot derive hardened.");if(this.depth>=255)throw new Error("Depth too high.");const i=this.getID(t),n=d.cache.get(i);if(n)return n;const h=r.pool(37);h.writeBytes(this.publicKey),h.writeU32BE(t);const l=h.render(),c=o.mac(l,this.chainCode),f=c.slice(0,32),p=c.slice(32,64);let g;try{g=u.publicKeyTweakAdd(this.publicKey,f,!0)}catch(e){return this.derive(t+1)}if(-1===this.fingerPrint){const t=a.digest(this.publicKey);this.fingerPrint=t.readUInt32BE(0,!0)}const m=new this.constructor;return m.depth=this.depth+1,m.parentFingerPrint=this.fingerPrint,m.childIndex=t,m.chainCode=p,m.publicKey=g,d.cache.set(i,m),m}getID(t){return"b"+this.publicKey.toString("hex")+t}deriveAccount(t,e,i){return s(t>>>0===t),s(e>>>0===e),s(i>>>0===i),s(this.isAccount(i),"Cannot derive account index."),this}isMaster(){return d.isMaster(this)}isAccount(t){return d.isAccount(this,t)}static isValidPath(t){try{return d.parsePath(t,!1),!0}catch(t){return!1}}derivePath(t){const e=d.parsePath(t,!1);let i=this;for(const t of e)i=i.derive(t);return i}equals(t){return s(p.isHDPublicKey(t)),this.depth===t.depth&&this.parentFingerPrint===t.parentFingerPrint&&this.childIndex===t.childIndex&&this.chainCode.equals(t.chainCode)&&this.publicKey.equals(t.publicKey)}compare(t){s(p.isHDPublicKey(t));let e=this.depth-t.depth;return 0!==e?e:0!=(e=this.parentFingerPrint-t.parentFingerPrint)?e:0!=(e=this.childIndex-t.childIndex)?e:0!==(e=this.chainCode.compare(t.chainCode))?e:0!==(e=this.publicKey.compare(t.publicKey))?e:0}toJSON(t){return{xpubkey:this.xpubkey(t)}}fromJSON(t,e){return s(t.xpubkey,"Could not handle HD key JSON."),this.fromBase58(t.xpubkey,e),this}static fromJSON(t,e){return(new this).fromJSON(t,e)}static isBase58(t,e){if("string"!=typeof t)return!1;if(t.length<4)return!1;const i=t.substring(0,4);try{return c.fromPublic58(i,e),!0}catch(t){return!1}}static isRaw(t,i){if(!e.isBuffer(t))return!1;if(t.length<4)return!1;const s=t.readUInt32BE(0,!0);try{return c.fromPublic(s,i),!0}catch(t){return!1}}fromBase58(t,e){return s("string"==typeof t),this.fromRaw(n.decode(t),e)}fromReader(t,e){const i=t.readU32BE();return c.fromPublic(i,e),this.depth=t.readU8(),this.parentFingerPrint=t.readU32BE(),this.childIndex=t.readU32BE(),this.chainCode=t.readBytes(32),this.publicKey=t.readBytes(33),t.verifyChecksum(h.digest),this}fromRaw(t,e){return this.fromReader(r.read(t),e)}toBase58(t){return n.encode(this.toRaw(t))}toWriter(t,e){return e=c.get(e),t.writeU32BE(e.keyPrefix.xpubkey),t.writeU8(this.depth),t.writeU32BE(this.parentFingerPrint),t.writeU32BE(this.childIndex),t.writeBytes(this.chainCode),t.writeBytes(this.publicKey),t.writeChecksum(h.digest),t}getSize(){return 82}toRaw(t){return this.toWriter(r.write(82),t).render()}static fromBase58(t,e){return(new this).fromBase58(t,e)}static fromReader(t,e){return(new this).fromReader(t,e)}static fromRaw(t,e){return(new this).fromRaw(t,e)}static isHDPublicKey(t){return t instanceof p}}t.exports=p}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * private.js - hd private keys for bcoin
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),{base58:n}=i(31),o=i(145),a=i(24),h=i(9),l=i(74),u=i(38),c=i(13),f=i(8),d=i(3),p=i(114),g=i(75),m=i(112),w=e.from("Bitcoin seed","ascii");class y{constructor(t){this.depth=0,this.parentFingerPrint=0,this.childIndex=0,this.chainCode=d.ZERO_HASH,this.privateKey=d.ZERO_HASH,this.publicKey=p.ZERO_KEY,this.fingerPrint=-1,this._hdPublicKey=null,t&&this.fromOptions(t)}fromOptions(t){return s(t,"No options for HD private key."),s((255&t.depth)===t.depth),s(t.parentFingerPrint>>>0===t.parentFingerPrint),s(t.childIndex>>>0===t.childIndex),s(e.isBuffer(t.chainCode)),s(e.isBuffer(t.privateKey)),this.depth=t.depth,this.parentFingerPrint=t.parentFingerPrint,this.childIndex=t.childIndex,this.chainCode=t.chainCode,this.privateKey=t.privateKey,this.publicKey=c.publicKeyCreate(t.privateKey,!0),this}static fromOptions(t){return(new this).fromOptions(t)}toPublic(){let t=this._hdPublicKey;return t||((t=new m).depth=this.depth,t.parentFingerPrint=this.parentFingerPrint,t.childIndex=this.childIndex,t.chainCode=this.chainCode,t.publicKey=this.publicKey,this._hdPublicKey=t),t}xprivkey(t){return this.toBase58(t)}xpubkey(t){return this.toPublic().xpubkey(t)}destroy(t){this.depth=0,this.childIndex=0,this.parentFingerPrint=0,l(this.chainCode),l(this.privateKey),l(this.publicKey),this.fingerPrint=-1,this._hdPublicKey&&(t&&this._hdPublicKey.destroy(),this._hdPublicKey=null)}derive(t,e){if(s("number"==typeof t),t>>>0!==t)throw new Error("Index out of range.");if(this.depth>=255)throw new Error("Depth too high.");e&&(t|=p.HARDENED,t>>>=0);const i=this.getID(t),n=p.cache.get(i);if(n)return n;const h=r.pool(37);t&p.HARDENED?(h.writeU8(0),h.writeBytes(this.privateKey),h.writeU32BE(t)):(h.writeBytes(this.publicKey),h.writeU32BE(t));const l=h.render(),u=o.mac(l,this.chainCode),f=u.slice(0,32),d=u.slice(32,64);let g;try{g=c.privateKeyTweakAdd(this.privateKey,f)}catch(e){return this.derive(t+1)}if(-1===this.fingerPrint){const t=a.digest(this.publicKey);this.fingerPrint=t.readUInt32BE(0,!0)}const m=new this.constructor;return m.depth=this.depth+1,m.parentFingerPrint=this.fingerPrint,m.childIndex=t,m.chainCode=d,m.privateKey=g,m.publicKey=c.publicKeyCreate(g,!0),p.cache.set(i,m),m}getID(t){return"v"+this.publicKey.toString("hex")+t}deriveAccount(t,e,i){return s(t>>>0===t,"Purpose must be a number."),s(e>>>0===e,"Account index must be a number."),s(i>>>0===i,"Account index must be a number."),s(this.isMaster(),"Cannot derive account index."),this.derive(t,!0).derive(e,!0).derive(i,!0)}isMaster(){return p.isMaster(this)}isAccount(t){return p.isAccount(this,t)}static isBase58(t,e){if("string"!=typeof t)return!1;if(t.length<4)return!1;const i=t.substring(0,4);try{return f.fromPrivate58(i,e),!0}catch(t){return!1}}static isRaw(t,i){if(!e.isBuffer(t))return!1;if(t.length<4)return!1;const s=t.readUInt32BE(0,!0);try{return f.fromPrivate(s,i),!0}catch(t){return!1}}static isValidPath(t){try{return p.parsePath(t,!0),!0}catch(t){return!1}}derivePath(t){const e=p.parsePath(t,!0);let i=this;for(const t of e)i=i.derive(t);return i}equals(t){return s(y.isHDPrivateKey(t)),this.depth===t.depth&&this.parentFingerPrint===t.parentFingerPrint&&this.childIndex===t.childIndex&&this.chainCode.equals(t.chainCode)&&this.privateKey.equals(t.privateKey)}compare(t){s(y.isHDPrivateKey(t));let e=this.depth-t.depth;return 0!==e?e:0!=(e=this.parentFingerPrint-t.parentFingerPrint)?e:0!=(e=this.childIndex-t.childIndex)?e:0!==(e=this.chainCode.compare(t.chainCode))?e:0!==(e=this.privateKey.compare(t.privateKey))?e:0}fromSeed(t){if(s(e.isBuffer(t)),8*t.length<p.MIN_ENTROPY||8*t.length>p.MAX_ENTROPY)throw new Error("Entropy not in range.");const i=o.mac(t,w),r=i.slice(0,32),n=i.slice(32,64);if(!c.privateKeyVerify(r))throw new Error("Master private key is invalid.");return this.depth=0,this.parentFingerPrint=0,this.childIndex=0,this.chainCode=n,this.privateKey=r,this.publicKey=c.publicKeyCreate(r,!0),this}static fromSeed(t){return(new this).fromSeed(t)}fromMnemonic(t,e){return s(t instanceof g),this.fromSeed(t.toSeed(e))}static fromMnemonic(t,e){return(new this).fromMnemonic(t,e)}fromPhrase(t){const e=g.fromPhrase(t);return this.fromMnemonic(e),this}static fromPhrase(t){return(new this).fromPhrase(t)}fromKey(t,i){return s(e.isBuffer(t)&&32===t.length),s(e.isBuffer(i)&&32===i.length),this.depth=0,this.parentFingerPrint=0,this.childIndex=0,this.chainCode=i,this.privateKey=t,this.publicKey=c.publicKeyCreate(t,!0),this}static fromKey(t,e){return(new this).fromKey(t,e)}static generate(){const t=c.generatePrivateKey(),e=u.randomBytes(32);return y.fromKey(t,e)}fromBase58(t,e){return s("string"==typeof t),this.fromRaw(n.decode(t),e)}fromReader(t,e){const i=t.readU32BE();return f.fromPrivate(i,e),this.depth=t.readU8(),this.parentFingerPrint=t.readU32BE(),this.childIndex=t.readU32BE(),this.chainCode=t.readBytes(32),s(0===t.readU8()),this.privateKey=t.readBytes(32),this.publicKey=c.publicKeyCreate(this.privateKey,!0),t.verifyChecksum(h.digest),this}fromRaw(t,e){return this.fromReader(r.read(t),e)}toBase58(t){return n.encode(this.toRaw(t))}getSize(){return 82}toWriter(t,e){return e=f.get(e),t.writeU32BE(e.keyPrefix.xprivkey),t.writeU8(this.depth),t.writeU32BE(this.parentFingerPrint),t.writeU32BE(this.childIndex),t.writeBytes(this.chainCode),t.writeU8(0),t.writeBytes(this.privateKey),t.writeChecksum(h.digest),t}toRaw(t){return this.toWriter(r.write(82),t).render()}static fromBase58(t,e){return(new this).fromBase58(t,e)}static fromReader(t,e){return(new this).fromReader(t,e)}static fromRaw(t,e){return(new this).fromRaw(t,e)}toJSON(t){return{xprivkey:this.xprivkey(t)}}fromJSON(t,e){return s(t.xprivkey,"Could not handle key JSON."),this.fromBase58(t.xprivkey,e),this}static fromJSON(t,e){return(new this).fromJSON(t,e)}static isHDPrivateKey(t){return t instanceof y}}t.exports=y}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * common.js - common functions for hd
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(190),n=e;n.HARDENED=2147483648,n.MIN_ENTROPY=128,n.MAX_ENTROPY=512,n.cache=new r(500),n.parsePath=function(t,e){s("string"==typeof t),s("boolean"==typeof e),s(t.length>=1),s(t.length<=3062);const i=t.split("/"),r=i[0];if("m"!==r&&"M"!==r&&"m'"!==r&&"M'"!==r)throw new Error("Invalid path root.");const o=[];for(let t=1;t<i.length;t++){let s=i[t];const r="'"===s[s.length-1];if(r&&(s=s.slice(0,-1)),s.length>10)throw new Error("Path index too large.");if(!/^\d+$/.test(s))throw new Error("Path index is non-numeric.");let a=parseInt(s,10);if(a>>>0!==a)throw new Error("Path index out of range.");if(r&&(a|=n.HARDENED,a>>>=0),!e&&a&n.HARDENED)throw new Error("Path index cannot be hardened.");o.push(a)}return o},n.isMaster=function(t){return 0===t.depth&&0===t.childIndex&&0===t.parentFingerPrint},n.isAccount=function(t,e){if(null!=e){const i=(n.HARDENED|e)>>>0;if(t.childIndex!==i)return!1}return 3===t.depth&&0!=(t.childIndex&n.HARDENED)},n.ZERO_KEY=t.alloc(33,0)}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * chain.js - blockchain management for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(41),n=i(149),o=i(50),{Lock:a}=i(27),h=i(52),l=i(190),u=i(8),c=i(229),f=i(76),d=i(3),p=i(5),g=i(116),m=i(25),w=i(11),{VerifyError:y}=i(148),b=f.thresholdStates;class v{constructor(t){this.network=u.primary,this.logger=o.global,this.workers=null,this.prefix=null,this.location=null,this.memory=!0,this.maxFiles=64,this.cacheSize=32<<20,this.compression=!0,this.spv=!1,this.prune=!1,this.forceFlags=!1,this.coinCache=0,this.entryCache=5e3,this.maxOrphans=20,this.checkpoints=!0,t&&this.fromOptions(t)}fromOptions(t){return null!=t.network&&(this.network=u.get(t.network)),null!=t.logger&&(s("object"==typeof t.logger),this.logger=t.logger),null!=t.workers&&(s("object"==typeof t.workers),this.workers=t.workers),null!=t.spv&&(s("boolean"==typeof t.spv),this.spv=t.spv),null!=t.prefix&&(s("string"==typeof t.prefix),this.prefix=t.prefix,this.location=this.spv?r.join(this.prefix,"spvchain"):r.join(this.prefix,"chain")),null!=t.location&&(s("string"==typeof t.location),this.location=t.location),null!=t.memory&&(s("boolean"==typeof t.memory),this.memory=t.memory),null!=t.maxFiles&&(s(t.maxFiles>>>0===t.maxFiles),this.maxFiles=t.maxFiles),null!=t.cacheSize&&(s(Number.isSafeInteger(t.cacheSize)),s(t.cacheSize>=0),this.cacheSize=t.cacheSize),null!=t.compression&&(s("boolean"==typeof t.compression),this.compression=t.compression),null!=t.prune&&(s("boolean"==typeof t.prune),this.prune=t.prune),null!=t.forceFlags&&(s("boolean"==typeof t.forceFlags),this.forceFlags=t.forceFlags),null!=t.coinCache&&(s(t.coinCache>>>0===t.coinCache),this.coinCache=t.coinCache),null!=t.entryCache&&(s(t.entryCache>>>0===t.entryCache),this.entryCache=t.entryCache),null!=t.maxOrphans&&(s(t.maxOrphans>>>0===t.maxOrphans),this.maxOrphans=t.maxOrphans),null!=t.checkpoints&&(s("boolean"==typeof t.checkpoints),this.checkpoints=t.checkpoints),this}static fromOptions(t){return(new v).fromOptions(t)}}class k{constructor(){this.flags=w.flags.MANDATORY_VERIFY_FLAGS,this.flags&=~w.flags.VERIFY_P2SH,this.lockFlags=f.lockFlags.MANDATORY_LOCKTIME_FLAGS,this.bip34=!1,this.daa=!1}hasP2SH(){return 0!=(this.flags&w.flags.VERIFY_P2SH)}hasBIP34(){return this.bip34}hasBIP66(){return 0!=(this.flags&w.flags.VERIFY_DERSIG)}hasCLTV(){return 0!=(this.flags&w.flags.VERIFY_CHECKLOCKTIMEVERIFY)}hasMTP(){return 0!=(this.lockFlags&f.lockFlags.MEDIAN_TIME_PAST)}hasCSV(){return 0!=(this.flags&w.flags.VERIFY_CHECKSEQUENCEVERIFY)}hasMonolith(){return 0!=(this.flags&w.flags.VERIFY_MONOLITH_OPCODES)}hasDAA(){return this.daa}hasUAHF(){return 0!=(this.flags&w.flags.VERIFY_SIGHASH_FORKID)}maxBlockSize(){return this.hasUAHF()?d.MAX_FORK_BLOCK_SIZE:d.MAX_BLOCK_SIZE}}function E(t,e){return t-e}function R(t,e,i){s(e<t.length),s(i<t.length);const r=t[e];t[e]=t[i],t[i]=r}t.exports=class extends n{constructor(t){super(),this.opened=!1,this.options=new v(t),this.network=this.options.network,this.logger=this.options.logger.context("chain"),this.workers=this.options.workers,this.db=new c(this.options),this.locker=new a(!0),this.invalid=new l(100),this.state=new k,this.tip=new g,this.height=-1,this.synced=!1,this.orphanMap=new Map,this.orphanPrev=new Map}async open(){s(!this.opened,"Chain is already open."),this.opened=!0,this.logger.info("Chain is loading."),this.options.checkpoints&&this.logger.info("Checkpoints are enabled."),this.options.coinCache&&this.logger.info("Coin cache is enabled."),await this.db.open();const t=await this.db.getTip();s(t),this.tip=t,this.height=t.height,this.logger.info("Chain Height: %d",t.height),this.logger.memory();const e=await this.getDeploymentState();this.setDeploymentState(e),this.logger.memory(),this.emit("tip",t),this.maybeSync()}async close(){return s(this.opened,"Chain is not open."),this.opened=!1,this.db.close()}async verifyContext(t,e,i){const s=await this.verify(t,e,i);return this.options.spv?[new m,s]:this.isHistorical(e)?[await this.updateInputs(t,e),s]:(s.hasBIP34()||await this.verifyDuplicates(t,e),[await this.verifyInputs(t,e,s),s])}async verifyBlock(t){const e=await this.locker.lock();try{return await this._verifyBlock(t)}finally{e()}}async _verifyBlock(t){const e=f.flags.DEFAULT_FLAGS&~f.flags.VERIFY_POW;return this.verifyContext(t,this.tip,e)}isMainHash(t){return this.db.isMainHash(t)}isMainChain(t){return this.db.isMainChain(t)}getAncestor(t,e){return this.db.getAncestor(t,e)}getPrevious(t){return this.db.getPrevious(t)}getPrevCache(t){return this.db.getPrevCache(t)}getNext(t){return this.db.getNext(t)}getNextEntry(t){return this.db.getNextEntry(t)}async getMedianTime(t,e){let i=d.MEDIAN_TIMESPAN;const s=[];null!=e&&(s.push(e),i-=1);let r=t;for(let t=0;t<i&&r;t++){s.push(r.time),r=this.getPrevCache(r)||await this.getPrevious(r)}return s.sort(E),s[s.length>>>1]}isHistorical(t){return!!(this.options.checkpoints&&t.height+1<=this.network.lastCheckpoint)}async verify(t,e,i){if(s("number"==typeof i),t.prevBlock!==e.hash)throw new y(t,"invalid","bad-prevblk",0);const r=t.hash("hex");if(!this.verifyCheckpoint(e,r))throw new y(t,"checkpoint","checkpoint mismatch",100);if(this.isHistorical(e))return this.state;if(i&f.flags.VERIFY_BODY){const[e,i,s]=t.checkBody();if(!e)throw new y(t,"invalid",i,s,!0)}const n=await this.getTarget(t.time,e);if(t.bits!==n)throw new y(t,"invalid","bad-diffbits",100);if(this.options.spv)return this.state;const o=await this.getMedianTime(e);if(t.time<=o)throw new y(t,"invalid","time-too-old",0);if(t.time>this.network.now()+7200)throw new y(t,"invalid","time-too-new",0,!0);const a=e.height+1;if(t.version<2&&a>=this.network.block.bip34height)throw new y(t,"obsolete","bad-version",0);if(t.version<3&&a>=this.network.block.bip66height)throw new y(t,"obsolete","bad-version",0);if(t.version<4&&a>=this.network.block.bip65height)throw new y(t,"obsolete","bad-version",0);const h=await this.getDeployments(t.time,e),l=h.hasMTP()?o:t.time;for(const e of t.txs)if(!e.isFinal(a,l))throw new y(t,"invalid","bad-txns-nonfinal",10);if(h.hasBIP34()&&t.getCoinbaseHeight()!==a)throw new y(t,"invalid","bad-cb-height",100);if(t.getSize()>h.maxBlockSize())throw new y(t,"invalid","bad-blk-weight",100);if(!h.hasMonolith()&&t.getSize()>8*d.MAX_BLOCK_SIZE)throw new y(t,"invalid","bad-blk-length",100);return h}async getDeployments(t,e){const i=this.network.deployments,s=e.height+1,r=new k;t>=d.BIP16_TIME&&(r.flags|=w.flags.VERIFY_P2SH),s>=this.network.block.bip34height&&(r.bip34=!0),s>=this.network.block.bip66height&&(r.flags|=w.flags.VERIFY_DERSIG),s>=this.network.block.bip65height&&(r.flags|=w.flags.VERIFY_CHECKLOCKTIMEVERIFY);const n=await this.getMedianTime(e);return n>=d.UAHF_TIME&&(r.flags|=w.flags.VERIFY_STRICTENC,r.flags|=w.flags.VERIFY_SIGHASH_FORKID),s>=this.network.block.daaheight&&(r.daa=!0,r.flags|=w.flags.VERIFY_LOW_S,r.flags|=w.flags.VERIFY_NULLFAIL),n>=d.MONOLITH_TIME&&(r.flags|=w.flags.VERIFY_MONOLITH_OPCODES),await this.isActive(e,i.csv)&&(r.flags|=w.flags.VERIFY_CHECKSEQUENCEVERIFY,r.lockFlags|=f.lockFlags.VERIFY_SEQUENCE,r.lockFlags|=f.lockFlags.MEDIAN_TIME_PAST),r}setDeploymentState(t){this.options.checkpoints&&this.height<this.network.lastCheckpoint?this.state=t:(!this.state.hasP2SH()&&t.hasP2SH()&&this.logger.warning("P2SH has been activated."),!this.state.hasBIP34()&&t.hasBIP34()&&this.logger.warning("BIP34 has been activated."),!this.state.hasBIP66()&&t.hasBIP66()&&this.logger.warning("BIP66 has been activated."),!this.state.hasCLTV()&&t.hasCLTV()&&this.logger.warning("BIP65 has been activated."),!this.state.hasCSV()&&t.hasCSV()&&this.logger.warning("CSV has been activated."),!this.state.hasUAHF()&&t.hasUAHF()&&this.logger.warning("UAHF has been activated."),!this.state.hasDAA()&&t.hasDAA()&&this.logger.warning("DAA has been activated."),!this.state.hasMonolith()&&t.hasMonolith()&&this.logger.warning("Monolith has been activated."),this.state=t)}async verifyDuplicates(t,e){for(const i of t.txs){if(!await this.hasCoins(i))continue;const s=e.height+1,r=this.network.bip30[s];if(!r||t.hash("hex")!==r)throw new y(t,"invalid","bad-txns-BIP30",100)}}async updateInputs(t,e){const i=new m,r=e.height+1,n=t.txs[0];i.addTX(n,r);for(let e=1;e<t.txs.length;e++){const n=t.txs[e];s(await i.spendInputs(this.db,n),"BUG: Spent inputs in historical data!"),i.addTX(n,r)}return i}async verifyInputs(t,e,i){const s=new m,r=e.height+1,n=this.network.halvingInterval;let o=0,a=0;for(let n=0;n<t.txs.length;n++){const h=t.txs[n];if(n>0&&!await s.spendInputs(this.db,h))throw new y(t,"invalid","bad-txns-inputs-missingorspent",100);if(n>0&&h.version>=2&&!await this.verifyLocks(e,h,s,i.lockFlags))throw new y(t,"invalid","bad-txns-nonfinal",100);if((o+=h.getSigopsCount(s,i.flags))>d.maxBlockSigops(t.getSize()))throw new y(t,"invalid","bad-blk-sigops",100);if(n>0){const[e,i,n]=h.checkInputs(s,r);if(-1===e)throw new y(t,"invalid",i,n);if((a+=e)>d.MAX_MONEY)throw new y(t,"invalid","bad-cb-amount",100)}s.addTX(h,r)}if(a+=d.getReward(r,n),t.getClaimed()>a)throw new y(t,"invalid","bad-cb-amount",100);const h=[];for(let e=1;e<t.txs.length;e++){const r=t.txs[e];h.push(r.verifyAsync(s,i.flags,this.workers))}const l=await Promise.all(h);for(const e of l)if(!e)throw new y(t,"invalid","mandatory-script-verify-flag-failed",100);return s}async findFork(t,e){for(;t.hash!==e.hash;){for(;e.height>t.height;)if(!(e=await this.getPrevious(e)))throw new Error("No previous entry for new tip.");if(t.hash===e.hash)return t;if(!(t=await this.getPrevious(t)))throw new Error("No previous entry for old tip.")}return t}async reorganize(t){const e=this.tip,i=await this.findFork(e,t);s(i,"No free space or data corruption.");const r=[];let n=e;for(;n.hash!==i.hash;)r.push(n),n=await this.getPrevious(n),s(n);const o=[];for(n=t;n.hash!==i.hash;)o.push(n),n=await this.getPrevious(n),s(n);for(let t=0;t<r.length;t++){const e=r[t];await this.disconnect(e)}for(let t=o.length-1;t>=1;t--){const e=o[t];await this.reconnect(e)}this.logger.warning("Chain reorganization: old=%s(%d) new=%s(%d)",e.rhash(),e.height,t.rhash(),t.height),await this.emitAsync("reorganize",e,t)}async reorganizeSPV(t){const e=this.tip,i=await this.findFork(e,t);s(i,"No free space or data corruption.");const r=[];let n=e;for(;n.hash!==i.hash;)r.push(n),n=await this.getPrevious(n),s(n);await this._reset(i.hash,!0);for(const t of r){const e=t.toHeaders(),i=new m;await this.emitAsync("disconnect",t,e,i)}return this.logger.warning("SPV reorganization: old=%s(%d) new=%s(%d)",e.rhash(),e.height,t.rhash(),t.height),this.logger.warning("Chain replay from height %d necessary.",i.height),this.emitAsync("reorganize",e,t)}async disconnect(t){let e=await this.getBlock(t.hash);if(!e){if(!this.options.spv)throw new Error("Block not found.");e=t.toHeaders()}const i=await this.getPrevious(t),r=await this.db.disconnect(t,e);return s(i),this.tip=i,this.height=i.height,this.emit("tip",i),this.emitAsync("disconnect",t,e,r)}async reconnect(t){const e=f.flags.VERIFY_NONE;let i=await this.getBlock(t.hash);if(!i){if(!this.options.spv)throw new Error("Block not found.");i=t.toHeaders()}const r=await this.getPrevious(t);let n,o;s(r);try{[n,o]=await this.verifyContext(i,r,e)}catch(e){throw"VerifyError"===e.type&&(e.malleated||this.setInvalid(t.hash),this.logger.warning("Tried to reconnect invalid block: %s (%d).",t.rhash(),t.height)),e}return await this.db.reconnect(t,i,n),this.tip=t,this.height=t.height,this.setDeploymentState(o),this.emit("tip",t),this.emit("reconnect",t,i),this.emitAsync("connect",t,i,n)}async setBestChain(t,e,i,s){if(t.prevBlock!==this.tip.hash){if(this.logger.warning("WARNING: Reorganizing chain."),this.options.spv)return this.reorganizeSPV(t);await this.reorganize(t)}let r,n;t.hasUnknown(this.network)&&this.logger.warning("Unknown version bits in block %d: %s.",t.height,t.version.toString(16));try{[r,n]=await this.verifyContext(e,i,s)}catch(e){throw"VerifyError"===e.type&&(e.malleated||this.setInvalid(t.hash),this.logger.warning("Tried to connect invalid block: %s (%d).",t.rhash(),t.height)),e}return await this.db.save(t,e,r),this.tip=t,this.height=t.height,this.setDeploymentState(n),this.emit("tip",t),this.emit("block",e,t),this.emitAsync("connect",t,e,r)}async saveAlternate(t,e,i,s){try{await this.verify(e,i,s)}catch(e){throw"VerifyError"===e.type&&(e.malleated||this.setInvalid(t.hash),this.logger.warning("Invalid block on alternate chain: %s (%d).",t.rhash(),t.height)),e}t.hasUnknown(this.network)&&this.logger.warning("Unknown version bits in block %d: %s.",t.height,t.version.toString(16)),await this.db.save(t,e),this.logger.warning("Heads up: Competing chain at height %d: tip-height=%d competitor-height=%d tip-hash=%s competitor-hash=%s tip-chainwork=%s competitor-chainwork=%s chainwork-diff=%s",t.height,this.tip.height,t.height,this.tip.rhash(),t.rhash(),this.tip.chainwork.toString(),t.chainwork.toString(),this.tip.chainwork.sub(t.chainwork).toString()),this.emit("competitor",e,t)}async reset(t){const e=await this.locker.lock();try{return await this._reset(t,!1)}finally{e()}}async _reset(t,e){const i=await this.db.reset(t);this.tip=i,this.height=i.height,this.synced=!1;const s=await this.getDeploymentState();this.setDeploymentState(s),this.emit("tip",i),e||await this.emitAsync("reset",i),this.purgeOrphans(),this.maybeSync()}async replay(t){const e=await this.locker.lock();try{return await this._replay(t,!0)}finally{e()}}async _replay(t,e){const i=await this.getEntry(t);if(!i)throw new Error("Block not found.");if(!await this.isMainChain(i))throw new Error("Cannot reset on alternate chain.");i.isGenesis()?await this._reset(i.hash,e):await this._reset(i.prevBlock,e)}async invalidate(t){const e=await this.locker.lock();try{return await this._invalidate(t)}finally{e()}}async _invalidate(t){await this._replay(t,!1),this.setInvalid(t)}async prune(){const t=await this.locker.lock();try{return await this.db.prune()}finally{t()}}async scan(t,e,i){const s=await this.locker.lock();try{return await this.db.scan(t,e,i)}finally{s()}}async add(t,e,i){const s=t.hash("hex"),r=await this.locker.lock(s);try{return await this._add(t,e,i)}finally{r()}}async _add(t,e,i){const s=t.hash("hex");if(null==e&&(e=f.flags.DEFAULT_FLAGS),null==i&&(i=-1),s===this.network.genesis.hash)throw this.logger.debug("Saw genesis block: %s.",t.rhash()),new y(t,"duplicate","duplicate",0);if(this.hasPending(s))throw this.logger.debug("Already have pending block: %s.",t.rhash()),new y(t,"duplicate","duplicate",0);if(this.hasOrphan(s))throw this.logger.debug("Already have orphan block: %s.",t.rhash()),new y(t,"duplicate","duplicate",0);if(this.hasInvalid(t))throw this.logger.debug("Invalid ancestors for block: %s.",t.rhash()),new y(t,"duplicate","duplicate",100);if(e&f.flags.VERIFY_POW&&!t.verifyPOW())throw new y(t,"invalid","high-hash",50);if(await this.hasEntry(s))throw this.logger.debug("Already have block: %s.",t.rhash()),new y(t,"duplicate","duplicate",0);const r=await this.getEntry(t.prevBlock);if(!r)return this.storeOrphan(t,e,i),null;const n=await this.connect(r,t,e);return this.hasNextOrphan(s)&&await this.handleOrphans(n),n}async connect(t,e,i){const r=p.bench();if(s(e.prevBlock===t.hash),e.isMemory())try{e=e.toBlock()}catch(t){throw this.logger.error(t),new y(e,"malformed","error parsing message",10,!0)}const n=g.fromBlock(e,t);return n.chainwork.lte(this.tip.chainwork)?await this.saveAlternate(n,e,t,i):await this.setBestChain(n,e,t,i),this.logStatus(r,e,n),this.maybeSync(),n}async handleOrphans(t){let e=this.resolveOrphan(t.hash);for(;e;){const{block:i,flags:s,id:r}=e;try{t=await this.connect(t,i,s)}catch(t){if("VerifyError"===t.type){this.logger.warning("Could not resolve orphan block %s: %s.",i.rhash(),t.message),this.emit("bad orphan",t,r);break}throw t}this.logger.debug("Orphan block was resolved: %s (%d).",i.rhash(),t.height),this.emit("resolved",i,t),e=this.resolveOrphan(t.hash)}}isSlow(){return!this.options.spv&&(!!this.synced||1===this.height||this.height%20==0||this.height>=this.network.block.slowHeight)}logStatus(t,e,i){if(!this.isSlow())return;this.logger.memory();const s=p.bench(t);this.logger.info("Block %s (%d) added to chain (size=%d txs=%d time=%d).",i.rhash(),i.height,e.getSize(),e.txs.length,s),this.db.coinCache.capacity>0&&this.logger.debug("Coin Cache: size=%dmb, items=%d.",this.db.coinCache.size/(1<<20),this.db.coinCache.items)}verifyCheckpoint(t,e){if(!this.options.checkpoints)return!0;const i=t.height+1,s=this.network.checkpointMap[i];return!s||(e===s?(this.logger.debug("Hit checkpoint block %s (%d).",p.revHex(e),i),this.emit("checkpoint",e,i),!0):(this.logger.warning("Checkpoint mismatch at height %d: expected=%s received=%s",i,p.revHex(s),p.revHex(e)),this.purgeOrphans(),!1))}storeOrphan(t,e,i){const r=t.getCoinbaseHeight(),n=this.orphanPrev.get(t.prevBlock);n&&(s(n.block.hash("hex")!==t.hash("hex")),s(n.block.prevBlock===t.prevBlock),this.logger.warning("Removing forked orphan block: %s (%d).",n.block.rhash(),r),this.removeOrphan(n)),this.limitOrphans(),this.addOrphan(new class{constructor(t,e,i){this.block=t,this.flags=e,this.id=i,this.time=p.now()}}(t,e,i)),this.logger.debug("Storing orphan block: %s (%d).",t.rhash(),r),this.emit("orphan",t)}addOrphan(t){const e=t.block,i=e.hash("hex");return s(!this.orphanMap.has(i)),s(!this.orphanPrev.has(e.prevBlock)),s(this.orphanMap.size>=0),this.orphanMap.set(i,t),this.orphanPrev.set(e.prevBlock,t),t}removeOrphan(t){const e=t.block,i=e.hash("hex");return s(this.orphanMap.has(i)),s(this.orphanPrev.has(e.prevBlock)),s(this.orphanMap.size>0),this.orphanMap.delete(i),this.orphanPrev.delete(e.prevBlock),t}hasNextOrphan(t){return this.orphanPrev.has(t)}resolveOrphan(t){const e=this.orphanPrev.get(t);return e?this.removeOrphan(e):null}purgeOrphans(){const t=this.orphanMap.size;0!==t&&(this.orphanMap.clear(),this.orphanPrev.clear(),this.logger.debug("Purged %d orphans.",t))}limitOrphans(){const t=p.now();let e=null;for(const i of this.orphanMap.values())t<i.time+3600?(!e||i.time<e.time)&&(e=i):this.removeOrphan(i);this.orphanMap.size<this.options.maxOrphans||e&&this.removeOrphan(e)}hasInvalid(t){const e=t.hash("hex");return!!this.invalid.has(e)||!!this.invalid.has(t.prevBlock)&&(this.setInvalid(e),!0)}setInvalid(t){this.invalid.set(t,!0)}removeInvalid(t){this.invalid.remove(t)}async has(t){return!!this.hasOrphan(t)||!!this.locker.has(t)||!!this.invalid.has(t)||this.hasEntry(t)}getEntry(t){return this.db.getEntry(t)}getEntryByHeight(t){return this.db.getEntryByHeight(t)}getEntryByHash(t){return this.db.getEntryByHash(t)}getHash(t){return this.db.getHash(t)}getHeight(t){return this.db.getHeight(t)}hasEntry(t){return this.db.hasEntry(t)}getNextHash(t){return this.db.getNextHash(t)}hasCoins(t){return this.db.hasCoins(t)}getTips(){return this.db.getTips()}getHashes(t=-1,e=-1){return this.db.getHashes(t,e)}readCoin(t){return this.db.readCoin(t)}getCoin(t,e){return this.db.getCoin(t,e)}getBlock(t){return this.db.getBlock(t)}getRawBlock(t){return this.db.getRawBlock(t)}getBlockView(t){return this.db.getBlockView(t)}getMeta(t){return this.db.getMeta(t)}getTX(t){return this.db.getTX(t)}hasTX(t){return this.db.hasTX(t)}getCoinsByAddress(t){return this.db.getCoinsByAddress(t)}getHashesByAddress(t){return this.db.getHashesByAddress(t)}getTXByAddress(t){return this.db.getTXByAddress(t)}getMetaByAddress(t){return this.db.getMetaByAddress(t)}getOrphan(t){return this.orphanMap.get(t)||null}hasOrphan(t){return this.orphanMap.has(t)}hasPending(t){return this.locker.pending(t)}getCoinView(t){return this.db.getCoinView(t)}async getSpentView(t){const e=await this.locker.lock();try{return await this.db.getSpentView(t)}finally{e()}}isFull(){return this.synced}maybeSync(){this.synced||this.options.checkpoints&&this.height<this.network.lastCheckpoint||this.tip.time<p.now()-this.network.block.maxTipAge||this.hasChainwork()&&(this.synced=!0,this.emit("full"))}hasChainwork(){return this.tip.chainwork.gte(this.network.pow.chainwork)}getProgress(){const t=this.network.genesis.time,e=this.tip.time-t,i=p.now()-t-2400;return Math.min(1,e/i)}async getLocator(t){const e=await this.locker.lock();try{return await this._getLocator(t)}finally{e()}}async _getLocator(t){null==t&&(t=this.tip.hash),s("string"==typeof t);let e=await this.getEntry(t);const i=[];e||(e=this.tip,i.push(t));let r=await this.isMainChain(e),n=e.hash,o=e.height,a=1;for(i.push(n);o>0;){if((o-=a)<0&&(o=0),i.length>10&&(a*=2),r)n=await this.getHash(o),s(n);else{const t=await this.getAncestor(e,o);s(t),r=await this.isMainChain(t),n=t.hash}i.push(n)}return i}getOrphanRoot(t){let e=null;for(s(t);;){const i=this.orphanMap.get(t);if(!i)break;e=t,t=i.block.prevBlock}return e}getProofTime(t,e){const i=this.network.pow;let s,r;return t.chainwork.gt(e.chainwork)?(r=t.chainwork.sub(e.chainwork),s=1):(r=e.chainwork.sub(t.chainwork),s=-1),(r=(r=r.imuln(i.targetSpacing)).div(this.tip.getProof())).bitLength()>53?s*Number.MAX_SAFE_INTEGER:s*r.toNumber()}async getCurrentTarget(){return this.getTarget(this.network.now(),this.tip)}async getSuitableBlock(t){const e=[];return e[2]=t,e[1]=await this.getPrevious(t),e[0]=await this.getPrevious(e[1]),e[0].time>e[2].time&&R(e,0,2),e[0].time>e[1].time&&R(e,0,1),e[1].time>e[2].time&&R(e,1,2),e[1]}async getTarget(t,e){const i=this.network.pow;if(!e)return s(t===this.network.genesis.time),i.bits;if(i.noRetargeting)return e.bits;if(this.tip.height>=this.network.block.daaheight){if(i.targetReset&&t>e.time+2*i.targetSpacing)return i.bits;if(e.height<i.retargetInterval)return e.bits;const s=await this.getSuitableBlock(e),r=e.height-144,n=await this.getSuitableBlock(await this.getAncestor(e,r));return this.computeTarget(n,s)}if((e.height+1)%i.retargetInterval==0){const t=e.height-(i.retargetInterval-1);s(t>=0);const r=await this.getAncestor(e,t);return s(r),this.retarget(e,r)}if(i.targetReset){if(t>e.time+2*i.targetSpacing)return i.bits;for(;0!==e.height&&e.height%i.retargetInterval!=0&&e.bits===i.bits;){e=this.getPrevCache(e)||await this.getPrevious(e),s(e)}return e.bits}if(e.bits===i.bits)return e.bits;const r=await this.getAncestor(e,e.height+1-7);if(s(r),await this.getMedianTime(e)-await this.getMedianTime(r)<43200)return e.bits;const n=d.fromCompact(e.bits);return n.iadd(n.ushrn(2)),n.cmp(i.limit)>0?i.bits:d.toCompact(n)}computeTarget(t,e){s(e.height>=t.height);const i=this.network.pow,r=e.chainwork.sub(t.chainwork);r.imuln(i.targetSpacing);let n=e.time-t.time;n<72*i.targetSpacing&&(n=72*i.targetSpacing),n>288*i.targetSpacing&&(n=288*i.targetSpacing),r.idivn(n);const o=new h(1).iushln(256).div(r).isubn(1);return o.gt(i.limit)?i.bits:d.toCompact(o)}retarget(t,e){const i=this.network.pow,s=i.targetTimespan,r=d.fromCompact(t.bits);let n=t.time-e.time;return n<s/4|0&&(n=s/4|0),n>4*s&&(n=4*s),r.imuln(n),r.idivn(s),r.gt(i.limit)?i.bits:d.toCompact(r)}async findLocator(t){for(const e of t)if(await this.isMainHash(e))return e;return this.network.genesis.hash}async isActive(t,e){return await this.getState(t,e)===b.ACTIVE}async getState(t,e){const i=e.bit;let r=this.network.minerWindow,n=this.network.activationThreshold;if(-1!==e.threshold&&(n=e.threshold),-1!==e.window&&(r=e.window),(t.height+1)%r!=0){const e=t.height-(t.height+1)%r;if(!(t=await this.getAncestor(t,e)))return b.DEFINED;s(t.height===e),s((t.height+1)%r==0)}let o=t,a=b.DEFINED;const h=[];for(;o;){const t=this.db.stateCache.get(i,o);if(-1!==t){a=t;break}if(await this.getMedianTime(o)<e.startTime){a=b.DEFINED,this.db.stateCache.set(i,o,a);break}h.push(o);const s=o.height-r;o=await this.getAncestor(o,s)}for(;h.length;){const t=h.pop();switch(a){case b.DEFINED:{const i=await this.getMedianTime(t);if(i>=e.timeout){a=b.FAILED;break}if(i>=e.startTime){a=b.STARTED;break}break}case b.STARTED:{if(await this.getMedianTime(t)>=e.timeout){a=b.FAILED;break}let o=t,h=0;for(let t=0;t<r;t++){if(o.hasBit(i)&&h++,h>=n){a=b.LOCKED_IN;break}o=await this.getPrevious(o),s(o)}break}case b.LOCKED_IN:a=b.ACTIVE;break;case b.FAILED:case b.ACTIVE:break;default:s(!1,"Bad state.")}this.db.stateCache.set(i,t,a)}return a}async computeBlockVersion(t){let e=0;for(const i of this.network.deploys){const s=await this.getState(t,i);s!==b.LOCKED_IN&&s!==b.STARTED||(e|=1<<i.bit)}return(e|=d.VERSION_TOP_BITS)>>>0}async getDeploymentState(){const t=await this.getPrevious(this.tip);return t?this.options.spv?this.state:this.getDeployments(this.tip.time,t):(s(this.tip.isGenesis()),this.state)}async verifyFinal(t,e,i){const s=t.height+1;if(e.locktime<d.LOCKTIME_THRESHOLD)return e.isFinal(s,-1);if(i&f.lockFlags.MEDIAN_TIME_PAST){const i=await this.getMedianTime(t);return e.isFinal(s,i)}return e.isFinal(s,this.network.now())}async getLocks(t,e,i,r){const n=d.SEQUENCE_GRANULARITY,o=d.SEQUENCE_DISABLE_FLAG,a=d.SEQUENCE_TYPE_FLAG,h=d.SEQUENCE_MASK;if(!(r&f.lockFlags.VERIFY_SEQUENCE))return[-1,-1];if(e.isCoinbase()||e.version<2)return[-1,-1];let l=-1,u=-1;for(const{prevout:r,sequence:c}of e.inputs){if(c&o)continue;let e=i.getHeight(r);if(-1===e&&(e=this.height+1),!(c&a)){e+=(c&h)-1,l=Math.max(l,e);continue}e=Math.max(e-1,0);const f=await this.getAncestor(t,e);s(f,"Database is corrupt.");let d=await this.getMedianTime(f);d+=((c&h)<<n)-1,u=Math.max(u,d)}return[l,u]}async verifyLocks(t,e,i,s){const[r,n]=await this.getLocks(t,e,i,s);return!(-1!==r&&r>=t.height+1||-1!==n&&n>=await this.getMedianTime(t))}}},function(t,e,i){"use strict";(function(e){
/*!
 * chainentry.js - chainentry object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(52),o=i(3),a=i(9),h=i(5),l=i(42),u=i(35),c=new n(0);class f{constructor(t){this.hash=o.NULL_HASH,this.version=1,this.prevBlock=o.NULL_HASH,this.merkleRoot=o.NULL_HASH,this.time=0,this.bits=0,this.nonce=0,this.height=0,this.chainwork=c,t&&this.fromOptions(t)}fromOptions(t){return s(t,"Block data is required."),s("string"==typeof t.hash),s(t.version>>>0===t.version),s("string"==typeof t.prevBlock),s("string"==typeof t.merkleRoot),s(t.time>>>0===t.time),s(t.bits>>>0===t.bits),s(t.nonce>>>0===t.nonce),s(t.height>>>0===t.height),s(!t.chainwork||n.isBN(t.chainwork)),this.hash=t.hash,this.version=t.version,this.prevBlock=t.prevBlock,this.merkleRoot=t.merkleRoot,this.time=t.time,this.bits=t.bits,this.nonce=t.nonce,this.height=t.height,this.chainwork=t.chainwork||c,this}static fromOptions(t,e){return(new this).fromOptions(t,e)}getProof(){const t=o.fromCompact(this.bits);return t.isNeg()||t.isZero()?new n(0):f.MAX_CHAINWORK.div(t.iaddn(1))}getChainwork(t){const e=this.getProof();return t?e.iadd(t.chainwork):e}isGenesis(){return 0===this.height}hasUnknown(t){const e=o.VERSION_TOP_MASK,i=o.VERSION_TOP_BITS;return(this.version&e)>>>0===i&&0!=(this.version&t.unknownBits)}hasBit(t){return o.hasBit(this.version,t)}rhash(){return h.revHex(this.hash)}fromBlock(t,e){return this.hash=t.hash("hex"),this.version=t.version,this.prevBlock=t.prevBlock,this.merkleRoot=t.merkleRoot,this.time=t.time,this.bits=t.bits,this.nonce=t.nonce,this.height=e?e.height+1:0,this.chainwork=this.getChainwork(e),this}static fromBlock(t,e){return(new this).fromBlock(t,e)}toRaw(){const t=r.write(116);return t.writeU32(this.version),t.writeHash(this.prevBlock),t.writeHash(this.merkleRoot),t.writeU32(this.time),t.writeU32(this.bits),t.writeU32(this.nonce),t.writeU32(this.height),t.writeBytes(this.chainwork.toArrayLike(e,"le",32)),t.render()}fromRaw(t){const e=r.read(t,!0),i=a.digest(e.readBytes(80));return e.seek(-80),this.hash=i.toString("hex"),this.version=e.readU32(),this.prevBlock=e.readHash("hex"),this.merkleRoot=e.readHash("hex"),this.time=e.readU32(),this.bits=e.readU32(),this.nonce=e.readU32(),this.height=e.readU32(),this.chainwork=new n(e.readBytes(32),"le"),this}static fromRaw(t){return(new this).fromRaw(t)}toJSON(){return{hash:h.revHex(this.hash),version:this.version,prevBlock:h.revHex(this.prevBlock),merkleRoot:h.revHex(this.merkleRoot),time:this.time,bits:this.bits,nonce:this.nonce,height:this.height,chainwork:this.chainwork.toString("hex",64)}}fromJSON(t){return s(t,"Block data is required."),s("string"==typeof t.hash),s(t.version>>>0===t.version),s("string"==typeof t.prevBlock),s("string"==typeof t.merkleRoot),s(t.time>>>0===t.time),s(t.bits>>>0===t.bits),s(t.nonce>>>0===t.nonce),s("string"==typeof t.chainwork),this.hash=h.revHex(t.hash),this.version=t.version,this.prevBlock=h.revHex(t.prevBlock),this.merkleRoot=h.revHex(t.merkleRoot),this.time=t.time,this.bits=t.bits,this.nonce=t.nonce,this.height=t.height,this.chainwork=new n(t.chainwork,"hex"),this}static fromJSON(t){return(new this).fromJSON(t)}toHeaders(){return l.fromEntry(this)}toInv(){return new u(u.types.BLOCK,this.hash)}inspect(){const t=this.toJSON();return t.version=t.version.toString(16),t}static isChainEntry(t){return t instanceof f}}f.MAX_CHAINWORK=new n(1).ushln(256),t.exports=f}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * compress.js - coin compressor for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),{encoding:r}=i(2),n=i(13),o=i(3),a=6,h=t.alloc(0);function l(t){if(0===t.length)return!1;switch(t[0]){case 2:case 3:return 33===t.length;case 4:return 65===t.length&&n.publicKeyVerify(t);default:return!1}}e.pack=function(t,e){return e.writeVarint(t.value),function(t,e){const i=t.getPubkeyhash(!0);if(i)return e.writeU8(0),e.writeBytes(i),e;const r=t.getScripthash();if(r)return e.writeU8(1),e.writeBytes(r),e;const o=t.getPubkey(!0);if(o&&l(o)){const t=function(t){let e;switch(t[0]){case 2:case 3:e=t;break;case 4:(e=n.publicKeyConvert(t,!0))[0]=4|1&t[64];break;default:throw new Error("Bad point format.")}return s(33===e.length),e}(o);return e.writeBytes(t),e}e.writeVarint(t.raw.length+a),e.writeBytes(t.raw)}(t.script,e),e},e.unpack=function(t,e){return t.value=e.readVarint(),function(t,e){switch(e.readU8()){case 0:{const i=e.readBytes(20,!0);t.fromPubkeyhash(i);break}case 1:{const i=e.readBytes(20,!0);t.fromScripthash(i);break}case 2:case 3:case 4:case 5:{e.offset-=1;const i=function(t){const e=t[0];switch(s(33===t.length),e){case 2:case 3:return t;case 4:t[0]=2;break;case 5:t[0]=3;break;default:throw new Error("Bad point format.")}const i=n.publicKeyConvert(t,!1);return t[0]=e,i}(e.readBytes(33,!0));t.fromPubkey(i);break}default:{e.offset-=1;const i=e.readVarint()-a;if(i>o.MAX_SCRIPT_SIZE)t.fromNulldata(h),e.seek(i);else{const s=e.readBytes(i);t.fromRaw(s)}break}}}(t.script,e),t},e.size=function(t){let e=0;return(e+=r.sizeVarint(t.value))+function(t){if(t.isPubkeyhash(!0))return 21;if(t.isScripthash())return 21;const e=t.getPubkey(!0);if(e&&l(e))return 33;let i=0;return(i+=r.sizeVarint(t.raw.length+a))+t.raw.length}(t.script)}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * timedata.js - time management for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(7),r=i(5),n=i(53);function o(t,e){return t-e}t.exports=class extends s{constructor(t){super(),null==t&&(t=200),this.samples=[],this.known=new Map,this.limit=t,this.offset=0,this.checked=!1}add(t,e){if(this.samples.length>=this.limit)return;if(this.known.has(t))return;const i=e-r.now();if(this.known.set(t,i),n.insert(this.samples,i,o),this.emit("sample",i,this.samples.length),this.samples.length>=5&&this.samples.length%2==1){let t=this.samples[this.samples.length>>>1];if(Math.abs(t)>=4200){if(!this.checked){let t=!1;for(const e of this.samples)if(0!==e&&Math.abs(e)<300){t=!0;break}t||(this.checked=!0,this.emit("mismatch"))}t=0}this.offset=t,this.emit("offset",this.offset)}}now(){return r.now()+this.offset}adjust(t){return t+this.offset}local(t){return t-this.offset}ms(){return Date.now()+1e3*this.offset}}},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e,i){"use strict";
/*!
 * fixed.js - fixed number parsing
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0);function r(t){switch(t){case 0:return 1;case 1:return 10;case 2:return 100;case 3:return 1e3;case 4:return 1e4;case 5:return 1e5;case 6:return 1e6;case 7:return 1e7;case 8:return 1e8}throw new Error("Exponent is too large.")}e.encode=function(t,e){s(Number.isSafeInteger(t),"Invalid integer value.");let i="";t<0&&(t=-t,i="-");const n=r(e);let o=t%n,a=(t-o)/n;for(o=o.toString(10),a=a.toString(10);o.length<e;)o="0"+o;return o=o.replace(/0+$/,""),s(o.length<=e,"Invalid integer value."),0===o.length&&(o="0"),0===e?`${i}${a}`:`${i}${a}.${o}`},e.decode=function(t,e){s("string"==typeof t),s(t.length<=32,"Fixed number string too large.");let i=1;t.length>0&&"-"===t[0]&&(t=t.substring(1),i=-1);let n=t,o="0";const a=t.indexOf(".");for(-1!==a&&(n=t.substring(0,a),o=t.substring(a+1)),n=n.replace(/^0+/,""),o=o.replace(/0+$/,""),s(n.length<=16-e,"Fixed number string exceeds 2^53-1."),s(o.length<=e,"Too many decimal places in fixed number string."),0===n.length&&(n="0");o.length<e;)o+="0";0===o.length&&(o="0"),s(/^\d+$/.test(n)&&/^\d+$/.test(o),"Non-numeric characters in fixed number string."),n=parseInt(n,10),o=parseInt(o,10);const h=r(e),l=function(t){switch(h){case 1:return 0;case 10:return 1;case 100:return 91;case 1e3:case 1e4:return 991;case 1e5:return 40991;case 1e6:return 740991;case 1e7:return 4740991;case 1e8:return 54740991}throw new Error("Exponent is too large.")}(),u=function(t){switch(h){case 1:return 9007199254740991;case 10:return 900719925474099;case 100:return 90071992547409;case 1e3:return 9007199254740;case 1e4:return 900719925474;case 1e5:return 90071992547;case 1e6:return 9007199254;case 1e7:return 900719925;case 1e8:return 90071992}throw new Error("Exponent is too large.")}();return s(n<u||n===u&&o<=l,"Fixed number string exceeds 2^53-1."),i*(n*h+o)},e.toFloat=function(t,i){return parseFloat(e.encode(t,i))},e.fromFloat=function(t,i){return s("number"==typeof t&&isFinite(t)),s(Number.isSafeInteger(i)),e.decode(t.toFixed(i),i)}},function(t,e,i){"use strict";(function(e){
/*!
 * rpc.js - bitcoind-compatible json rpc for bcoin.
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),{format:r}=i(48),n=i(102),{Lock:o}=i(27),a=i(72),h=i(101),l=i(9),u=i(5),c=i(19),f=i(11),d=i(12),p=i(39),g=i(63),m=i(40),w=i(18),y=i(16),b=i(14),v=i(3),k=i(68),E=i(61),R=n.RPC,S=n.RPCError,_={INVALID_REQUEST:n.errors.INVALID_REQUEST,METHOD_NOT_FOUND:n.errors.METHOD_NOT_FOUND,INVALID_PARAMS:n.errors.INVALID_PARAMS,INTERNAL_ERROR:n.errors.INTERNAL_ERROR,PARSE_ERROR:n.errors.PARSE_ERROR,MISC_ERROR:-1,FORBIDDEN_BY_SAFE_MODE:-2,TYPE_ERROR:-3,INVALID_ADDRESS_OR_KEY:-5,OUT_OF_MEMORY:-7,INVALID_PARAMETER:-8,DATABASE_ERROR:-20,DESERIALIZATION_ERROR:-22,VERIFY_ERROR:-25,VERIFY_REJECTED:-26,VERIFY_ALREADY_IN_CHAIN:-27,IN_WARMUP:-28,WALLET_ERROR:-4,WALLET_INSUFFICIENT_FUNDS:-6,WALLET_INVALID_ACCOUNT_NAME:-11,WALLET_KEYPOOL_RAN_OUT:-12,WALLET_UNLOCK_NEEDED:-13,WALLET_PASSPHRASE_INCORRECT:-14,WALLET_WRONG_ENC_STATE:-15,WALLET_ENCRYPTION_FAILED:-16,WALLET_ALREADY_UNLOCKED:-17};function x(t,e){return I(t,e).getHash("hex")}function I(t,e){try{return d.fromString(t,e)}catch(t){throw new S(_.INVALID_ADDRESS_OR_KEY,"Invalid address.")}}function A(t,e){try{return p.fromSecret(t,e)}catch(t){throw new S(_.INVALID_ADDRESS_OR_KEY,"Invalid key.")}}t.exports=class extends R{constructor(t){super(),s(t,"RPC requires a WalletDB."),this.wdb=t.wdb,this.network=t.network,this.logger=t.logger.context("rpc"),this.client=t.client,this.locker=new o,this.wallet=null,this.init()}getCode(t){switch(t.type){case"RPCError":return t.code;case"ValidationError":return _.TYPE_ERROR;case"EncodingError":return _.DESERIALIZATION_ERROR;case"FundingError":return _.WALLET_INSUFFICIENT_FUNDS;default:return _.INTERNAL_ERROR}}init(){this.add("help",this.help),this.add("stop",this.stop),this.add("fundrawtransaction",this.fundRawTransaction),this.add("resendwallettransactions",this.resendWalletTransactions),this.add("abandontransaction",this.abandonTransaction),this.add("addmultisigaddress",this.addMultisigAddress),this.add("backupwallet",this.backupWallet),this.add("dumpprivkey",this.dumpPrivKey),this.add("dumpwallet",this.dumpWallet),this.add("encryptwallet",this.encryptWallet),this.add("getaccountaddress",this.getAccountAddress),this.add("getaccount",this.getAccount),this.add("getaddressesbyaccount",this.getAddressesByAccount),this.add("getbalance",this.getBalance),this.add("getnewaddress",this.getNewAddress),this.add("getrawchangeaddress",this.getRawChangeAddress),this.add("getreceivedbyaccount",this.getReceivedByAccount),this.add("getreceivedbyaddress",this.getReceivedByAddress),this.add("gettransaction",this.getTransaction),this.add("getunconfirmedbalance",this.getUnconfirmedBalance),this.add("getwalletinfo",this.getWalletInfo),this.add("importprivkey",this.importPrivKey),this.add("importwallet",this.importWallet),this.add("importaddress",this.importAddress),this.add("importprunedfunds",this.importPrunedFunds),this.add("importpubkey",this.importPubkey),this.add("keypoolrefill",this.keyPoolRefill),this.add("listaccounts",this.listAccounts),this.add("listaddressgroupings",this.listAddressGroupings),this.add("listlockunspent",this.listLockUnspent),this.add("listreceivedbyaccount",this.listReceivedByAccount),this.add("listreceivedbyaddress",this.listReceivedByAddress),this.add("listsinceblock",this.listSinceBlock),this.add("listtransactions",this.listTransactions),this.add("listunspent",this.listUnspent),this.add("lockunspent",this.lockUnspent),this.add("move",this.move),this.add("sendfrom",this.sendFrom),this.add("sendmany",this.sendMany),this.add("sendtoaddress",this.sendToAddress),this.add("setaccount",this.setAccount),this.add("settxfee",this.setTXFee),this.add("signmessage",this.signMessage),this.add("walletlock",this.walletLock),this.add("walletpassphrasechange",this.walletPassphraseChange),this.add("walletpassphrase",this.walletPassphrase),this.add("removeprunedfunds",this.removePrunedFunds),this.add("selectwallet",this.selectWallet),this.add("getmemoryinfo",this.getMemoryInfo),this.add("setloglevel",this.setLogLevel)}async help(t,e){if(0===t.length)return"Select a command.";const i={method:t[0],params:[]};return await this.execute(i,!0)}async stop(t,e){if(e||0!==t.length)throw new S(_.MISC_ERROR,"stop");return this.wdb.close(),"Stopping."}async fundRawTransaction(t,e){if(e||t.length<1||t.length>2)throw new S(_.MISC_ERROR,'fundrawtransaction "hexstring" ( options )');const i=this.wallet,s=new h(t),r=s.buf(0),n=s.obj(1);if(!r)throw new S(_.TYPE_ERROR,"Invalid hex string.");const o=m.fromRaw(r);if(0===o.outputs.length)throw new S(_.INVALID_PARAMETER,"TX must have at least one output.");let a=null,l=null;if(n){const t=new h(n);a=t.ufixed("feeRate",8),(l=t.str("changeAddress"))&&(l=I(l,this.network))}return await i.fund(o,{rate:a,changeAddress:l}),{hex:o.toRaw().toString("hex"),changepos:o.changeIndex,fee:c.btc(o.getFee(),!0)}}async resendWalletTransactions(t,e){if(e||0!==t.length)throw new S(_.MISC_ERROR,"resendwallettransactions");const i=this.wallet,s=await i.resend(),r=[];for(const t of s)r.push(t.txid());return r}async addMultisigAddress(t,e){if(e||t.length<2||t.length>3)throw new S(_.MISC_ERROR,'addmultisigaddress nrequired ["key",...] ( "account" )');throw new Error("Not implemented.")}async backupWallet(t,e){const i=new h(t).str(0);if(e||1!==t.length||!i)throw new S(_.MISC_ERROR,'backupwallet "destination"');return await this.wdb.backup(i),null}async dumpPrivKey(t,e){if(e||1!==t.length)throw new S(_.MISC_ERROR,'dumpprivkey "bitcoinaddress"');const i=this.wallet,s=x(new h(t).str(0,""),this.network),r=await i.getPrivateKey(s);if(!r)throw new S(_.MISC_ERROR,"Key not found.");return r.toSecret(this.network)}async dumpWallet(t,e){if(e||1!==t.length)throw new S(_.MISC_ERROR,'dumpwallet "filename"');const i=this.wallet,s=new h(t).str(0);if(!s)throw new S(_.TYPE_ERROR,"Invalid parameter.");const n=await this.wdb.getTip(),o=u.date(),l=[r("# Wallet Dump created by Bcoin %s",k.version),r("# * Created on %s",o),r("# * Best block at time of backup was %d (%s).",n.height,u.revHex(n.hash)),r("# * File: %s",s),""],c=await i.getAddressHashes();for(const t of c){const e=await i.getPrivateKey(t);if(!e)continue;const s=e.getAddress("string");let n="%s %s label= addr=%s";1===e.branch&&(n="%s %s change=1 addr=%s");const a=r(n,e.toSecret(this.network),o,s);l.push(a)}l.push(""),l.push("# End of dump"),l.push("");const f=l.join("\n");return a.unsupported?f:(await a.writeFile(s,f,"utf8"),null)}async encryptWallet(t,e){const i=this.wallet;if(!i.master.encrypted&&(e||1!==t.length))throw new S(_.MISC_ERROR,'encryptwallet "passphrase"');const s=new h(t).str(0,"");if(i.master.encrypted)throw new S(_.WALLET_WRONG_ENC_STATE,"Already running with an encrypted wallet.");if(s.length<1)throw new S(_.MISC_ERROR,'encryptwallet "passphrase"');try{await i.encrypt(s)}catch(t){throw new S(_.WALLET_ENCRYPTION_FAILED,"Encryption failed.")}return"wallet encrypted; we do not need to stop!"}async getAccountAddress(t,e){if(e||1!==t.length)throw new S(_.MISC_ERROR,'getaccountaddress "account"');const i=this.wallet;let s=new h(t).str(0,"");s||(s="default");const r=await i.receiveAddress(s);return r?r.toString(this.network):""}async getAccount(t,e){if(e||1!==t.length)throw new S(_.MISC_ERROR,'getaccount "bitcoinaddress"');const i=this.wallet,s=x(new h(t).str(0,""),this.network),r=await i.getPath(s);return r?r.name:""}async getAddressesByAccount(t,e){if(e||1!==t.length)throw new S(_.MISC_ERROR,'getaddressesbyaccount "account"');const i=this.wallet;let s=new h(t).str(0,"");const r=[];let n;""===s&&(s="default");try{n=await i.getPaths(s)}catch(t){if("Account not found."===t.message)return[];throw t}for(const t of n){const e=t.toAddress();r.push(e.toString(this.network))}return r}async getBalance(t,e){if(e||t.length>3)throw new S(_.MISC_ERROR,'getbalance ( "account" minconf includeWatchonly )');const i=this.wallet,s=new h(t);let r=s.str(0);const n=s.u32(1,1),o=s.bool(2,!1);if(""===r&&(r="default"),"*"===r&&(r=null),i.watchOnly!==o)return 0;const a=await i.getBalance(r);let l;return l=n>0?a.confirmed:a.unconfirmed,c.btc(l,!0)}async getNewAddress(t,e){if(e||t.length>1)throw new S(_.MISC_ERROR,'getnewaddress ( "account" )');const i=this.wallet;let s=new h(t).str(0);return""===s&&(s="default"),(await i.createReceive(s)).getAddress("string")}async getRawChangeAddress(t,e){if(e||t.length>1)throw new S(_.MISC_ERROR,"getrawchangeaddress");const i=this.wallet;return(await i.createChange()).getAddress("string")}async getReceivedByAccount(t,e){if(e||t.length<1||t.length>2)throw new S(_.MISC_ERROR,'getreceivedbyaccount "account" ( minconf )');const i=this.wallet,s=new h(t);let r=s.str(0);const n=s.u32(1,0),o=this.wdb.state.height;""===r&&(r="default");const a=await i.getPaths(r),l=new Set;for(const t of a)l.add(t.hash);const u=await i.getHistory(r);let f=0,d=-1;for(const t of u){const e=t.getDepth(o);if(!(e<n)){(-1===d||e<d)&&(d=e);for(const e of t.tx.outputs){const t=e.getHash("hex");t&&l.has(t)&&(f+=e.value)}}}return c.btc(f,!0)}async getReceivedByAddress(t,e){if(e||t.length<1||t.length>2)throw new S(_.MISC_ERROR,'getreceivedbyaddress "bitcoinaddress" ( minconf )');const i=this.wallet,s=new h(t),r=s.str(0,""),n=s.u32(1,0),o=this.wdb.state.height,a=x(r,this.network),l=await i.getHistory();let u=0;for(const t of l)if(!(t.getDepth(o)<n))for(const e of t.tx.outputs)e.getHash("hex")===a&&(u+=e.value);return c.btc(u,!0)}async _toWalletTX(t){const e=this.wallet,i=await e.toDetails(t);if(!i)throw new S(_.WALLET_ERROR,"TX not found.");let s=!0;for(const t of i.inputs)if(t.path){s=!1;break}const r=[];let n=0,o=0;for(let t=0;t<i.outputs.length;t++){const e=i.outputs[t];if(e.path){if(1===e.path.branch)continue;r.push({account:e.path.name,address:e.address.toString(this.network),category:"receive",amount:c.btc(e.value,!0),label:e.path.name,vout:t}),o+=e.value}else s||(r.push({account:"",address:e.address?e.address.toString(this.network):null,category:"send",amount:-c.btc(e.value,!0),fee:-c.btc(i.fee,!0),vout:t}),n+=e.value)}return{amount:c.btc(s?o:-n,!0),confirmations:i.confirmations,blockhash:i.block?u.revHex(i.block):null,blockindex:i.index,blocktime:i.time,txid:u.revHex(i.hash),walletconflicts:[],time:i.mtime,timereceived:i.mtime,"bip125-replaceable":"no",details:r,hex:i.tx.toRaw().toString("hex")}}async getTransaction(t,e){if(e||t.length<1||t.length>2)throw new S(_.MISC_ERROR,'gettransaction "txid" ( includeWatchonly )');const i=this.wallet,s=new h(t),r=s.rhash(0),n=s.bool(1,!1);if(!r)throw new S(_.TYPE_ERROR,"Invalid parameter");const o=await i.getTX(r);if(!o)throw new S(_.WALLET_ERROR,"TX not found.");return await this._toWalletTX(o,n)}async abandonTransaction(t,e){if(e||1!==t.length)throw new S(_.MISC_ERROR,'abandontransaction "txid"');const i=this.wallet,s=new h(t).rhash(0);if(!s)throw new S(_.TYPE_ERROR,"Invalid parameter.");if(!await i.abandon(s))throw new S(_.WALLET_ERROR,"Transaction not in wallet.");return null}async getUnconfirmedBalance(t,e){if(e||t.length>0)throw new S(_.MISC_ERROR,"getunconfirmedbalance");const i=this.wallet,s=await i.getBalance();return c.btc(s.unconfirmed,!0)}async getWalletInfo(t,e){if(e||0!==t.length)throw new S(_.MISC_ERROR,"getwalletinfo");const i=this.wallet,s=await i.getBalance();return{walletid:i.id,walletversion:6,balance:c.btc(s.unconfirmed,!0),unconfirmed_balance:c.btc(s.unconfirmed,!0),txcount:s.tx,keypoololdest:0,keypoolsize:0,unlocked_until:i.master.until,paytxfee:c.btc(this.wdb.feeRate,!0)}}async importPrivKey(t,e){if(e||t.length<1||t.length>3)throw new S(_.MISC_ERROR,'importprivkey "bitcoinprivkey" ( "label" rescan )');const i=this.wallet,s=new h(t),r=s.str(0),n=s.bool(2,!1),o=A(r,this.network);return await i.importKey(0,o),n&&await this.wdb.rescan(0),null}async importWallet(t,e){if(e||1!==t.length)throw new S(_.MISC_ERROR,'importwallet "filename" ( rescan )');const i=this.wallet,s=new h(t),r=s.str(0),n=s.bool(1,!1);if(a.unsupported)throw new S(_.INTERNAL_ERROR,"FS not available.");let o;try{o=await a.readFile(r,"utf8")}catch(t){throw new S(_.INTERNAL_ERROR,t.code||"")}const l=o.split(/\n+/),u=[];for(let t of l){if(0===(t=t.trim()).length)continue;if(/^\s*#/.test(t))continue;const e=t.split(/\s+/);if(e.length<4)throw new S(_.DESERIALIZATION_ERROR,"Malformed wallet.");const i=A(e[0],this.network);u.push(i)}for(const t of u)await i.importKey(0,t);return n&&await this.wdb.rescan(0),null}async importAddress(t,e){if(e||t.length<1||t.length>4)throw new S(_.MISC_ERROR,'importaddress "address" ( "label" rescan p2sh )');const i=this.wallet,s=new h(t);let r=s.str(0,"");const n=s.bool(2,!1);if(s.bool(3,!1)){let t=s.buf(0);if(!t)throw new S(_.TYPE_ERROR,"Invalid parameters.");t=f.fromRaw(t),r=(t=f.fromScripthash(t.hash160())).getAddress()}else r=I(r,this.network);try{await i.importAddress(0,r)}catch(t){if("Address already exists."!==t.message)throw t}return n&&await this.wdb.rescan(0),null}async importPubkey(t,e){if(e||t.length<1||t.length>4)throw new S(_.MISC_ERROR,'importpubkey "pubkey" ( "label" rescan )');const i=this.wallet,s=new h(t),r=s.buf(0),n=s.bool(2,!1);if(!r)throw new S(_.TYPE_ERROR,"Invalid parameter.");const o=p.fromPublic(r,this.network);return await i.importKey(0,o),n&&await this.wdb.rescan(0),null}async keyPoolRefill(t,e){if(e||t.length>1)throw new S(_.MISC_ERROR,"keypoolrefill ( newsize )");return null}async listAccounts(t,e){if(e||t.length>2)throw new S(_.MISC_ERROR,"listaccounts ( minconf includeWatchonly)");const i=this.wallet,s=new h(t),r=s.u32(0,0),n=s.bool(1,!1),o=await i.getAccounts(),a={};for(const t of o){const e=await i.getBalance(t);let s=e.unconfirmed;r>0&&(s=e.confirmed),i.watchOnly!==n&&(s=0),a[t]=c.btc(s,!0)}return a}async listAddressGroupings(t,e){if(e)throw new S(_.MISC_ERROR,"listaddressgroupings");throw new Error("Not implemented.")}async listLockUnspent(t,e){if(e||t.length>0)throw new S(_.MISC_ERROR,"listlockunspent");const i=this.wallet.getLocked(),s=[];for(const t of i)s.push({txid:t.txid(),vout:t.index});return s}async listReceivedByAccount(t,e){if(e||t.length>3)throw new S(_.MISC_ERROR,"listreceivedbyaccount ( minconf includeempty includeWatchonly )");const i=new h(t),s=i.u32(0,0),r=i.bool(1,!1),n=i.bool(2,!1);return await this._listReceived(s,r,n,!0)}async listReceivedByAddress(t,e){if(e||t.length>3)throw new S(_.MISC_ERROR,"listreceivedbyaddress ( minconf includeempty includeWatchonly )");const i=new h(t),s=i.u32(0,0),r=i.bool(1,!1),n=i.bool(2,!1);return await this._listReceived(s,r,n,!1)}async _listReceived(t,e,i,s){const r=this.wallet,n=await r.getPaths(),o=this.wdb.state.height,a=new Map;for(const t of n){const e=t.toAddress();a.set(t.hash,{involvesWatchonly:r.watchOnly,address:e.toString(this.network),account:t.name,amount:0,confirmations:-1,label:""})}const h=await r.getHistory();for(const e of h){const i=e.getDepth(o);if(!(i<t))for(const t of e.tx.outputs){const e=t.getAddress();if(!e)continue;const s=e.getHash("hex"),r=a.get(s);r&&((-1===r.confirmations||i<r.confirmations)&&(r.confirmations=i),r.address=e.toString(this.network),r.amount+=t.value)}}let l=[];for(const t of a.values())l.push(t);if(s){const t=new Map;for(const e of l){const i=t.get(e.account);i?i.amount+=e.amount:(t.set(e.account,e),e.address=void 0)}l=[];for(const e of t.values())l.push(e)}const u=[];for(const t of l)(e||0!==t.amount)&&(-1===t.confirmations&&(t.confirmations=0),t.amount=c.btc(t.amount,!0),u.push(t));return u}async listSinceBlock(t,e){const i=this.wallet,s=this.wdb.state.height,r=new h(t),n=r.rhash(0),o=r.u32(1,0),a=r.bool(2,!1);if(e)throw new S(_.MISC_ERROR,'listsinceblock ( "blockhash" target-confirmations includeWatchonly)');if(i.watchOnly!==a)return[];let l=-1;if(n){const t=await this.client.getEntry(n);t&&(l=t.height)}-1===l&&(l=this.chain.height);const c=await i.getHistory(),f=[];let d=null;for(const t of c){if(t.height<l)continue;if(t.getDepth(s)<o)continue;(!d||t.height>d)&&(d=t);const e=await this._toListTX(t);f.push(e)}return{transactions:f,lastblock:d&&d.block?u.revHex(d.block):v.NULL_HASH}}async _toListTX(t){const e=this.wallet,i=await e.toDetails(t);if(!i)throw new S(_.WALLET_ERROR,"TX not found.");let r=!0;for(const t of i.inputs)if(t.path){r=!1;break}let n=0,o=0,a=null,h=null,l=-1,f=-1;for(let t=0;t<i.outputs.length;t++){const e=i.outputs[t];if(e.path){if(1===e.path.branch)continue;o+=e.value,h=e,f=t}else n+=e.value,a=e,l=t}let d=null,p=-1;r?(s(h),d=h,p=f):a?(d=a,p=l):(r=!0,o=0,d=h,p=f);let g=!1;return-1===t.height&&t.tx.isRBF()&&(g=!0),{account:d.path?d.path.name:"",address:d.address?d.address.toString(this.network):null,category:r?"receive":"send",amount:c.btc(r?o:-n,!0),label:d.path?d.path.name:void 0,vout:p,confirmations:i.getDepth(this.wdb.height),blockhash:i.block?u.revHex(i.block):null,blockindex:-1,blocktime:i.time,blockheight:i.height,txid:u.revHex(i.hash),walletconflicts:[],time:i.mtime,timereceived:i.mtime,"bip125-replaceable":g?"yes":"no"}}async listTransactions(t,e){if(e||t.length>4)throw new S(_.MISC_ERROR,'listtransactions ( "account" count from includeWatchonly)');const i=this.wallet,s=new h(t);let r=s.str(0);const n=s.u32(1,10),o=s.u32(2,0),a=s.bool(3,!1);if(i.watchOnly!==a)return[];""===r&&(r="default");const l=await i.getHistory();E.sortTX(l);const u=o+n,c=Math.min(u,l.length),f=[];for(let t=o;t<c;t++){const e=l[t],i=await this._toListTX(e);f.push(i)}return f}async listUnspent(t,e){if(e||t.length>3)throw new S(_.MISC_ERROR,'listunspent ( minconf maxconf  ["address",...] )');const i=this.wallet,s=new h(t),r=s.u32(0,1),n=s.u32(1,9999999),o=s.array(2),a=this.wdb.state.height,l=new Set;if(o){const t=new h(o);for(let e=0;e<o.length;e++){const i=x(t.str(e,""),this.network);if(l.has(i))throw new S(_.INVALID_PARAMETER,"Duplicate address.");l.add(i)}}const u=await i.getCoins();E.sortCoins(u);const f=[];for(const t of u){const e=t.getDepth(a);if(e<r||e>n)continue;const s=t.getAddress();if(!s)continue;const h=t.getHash("hex");if(o&&(!h||!l.has(h)))continue;const u=await i.getKey(h);f.push({txid:t.txid(),vout:t.index,address:s?s.toString(this.network):null,account:u?u.name:void 0,redeemScript:u&&u.script?u.script.toJSON():void 0,scriptPubKey:t.script.toJSON(),amount:c.btc(t.value,!0),confirmations:e,spendable:!i.isLocked(t),solvable:!0})}return f}async lockUnspent(t,e){if(e||t.length<1||t.length>2)throw new S(_.MISC_ERROR,'lockunspent unlock ([{"txid":"txid","vout":n},...])');const i=this.wallet,s=new h(t),r=s.bool(0,!1),n=s.array(1);if(1===t.length)return r&&i.unlockCoins(),!0;if(!n)throw new S(_.TYPE_ERROR,"Invalid parameter.");for(const t of n){const e=new h(t),s=e.rhash("txid"),n=e.u32("vout");if(null==s||null==n)throw new S(_.INVALID_PARAMETER,"Invalid parameter.");const o=new w(s,n);r?i.unlockCoin(o):i.lockCoin(o)}return!0}async move(t,e){throw new Error("Not implemented.")}async sendFrom(t,e){if(e||t.length<3||t.length>6)throw new S(_.MISC_ERROR,'sendfrom "fromaccount" "tobitcoinaddress" amount ( minconf "comment" "comment-to" )');const i=this.wallet,s=new h(t);let r=s.str(0);const n=s.str(1),o=s.ufixed(2,8),a=s.u32(3,0),l=I(n,this.network);if(!l||null==o)throw new S(_.TYPE_ERROR,"Invalid parameter.");""===r&&(r="default");const u={account:r,depth:a,outputs:[{address:l,value:o}]};return(await i.send(u)).txid()}async sendMany(t,e){if(e||t.length<2||t.length>5)throw new S(_.MISC_ERROR,'sendmany "fromaccount" {"address":amount,...} ( minconf "comment" ["address",...] )');const i=this.wallet,s=new h(t);let r=s.str(0);const n=s.obj(1),o=s.u32(2,1),a=s.bool(4,!1);if(""===r&&(r="default"),!n)throw new S(_.TYPE_ERROR,"Invalid parameter.");const l=new h(n),u=new Set,c=[];for(const t of Object.keys(n)){const e=l.ufixed(t,8),i=I(t,this.network),s=i.getHash("hex");if(null==e)throw new S(_.INVALID_PARAMETER,"Invalid parameter.");if(u.has(s))throw new S(_.INVALID_PARAMETER,"Invalid parameter.");u.add(s);const r=new y;r.value=e,r.script.fromAddress(i),c.push(r)}const f={outputs:c,subtractFee:a,account:r,depth:o};return(await i.send(f)).txid()}async sendToAddress(t,e){if(e||t.length<2||t.length>5)throw new S(_.MISC_ERROR,'sendtoaddress "bitcoinaddress" amount ( "comment" "comment-to" subtractfeefromamount )');const i=this.wallet,s=new h(t),r=s.str(0),n=s.ufixed(1,8),o=s.bool(4,!1),a=I(r,this.network);if(!a||null==n)throw new S(_.TYPE_ERROR,"Invalid parameter.");const l={subtractFee:o,outputs:[{address:a,value:n}]};return(await i.send(l)).txid()}async setAccount(t,e){if(e||t.length<1||t.length>2)throw new S(_.MISC_ERROR,'setaccount "bitcoinaddress" "account"');throw new Error("Not implemented.")}async setTXFee(t,e){const i=new h(t).ufixed(0,8);if(e||t.length<1||t.length>1)throw new S(_.MISC_ERROR,"settxfee amount");if(null==i)throw new S(_.TYPE_ERROR,"Invalid parameter.");return this.wdb.feeRate=i,!0}async signMessage(t,i){if(i||2!==t.length)throw new S(_.MISC_ERROR,'signmessage "bitcoinaddress" "message"');const s=this.wallet,r=new h(t),n=r.str(0,""),o=r.str(1,""),a=x(n,this.network),u=await s.getKey(a);if(!u)throw new S(_.WALLET_ERROR,"Address not found.");if(!s.master.key)throw new S(_.WALLET_UNLOCK_NEEDED,"Wallet is locked.");const c=e.from("Bitcoin Signed Message:\n"+o,"utf8"),f=l.digest(c);return u.sign(f).toString("base64")}async walletLock(t,e){const i=this.wallet;if(e||i.master.encrypted&&0!==t.length)throw new S(_.MISC_ERROR,"walletlock");if(!i.master.encrypted)throw new S(_.WALLET_WRONG_ENC_STATE,"Wallet is not encrypted.");return await i.lock(),null}async walletPassphraseChange(t,e){const i=this.wallet;if(e||i.master.encrypted&&2!==t.length)throw new S(_.MISC_ERROR,'walletpassphrasechange "oldpassphrase" "newpassphrase"');const s=new h(t),r=s.str(0,""),n=s.str(1,"");if(!i.master.encrypted)throw new S(_.WALLET_WRONG_ENC_STATE,"Wallet is not encrypted.");if(r.length<1||n.length<1)throw new S(_.INVALID_PARAMETER,"Invalid parameter");return await i.setPassphrase(n,r),null}async walletPassphrase(t,e){const i=this.wallet,s=new h(t),r=s.str(0,""),n=s.u32(1);if(e||i.master.encrypted&&2!==t.length)throw new S(_.MISC_ERROR,'walletpassphrase "passphrase" timeout');if(!i.master.encrypted)throw new S(_.WALLET_WRONG_ENC_STATE,"Wallet is not encrypted.");if(r.length<1)throw new S(_.INVALID_PARAMETER,"Invalid parameter");if(null==n)throw new S(_.TYPE_ERROR,"Invalid parameter");return await i.unlock(r,n),null}async importPrunedFunds(t,e){if(e||t.length<2||t.length>3)throw new S(_.MISC_ERROR,'importprunedfunds "rawtransaction" "txoutproof" ( "label" )');const i=new h(t),s=i.buf(0),r=i.buf(1);if(!s||!r)throw new S(_.TYPE_ERROR,"Invalid parameter.");const n=b.fromRaw(s),o=g.fromRaw(r),a=o.hash("hex");if(!o.verify())throw new S(_.VERIFY_ERROR,"Invalid proof.");if(!o.hasTX(n.hash("hex")))throw new S(_.VERIFY_ERROR,"Invalid proof.");const l=await this.client.getEntry(a);if(-1===l)throw new S(_.VERIFY_ERROR,"Invalid proof.");const u={hash:a,time:o.time,height:l};if(!await this.wdb.addTX(n,u))throw new S(_.WALLET_ERROR,"No tracked address for TX.");return null}async removePrunedFunds(t,e){if(e||1!==t.length)throw new S(_.MISC_ERROR,'removeprunedfunds "txid"');const i=this.wallet,s=new h(t).rhash(0);if(!s)throw new S(_.TYPE_ERROR,"Invalid parameter.");if(!await i.remove(s))throw new S(_.WALLET_ERROR,"Transaction not in wallet.");return null}async selectWallet(t,e){const i=new h(t).str(0);if(e||1!==t.length)throw new S(_.MISC_ERROR,'selectwallet "id"');const s=await this.wdb.get(i);if(!s)throw new S(_.WALLET_ERROR,"Wallet not found.");return this.wallet=s,null}async getMemoryInfo(t,e){if(e||0!==t.length)throw new S(_.MISC_ERROR,"getmemoryinfo");return this.logger.memoryUsage()}async setLogLevel(t,e){if(e||1!==t.length)throw new S(_.MISC_ERROR,'setloglevel "level"');const i=new h(t).str(0,"");return this.logger.setLevel(i),null}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(s){
/*!
 * records.js - walletdb records
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),n=i(2),o=i(5),a=i(14),h=i(3);class l{constructor(){this.startHeight=0,this.startHash=h.NULL_HASH,this.height=0,this.marked=!1}clone(){const t=new l;return t.startHeight=this.startHeight,t.startHash=this.startHash,t.height=this.height,t.marked=this.marked,t}fromRaw(t){const e=n.read(t);return this.startHeight=e.readU32(),this.startHash=e.readHash("hex"),this.height=e.readU32(),this.marked=1===e.readU8(),this}static fromRaw(t){return(new this).fromRaw(t)}toRaw(){const t=n.write(41);return t.writeU32(this.startHeight),t.writeHash(this.startHash),t.writeU32(this.height),t.writeU8(this.marked?1:0),t.render()}}class u{constructor(t,e,i){this.hash=t||h.NULL_HASH,this.height=null!=e?e:-1,this.time=i||0}clone(){return new this.constructor(this.hash,this.height,this.time)}toHash(){return s.from(this.hash,"hex")}fromEntry(t){return this.hash=t.hash,this.height=t.height,this.time=t.time,this}fromJSON(t){return this.hash=o.revHex(t.hash),this.height=t.height,this.time=t.time,this}fromRaw(t){const e=n.read(t);return this.hash=e.readHash("hex"),this.height=e.readU32(),this.time=e.readU32(),this}static fromEntry(t){return(new this).fromEntry(t)}static fromJSON(t){return(new this).fromJSON(t)}static fromRaw(t){return(new this).fromRaw(t)}toRaw(){const t=n.write(42);return t.writeHash(this.hash),t.writeU32(this.height),t.writeU32(this.time),t.render()}toJSON(){return{hash:o.revHex(this.hash),height:this.height,time:this.time}}}e.ChainState=l,e.BlockMeta=u,e.TXRecord=class{constructor(t,e){this.tx=null,this.hash=null,this.mtime=o.now(),this.height=-1,this.block=null,this.index=-1,this.time=0,t&&this.fromTX(t,e)}fromTX(t,e){return this.tx=t,this.hash=t.hash("hex"),e&&this.setBlock(e),this}static fromTX(t,e){return(new this).fromTX(t,e)}setBlock(t){this.height=t.height,this.block=t.hash,this.time=t.time}unsetBlock(){this.height=-1,this.block=null,this.time=0}getBlock(){return-1===this.height?null:new u(this.block,this.height,this.time)}getDepth(t){return r("number"==typeof t,"Must pass in height."),-1===this.height?0:t<this.height?0:t-this.height+1}getSize(){let t=0;return t+=this.tx.getSize(),t+=4,this.block?(t+=1,t+=32,t+=12):t+=1,t}toRaw(){const t=this.getSize(),e=n.write(t);let i=this.index;return this.tx.toWriter(e),e.writeU32(this.mtime),this.block?(-1===i&&(i=2147483647),e.writeU8(1),e.writeHash(this.block),e.writeU32(this.height),e.writeU32(this.time),e.writeU32(i)):e.writeU8(0),e.render()}fromRaw(t){const e=n.read(t);return this.tx=new a,this.tx.fromReader(e),this.hash=this.tx.hash("hex"),this.mtime=e.readU32(),1===e.readU8()&&(this.block=e.readHash("hex"),this.height=e.readU32(),this.time=e.readU32(),this.index=e.readU32(),2147483647===this.index&&(this.index=-1)),this}static fromRaw(t){return(new this).fromRaw(t)}},e.MapRecord=class{constructor(){this.wids=new Set}add(t){return!this.wids.has(t)&&(this.wids.add(t),!0)}remove(t){return this.wids.delete(t)}toWriter(t){t.writeU32(this.wids.size);for(const e of this.wids)t.writeU32(e);return t}getSize(){return 4+4*this.wids.size}toRaw(){const t=this.getSize();return this.toWriter(n.write(t)).render()}fromReader(t){const e=t.readU32();for(let i=0;i<e;i++)this.wids.add(t.readU32());return this}fromRaw(t){return this.fromReader(n.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t){return(new this).fromRaw(t)}},t.exports=e}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * layout.js - data layout for wallets
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(33);e.wdb={V:s.key("V"),O:s.key("O"),R:s.key("R"),D:s.key("D"),p:s.key("p",["hash"]),P:s.key("P",["uint32","hash"]),r:s.key("r",["uint32","uint32","hash"]),w:s.key("w",["uint32"]),W:s.key("W",["uint32"]),l:s.key("l",["ascii"]),a:s.key("a",["uint32","uint32"]),i:s.key("i",["uint32","ascii"]),n:s.key("n",["uint32","uint32"]),h:s.key("h",["uint32"]),b:s.key("b",["uint32"]),o:s.key("o",["hash256","uint32"]),T:s.key("T",["hash256"]),t:s.key("t",["uint32"])},e.txdb={prefix:s.key("t",["uint32"]),R:s.key("R"),r:s.key("r",["uint32"]),t:s.key("t",["hash256"]),c:s.key("c",["hash256","uint32"]),d:s.key("d",["hash256","uint32"]),s:s.key("s",["hash256","uint32"]),p:s.key("p",["hash256"]),m:s.key("m",["uint32","hash256"]),h:s.key("h",["uint32","hash256"]),T:s.key("T",["uint32","hash256"]),P:s.key("P",["uint32","hash256"]),M:s.key("M",["uint32","uint32","hash256"]),H:s.key("H",["uint32","uint32","hash256"]),C:s.key("C",["uint32","hash256","uint32"]),b:s.key("b",["uint32"])}},function(t,e,i){"use strict";(function(e){
/*!
 * server.js - http server for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(41),{Server:n}=i(102),o=i(101),{base58:a}=i(31),h=i(40),l=i(18),u=i(11),c=i(30),f=i(38),d=i(69),p=i(8),g=i(12),m=i(39),w=i(75),y=i(113),b=i(112),v=i(61);class k{constructor(t){this.network=p.primary,this.logger=null,this.node=null,this.apiKey=a.encode(f.randomBytes(20)),this.apiHash=c.digest(e.from(this.apiKey,"ascii")),this.adminToken=f.randomBytes(32),this.serviceHash=this.apiHash,this.noAuth=!1,this.cors=!1,this.walletAuth=!1,this.prefix=null,this.host="127.0.0.1",this.port=8080,this.ssl=!1,this.keyFile=null,this.certFile=null,this.fromOptions(t)}fromOptions(t){if(s(t),s(t.node&&"object"==typeof t.node,"HTTP Server requires a WalletDB."),this.node=t.node,this.network=t.node.network,this.logger=t.node.logger,this.port=this.network.walletPort,null!=t.logger&&(s("object"==typeof t.logger),this.logger=t.logger),null!=t.apiKey&&(s("string"==typeof t.apiKey,"API key must be a string."),s(t.apiKey.length<=255,"API key must be under 255 bytes."),this.apiKey=t.apiKey,this.apiHash=c.digest(e.from(this.apiKey,"ascii"))),null!=t.adminToken)if("string"==typeof t.adminToken){s(64===t.adminToken.length,"Admin token must be a 32 byte hex string.");const i=e.from(t.adminToken,"hex");s(32===i.length,"Admin token must be a 32 byte hex string."),this.adminToken=i}else s(e.isBuffer(t.adminToken),"Admin token must be a hex string or buffer."),s(32===t.adminToken.length,"Admin token must be 32 bytes."),this.adminToken=t.adminToken;return null!=t.noAuth&&(s("boolean"==typeof t.noAuth),this.noAuth=t.noAuth),null!=t.cors&&(s("boolean"==typeof t.cors),this.cors=t.cors),null!=t.walletAuth&&(s("boolean"==typeof t.walletAuth),this.walletAuth=t.walletAuth),null!=t.prefix&&(s("string"==typeof t.prefix),this.prefix=t.prefix,this.keyFile=r.join(this.prefix,"key.pem"),this.certFile=r.join(this.prefix,"cert.pem")),null!=t.host&&(s("string"==typeof t.host),this.host=t.host),null!=t.port&&(s((65535&t.port)===t.port,"Port must be a number."),this.port=t.port),null!=t.ssl&&(s("boolean"==typeof t.ssl),this.ssl=t.ssl),null!=t.keyFile&&(s("string"==typeof t.keyFile),this.keyFile=t.keyFile),null!=t.certFile&&(s("string"==typeof t.certFile),this.certFile=t.certFile),t.apiKey||"127.0.0.1"!==this.host&&"::1"!==this.host||(this.noAuth=!0),this}static fromOptions(t){return(new k).fromOptions(t)}}function E(t,e){if(!t){const t=new Error(e);throw t.statusCode=400,t}}t.exports=class extends n{constructor(t){super(new k(t)),this.network=this.options.network,this.logger=this.options.logger.context("http"),this.wdb=this.options.node.wdb,this.rpc=this.options.node.rpc,this.init()}init(){this.on("request",(t,e)=>{"POST"===t.method&&"/"===t.pathname||this.logger.debug("Request for method=%s path=%s (%s).",t.method,t.pathname,t.socket.remoteAddress)}),this.on("listening",t=>{this.logger.info("Wallet HTTP server listening on %s (port=%d).",t.address,t.port)}),this.initRouter(),this.initSockets()}initRouter(){this.options.cors&&this.use(this.cors()),this.options.noAuth||this.use(this.basicAuth({hash:c.digest,password:this.options.apiKey,realm:"wallet"})),this.use(this.bodyParser({type:"json"})),this.use(async(t,e)=>{if(!this.options.walletAuth)return void(t.admin=!0);const i=o.fromRequest(t).buf("token");i&&d(i,this.options.adminToken)?t.admin=!0:"POST"!==t.method||0!==t.path.length||e.json(403)}),this.use(this.jsonRPC()),this.use(this.router()),this.error((t,e,i)=>{const s=t.statusCode||500;i.json(s,{error:{type:t.type,code:t.code,message:t.message}})}),this.hook(async(t,e)=>{if(t.path.length<2)return;if("wallet"!==t.path[0])return;if("PUT"===t.method&&2===t.path.length)return;const i=o.fromRequest(t),s=i.str("id"),r=i.buf("token");if(!s)return void e.json(403);if(t.admin||!this.options.walletAuth){const i=await this.wdb.get(s);return i?void(t.wallet=i):void e.json(404)}if(!r)return void e.json(403);let n;try{n=await this.wdb.auth(s,r)}catch(t){return this.logger.info("Auth failure for %s: %s.",s,t.message),void e.json(403)}n?(t.wallet=n,this.logger.info("Successful auth for %s.",s)):e.json(404)}),this.post("/rescan",async(t,e)=>{if(!t.admin)return void e.json(403);const i=o.fromRequest(t).u32("height");e.json(200,{success:!0}),await this.wdb.rescan(i)}),this.post("/resend",async(t,e)=>{t.admin?(await this.wdb.resend(),e.json(200,{success:!0})):e.json(403)}),this.post("/backup",async(t,e)=>{if(!t.admin)return void e.json(403);const i=o.fromRequest(t).str("path");E(i,"Path is required."),await this.wdb.backup(i),e.json(200,{success:!0})}),this.get("/wallet",async(t,e)=>{if(!t.admin)return void e.json(403);const i=await this.wdb.getWallets();e.json(200,i)}),this.get("/wallet/:id",async(t,e)=>{const i=await t.wallet.getBalance();e.json(200,t.wallet.toJSON(!1,i))}),this.get("/wallet/:id/master",(t,e)=>{t.admin?e.json(200,t.wallet.master.toJSON(this.network,!0)):e.json(403)}),this.put("/wallet/:id",async(t,e)=>{const i=o.fromRequest(t);let s=i.str("master"),r=i.str("mnemonic"),n=i.str("accountKey");s&&(s=y.fromBase58(s,this.network)),r&&(r=w.fromPhrase(r)),n&&(n=b.fromBase58(n,this.network));const a=await this.wdb.create({id:i.str("id"),type:i.str("type"),m:i.u32("m"),n:i.u32("n"),passphrase:i.str("passphrase"),master:s,mnemonic:r,accountKey:n,watchOnly:i.bool("watchOnly")}),h=await a.getBalance();e.json(200,a.toJSON(!1,h))}),this.get("/wallet/:id/account",async(t,e)=>{const i=await t.wallet.getAccounts();e.json(200,i)}),this.get("/wallet/:id/account/:account",async(t,e)=>{const i=o.fromRequest(t).str("account"),s=await t.wallet.getAccount(i);if(!s)return void e.json(404);const r=await t.wallet.getBalance(s.accountIndex);e.json(200,s.toJSON(r))}),this.put("/wallet/:id/account/:account",async(t,e)=>{const i=o.fromRequest(t),s=i.str("passphrase");let r=i.get("accountKey");r&&(r=b.fromBase58(r,this.network));const n={name:i.str("account"),watchOnly:i.bool("watchOnly"),type:i.str("type"),m:i.u32("m"),n:i.u32("n"),accountKey:r,lookahead:i.u32("lookahead")},a=await t.wallet.createAccount(n,s),h=await t.wallet.getBalance(a.accountIndex);e.json(200,a.toJSON(h))}),this.post("/wallet/:id/passphrase",async(t,e)=>{const i=o.fromRequest(t),s=i.str("passphrase"),r=i.str("old");E(s,"Passphrase is required."),await t.wallet.setPassphrase(s,r),e.json(200,{success:!0})}),this.post("/wallet/:id/unlock",async(t,e)=>{const i=o.fromRequest(t),s=i.str("passphrase"),r=i.u32("timeout");E(s,"Passphrase is required."),await t.wallet.unlock(s,r),e.json(200,{success:!0})}),this.post("/wallet/:id/lock",async(t,e)=>{await t.wallet.lock(),e.json(200,{success:!0})}),this.post("/wallet/:id/import",async(t,e)=>{const i=o.fromRequest(t),s=i.str("account"),r=i.str("passphrase"),n=i.buf("publicKey"),a=i.str("privateKey"),h=i.str("address");if(n){const i=m.fromPublic(n);return await t.wallet.importKey(s,i),void e.json(200,{success:!0})}if(a){const i=m.fromSecret(a,this.network);return await t.wallet.importKey(s,i,r),void e.json(200,{success:!0})}if(h){const i=g.fromString(h,this.network);return await t.wallet.importAddress(s,i),void e.json(200,{success:!0})}E(!1,"Key or address is required.")}),this.post("/wallet/:id/retoken",async(t,e)=>{const i=o.fromRequest(t).str("passphrase"),s=await t.wallet.retoken(i);e.json(200,{token:s.toString("hex")})}),this.post("/wallet/:id/send",async(t,e)=>{const i=o.fromRequest(t),s=i.str("passphrase"),r=i.array("outputs",[]),n={rate:i.u64("rate"),blocks:i.u32("blocks"),maxFee:i.u64("maxFee"),selection:i.str("selection"),smart:i.bool("smart"),subtractFee:i.bool("subtractFee"),subtractIndex:i.i32("subtractIndex"),depth:i.u32(["confirmations","depth"]),outputs:[]};for(const t of r){const e=new o(t);let i=e.str("address"),s=e.buf("script");i&&(i=g.fromString(i,this.network)),s&&(s=u.fromRaw(s)),n.outputs.push({address:i,script:s,value:e.u64("value")})}const a=await t.wallet.send(n,s),h=await t.wallet.getDetails(a.hash("hex"));e.json(200,h.toJSON(this.network,this.wdb.height))}),this.post("/wallet/:id/create",async(t,e)=>{const i=o.fromRequest(t),s=i.str("passphrase"),r=i.array("outputs",[]),n={rate:i.u64("rate"),maxFee:i.u64("maxFee"),selection:i.str("selection"),smart:i.bool("smart"),subtractFee:i.bool("subtractFee"),subtractIndex:i.i32("subtractIndex"),depth:i.u32(["confirmations","depth"]),outputs:[]};for(const t of r){const e=new o(t);let i=e.str("address"),s=e.buf("script");i&&(i=g.fromString(i,this.network)),s&&(s=u.fromRaw(s)),n.outputs.push({address:i,script:s,value:e.u64("value")})}const a=await t.wallet.createTX(n);await t.wallet.sign(a,s),e.json(200,a.getJSON(this.network))}),this.post("/wallet/:id/sign",async(t,e)=>{const i=o.fromRequest(t),s=i.str("passphrase"),r=i.buf("tx");E(r,"TX is required.");const n=h.fromRaw(r);n.view=await t.wallet.getCoinView(n),await t.wallet.sign(n,s),e.json(200,n.getJSON(this.network))}),this.post("/wallet/:id/zap",async(t,e)=>{const i=o.fromRequest(t),s=i.str("account"),r=i.u32("age");E(r,"Age is required."),await t.wallet.zap(s,r),e.json(200,{success:!0})}),this.del("/wallet/:id/tx/:hash",async(t,e)=>{const i=o.fromRequest(t).rhash("hash");E(i,"Hash is required."),await t.wallet.abandon(i),e.json(200,{success:!0})}),this.get("/wallet/:id/block",async(t,e)=>{const i=await t.wallet.getBlocks();e.json(200,i)}),this.get("/wallet/:id/block/:height",async(t,e)=>{const i=o.fromRequest(t).u32("height");E(null!=i,"Height is required.");const s=await t.wallet.getBlock(i);s?e.json(200,s.toJSON()):e.json(404)}),this.put("/wallet/:id/shared-key",async(t,e)=>{const i=o.fromRequest(t),s=i.str("account"),r=i.str("accountKey");E(r,"Key is required.");const n=b.fromBase58(r,this.network),a=await t.wallet.addSharedKey(s,n);e.json(200,{success:!0,addedKey:a})}),this.del("/wallet/:id/shared-key",async(t,e)=>{const i=o.fromRequest(t),s=i.str("account"),r=i.str("accountKey");E(r,"Key is required.");const n=b.fromBase58(r,this.network),a=await t.wallet.removeSharedKey(s,n);e.json(200,{success:!0,removedKey:a})}),this.get("/wallet/:id/key/:address",async(t,e)=>{const i=o.fromRequest(t).str("address");E(i,"Address is required.");const s=g.fromString(i,this.network),r=await t.wallet.getKey(s);r?e.json(200,r.toJSON(this.network)):e.json(404)}),this.get("/wallet/:id/wif/:address",async(t,e)=>{const i=o.fromRequest(t),s=i.str("address"),r=i.str("passphrase");E(s,"Address is required.");const n=g.fromString(s,this.network),a=await t.wallet.getPrivateKey(n,r);a?e.json(200,{privateKey:a.toSecret(this.network)}):e.json(404)}),this.post("/wallet/:id/address",async(t,e)=>{const i=o.fromRequest(t).str("account"),s=await t.wallet.createReceive(i);e.json(200,s.toJSON(this.network))}),this.post("/wallet/:id/change",async(t,e)=>{const i=o.fromRequest(t).str("account"),s=await t.wallet.createChange(i);e.json(200,s.toJSON(this.network))}),this.get("/wallet/:id/balance",async(t,e)=>{const i=o.fromRequest(t).str("account"),s=await t.wallet.getBalance(i);s?e.json(200,s.toJSON()):e.json(404)}),this.get("/wallet/:id/coin",async(t,e)=>{const i=o.fromRequest(t).str("account"),s=await t.wallet.getCoins(i),r=[];v.sortCoins(s);for(const t of s)r.push(t.getJSON(this.network));e.json(200,r)}),this.get("/wallet/:id/locked",async(t,e)=>{const i=t.wallet.getLocked(),s=[];for(const t of i)s.push(t.toJSON());e.json(200,s)}),this.put("/wallet/:id/locked/:hash/:index",async(t,e)=>{const i=o.fromRequest(t),s=i.rhash("hash"),r=i.u32("index");E(s,"Hash is required."),E(null!=r,"Index is required.");const n=new l(s,r);t.wallet.lockCoin(n),e.json(200,{success:!0})}),this.del("/wallet/:id/locked/:hash/:index",async(t,e)=>{const i=o.fromRequest(t),s=i.rhash("hash"),r=i.u32("index");E(s,"Hash is required."),E(null!=r,"Index is required.");const n=new l(s,r);t.wallet.unlockCoin(n),e.json(200,{success:!0})}),this.get("/wallet/:id/coin/:hash/:index",async(t,e)=>{const i=o.fromRequest(t),s=i.rhash("hash"),r=i.u32("index");E(s,"Hash is required."),E(null!=r,"Index is required.");const n=await t.wallet.getCoin(s,r);n?e.json(200,n.getJSON(this.network)):e.json(404)}),this.get("/wallet/:id/tx/history",async(t,e)=>{const i=o.fromRequest(t).str("account"),s=await t.wallet.getHistory(i);v.sortTX(s);const r=await t.wallet.toDetails(s),n=[];for(const t of r)n.push(t.toJSON(this.network,this.wdb.height));e.json(200,n)}),this.get("/wallet/:id/tx/unconfirmed",async(t,e)=>{const i=o.fromRequest(t).str("account"),s=await t.wallet.getPending(i);v.sortTX(s);const r=await t.wallet.toDetails(s),n=[];for(const t of r)n.push(t.toJSON(this.network,this.wdb.height));e.json(200,n)}),this.get("/wallet/:id/tx/range",async(t,e)=>{const i=o.fromRequest(t),s=i.str("account"),r={start:i.u32("start"),end:i.u32("end"),limit:i.u32("limit"),reverse:i.bool("reverse")},n=await t.wallet.getRange(s,r),a=await t.wallet.toDetails(n),h=[];for(const t of a)h.push(t.toJSON(this.network,this.wdb.height));e.json(200,h)}),this.get("/wallet/:id/tx/last",async(t,e)=>{const i=o.fromRequest(t),s=i.str("account"),r=i.u32("limit"),n=await t.wallet.getLast(s,r),a=await t.wallet.toDetails(n),h=[];for(const t of a)h.push(t.toJSON(this.network,this.wdb.height));e.json(200,h)}),this.get("/wallet/:id/tx/:hash",async(t,e)=>{const i=o.fromRequest(t).rhash("hash");E(i,"Hash is required.");const s=await t.wallet.getTX(i);if(!s)return void e.json(404);const r=await t.wallet.toDetails(s);e.json(200,r.toJSON(this.network,this.wdb.height))}),this.post("/wallet/:id/resend",async(t,e)=>{await t.wallet.resend(),e.json(200,{success:!0})})}initSockets(){const t=(t,e,i,s)=>{const r=`w:${e.id}`;if(!this.channel(r)&&!this.channel("w:*"))return;const n=s.toJSON(this.network,this.wdb.height);this.channel(r)&&this.to(r,t,e.id,n),this.channel("w:*")&&this.to("w:*",t,e.id,n)};this.wdb.on("tx",(e,i,s)=>{t("tx",e,0,s)}),this.wdb.on("confirmed",(e,i,s)=>{t("confirmed",e,0,s)}),this.wdb.on("unconfirmed",(e,i,s)=>{t("unconfirmed",e,0,s)}),this.wdb.on("conflict",(e,i,s)=>{t("conflict",e,0,s)}),this.wdb.on("balance",(t,e)=>{const i=`w:${t.id}`;if(!this.channel(i)&&!this.channel("w:*"))return;const s=e.toJSON();this.channel(i)&&this.to(i,"balance",t.id,s),this.channel("w:*")&&this.to("w:*","balance",t.id,s)}),this.wdb.on("address",(t,e)=>{const i=`w:${t.id}`;if(!this.channel(i)&&!this.channel("w:*"))return;const s=[];for(const t of e)s.push(t.toJSON(this.network));this.channel(i)&&this.to(i,"address",t.id,s),this.channel("w:*")&&this.to("w:*","address",t.id,s)})}handleSocket(t){t.hook("auth",(...i)=>{if(t.channel("auth"))throw new Error("Already authed.");if(!this.options.noAuth){const t=new o(i).str(0,"");if(t.length>255)throw new Error("Invalid API key.");const s=e.from(t,"utf8"),r=c.digest(s);if(!d(r,this.options.apiHash))throw new Error("Invalid API key.")}return t.join("auth"),this.logger.info("Successful auth from %s.",t.host),this.handleAuth(t),null})}handleAuth(t){t.hook("join",async(...e)=>{const i=new o(e),s=i.str(0,""),r=i.buf(1);if(!s)throw new Error("Invalid parameter.");if(this.options.walletAuth?r&&d(r,this.options.adminToken)&&t.join("admin"):t.join("admin"),t.channel("admin")||!this.options.walletAuth)return t.join(`w:${s}`),null;if("*"===s)throw new Error("Bad token.");if(!r)throw new Error("Invalid parameter.");let n;try{n=await this.wdb.auth(s,r)}catch(t){throw this.logger.info("Wallet auth failure for %s: %s.",s,t.message),new Error("Bad token.")}if(!n)throw new Error("Wallet does not exist.");return this.logger.info("Successful wallet auth for %s.",s),t.join(`w:${s}`),null}),t.hook("leave",(...e)=>{const i=new o(e).str(0,"");if(!i)throw new Error("Invalid parameter.");return t.leave(`w:${i}`),null})}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";var s=i(253),r=i(252);function n(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}e.parse=b,e.resolve=function(t,e){return b(t,!1,!0).resolve(e)},e.resolveObject=function(t,e){return t?b(t,!1,!0).resolveObject(e):e},e.format=function(t){return r.isString(t)&&(t=b(t)),t instanceof n?t.format():n.prototype.format.call(t)},e.Url=n;var o=/^([a-z0-9.+-]+:)/i,a=/:[0-9]*$/,h=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,l=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),u=["'"].concat(l),c=["%","/","?",";","#"].concat(u),f=["/","?","#"],d=/^[+a-z0-9A-Z_-]{0,63}$/,p=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,g={javascript:!0,"javascript:":!0},m={javascript:!0,"javascript:":!0},w={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},y=i(205);function b(t,e,i){if(t&&r.isObject(t)&&t instanceof n)return t;var s=new n;return s.parse(t,e,i),s}n.prototype.parse=function(t,e,i){if(!r.isString(t))throw new TypeError("Parameter 'url' must be a string, not "+typeof t);var n=t.indexOf("?"),a=-1!==n&&n<t.indexOf("#")?"?":"#",l=t.split(a);l[0]=l[0].replace(/\\/g,"/");var b=t=l.join(a);if(b=b.trim(),!i&&1===t.split("#").length){var v=h.exec(b);if(v)return this.path=b,this.href=b,this.pathname=v[1],v[2]?(this.search=v[2],this.query=e?y.parse(this.search.substr(1)):this.search.substr(1)):e&&(this.search="",this.query={}),this}var k=o.exec(b);if(k){var E=(k=k[0]).toLowerCase();this.protocol=E,b=b.substr(k.length)}if(i||k||b.match(/^\/\/[^@\/]+@[^@\/]+/)){var R="//"===b.substr(0,2);!R||k&&m[k]||(b=b.substr(2),this.slashes=!0)}if(!m[k]&&(R||k&&!w[k])){for(var S,_,x=-1,I=0;I<f.length;I++)-1!==(A=b.indexOf(f[I]))&&(-1===x||A<x)&&(x=A);for(-1!==(_=-1===x?b.lastIndexOf("@"):b.lastIndexOf("@",x))&&(S=b.slice(0,_),b=b.slice(_+1),this.auth=decodeURIComponent(S)),x=-1,I=0;I<c.length;I++){var A;-1!==(A=b.indexOf(c[I]))&&(-1===x||A<x)&&(x=A)}-1===x&&(x=b.length),this.host=b.slice(0,x),b=b.slice(x),this.parseHost(),this.hostname=this.hostname||"";var O="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!O)for(var B=this.hostname.split(/\./),P=(I=0,B.length);I<P;I++){var N=B[I];if(N&&!N.match(d)){for(var T="",M=0,C=N.length;M<C;M++)N.charCodeAt(M)>127?T+="x":T+=N[M];if(!T.match(d)){var L=B.slice(0,I),U=B.slice(I+1),D=N.match(p);D&&(L.push(D[1]),U.unshift(D[2])),U.length&&(b="/"+U.join(".")+b),this.hostname=L.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),O||(this.hostname=s.toASCII(this.hostname));var F=this.port?":"+this.port:"",H=this.hostname||"";this.host=H+F,this.href+=this.host,O&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==b[0]&&(b="/"+b))}if(!g[E])for(I=0,P=u.length;I<P;I++){var z=u[I];if(-1!==b.indexOf(z)){var V=encodeURIComponent(z);V===z&&(V=escape(z)),b=b.split(z).join(V)}}var K=b.indexOf("#");-1!==K&&(this.hash=b.substr(K),b=b.slice(0,K));var j=b.indexOf("?");if(-1!==j?(this.search=b.substr(j),this.query=b.substr(j+1),e&&(this.query=y.parse(this.query)),b=b.slice(0,j)):e&&(this.search="",this.query={}),b&&(this.pathname=b),w[E]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){F=this.pathname||"";var q=this.search||"";this.path=F+q}return this.href=this.format(),this},n.prototype.format=function(){var t=this.auth||"";t&&(t=(t=encodeURIComponent(t)).replace(/%3A/i,":"),t+="@");var e=this.protocol||"",i=this.pathname||"",s=this.hash||"",n=!1,o="";this.host?n=t+this.host:this.hostname&&(n=t+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(n+=":"+this.port)),this.query&&r.isObject(this.query)&&Object.keys(this.query).length&&(o=y.stringify(this.query));var a=this.search||o&&"?"+o||"";return e&&":"!==e.substr(-1)&&(e+=":"),this.slashes||(!e||w[e])&&!1!==n?(n="//"+(n||""),i&&"/"!==i.charAt(0)&&(i="/"+i)):n||(n=""),s&&"#"!==s.charAt(0)&&(s="#"+s),a&&"?"!==a.charAt(0)&&(a="?"+a),e+n+(i=i.replace(/[?#]/g,function(t){return encodeURIComponent(t)}))+(a=a.replace("#","%23"))+s},n.prototype.resolve=function(t){return this.resolveObject(b(t,!1,!0)).format()},n.prototype.resolveObject=function(t){if(r.isString(t)){var e=new n;e.parse(t,!1,!0),t=e}for(var i=new n,s=Object.keys(this),o=0;o<s.length;o++){var a=s[o];i[a]=this[a]}if(i.hash=t.hash,""===t.href)return i.href=i.format(),i;if(t.slashes&&!t.protocol){for(var h=Object.keys(t),l=0;l<h.length;l++){var u=h[l];"protocol"!==u&&(i[u]=t[u])}return w[i.protocol]&&i.hostname&&!i.pathname&&(i.path=i.pathname="/"),i.href=i.format(),i}if(t.protocol&&t.protocol!==i.protocol){if(!w[t.protocol]){for(var c=Object.keys(t),f=0;f<c.length;f++){var d=c[f];i[d]=t[d]}return i.href=i.format(),i}if(i.protocol=t.protocol,t.host||m[t.protocol])i.pathname=t.pathname;else{for(var p=(t.pathname||"").split("/");p.length&&!(t.host=p.shift()););t.host||(t.host=""),t.hostname||(t.hostname=""),""!==p[0]&&p.unshift(""),p.length<2&&p.unshift(""),i.pathname=p.join("/")}if(i.search=t.search,i.query=t.query,i.host=t.host||"",i.auth=t.auth,i.hostname=t.hostname||t.host,i.port=t.port,i.pathname||i.search){var g=i.pathname||"",y=i.search||"";i.path=g+y}return i.slashes=i.slashes||t.slashes,i.href=i.format(),i}var b=i.pathname&&"/"===i.pathname.charAt(0),v=t.host||t.pathname&&"/"===t.pathname.charAt(0),k=v||b||i.host&&t.pathname,E=k,R=i.pathname&&i.pathname.split("/")||[],S=(p=t.pathname&&t.pathname.split("/")||[],i.protocol&&!w[i.protocol]);if(S&&(i.hostname="",i.port=null,i.host&&(""===R[0]?R[0]=i.host:R.unshift(i.host)),i.host="",t.protocol&&(t.hostname=null,t.port=null,t.host&&(""===p[0]?p[0]=t.host:p.unshift(t.host)),t.host=null),k=k&&(""===p[0]||""===R[0])),v)i.host=t.host||""===t.host?t.host:i.host,i.hostname=t.hostname||""===t.hostname?t.hostname:i.hostname,i.search=t.search,i.query=t.query,R=p;else if(p.length)R||(R=[]),R.pop(),R=R.concat(p),i.search=t.search,i.query=t.query;else if(!r.isNullOrUndefined(t.search))return S&&(i.hostname=i.host=R.shift(),(O=!!(i.host&&i.host.indexOf("@")>0)&&i.host.split("@"))&&(i.auth=O.shift(),i.host=i.hostname=O.shift())),i.search=t.search,i.query=t.query,r.isNull(i.pathname)&&r.isNull(i.search)||(i.path=(i.pathname?i.pathname:"")+(i.search?i.search:"")),i.href=i.format(),i;if(!R.length)return i.pathname=null,i.search?i.path="/"+i.search:i.path=null,i.href=i.format(),i;for(var _=R.slice(-1)[0],x=(i.host||t.host||R.length>1)&&("."===_||".."===_)||""===_,I=0,A=R.length;A>=0;A--)"."===(_=R[A])?R.splice(A,1):".."===_?(R.splice(A,1),I++):I&&(R.splice(A,1),I--);if(!k&&!E)for(;I--;I)R.unshift("..");!k||""===R[0]||R[0]&&"/"===R[0].charAt(0)||R.unshift(""),x&&"/"!==R.join("/").substr(-1)&&R.push("");var O,B=""===R[0]||R[0]&&"/"===R[0].charAt(0);return S&&(i.hostname=i.host=B?"":R.length?R.shift():"",(O=!!(i.host&&i.host.indexOf("@")>0)&&i.host.split("@"))&&(i.auth=O.shift(),i.host=i.hostname=O.shift())),(k=k||i.host&&R.length)&&!B&&R.unshift(""),R.length?i.pathname=R.join("/"):(i.pathname=null,i.path=null),r.isNull(i.pathname)&&r.isNull(i.search)||(i.path=(i.pathname?i.pathname:"")+(i.search?i.search:"")),i.auth=t.auth||i.auth,i.slashes=i.slashes||t.slashes,i.href=i.format(),i},n.prototype.parseHost=function(){var t=this.host,e=a.exec(t);e&&(":"!==(e=e[0])&&(this.port=e.substr(1)),t=t.substr(0,t.length-e.length)),t&&(this.hostname=t)}},function(t,e,i){"use strict";
/*!
 * walletkey.js - walletkey object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(12),r=i(39),n=i(65);class o extends r{constructor(t){super(t),this.keyType=n.types.HD,this.name=null,this.account=-1,this.branch=-1,this.index=-1}toJSON(t){return{name:this.name,account:this.account,branch:this.branch,index:this.index,publicKey:this.publicKey.toString("hex"),script:this.script?this.script.toRaw().toString("hex"):null,type:s.typesByVal[this.getType()].toLowerCase(),address:this.getAddress("string",t)}}fromHD(t,e,i,s){return this.keyType=n.types.HD,this.name=t.name,this.account=t.accountIndex,this.branch=i,this.index=s,e.privateKey?this.fromPrivate(e.privateKey):this.fromPublic(e.publicKey)}static fromHD(t,e,i,s){return(new this).fromHD(t,e,i,s)}fromImport(t,e){return this.keyType=n.types.KEY,this.name=t.name,this.account=t.accountIndex,this.fromRaw(e)}static fromImport(t,e){return(new this).fromImport(t,e)}fromRing(t,e){return this.keyType=n.types.KEY,this.name=t.name,this.account=t.accountIndex,this.fromOptions(e)}static fromRing(t,e){return(new this).fromRing(t,e)}toPath(){const t=new n;switch(t.name=this.name,t.account=this.account,this.keyType){case n.types.HD:t.branch=this.branch,t.index=this.index;break;case n.types.KEY:t.data=this.toRaw()}return t.keyType=this.keyType,t.version=this.getVersion(),t.type=this.getType(),t.hash=this.getHash("hex"),t}static isWalletKey(t){return t instanceof o}}t.exports=o},function(t,e,i){"use strict";
/*!
 * account.js - account object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(2),n=i(53),o=i(65),a=i(61),h=i(11),l=i(126),{HDPublicKey:u}=i(147);class c{constructor(t,e){s(t,"Database is required."),this.wdb=t,this.network=t.network,this.wid=0,this.id=null,this.accountIndex=0,this.name=null,this.initialized=!1,this.watchOnly=!1,this.type=c.types.PUBKEYHASH,this.m=1,this.n=1,this.receiveDepth=0,this.changeDepth=0,this.lookahead=10,this.accountKey=null,this.keys=[],e&&this.fromOptions(e)}fromOptions(t){if(s(t,"Options are required."),s(t.wid>>>0===t.wid),s(a.isName(t.id),"Bad Wallet ID."),s(u.isHDPublicKey(t.accountKey),"Account key is required."),s(t.accountIndex>>>0===t.accountIndex,"Account index is required."),this.wid=t.wid,this.id=t.id,null!=t.accountIndex&&(s(t.accountIndex>>>0===t.accountIndex),this.accountIndex=t.accountIndex),null!=t.name&&(s(a.isName(t.name),"Bad account name."),this.name=t.name),null!=t.initialized&&(s("boolean"==typeof t.initialized),this.initialized=t.initialized),null!=t.watchOnly&&(s("boolean"==typeof t.watchOnly),this.watchOnly=t.watchOnly),null!=t.type&&("string"==typeof t.type?(this.type=c.types[t.type.toUpperCase()],s(null!=this.type)):(s("number"==typeof t.type),this.type=t.type,s(c.typesByVal[this.type]))),null!=t.m&&(s((255&t.m)===t.m),this.m=t.m),null!=t.n&&(s((255&t.n)===t.n),this.n=t.n),null!=t.receiveDepth&&(s(t.receiveDepth>>>0===t.receiveDepth),this.receiveDepth=t.receiveDepth),null!=t.changeDepth&&(s(t.changeDepth>>>0===t.changeDepth),this.changeDepth=t.changeDepth),null!=t.lookahead&&(s(t.lookahead>>>0===t.lookahead),s(t.lookahead>=0),s(t.lookahead<=c.MAX_LOOKAHEAD),this.lookahead=t.lookahead),this.accountKey=t.accountKey,this.n>1&&(this.type=c.types.MULTISIG),this.name||(this.name=this.accountIndex.toString(10)),this.m<1||this.m>this.n)throw new Error("m ranges between 1 and n");if(t.keys){s(Array.isArray(t.keys));for(const e of t.keys)this.pushKey(e)}return this}static fromOptions(t,e){return new this(t).fromOptions(e)}async init(t){if(this.keys.length!==this.n-1)return s(!this.initialized),void this.save(t);s(0===this.receiveDepth),s(0===this.changeDepth),this.initialized=!0,await this.initDepth(t)}pushKey(t){if("string"==typeof t&&(t=u.fromBase58(t,this.network)),!u.isHDPublicKey(t))throw new Error("Must add HD keys to wallet.");if(!t.isAccount())throw new Error("Must add HD account keys to BIP44 wallet.");if(this.type!==c.types.MULTISIG)throw new Error("Cannot add keys to non-multisig wallet.");if(t.equals(this.accountKey))throw new Error("Cannot add own key.");if(-1===n.insert(this.keys,t,f,!0))return!1;if(this.keys.length>this.n-1)throw n.remove(this.keys,t,f),new Error("Cannot add more keys.");return!0}spliceKey(t){if("string"==typeof t&&(t=u.fromBase58(t,this.network)),!u.isHDPublicKey(t))throw new Error("Must add HD keys to wallet.");if(!t.isAccount())throw new Error("Must add HD account keys to BIP44 wallet.");if(this.type!==c.types.MULTISIG)throw new Error("Cannot remove keys from non-multisig wallet.");if(this.keys.length===this.n-1)throw new Error("Cannot remove key.");return n.remove(this.keys,t,f)}async addSharedKey(t,e){const i=this.pushKey(e);if(await this.hasDuplicate())throw this.spliceKey(e),new Error("Cannot add a key from another account.");return await this.init(t),i}async hasDuplicate(){if(this.keys.length!==this.n-1)return!1;const t=this.deriveReceive(0).getScriptHash("hex");return this.wdb.hasPath(this.wid,t)}removeSharedKey(t,e){return!!this.spliceKey(e)&&(this.save(t),!0)}createReceive(t){return this.createKey(t,0)}createChange(t){return this.createKey(t,1)}async createKey(t,e){let i,s;switch(e){case 0:i=this.deriveReceive(this.receiveDepth),s=this.deriveReceive(this.receiveDepth+this.lookahead),await this.saveKey(t,s),this.receiveDepth+=1,this.receive=i;break;case 1:i=this.deriveChange(this.changeDepth),s=this.deriveReceive(this.changeDepth+this.lookahead),await this.saveKey(t,s),this.changeDepth+=1,this.change=i;break;default:throw new Error(`Bad branch: ${e}.`)}return this.save(t),i}deriveReceive(t,e){return this.deriveKey(0,t,e)}deriveChange(t,e){return this.deriveKey(1,t,e)}derivePath(t,e){switch(t.keyType){case o.types.HD:return this.deriveKey(t.branch,t.index,e);case o.types.KEY:{s(this.type===c.types.PUBKEYHASH);let i=t.data;return t.encrypted&&!(i=e.decipher(i,t.hash))?null:l.fromImport(this,i)}case o.types.ADDRESS:return null;default:throw new Error("Bad key type.")}}deriveKey(t,e,i){s("number"==typeof t);const r=[];let n;if(i&&i.key&&!this.watchOnly){const s=this.network.keyPrefix.coinType;n=(n=i.key.deriveAccount(44,s,this.accountIndex)).derive(t).derive(e)}else n=this.accountKey.derive(t).derive(e);const o=l.fromHD(this,n,t,e);switch(this.type){case c.types.PUBKEYHASH:break;case c.types.MULTISIG:r.push(n.publicKey);for(const i of this.keys){const s=i.derive(t).derive(e);r.push(s.publicKey)}o.script=h.fromMultisig(this.m,this.n,r)}return o}save(t){return this.wdb.saveAccount(t,this)}saveKey(t,e){return this.wdb.saveKey(t,this.wid,e)}savePath(t,e){return this.wdb.savePath(t,this.wid,e)}async initDepth(t){this.receiveDepth=1;for(let e=0;e<=this.lookahead;e++){const i=this.deriveReceive(e);await this.saveKey(t,i)}this.changeDepth=1;for(let e=0;e<=this.lookahead;e++){const i=this.deriveChange(e);await this.saveKey(t,i)}this.save(t)}async syncDepth(t,e,i){let r=!1,n=null;if(e>this.receiveDepth){const i=this.receiveDepth+this.lookahead;s(e<=i+1);for(let s=i;s<e+this.lookahead;s++){const e=this.deriveReceive(s);await this.saveKey(t,e),n=e}this.receiveDepth=e,r=!0}if(i>this.changeDepth){const e=this.changeDepth+this.lookahead;s(i<=e+1);for(let s=e;s<i+this.lookahead;s++){const e=this.deriveChange(s);await this.saveKey(t,e)}this.changeDepth=i,r=!0}return r&&this.save(t),n}async setLookahead(t,e){if(e!==this.lookahead){if(e<this.lookahead){const i=this.lookahead-e;return this.receiveDepth+=i,this.changeDepth+=i,this.lookahead=e,void this.save(t)}{const i=this.receiveDepth+this.lookahead,s=this.receiveDepth+e;for(let e=i;e<s;e++){const i=this.deriveReceive(e);await this.saveKey(t,i)}}{const i=this.changeDepth+this.lookahead,s=this.changeDepth+e;for(let e=i;e<s;e++){const i=this.deriveChange(e);await this.saveKey(t,i)}}this.lookahead=e,this.save(t)}}receiveKey(){return this.initialized?this.deriveReceive(this.receiveDepth-1):null}changeKey(){return this.initialized?this.deriveChange(this.changeDepth-1):null}receiveAddress(){const t=this.receiveKey();return t?t.getAddress():null}changeAddress(){const t=this.changeKey();return t?t.getAddress():null}inspect(){const t=this.receiveAddress(),e=this.changeAddress();return{id:this.id,wid:this.wid,name:this.name,network:this.network.type,initialized:this.initialized,watchOnly:this.watchOnly,type:c.typesByVal[this.type].toLowerCase(),m:this.m,n:this.n,accountIndex:this.accountIndex,receiveDepth:this.receiveDepth,changeDepth:this.changeDepth,lookahead:this.lookahead,receiveAddress:t?t.toString(this.network):null,changeAddress:e?e.toString(this.network):null,accountKey:this.accountKey.toBase58(this.network),keys:this.keys.map(t=>t.toBase58(this.network))}}toJSON(t){const e=this.receiveAddress(),i=this.changeAddress();return{name:this.name,initialized:this.initialized,watchOnly:this.watchOnly,type:c.typesByVal[this.type].toLowerCase(),m:this.m,n:this.n,accountIndex:this.accountIndex,receiveDepth:this.receiveDepth,changeDepth:this.changeDepth,lookahead:this.lookahead,receiveAddress:e?e.toString(this.network):null,changeAddress:i?i.toString(this.network):null,accountKey:this.accountKey.toBase58(this.network),keys:this.keys.map(t=>t.toBase58(this.network)),balance:t?t.toJSON(!0):null}}getSize(){let t=0;return(t+=88)+74*this.keys.length}toRaw(){const t=this.getSize(),e=r.write(t);let i=0;this.initialized&&(i|=1),e.writeU8(i),e.writeU8(this.type),e.writeU8(this.m),e.writeU8(this.n),e.writeU32(this.receiveDepth),e.writeU32(this.changeDepth),e.writeU8(this.lookahead),d(this.accountKey,e),e.writeU8(this.keys.length);for(const t of this.keys)d(t,e);return e.render()}fromRaw(t){const e=r.read(t),i=e.readU8();this.initialized=0!=(1&i),this.type=e.readU8(),this.m=e.readU8(),this.n=e.readU8(),this.receiveDepth=e.readU32(),this.changeDepth=e.readU32(),this.lookahead=e.readU8(),this.accountKey=p(e),s(this.type<c.typesByVal.length);const o=e.readU8();for(let t=0;t<o;t++){const t=p(e);n.insert(this.keys,t,f,!0)}return this}static fromRaw(t,e){return new this(t).fromRaw(e)}static isAccount(t){return t instanceof c}}function f(t,e){return t.compare(e)}function d(t,e){e.writeU8(t.depth),e.writeU32BE(t.parentFingerPrint),e.writeU32BE(t.childIndex),e.writeBytes(t.chainCode),e.writeBytes(t.publicKey)}function p(t){const e=new u;return e.depth=t.readU8(),e.parentFingerPrint=t.readU32BE(),e.childIndex=t.readU32BE(),e.chainCode=t.readBytes(32),e.publicKey=t.readBytes(33),e}c.types={PUBKEYHASH:0,MULTISIG:1},c.typesByVal=["PUBKEYHASH","MULTISIG"],c.MAX_LOOKAHEAD=40,t.exports=c},function(t,e,i){"use strict";(function(e,s){
/*!
 * rpc.js - bitcoind-compatible json rpc for bcoin.
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),n=i(102),{Lock:o}=i(27),a=i(70),h=i(101),l=i(24),u=i(9),c=i(69),f=i(13),d=i(5),p=i(76),g=i(19),m=i(67),w=i(11),y=i(12),b=i(51),v=i(42),k=i(43),E=i(39),R=i(63),S=i(40),_=i(8),x=i(18),I=i(16),A=i(14),O=i(3),B=i(68),P=n.RPC,N=n.RPCError,T={INVALID_REQUEST:n.errors.INVALID_REQUEST,METHOD_NOT_FOUND:n.errors.METHOD_NOT_FOUND,INVALID_PARAMS:n.errors.INVALID_PARAMS,INTERNAL_ERROR:n.errors.INTERNAL_ERROR,PARSE_ERROR:n.errors.PARSE_ERROR,MISC_ERROR:-1,FORBIDDEN_BY_SAFE_MODE:-2,TYPE_ERROR:-3,INVALID_ADDRESS_OR_KEY:-5,OUT_OF_MEMORY:-7,INVALID_PARAMETER:-8,DATABASE_ERROR:-20,DESERIALIZATION_ERROR:-22,VERIFY_ERROR:-25,VERIFY_REJECTED:-26,VERIFY_ALREADY_IN_CHAIN:-27,IN_WARMUP:-28,CLIENT_NOT_CONNECTED:-9,CLIENT_IN_INITIAL_DOWNLOAD:-10,CLIENT_NODE_ALREADY_ADDED:-23,CLIENT_NODE_NOT_ADDED:-24,CLIENT_NODE_NOT_CONNECTED:-29,CLIENT_INVALID_IP_OR_SUBNET:-30,CLIENT_P2P_DISABLED:-31},M="Bitcoin Signed Message:\n";function C(t){for(let e=0;e<t.length;e+=4){const i=t.readUInt32LE(e,!0);t.writeUInt32BE(i,e,!0)}return t}function L(t,e,i){return{id:t,version:e,reject:{status:i}}}function U(t,e){try{return y.fromString(t,e)}catch(t){throw new N(T.INVALID_ADDRESS_OR_KEY,"Invalid address.")}}function D(t,e){try{return E.fromSecret(t,e)}catch(t){throw new N(T.INVALID_ADDRESS_OR_KEY,"Invalid key.")}}function F(t,e){try{return a.fromHostname(t,e.port)}catch(t){throw new N(T.CLIENT_INVALID_IP_OR_SUBNET,"Invalid IP address or subnet.")}}function H(t,e){try{return m.fromHostname(t,e)}catch(t){throw new N(T.CLIENT_INVALID_IP_OR_SUBNET,"Invalid IP address or subnet.")}}function z(t){let e=t>>>24&255,i=65535/(16777215&t);for(;e<29;)i*=256,e++;for(;e>29;)i/=256,e--;return i}function V(t){for(r(t>=0),t=t.toString(16),r(t.length<=8);t.length<8;)t="0"+t;return t}t.exports=class extends P{constructor(t){super(),r(t,"RPC requires a Node."),this.node=t,this.network=t.network,this.workers=t.workers,this.chain=t.chain,this.mempool=t.mempool,this.pool=t.pool,this.fees=t.fees,this.miner=t.miner,this.logger=t.logger.context("rpc"),this.locker=new o,this.mining=!1,this.procLimit=0,this.attempt=null,this.lastActivity=0,this.boundChain=!1,this.nonce1=0,this.nonce2=0,this.merkleMap=new Map,this.pollers=[],this.init()}getCode(t){switch(t.type){case"RPCError":return t.code;case"ValidationError":return T.TYPE_ERROR;case"EncodingError":return T.DESERIALIZATION_ERROR;default:return T.INTERNAL_ERROR}}handleCall(t,e){"getwork"!==t.method&&"getblocktemplate"!==t.method&&"getbestblockhash"!==t.method&&(this.logger.debug("Handling RPC call: %s.",t.method),"submitblock"!==t.method&&"getmemorypool"!==t.method&&this.logger.debug(t.params)),"getwork"===t.method&&e.longpoll&&(t.method="getworklp")}handleError(t){this.logger.error("RPC internal error."),this.logger.error(t)}init(){this.add("stop",this.stop),this.add("help",this.help),this.add("getblockchaininfo",this.getBlockchainInfo),this.add("getbestblockhash",this.getBestBlockHash),this.add("getblockcount",this.getBlockCount),this.add("getblock",this.getBlock),this.add("getblockbyheight",this.getBlockByHeight),this.add("getblockhash",this.getBlockHash),this.add("getblockheader",this.getBlockHeader),this.add("getchaintips",this.getChainTips),this.add("getdifficulty",this.getDifficulty),this.add("getmempoolancestors",this.getMempoolAncestors),this.add("getmempooldescendants",this.getMempoolDescendants),this.add("getmempoolentry",this.getMempoolEntry),this.add("getmempoolinfo",this.getMempoolInfo),this.add("getrawmempool",this.getRawMempool),this.add("gettxout",this.getTXOut),this.add("gettxoutsetinfo",this.getTXOutSetInfo),this.add("pruneblockchain",this.pruneBlockchain),this.add("verifychain",this.verifyChain),this.add("invalidateblock",this.invalidateBlock),this.add("reconsiderblock",this.reconsiderBlock),this.add("getnetworkhashps",this.getNetworkHashPS),this.add("getmininginfo",this.getMiningInfo),this.add("prioritisetransaction",this.prioritiseTransaction),this.add("getwork",this.getWork),this.add("getworklp",this.getWorkLongpoll),this.add("getblocktemplate",this.getBlockTemplate),this.add("submitblock",this.submitBlock),this.add("verifyblock",this.verifyBlock),this.add("setgenerate",this.setGenerate),this.add("getgenerate",this.getGenerate),this.add("generate",this.generate),this.add("generatetoaddress",this.generateToAddress),this.add("estimatefee",this.estimateFee),this.add("estimatepriority",this.estimatePriority),this.add("estimatesmartfee",this.estimateSmartFee),this.add("estimatesmartpriority",this.estimateSmartPriority),this.add("getinfo",this.getInfo),this.add("validateaddress",this.validateAddress),this.add("createmultisig",this.createMultisig),this.add("verifymessage",this.verifyMessage),this.add("signmessagewithprivkey",this.signMessageWithPrivkey),this.add("setmocktime",this.setMockTime),this.add("getconnectioncount",this.getConnectionCount),this.add("ping",this.ping),this.add("getpeerinfo",this.getPeerInfo),this.add("addnode",this.addNode),this.add("disconnectnode",this.disconnectNode),this.add("getaddednodeinfo",this.getAddedNodeInfo),this.add("getnettotals",this.getNetTotals),this.add("getnetworkinfo",this.getNetworkInfo),this.add("setban",this.setBan),this.add("listbanned",this.listBanned),this.add("clearbanned",this.clearBanned),this.add("getrawtransaction",this.getRawTransaction),this.add("createrawtransaction",this.createRawTransaction),this.add("decoderawtransaction",this.decodeRawTransaction),this.add("decodescript",this.decodeScript),this.add("sendrawtransaction",this.sendRawTransaction),this.add("signrawtransaction",this.signRawTransaction),this.add("gettxoutproof",this.getTXOutProof),this.add("verifytxoutproof",this.verifyTXOutProof),this.add("getmemoryinfo",this.getMemoryInfo),this.add("setloglevel",this.setLogLevel)}async getInfo(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"getinfo");return{version:B.version,protocolversion:this.pool.options.version,walletversion:0,balance:0,blocks:this.chain.height,timeoffset:this.network.time.offset,connections:this.pool.peers.size(),proxy:"",difficulty:z(this.chain.tip.bits),testnet:this.network!==_.main,keypoololdest:0,keypoolsize:0,unlocked_until:0,paytxfee:g.btc(this.network.feeRate,!0),relayfee:g.btc(this.network.minRelay,!0),errors:""}}async help(t,e){if(0===t.length)return"Select a command.";const i={method:t[0],params:[]};return await this.execute(i,!0)}async stop(t,i){if(i||0!==t.length)throw new N(T.MISC_ERROR,"stop");return this.node.close().catch(t=>{e(()=>{throw t})}),"Stopping."}async getNetworkInfo(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"getnetworkinfo");const i=this.pool.hosts,s=[];for(const t of i.local.values())s.push({address:t.addr.host,port:t.addr.port,score:t.score});return{version:B.version,subversion:this.pool.options.agent,protocolversion:this.pool.options.version,localservices:V(this.pool.options.services),localrelay:!this.pool.options.noRelay,timeoffset:this.network.time.offset,networkactive:this.pool.connected,connections:this.pool.peers.size(),networks:[],relayfee:g.btc(this.network.minRelay,!0),incrementalfee:0,localaddresses:s,warnings:""}}async addNode(t,e){if(e||2!==t.length)throw new N(T.MISC_ERROR,'addnode "node" "add|remove|onetry"');const i=new h(t),s=i.str(0,"");switch(i.str(1,"")){case"add":this.pool.hosts.addNode(s);case"onetry":{const t=H(s,this.network);if(!this.pool.peers.get(t.hostname)){const e=this.pool.createOutbound(t);this.pool.peers.add(e)}break}case"remove":this.pool.hosts.removeNode(s)}return null}async disconnectNode(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,'disconnectnode "node"');const i=F(new h(t).str(0,""),this.network),s=this.pool.peers.get(i.hostname);return s&&s.destroy(),null}async getAddedNodeInfo(t,e){if(e||t.length>1)throw new N(T.MISC_ERROR,'getaddednodeinfo ( "node" )');const i=this.pool.hosts,s=new h(t).str(0,"");let r;1===t.length&&(r=F(s,this.network));const n=[];for(const t of i.nodes){if(r){if(t.host!==r.host)continue;if(t.port!==r.port)continue}const e=this.pool.peers.get(t.hostname);e&&e.connected?n.push({addednode:t.hostname,connected:e.connected,addresses:[{address:e.hostname(),connected:e.outbound?"outbound":"inbound"}]}):n.push({addednode:t.hostname,connected:!1,addresses:[]})}if(r&&0===n.length)throw new N(T.CLIENT_NODE_NOT_ADDED,"Node has not been added.");return n}async getConnectionCount(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"getconnectioncount");return this.pool.peers.size()}async getNetTotals(t,e){let i=0,s=0;if(e||t.length>0)throw new N(T.MISC_ERROR,"getnettotals");for(let t=this.pool.peers.head();t;t=t.next)i+=t.socket.bytesWritten,s+=t.socket.bytesRead;return{totalbytesrecv:s,totalbytessent:i,timemillis:Date.now()}}async getPeerInfo(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"getpeerinfo");const i=[];for(let t=this.pool.peers.head();t;t=t.next){const e=this.network.time.known.get(t.hostname())||0,s=[];for(const e in t.blockMap.keys()){const t=d.revHex(e);s.push(t)}t.getName(),i.push({id:t.id,addr:t.hostname(),addrlocal:t.local.isNull()?void 0:t.local.hostname,name:t.name||void 0,services:V(t.services),relaytxes:!t.noRelay,lastsend:t.lastSend/1e3|0,lastrecv:t.lastRecv/1e3|0,bytessent:t.socket.bytesWritten,bytesrecv:t.socket.bytesRead,conntime:0!==t.time?(Date.now()-t.time)/1e3|0:0,timeoffset:e,pingtime:-1!==t.lastPong?(t.lastPong-t.lastPing)/1e3:-1,minping:-1!==t.minPing?t.minPing/1e3:-1,version:t.version,subver:t.agent,inbound:!t.outbound,startingheight:t.height,besthash:t.bestHash?d.revHex(t.bestHash):null,bestheight:t.bestHeight,banscore:t.banScore,inflight:s,whitelisted:!1})}return i}async ping(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"ping");for(let t=this.pool.peers.head();t;t=t.next)t.sendPing();return null}async setBan(t,e){const i=new h(t),s=i.str(0,""),r=i.str(1,"");if(e||t.length<2||"add"!==r&&"remove"!==r)throw new N(T.MISC_ERROR,'setban "ip(/netmask)" "add|remove" (bantime) (absolute)');const n=H(s,this.network);switch(r){case"add":this.pool.ban(n);break;case"remove":this.pool.unban(n)}return null}async listBanned(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"listbanned");const i=[];for(const[t,e]of this.pool.hosts.banned)i.push({address:t,banned_until:e+this.pool.options.banTime,ban_created:e,ban_reason:""});return i}async clearBanned(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"clearbanned");return this.pool.hosts.clearBanned(),null}async getBlockchainInfo(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"getblockchaininfo");return{chain:"testnet"!==this.network.type?this.network.type:"test",blocks:this.chain.height,headers:this.chain.height,bestblockhash:this.chain.tip.rhash(),difficulty:z(this.chain.tip.bits),mediantime:await this.chain.getMedianTime(this.chain.tip),verificationprogress:this.chain.getProgress(),chainwork:this.chain.tip.chainwork.toString("hex",64),pruned:this.chain.options.prune,softforks:this.getSoftforks(),bip9_softforks:await this.getBIP9Softforks(),pruneheight:this.chain.options.prune?Math.max(0,this.chain.height-this.network.block.keepBlocks):null}}async getBestBlockHash(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"getbestblockhash");return this.chain.tip.rhash()}async getBlockCount(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"getblockcount");return this.chain.tip.height}async getBlock(t,e){if(e||t.length<1||t.length>3)throw new N(T.MISC_ERROR,'getblock "hash" ( verbose )');const i=new h(t),s=i.rhash(0),r=i.bool(1,!0),n=i.bool(2,!1);if(!s)throw new N(T.TYPE_ERROR,"Invalid block hash.");const o=await this.chain.getEntry(s);if(!o)throw new N(T.MISC_ERROR,"Block not found");const a=await this.chain.getBlock(o.hash);if(!a){if(this.chain.options.spv)throw new N(T.MISC_ERROR,"Block not available (spv mode)");if(this.chain.options.prune)throw new N(T.MISC_ERROR,"Block not available (pruned data)");throw new N(T.MISC_ERROR,"Can't read block from disk")}return r?await this.blockToJSON(o,a,n):a.toRaw().toString("hex")}async getBlockByHeight(t,e){if(e||t.length<1||t.length>3)throw new N(T.MISC_ERROR,'getblockbyheight "height" ( verbose )');const i=new h(t),s=i.u32(0,-1),r=i.bool(1,!0),n=i.bool(2,!1);if(-1===s)throw new N(T.TYPE_ERROR,"Invalid block height.");const o=await this.chain.getEntry(s);if(!o)throw new N(T.MISC_ERROR,"Block not found");const a=await this.chain.getBlock(o.hash);if(!a){if(this.chain.options.spv)throw new N(T.MISC_ERROR,"Block not available (spv mode)");if(this.chain.options.prune)throw new N(T.MISC_ERROR,"Block not available (pruned data)");throw new N(T.DATABASE_ERROR,"Can't read block from disk")}return r?await this.blockToJSON(o,a,n):a.toRaw().toString("hex")}async getBlockHash(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,"getblockhash index");const i=new h(t).u32(0);if(null==i||i>this.chain.height)throw new N(T.INVALID_PARAMETER,"Block height out of range.");const s=await this.chain.getHash(i);if(!s)throw new N(T.MISC_ERROR,"Not found.");return d.revHex(s)}async getBlockHeader(t,e){if(e||t.length<1||t.length>2)throw new N(T.MISC_ERROR,'getblockheader "hash" ( verbose )');const i=new h(t),s=i.rhash(0),r=i.bool(1,!0);if(!s)throw new N(T.MISC_ERROR,"Invalid block hash.");const n=await this.chain.getEntry(s);if(!n)throw new N(T.MISC_ERROR,"Block not found");return r?await this.headerToJSON(n):n.toRaw().toString("hex",0,80)}async getChainTips(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"getchaintips");const i=await this.chain.getTips(),s=[];for(const t of i){const e=await this.chain.getEntry(t);r(e);const i=await this.findFork(e),n=await this.chain.isMainChain(e);s.push({height:e.height,hash:e.rhash(),branchlen:e.height-i.height,status:n?"active":"valid-headers"})}return s}async getDifficulty(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"getdifficulty");return z(this.chain.tip.bits)}async getMempoolInfo(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"getmempoolinfo");if(!this.mempool)throw new N(T.MISC_ERROR,"No mempool available.");return{size:this.mempool.map.size,bytes:this.mempool.getSize(),usage:this.mempool.getSize(),maxmempool:this.mempool.options.maxSize,mempoolminfee:g.btc(this.mempool.options.minRelay,!0)}}async getMempoolAncestors(t,e){if(e||t.length<1||t.length>2)throw new N(T.MISC_ERROR,"getmempoolancestors txid (verbose)");const i=new h(t),s=i.rhash(0),r=i.bool(1,!1);if(!this.mempool)throw new N(T.MISC_ERROR,"No mempool available.");if(!s)throw new N(T.TYPE_ERROR,"Invalid TXID.");const n=this.mempool.getEntry(s);if(!n)throw new N(T.MISC_ERROR,"Transaction not in mempool.");const o=this.mempool.getAncestors(n),a=[];if(r)for(const t of o)a.push(this.entryToJSON(t));else for(const t of o)a.push(t.txid());return a}async getMempoolDescendants(t,e){if(e||t.length<1||t.length>2)throw new N(T.MISC_ERROR,"getmempooldescendants txid (verbose)");const i=new h(t),s=i.rhash(0),r=i.bool(1,!1);if(!this.mempool)throw new N(T.MISC_ERROR,"No mempool available.");if(!s)throw new N(T.TYPE_ERROR,"Invalid TXID.");const n=this.mempool.getEntry(s);if(!n)throw new N(T.MISC_ERROR,"Transaction not in mempool.");const o=this.mempool.getDescendants(n),a=[];if(r)for(const t of o)a.push(this.entryToJSON(t));else for(const t of o)a.push(t.txid());return a}async getMempoolEntry(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,"getmempoolentry txid");const i=new h(t).rhash(0);if(!this.mempool)throw new N(T.MISC_ERROR,"No mempool available.");if(!i)throw new N(T.TYPE_ERROR,"Invalid TXID.");const s=this.mempool.getEntry(i);if(!s)throw new N(T.MISC_ERROR,"Transaction not in mempool.");return this.entryToJSON(s)}async getRawMempool(t,e){if(e||t.length>1)throw new N(T.MISC_ERROR,"getrawmempool ( verbose )");const i=new h(t).bool(0,!1);if(!this.mempool)throw new N(T.MISC_ERROR,"No mempool available.");if(i){const t={};for(const e of this.mempool.map.values())t[e.txid()]=this.entryToJSON(e);return t}return this.mempool.getSnapshot().map(d.revHex)}async getTXOut(t,e){if(e||t.length<2||t.length>3)throw new N(T.MISC_ERROR,'gettxout "txid" n ( includemempool )');const i=new h(t),s=i.rhash(0),r=i.u32(1),n=i.bool(2,!0);if(this.chain.options.spv)throw new N(T.MISC_ERROR,"Cannot get coins in SPV mode.");if(this.chain.options.prune)throw new N(T.MISC_ERROR,"Cannot get coins when pruned.");if(!s||null==r)throw new N(T.TYPE_ERROR,"Invalid outpoint.");let o;if(n){if(!this.mempool)throw new N(T.MISC_ERROR,"No mempool available.");o=this.mempool.getCoin(s,r)}return o||(o=await this.chain.getCoin(s,r)),o?{bestblock:this.chain.tip.rhash(),confirmations:o.getDepth(this.chain.height),value:g.btc(o.value,!0),scriptPubKey:this.scriptToJSON(o.script,!0),version:o.version,coinbase:o.coinbase}:null}async getTXOutProof(t,e){if(e||1!==t.length&&2!==t.length)throw new N(T.MISC_ERROR,'gettxoutproof ["txid",...] ( blockhash )');const i=new h(t),s=i.array(0),r=i.rhash(1);if(this.chain.options.spv)throw new N(T.MISC_ERROR,"Cannot get coins in SPV mode.");if(this.chain.options.prune)throw new N(T.MISC_ERROR,"Cannot get coins when pruned.");if(!s||0===s.length)throw new N(T.INVALID_PARAMETER,"Invalid TXIDs.");const n=new h(s),o=new Set,a=[];let l=null;for(let t=0;t<s.length;t++){const e=n.rhash(t);if(!e)throw new N(T.TYPE_ERROR,"Invalid TXID.");if(o.has(e))throw new N(T.INVALID_PARAMETER,"Duplicate txid.");o.add(e),a.push(e),l=e}let u=null;if(r)u=await this.chain.getBlock(r);else if(await this.node.hasTX(l)){const t=await this.node.getMeta(l);t&&(u=await this.chain.getBlock(t.block))}else{const t=await this.chain.getCoin(l,0);t&&(u=await this.chain.getBlock(t.height))}if(!u)throw new N(T.MISC_ERROR,"Block not found.");for(const t of a)if(!u.hasTX(t))throw new N(T.VERIFY_ERROR,"Block does not contain all txids.");return(u=R.fromHashes(u,a)).toRaw().toString("hex")}async verifyTXOutProof(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,'verifytxoutproof "proof"');const i=new h(t).buf(0);if(!i)throw new N(T.TYPE_ERROR,"Invalid hex string.");const s=R.fromRaw(i);if(!s.verify())return[];if(!await this.chain.getEntry(s.hash("hex")))throw new N(T.MISC_ERROR,"Block not found in chain.");const r=s.getTree(),n=[];for(const t of r.matches)n.push(d.revHex(t.toString("hex")));return n}async getTXOutSetInfo(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"gettxoutsetinfo");if(this.chain.options.spv)throw new N(T.MISC_ERROR,"Chainstate not available (SPV mode).");return{height:this.chain.height,bestblock:this.chain.tip.rhash(),transactions:this.chain.db.state.tx,txouts:this.chain.db.state.coin,bytes_serialized:0,hash_serialized:0,total_amount:g.btc(this.chain.db.state.value,!0)}}async pruneBlockchain(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"pruneblockchain");if(this.chain.options.spv)throw new N(T.MISC_ERROR,"Cannot prune chain in SPV mode.");if(this.chain.options.prune)throw new N(T.MISC_ERROR,"Chain is already pruned.");if(this.chain.height<this.network.block.pruneAfterHeight)throw new N(T.MISC_ERROR,"Chain is too short for pruning.");try{await this.chain.prune()}catch(t){throw new N(T.DATABASE_ERROR,t.message)}}async verifyChain(t,e){if(e||t.length>2)throw new N(T.MISC_ERROR,"verifychain ( checklevel numblocks )");const i=new h(t),s=i.u32(0),r=i.u32(1);if(null==s||null==r)throw new N(T.TYPE_ERROR,"Missing parameters.");if(this.chain.options.spv)throw new N(T.MISC_ERROR,"Cannot verify chain in SPV mode.");if(this.chain.options.prune)throw new N(T.MISC_ERROR,"Cannot verify chain when pruned.");return null}async submitWork(t){const e=await this.locker.lock();try{return await this._submitWork(t)}finally{e()}}async _submitWork(t){const e=this.attempt;if(!e)return!1;if(128!==t.length)throw new N(T.INVALID_PARAMETER,"Invalid work size.");const i=t.slice(0,80);C(i);const s=v.fromHead(i);if(s.prevBlock!==e.prevBlock||s.bits!==e.bits)return!1;if(!s.verify())return!1;const r=this.merkleMap.get(s.merkleRoot);if(!r)return!1;const[n,o]=r,a=s.nonce,h=s.time,l=e.getProof(n,o,h,a);if(!l.verify(e.target))return!1;const u=e.commit(l);let c;try{c=await this.chain.add(u)}catch(t){if("VerifyError"===t.type)return this.logger.warning("RPC block rejected: %s (%s).",u.rhash(),t.reason),!1;throw t}return!!c||(this.logger.warning("RPC block rejected: %s (bad-prevblk).",u.rhash()),!1)}async createWork(t){const e=await this.locker.lock();try{return await this._createWork(t)}finally{e()}}async _createWork(){const t=await this.updateWork(),e=this.nonce1,i=this.nonce2,r=t.time,n=s.allocUnsafe(128);n.fill(0);const o=t.getRoot(e,i);return t.getHeader(o,r,0).copy(n,0),n[80]=128,n.writeUInt32BE(640,n.length-4,!0),C(n),{data:n.toString("hex"),target:t.target.toString("hex"),height:t.height}}async getWorkLongpoll(t,e){return await this.longpoll(),await this.createWork()}async getWork(t,e){if(t.length>1)throw new N(T.MISC_ERROR,'getwork ( "data" )');if(1===t.length){const e=new h(t).buf(0);if(!e)throw new N(T.TYPE_ERROR,"Invalid work data.");return await this.submitWork(e)}return await this.createWork()}async submitBlock(t,e){if(e||t.length<1||t.length>2)throw new N(T.MISC_ERROR,'submitblock "hexdata" ( "jsonparametersobject" )');const i=new h(t).buf(0),s=b.fromRaw(i);return await this.addBlock(s)}async getBlockTemplate(t,e){if(e||t.length>1)throw new N(T.MISC_ERROR,'getblocktemplate ( "jsonrequestobject" )');const i=new h(t).obj(0,{}),s=new h(i),r=s.str("mode","template");if("template"!==r&&"proposal"!==r)throw new N(T.INVALID_PARAMETER,"Invalid mode.");if("proposal"===r){const e=s.buf("data");if(!e)throw new N(T.TYPE_ERROR,"Missing data parameter.");const i=b.fromRaw(e);if(i.prevBlock!==this.chain.tip.hash)return"inconclusive-not-best-prevblk";try{await this.chain.verifyBlock(i)}catch(t){if("VerifyError"===t.type)return t.reason;throw t}return null}let n=s.u32("maxversion",-1),o=s.array("rules");o&&(n=-1);const a=s.array("capabilities");let l=!1;if(a){let t=!1,e=!1;for(const i of a){if("string"!=typeof i)throw new N(T.TYPE_ERROR,"Invalid capability.");switch(i){case"coinbasetxn":t=!0;break;case"coinbasevalue":e=!0}}if(e=!0,t&&!e){if(0===this.miner.addresses.length)throw new N(T.MISC_ERROR,"No addresses available for coinbase.");l=!0}}if(!this.network.selfConnect){if(0===this.pool.peers.size())throw new N(T.CLIENT_NOT_CONNECTED,"Bitcoin is not connected!");if(!this.chain.synced)throw new N(T.CLIENT_IN_INITIAL_DOWNLOAD,"Bitcoin is downloading blocks...")}const u=s.str("longpollid");return u&&await this.handleLongpoll(u),o||(o=[]),await this.createTemplate(n,l,o)}async createTemplate(t,e,i){const s=await this.locker.lock();try{return await this._createTemplate(t,e,i)}finally{s()}}async _createTemplate(t,e,i){const s=await this.getTemplate(),n=["time","transactions","prevblock"];t>=2&&n.push("version/force"),e&&(n.push("coinbase"),n.push("coinbase/append"),n.push("generation"));const o=new Map;for(let t=0;t<s.items.length;t++){const e=s.items[t];o.set(e.hash,t+1)}const a=[];for(let t=0;t<s.items.length;t++){const e=s.items[t],i=e.tx,n=[];for(let e=0;e<i.inputs.length;e++){const s=i.inputs[e],a=o.get(s.prevout.hash);null!=a&&-1===n.indexOf(a)&&(r(a<t+1),n.push(a))}a.push({data:i.toRaw().toString("hex"),txid:i.txid(),depends:n,fee:e.fee,sigops:e.sigops,size:i.getSize()})}let h=s.version;const l={},u=[];for(const t of this.network.deploys){const e=await this.chain.getState(this.chain.tip,t);let s=t.name;switch(e){case p.thresholdStates.DEFINED:case p.thresholdStates.FAILED:break;case p.thresholdStates.LOCKED_IN:h|=1<<t.bit;case p.thresholdStates.STARTED:t.force||(-1===i.indexOf(s)&&(h&=~(1<<t.bit)),t.required&&(s="!"+s)),l[s]=t.bit;break;case p.thresholdStates.ACTIVE:if(!t.force&&t.required){if(-1===i.indexOf(s))throw new N(T.INVALID_PARAMETER,`Client must support ${s}.`);s="!"+s}u.push(s);break;default:r(!1,"Bad state.")}}const c={capabilities:["proposal"],mutable:n,version:h>>>=0,rules:u,vbavailable:l,vbrequired:0,height:s.height,previousblockhash:d.revHex(s.prevBlock),target:d.revHex(s.target.toString("hex")),bits:V(s.bits),noncerange:"00000000ffffffff",curtime:s.time,mintime:s.mtp+1,maxtime:s.time+7200,expires:s.time+7200,sigoplimit:O.maxBlockSigops(O.MAX_FORK_BLOCK_SIZE),sizelimit:O.MAX_FORK_BLOCK_SIZE,longpollid:this.chain.tip.rhash()+V(this.totalTX()),submitold:!1,coinbaseaux:{flags:s.coinbaseFlags.toString("hex")},coinbasevalue:void 0,coinbasetxn:void 0,transactions:a};if(e){const t=s.toCoinbase(),e=t.inputs[0];e.script.pop(),e.script.compile(),t.refresh(),c.coinbasetxn={data:t.toRaw().toString("hex"),txid:t.txid(),depends:[],fee:0,sigops:t.getSigopsCount(),size:t.getSize()}}else c.coinbasevalue=s.getReward();return c}async getMiningInfo(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"getmininginfo");const i=this.attempt;let s=0,r=0,n=0,o=0;if(i){r=i.weight,n=i.items.length+1,o=i.getDifficulty(),s=1e3;for(const t of i.items)s+=t.tx.getSize()}return{blocks:this.chain.height,currentblocksize:s,currentblockweight:r,currentblocktx:n,difficulty:o,errors:"",genproclimit:this.procLimit,networkhashps:await this.getHashRate(120),pooledtx:this.totalTX(),testnet:this.network!==_.main,chain:"testnet"!==this.network.type?this.network.type:"test",generate:this.mining}}async getNetworkHashPS(t,e){if(e||t.length>2)throw new N(T.MISC_ERROR,"getnetworkhashps ( blocks height )");const i=new h(t),s=i.u32(0,120),r=i.u32(1);return await this.getHashRate(s,r)}async prioritiseTransaction(t,e){if(e||3!==t.length)throw new N(T.MISC_ERROR,"prioritisetransaction <txid> <priority delta> <fee delta>");const i=new h(t),s=i.rhash(0),r=i.i64(1),n=i.i64(2);if(!this.mempool)throw new N(T.MISC_ERROR,"No mempool available.");if(!s)throw new N(T.TYPE_ERROR,"Invalid TXID");if(null==r||null==n)throw new N(T.TYPE_ERROR,"Invalid fee or priority.");const o=this.mempool.getEntry(s);if(!o)throw new N(T.MISC_ERROR,"Transaction not in mempool.");return this.mempool.prioritise(o,r,n),!0}async verifyBlock(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,'verifyblock "block-hex"');const i=new h(t).buf(0);if(!i)throw new N(T.TYPE_ERROR,"Invalid block hex.");if(this.chain.options.spv)throw new N(T.MISC_ERROR,"Cannot verify block in SPV mode.");const s=b.fromRaw(i);try{await this.chain.verifyBlock(s)}catch(t){if("VerifyError"===t.type)return t.reason;throw t}return null}async getGenerate(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"getgenerate");return this.mining}async setGenerate(t,e){if(e||t.length<1||t.length>2)throw new N(T.MISC_ERROR,"setgenerate mine ( proclimit )");const i=new h(t),s=i.bool(0,!1),r=i.u32(1,0);if(s&&0===this.miner.addresses.length)throw new N(T.MISC_ERROR,"No addresses available for coinbase.");return this.mining=s,this.procLimit=r,s?(this.miner.cpu.start(),!0):(await this.miner.cpu.stop(),!1)}async generate(t,e){if(e||t.length<1||t.length>2)throw new N(T.MISC_ERROR,"generate numblocks ( maxtries )");const i=new h(t),s=i.u32(0,1),r=i.u32(1);if(0===this.miner.addresses.length)throw new N(T.MISC_ERROR,"No addresses available for coinbase.");return await this.mineBlocks(s,null,r)}async generateToAddress(t,e){if(e||t.length<2||t.length>3)throw new N(T.MISC_ERROR,"generatetoaddress numblocks address ( maxtries )");const i=new h(t),s=i.u32(0,1),r=i.str(1,""),n=i.u32(2),o=U(r,this.network);return await this.mineBlocks(s,o,n)}async createRawTransaction(t,e){if(e||t.length<2||t.length>3)throw new N(T.MISC_ERROR,'createrawtransaction [{"txid":"id","vout":n},...] {"address":amount,"data":"hex",...} ( locktime )');const i=new h(t),s=i.array(0),r=i.obj(1),n=i.u32(2);if(!s||!r)throw new N(T.TYPE_ERROR,"Invalid parameters (inputs and sendTo).");const o=new S;null!=n&&(o.locktime=n);for(const t of s){const e=new h(t),i=e.rhash("txid"),s=e.u32("vout");let r=e.u32("sequence",4294967295);if(o.locktime&&r--,!i||null==s)throw new N(T.TYPE_ERROR,"Invalid outpoint.");const n=new k;n.prevout.hash=i,n.prevout.index=s,n.sequence=r,o.inputs.push(n)}const a=new h(r),l=new Set;for(const t of Object.keys(r)){if("data"===t){const e=a.buf(t);if(!e)throw new N(T.TYPE_ERROR,"Invalid nulldata..");const i=new I;i.value=0,i.script.fromNulldata(e),o.outputs.push(i);continue}const e=U(t,this.network),i=e.toString(this.network);if(l.has(i))throw new N(T.INVALID_PARAMETER,"Duplicate address");l.add(i);const s=a.ufixed(t,8);if(null==s)throw new N(T.TYPE_ERROR,"Invalid output value.");const r=new I;r.value=s,r.script.fromAddress(e),o.outputs.push(r)}return o.toRaw().toString("hex")}async decodeRawTransaction(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,'decoderawtransaction "hexstring"');const i=new h(t).buf(0);if(!i)throw new N(T.TYPE_ERROR,"Invalid hex string.");const s=A.fromRaw(i);return this.txToJSON(s)}async decodeScript(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,'decodescript "hex"');const i=new h(t).buf(0);let s=new w;i&&(s=w.fromRaw(i));const r=y.fromScripthash(s.hash160()),n=this.scriptToJSON(s);return n.p2sh=r.toString(this.network),n}async getRawTransaction(t,e){if(e||t.length<1||t.length>2)throw new N(T.MISC_ERROR,'getrawtransaction "txid" ( verbose )');const i=new h(t),s=i.rhash(0),r=i.bool(1,!1);if(!s)throw new N(T.TYPE_ERROR,"Invalid TXID.");const n=await this.node.getMeta(s);if(!n)throw new N(T.MISC_ERROR,"Transaction not found.");const o=n.tx;if(!r)return o.toRaw().toString("hex");let a;n.block&&(a=await this.chain.getEntry(n.block));const l=this.txToJSON(o,a);return l.time=n.mtime,l.hex=o.toRaw().toString("hex"),l}async sendRawTransaction(t,e){if(e||t.length<1||t.length>2)throw new N(T.MISC_ERROR,'sendrawtransaction "hexstring" ( allowhighfees )');const i=new h(t).buf(0);if(!i)throw new N(T.TYPE_ERROR,"Invalid hex string.");const s=A.fromRaw(i);return this.node.relay(s),s.txid()}async signRawTransaction(t,e){if(e||t.length<1||t.length>4)throw new N(T.MISC_ERROR,'signrawtransaction "hexstring" ( [{"txid":"id","vout":n,"scriptPubKey":"hex",redeemScript":"hex"},...] ["privatekey1",...] sighashtype )');const i=new h(t),s=i.buf(0),r=i.array(1),n=i.array(2),o=i.str(3);if(!s)throw new N(T.TYPE_ERROR,"Invalid hex string.");if(!this.mempool)throw new N(T.MISC_ERROR,"No mempool available.");const a=S.fromRaw(s);a.view=await this.mempool.getSpentView(a);const l=new Map,u=[];if(n){const t=new h(n);for(let e=0;e<n.length;e++){const i=D(t.str(e,""),this.network);l.set(i.getPublicKey("hex"),i),u.push(i)}}if(r)for(const t of r){const e=new h(t),i=e.rhash("txid"),s=e.u32("vout"),r=e.buf("scriptPubKey"),n=e.ufixed("amount",8),o=e.buf("redeemScript");if(!i||null==s||!r||null==n)throw new N(T.INVALID_PARAMETER,"Invalid UTXO.");const c=new x(i,s),f=w.fromRaw(r),d=I.fromScript(f,n);if(a.view.addOutput(c,d),0===u.length||!o)continue;if(!f.isScripthash())continue;if(!o)throw new N(T.INVALID_PARAMETER,"P2SH requires redeem script.");const p=w.fromRaw(o);for(const t of p.code){if(!t.data)continue;const e=l.get(t.data.toString("hex"));if(e){e.script=p,e.refresh();break}}}let c=w.hashType.ALL;if(o){const t=o.split("|");if(t.length<1||t.length>2)throw new N(T.INVALID_PARAMETER,"Invalid sighash type.");if(null==(c=w.hashType[t[0]]))throw new N(T.INVALID_PARAMETER,"Invalid sighash type.");if(2===t.length){if("ANYONECANPAY"!==t[1])throw new N(T.INVALID_PARAMETER,"Invalid sighash type.");c|=w.hashType.ANYONECANPAY}}return await a.signAsync(u,c,this.workers),{hex:a.toRaw().toString("hex"),complete:a.isSigned()}}async createMultisig(t,e){if(e||t.length<2||t.length>2)throw new N(T.MISC_ERROR,'createmultisig nrequired ["key",...]');const i=new h(t),s=i.array(1,[]),r=i.u32(0,0),n=s.length;if(r<1||n<r||n>16)throw new N(T.INVALID_PARAMETER,"Invalid m and n values.");const o=new h(s);for(let t=0;t<s.length;t++){const e=o.buf(t);if(!e)throw new N(T.TYPE_ERROR,"Invalid key.");if(!f.publicKeyVerify(e))throw new N(T.INVALID_ADDRESS_OR_KEY,"Invalid key.");s[t]=e}const a=w.fromMultisig(r,n,s);if(a.getSize()>O.MAX_SCRIPT_PUSH)throw new N(T.VERIFY_ERROR,"Redeem script exceeds size limit.");return{address:a.getAddress().toString(this.network),redeemScript:a.toJSON()}}async validateAddress(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,'validateaddress "bitcoinaddress"');const i=new h(t).str(0,"");let s;try{s=y.fromString(i,this.network)}catch(t){return{isvalid:!1}}const r=w.fromAddress(s);return{isvalid:!0,address:s.toString(this.network),scriptPubKey:r.toJSON(),ismine:!1,iswatchonly:!1}}async verifyMessage(t,e){if(e||3!==t.length)throw new N(T.MISC_ERROR,'verifymessage "bitcoinaddress" "signature" "message"');const i=new h(t),r=i.str(0,""),n=i.buf(1,null,"base64"),o=i.str(2);if(!n||!o)throw new N(T.TYPE_ERROR,"Invalid parameters.");const a=U(r,this.network),d=s.from(M+o,"utf8"),p=u.digest(d),g=f.recoverDER(p,n,0,!0);return!!g&&c(l.digest(g),a.hash)}async signMessageWithPrivkey(t,e){if(e||2!==t.length)throw new N(T.MISC_ERROR,'signmessagewithprivkey "privkey" "message"');const i=new h(t),r=i.str(0,""),n=i.str(1,""),o=D(r,this.network),a=s.from(M+n,"utf8"),l=u.digest(a);return o.sign(l).toString("base64")}async estimateFee(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,"estimatefee nblocks");const i=new h(t).u32(0,1);if(!this.fees)throw new N(T.MISC_ERROR,"Fee estimation not available.");const s=this.fees.estimateFee(i,!1);return 0===s?-1:g.btc(s,!0)}async estimatePriority(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,"estimatepriority nblocks");const i=new h(t).u32(0,1);if(!this.fees)throw new N(T.MISC_ERROR,"Priority estimation not available.");return this.fees.estimatePriority(i,!1)}async estimateSmartFee(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,"estimatesmartfee nblocks");const i=new h(t).u32(0,1);if(!this.fees)throw new N(T.MISC_ERROR,"Fee estimation not available.");let s=this.fees.estimateFee(i,!0);return{fee:s=0===s?-1:g.btc(s,!0),blocks:i}}async estimateSmartPriority(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,"estimatesmartpriority nblocks");const i=new h(t).u32(0,1);if(!this.fees)throw new N(T.MISC_ERROR,"Priority estimation not available.");return{priority:this.fees.estimatePriority(i,!0),blocks:i}}async invalidateBlock(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,'invalidateblock "hash"');const i=new h(t).rhash(0);if(!i)throw new N(T.TYPE_ERROR,"Invalid block hash.");return await this.chain.invalidate(i),null}async reconsiderBlock(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,'reconsiderblock "hash"');const i=new h(t).rhash(0);if(!i)throw new N(T.TYPE_ERROR,"Invalid block hash.");return this.chain.removeInvalid(i),null}async setMockTime(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,"setmocktime timestamp");const i=new h(t).u32(0);if(null==i)throw new N(T.TYPE_ERROR,"Invalid timestamp.");this.network.time.offset=0;const s=this.network.now()-i;return this.network.time.offset=-s,null}async getMemoryInfo(t,e){if(e||0!==t.length)throw new N(T.MISC_ERROR,"getmemoryinfo");return this.logger.memoryUsage()}async setLogLevel(t,e){if(e||1!==t.length)throw new N(T.MISC_ERROR,'setloglevel "level"');const i=new h(t).str(0,"");return this.logger.setLevel(i),null}async handleLongpoll(t){if(72!==t.length)throw new N(T.INVALID_PARAMETER,"Invalid longpoll ID.");const e=t.slice(0,64),i=parseInt(t.slice(64,72),16);if(i>>>0!==i)throw new N(T.INVALID_PARAMETER,"Invalid longpoll ID.");const s=d.revHex(e);this.chain.tip.hash===s&&await this.longpoll()}longpoll(){return new Promise((t,e)=>{this.pollers.push({resolve:t,reject:e})})}refreshBlock(){const t=this.pollers;this.attempt=null,this.lastActivity=0,this.merkleMap.clear(),this.nonce1=0,this.nonce2=0,this.pollers=[];for(const e of t)e.resolve()}bindChain(){this.boundChain||(this.boundChain=!0,this.node.on("connect",()=>{this.attempt&&this.refreshBlock()}),this.mempool&&this.node.on("tx",()=>{this.attempt&&d.now()-this.lastActivity>10&&this.refreshBlock()}))}async getTemplate(){this.bindChain();let t=this.attempt;return t?this.miner.updateTime(t):(t=await this.miner.createBlock(),this.attempt=t,this.lastActivity=d.now()),t}async updateWork(){this.bindChain();let t=this.attempt;if(t){if(t.address.isNull())throw new N(T.MISC_ERROR,"No addresses available for coinbase.");this.miner.updateTime(t),4294967296==++this.nonce2&&(this.nonce2=0,this.nonce1++);const e=this.nonce1,i=this.nonce2,s=t.getRoot(e,i).toString("hex");return this.merkleMap.set(s,[e,i]),t}if(0===this.miner.addresses.length)throw new N(T.MISC_ERROR,"No addresses available for coinbase.");t=await this.miner.createBlock();const e=this.nonce1,i=this.nonce2,s=t.getRoot(e,i).toString("hex");return this.attempt=t,this.lastActivity=d.now(),this.merkleMap.set(s,[e,i]),t}async addBlock(t){const e=await this.locker.lock(),i=await this.chain.locker.lock();try{return await this._addBlock(t)}finally{i(),e()}}async _addBlock(t){let e;this.logger.info("Handling submitted block: %s.",t.rhash());try{e=await this.chain._add(t)}catch(e){if("VerifyError"===e.type)return this.logger.warning("RPC block rejected: %s (%s).",t.rhash(),e.reason),`rejected: ${e.reason}`;throw e}return e?null:(this.logger.warning("RPC block rejected: %s (bad-prevblk).",t.rhash()),"rejected: bad-prevblk")}totalTX(){return this.mempool?this.mempool.map.size:0}getSoftforks(){return[L("bip34",2,this.chain.state.hasBIP34()),L("bip66",3,this.chain.state.hasBIP66()),L("bip65",4,this.chain.state.hasCLTV())]}async getBIP9Softforks(){const t=this.chain.tip,e={};for(const i of this.network.deploys){let s;switch(await this.chain.getState(t,i)){case p.thresholdStates.DEFINED:s="defined";break;case p.thresholdStates.STARTED:s="started";break;case p.thresholdStates.LOCKED_IN:s="locked_in";break;case p.thresholdStates.ACTIVE:s="active";break;case p.thresholdStates.FAILED:s="failed";break;default:r(!1,"Bad state.")}e[i.name]={status:s,bit:i.bit,startTime:i.startTime,timeout:i.timeout}}return e}async getHashRate(t,e){let i=this.chain.tip;if(null!=e&&(i=await this.chain.getEntry(e)),!i)return 0;r("number"==typeof t),r(t>=0),0===t&&(t=i.height%this.network.pow.retargetInterval+1),t>i.height&&(t=i.height);let s=i.time,n=s,o=i;for(let e=0;e<t;e++){if(!(o=await this.chain.getPrevious(o)))throw new N(T.DATABASE_ERROR,"Not found.");s=Math.min(o.time,s),n=Math.max(o.time,n)}const a=n-s;if(0===a)return 0;const h=i.chainwork.sub(o.chainwork);return Number(h.toString())/a}async mineBlocks(t,e,i){const s=await this.locker.lock();try{return await this._mineBlocks(t,e,i)}finally{s()}}async _mineBlocks(t,e,i){const s=[];for(let i=0;i<t;i++){const t=await this.miner.mineBlock(null,e),i=await this.chain.add(t);r(i),s.push(i.rhash())}return s}async findFork(t){for(;t;){if(await this.chain.isMainChain(t))return t;t=await this.chain.getPrevious(t)}throw new Error("Fork not found.")}txToJSON(t,e){let i=-1,s=0,r=null,n=0;e&&(i=e.height,s=e.time,r=e.rhash(),n=this.chain.height-i+1);const o=[];for(const e of t.inputs){const i={coinbase:void 0,txid:void 0,scriptSig:void 0,sequence:e.sequence};t.isCoinbase()?i.coinbase=e.script.toJSON():(i.txid=e.prevout.txid(),i.vout=e.prevout.index,i.scriptSig={asm:e.script.toASM(),hex:e.script.toJSON()}),o.push(i)}const a=[];for(let e=0;e<t.outputs.length;e++){const i=t.outputs[e];a.push({value:g.btc(i.value,!0),n:e,scriptPubKey:this.scriptToJSON(i.script,!0)})}return{txid:t.txid(),hash:t.hash(),size:t.getSize(),version:t.version,locktime:t.locktime,vin:o,vout:a,blockhash:r,confirmations:n,time:s,blocktime:s,hex:void 0}}scriptToJSON(t,e){const i=t.getType(),s={asm:t.toASM(),hex:void 0,type:w.typesByVal[i],reqSigs:1,addresses:[],p2sh:void 0};e&&(s.hex=t.toJSON());const[r]=t.getMultisig();-1!==r&&(s.reqSigs=r);const n=t.getAddress();if(n){const t=n.toString(this.network);s.addresses.push(t)}return s}async headerToJSON(t){const e=await this.chain.getMedianTime(t),i=await this.chain.getNextHash(t.hash);return{hash:t.rhash(),confirmations:this.chain.height-t.height+1,height:t.height,version:t.version,versionHex:V(t.version),merkleroot:d.revHex(t.merkleRoot),time:t.time,mediantime:e,bits:t.bits,difficulty:z(t.bits),chainwork:t.chainwork.toString("hex",64),previousblockhash:t.prevBlock!==O.NULL_HASH?d.revHex(t.prevBlock):null,nextblockhash:i?d.revHex(i):null}}async blockToJSON(t,e,i){const s=await this.chain.getMedianTime(t),r=await this.chain.getNextHash(t.hash),n=[];for(const s of e.txs)if(i){const e=this.txToJSON(s,t);n.push(e)}else n.push(s.txid());return{hash:t.rhash(),confirmations:this.chain.height-t.height+1,size:e.getSize(),height:t.height,version:t.version,versionHex:V(t.version),merkleroot:d.revHex(t.merkleRoot),coinbase:e.txs[0].inputs[0].script.toJSON(),tx:n,time:t.time,mediantime:s,bits:t.bits,difficulty:z(t.bits),chainwork:t.chainwork.toString("hex",64),previousblockhash:t.prevBlock!==O.NULL_HASH?d.revHex(t.prevBlock):null,nextblockhash:r?d.revHex(r):null}}entryToJSON(t){return{size:t.size,fee:g.btc(t.deltaFee,!0),modifiedfee:0,time:t.time,height:t.height,startingpriority:t.priority,currentpriority:t.getPriority(this.chain.height),descendantcount:this.mempool.countDescendants(t),descendantsize:t.descSize,descendantfees:t.descFee,ancestorcount:this.mempool.countAncestors(t),ancestorsize:0,ancestorfees:0,depends:this.mempool.getDepends(t.tx).map(d.revHex)}}}}).call(this,i(26).setImmediate,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * server.js - http server for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(41),{Server:n}=i(102),o=i(101),{base58:a}=i(31),{BloomFilter:h}=i(62),l=i(30),u=i(38),c=i(69),f=i(5),d=i(14),p=i(18),g=i(8),m=i(68);class w{constructor(t){this.network=g.primary,this.logger=null,this.node=null,this.apiKey=a.encode(u.randomBytes(20)),this.apiHash=l.digest(e.from(this.apiKey,"ascii")),this.noAuth=!1,this.cors=!1,this.prefix=null,this.host="127.0.0.1",this.port=8080,this.ssl=!1,this.keyFile=null,this.certFile=null,this.fromOptions(t)}fromOptions(t){return s(t),s(t.node&&"object"==typeof t.node,"HTTP Server requires a Node."),this.node=t.node,this.network=t.node.network,this.logger=t.node.logger,this.port=this.network.rpcPort,null!=t.logger&&(s("object"==typeof t.logger),this.logger=t.logger),null!=t.apiKey&&(s("string"==typeof t.apiKey,"API key must be a string."),s(t.apiKey.length<=255,"API key must be under 256 bytes."),this.apiKey=t.apiKey,this.apiHash=l.digest(e.from(this.apiKey,"ascii"))),null!=t.noAuth&&(s("boolean"==typeof t.noAuth),this.noAuth=t.noAuth),null!=t.cors&&(s("boolean"==typeof t.cors),this.cors=t.cors),null!=t.prefix&&(s("string"==typeof t.prefix),this.prefix=t.prefix,this.keyFile=r.join(this.prefix,"key.pem"),this.certFile=r.join(this.prefix,"cert.pem")),null!=t.host&&(s("string"==typeof t.host),this.host=t.host),null!=t.port&&(s((65535&t.port)===t.port,"Port must be a number."),this.port=t.port),null!=t.ssl&&(s("boolean"==typeof t.ssl),this.ssl=t.ssl),null!=t.keyFile&&(s("string"==typeof t.keyFile),this.keyFile=t.keyFile),null!=t.certFile&&(s("string"==typeof t.certFile),this.certFile=t.certFile),t.apiKey||"127.0.0.1"!==this.host&&"::1"!==this.host||(this.noAuth=!0),this}static fromOptions(t){return(new w).fromOptions(t)}}function y(t,e){if(!t){const t=new Error(e);throw t.statusCode=400,t}}t.exports=class extends n{constructor(t){super(new w(t)),this.network=this.options.network,this.logger=this.options.logger.context("http"),this.node=this.options.node,this.chain=this.node.chain,this.mempool=this.node.mempool,this.pool=this.node.pool,this.fees=this.node.fees,this.miner=this.node.miner,this.rpc=this.node.rpc,this.init()}init(){this.on("request",(t,e)=>{"POST"===t.method&&"/"===t.pathname||this.logger.debug("Request for method=%s path=%s (%s).",t.method,t.pathname,t.socket.remoteAddress)}),this.on("listening",t=>{this.logger.info("Node HTTP server listening on %s (port=%d).",t.address,t.port)}),this.initRouter(),this.initSockets()}initRouter(){this.options.cors&&this.use(this.cors()),this.options.noAuth||this.use(this.basicAuth({hash:l.digest,password:this.options.apiKey,realm:"node"})),this.use(this.bodyParser({type:"json"})),this.use(this.jsonRPC()),this.use(this.router()),this.error((t,e,i)=>{const s=t.statusCode||500;i.json(s,{error:{type:t.type,code:t.code,message:t.message}})}),this.get("/",async(t,e)=>{const i=this.mempool?this.mempool.map.size:0,s=this.mempool?this.mempool.getSize():0;let r=this.pool.hosts.getLocal();r||(r=this.pool.hosts.address),e.json(200,{version:m.version,network:this.network.type,chain:{height:this.chain.height,tip:this.chain.tip.rhash(),progress:this.chain.getProgress()},pool:{host:r.host,port:r.port,agent:this.pool.options.agent,services:this.pool.options.services.toString(2),outbound:this.pool.peers.outbound,inbound:this.pool.peers.inbound},mempool:{tx:i,size:s},time:{uptime:this.node.uptime(),system:f.now(),adjusted:this.network.now(),offset:this.network.time.offset},memory:this.logger.memoryUsage()})}),this.get("/coin/address/:address",async(t,e)=>{const i=o.fromRequest(t).str("address");y(i,"Address is required."),y(!this.chain.options.spv,"Cannot get coins in SPV mode.");const s=await this.node.getCoinsByAddress(i),r=[];for(const t of s)r.push(t.getJSON(this.network));e.json(200,r)}),this.get("/coin/:hash/:index",async(t,e)=>{const i=o.fromRequest(t),s=i.rhash("hash"),r=i.u32("index");y(s,"Hash is required."),y(null!=r,"Index is required."),y(!this.chain.options.spv,"Cannot get coins in SPV mode.");const n=await this.node.getCoin(s,r);n?e.json(200,n.getJSON(this.network)):e.json(404)}),this.post("/coin/address",async(t,e)=>{const i=o.fromRequest(t).array("addresses");y(i,"Address is required."),y(!this.chain.options.spv,"Cannot get coins in SPV mode.");const s=await this.node.getCoinsByAddress(i),r=[];for(const t of s)r.push(t.getJSON(this.network));e.json(200,r)}),this.get("/tx/:hash",async(t,e)=>{const i=o.fromRequest(t).rhash("hash");y(i,"Hash is required."),y(!this.chain.options.spv,"Cannot get TX in SPV mode.");const s=await this.node.getMeta(i);if(!s)return void e.json(404);const r=await this.node.getMetaView(s);e.json(200,s.getJSON(this.network,r,this.chain.height))}),this.get("/tx/address/:address",async(t,e)=>{const i=o.fromRequest(t).str("address");y(i,"Address is required."),y(!this.chain.options.spv,"Cannot get TX in SPV mode.");const s=await this.node.getMetaByAddress(i),r=[];for(const t of s){const e=await this.node.getMetaView(t);r.push(t.getJSON(this.network,e,this.chain.height))}e.json(200,r)}),this.post("/tx/address",async(t,e)=>{const i=o.fromRequest(t).array("addresses");y(i,"Address is required."),y(!this.chain.options.spv,"Cannot get TX in SPV mode.");const s=await this.node.getMetaByAddress(i),r=[];for(const t of s){const e=await this.node.getMetaView(t);r.push(t.getJSON(this.network,e,this.chain.height))}e.json(200,r)}),this.get("/block/:block",async(t,e)=>{const i=o.fromRequest(t).uintrhash("block");y(null!=i,"Hash or height required."),y(!this.chain.options.spv,"Cannot get block in SPV mode.");const s=await this.chain.getBlock(i);if(!s)return void e.json(404);const r=await this.chain.getBlockView(s);if(!r)return void e.json(404);const n=await this.chain.getHeight(i),a=this.chain.height-n+1;e.json(200,s.getJSON(this.network,r,n,a))}),this.get("/mempool",async(t,e)=>{y(this.mempool,"No mempool available.");const i=this.mempool.getSnapshot(),s=[];for(const t of i)s.push(f.revHex(t));e.json(200,s)}),this.post("/broadcast",async(t,e)=>{const i=o.fromRequest(t).buf("tx");y(i,"TX is required.");const s=d.fromRaw(i);await this.node.sendTX(s),e.json(200,{success:!0})}),this.get("/fee",async(t,e)=>{const i=o.fromRequest(t).u32("blocks");if(!this.fees)return void e.json(200,{rate:this.network.feeRate});const s=this.fees.estimateFee(i);e.json(200,{rate:s})}),this.post("/reset",async(t,e)=>{const i=o.fromRequest(t).u32("height");y(null!=i,"Height is required."),await this.chain.reset(i),e.json(200,{success:!0})})}handleSocket(t){t.hook("auth",(...i)=>{if(t.channel("auth"))throw new Error("Already authed.");if(!this.options.noAuth){const t=new o(i).str(0,"");if(t.length>255)throw new Error("Invalid API key.");const s=e.from(t,"ascii"),r=l.digest(s);if(!c(r,this.options.apiHash))throw new Error("Invalid API key.")}return t.join("auth"),this.logger.info("Successful auth from %s.",t.host),this.handleAuth(t),null}),t.fire("version",{version:m.version,network:this.network.type})}handleAuth(t){t.hook("watch chain",()=>(t.join("chain"),null)),t.hook("unwatch chain",()=>(t.leave("chain"),null)),t.hook("watch mempool",()=>(t.join("mempool"),null)),t.hook("unwatch mempool",()=>(t.leave("mempool"),null)),t.hook("set filter",(...e)=>{const i=new o(e).buf(0);if(!i)throw new Error("Invalid parameter.");return t.filter=h.fromRaw(i),null}),t.hook("get tip",()=>this.chain.tip.toRaw()),t.hook("get entry",async(...t)=>{const e=new o(t).uintrhash(0);if(null==e)throw new Error("Invalid parameter.");const i=await this.chain.getEntry(e);return i&&await this.chain.isMainChain(i)?i.toRaw():null}),t.hook("get hashes",async(...t)=>{const e=new o(t),i=e.i32(0,-1),s=e.i32(1,-1);return this.chain.getHashes(i,s)}),t.hook("add filter",(...e)=>{const i=new o(e).array(0);if(!i)throw new Error("Invalid parameter.");if(!t.filter)throw new Error("No filter set.");const s=new o(i);for(let e=0;e<i.length;e++){const i=s.buf(e);if(!i)throw new Error("Bad data chunk.");t.filter.add(i),this.node.spv&&this.pool.watch(i)}return null}),t.hook("reset filter",()=>(t.filter=null,null)),t.hook("estimate fee",(...t)=>{const e=new o(t).u32(0);return this.fees?this.fees.estimateFee(e):this.network.feeRate}),t.hook("send",(...t)=>{const e=new o(t).buf(0);if(!e)throw new Error("Invalid parameter.");const i=d.fromRaw(e);return this.node.relay(i),null}),t.hook("rescan",(...e)=>{const i=new o(e).uintrhash(0);if(null==i)throw new Error("Invalid parameter.");return this.scan(t,i)})}initSockets(){const t=this.mempool||this.pool;this.chain.on("connect",(t,e,i)=>{const s=this.channel("chain");if(!s)return;const r=t.toRaw();this.to("chain","chain connect",r);for(const t of s){const i=this.filterBlock(t,e);t.fire("block connect",r,i)}}),this.chain.on("disconnect",(t,e,i)=>{if(!this.channel("chain"))return;const s=t.toRaw();this.to("chain","chain disconnect",s),this.to("chain","block disconnect",s)}),this.chain.on("reset",t=>{this.channel("chain")&&this.to("chain","chain reset",t.toRaw())}),t.on("tx",t=>{const e=this.channel("mempool");if(!e)return;const i=t.toRaw();for(const s of e)this.filterTX(s,t)&&s.fire("tx",i)})}filterBlock(t,e){if(!t.filter)return[];const i=[];for(const s of e.txs)this.filterTX(t,s)&&i.push(s.toRaw());return i}filterTX(t,e){if(!t.filter)return!1;let i=!1;for(let s=0;s<e.outputs.length;s++){const r=e.outputs[s].getHash();if(r&&t.filter.test(r)){const r=p.fromTX(e,s);t.filter.add(r.toRaw()),i=!0}}if(i)return!0;if(!e.isCoinbase())for(const{prevout:i}of e.inputs)if(t.filter.test(i.toRaw()))return!0;return!1}async scan(t,e){return await this.node.scan(e,t.filter,(e,i)=>{const s=e.toRaw(),r=[];for(const t of i)r.push(t.toRaw());return t.call("block rescan",s,r)}),null}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t,s){
/*!
 * scrypt.js - scrypt for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 *
 * Ported from:
 * https://github.com/Tarsnap/scrypt/blob/master/lib/crypto/crypto_scrypt-ref.c
 *
 * Copyright 2009 Colin Percival
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
const r=i(0),n=i(73),o=i(30),a=new Uint32Array(16),h=new Uint32Array(16);function l(t){for(let e=0;e<16;e++)a[e]=y(t,4*e);for(let t=0;t<16;t++)h[t]=a[t];for(let t=0;t<8;t+=2)h[4]^=u(h[0]+h[12],7),h[8]^=u(h[4]+h[0],9),h[12]^=u(h[8]+h[4],13),h[0]^=u(h[12]+h[8],18),h[9]^=u(h[5]+h[1],7),h[13]^=u(h[9]+h[5],9),h[1]^=u(h[13]+h[9],13),h[5]^=u(h[1]+h[13],18),h[14]^=u(h[10]+h[6],7),h[2]^=u(h[14]+h[10],9),h[6]^=u(h[2]+h[14],13),h[10]^=u(h[6]+h[2],18),h[3]^=u(h[15]+h[11],7),h[7]^=u(h[3]+h[15],9),h[11]^=u(h[7]+h[3],13),h[15]^=u(h[11]+h[7],18),h[1]^=u(h[0]+h[3],7),h[2]^=u(h[1]+h[0],9),h[3]^=u(h[2]+h[1],13),h[0]^=u(h[3]+h[2],18),h[6]^=u(h[5]+h[4],7),h[7]^=u(h[6]+h[5],9),h[4]^=u(h[7]+h[6],13),h[5]^=u(h[4]+h[7],18),h[11]^=u(h[10]+h[9],7),h[8]^=u(h[11]+h[10],9),h[9]^=u(h[8]+h[11],13),h[10]^=u(h[9]+h[8],18),h[12]^=u(h[15]+h[14],7),h[13]^=u(h[12]+h[15],9),h[14]^=u(h[13]+h[12],13),h[15]^=u(h[14]+h[13],18);for(let t=0;t<16;t++)a[t]+=h[t];for(let e=0;e<16;e++)b(t,a[e],4*e)}function u(t,e){return t<<e|t>>>32-e}function c(e,i,s,r){const n=t.allocUnsafe(64);g(n,e,0,64*(2*r-1),64);for(let t=0;t<2*r;t++)m(n,e,0,64*t,64),l(n),g(i,n,s+64*t,0,64);for(let t=0;t<r;t++)g(e,i,64*t,s+2*t*64,64);for(let t=0;t<r;t++)g(e,i,64*(t+r),s+64*(2*t+1),64)}function f(t,e){return y(t,64*(2*e-1))}function d(t,e,i,s,r,n){const o=n,a=n;g(o,t,0,e,128*i);for(let t=0;t<s;t++)g(r,o,t*(128*i),0,128*i),c(o,a,128*i,i);for(let t=0;t<s;t++)m(o,r,0,(f(o,i)&s-1)*(128*i),128*i),c(o,a,128*i,i);g(t,o,e,0,128*i)}async function p(t,e,i,s,r,n){const o=n,a=n;g(o,t,0,e,128*i);for(let t=0;t<s;t++)g(r,o,t*(128*i),0,128*i),c(o,a,128*i,i),await w();for(let t=0;t<s;t++)m(o,r,0,(f(o,i)&s-1)*(128*i),128*i),c(o,a,128*i,i),await w();g(t,o,e,0,128*i)}function g(t,e,i,s,r){e.copy(t,i,s,s+r)}function m(t,e,i,s,r){for(let n=0;n<r;n++)t[i+n]^=e[s+n]}function w(){return new Promise(t=>s(t))}function y(t,e){const i=t[e],s=t[e+3];return i+256*t[++e]+65536*t[++e]+s*2**24}function b(t,e,i){return t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,i}e.derive=function(e,i,s,a,h,l){if(r(t.isBuffer(e)),r(t.isBuffer(i)),r(s>>>0===s),r(a>>>0===a),r(h>>>0===h),r(l>>>0===l),a*h>=1<<30)throw new Error("EFBIG");if(0!=(s&s-1)||0===s)throw new Error("EINVAL");if(s>4294967295)throw new Error("EINVAL");const u=t.allocUnsafe(256*a),c=t.allocUnsafe(128*a*s),f=n.derive(o,e,i,1,128*h*a);for(let t=0;t<h;t++)d(f,128*t*a,a,s,c,u);return n.derive(o,e,f,1,l)},e.deriveAsync=async function(e,i,s,a,h,l){if(r(t.isBuffer(e)),r(t.isBuffer(i)),r(s>>>0===s),r(a>>>0===a),r(h>>>0===h),r(l>>>0===l),a*h>=1<<30)throw new Error("EFBIG");if(0!=(s&s-1)||0===s)throw new Error("EINVAL");if(s>4294967295)throw new Error("EINVAL");const u=t.allocUnsafe(256*a),c=t.allocUnsafe(128*a*s),f=await n.deriveAsync(o,e,i,1,128*h*a);for(let t=0;t<h;t++)await p(f,128*t*a,a,s,c,u);return await n.deriveAsync(o,e,f,1,l)}}).call(this,i(1).Buffer,i(26).setImmediate)},function(t,e,i){"use strict";(function(e,s){
/*!
 * workerpool.js - worker processes for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),n=i(7),o=i(134),a=i(8),h=i(268),l=i(106),u=i(104),c=i(103),f=i(49);class d{constructor(t,e,i,s){this.worker=t,this.id=e,this.job={resolve:i,reject:s},this.timer=null}start(t){!t||t<=0||(this.timer=setTimeout(()=>{this.reject(new Error("Worker timed out."))},t))}destroy(){this.reject(new Error("Job was destroyed."))}cleanup(){const t=this.job;return r(t,"Already finished."),this.job=null,null!=this.timer&&(clearTimeout(this.timer),this.timer=null),r(this.worker.pending.has(this.id)),this.worker.pending.delete(this.id),t}resolve(t){this.cleanup().resolve(t)}reject(t){this.cleanup().reject(t)}}t.exports=class extends n{constructor(t){super(),this.enabled=!1,this.size=Math.max(2,o.cpus().length),this.timeout=12e4,this.file="/bcash-worker.js",this.children=new Map,this.uid=0,this.set(t)}set(t){t&&(null!=t.enabled&&(r("boolean"==typeof t.enabled),this.enabled=t.enabled),null!=t.size&&(r(t.size>>>0===t.size),r(t.size>0),this.size=t.size),null!=t.timeout&&(r(Number.isSafeInteger(t.timeout)),r(t.timeout>=-1),this.timeout=t.timeout),null!=t.file&&(r("string"==typeof t.file),this.file=t.file))}async open(){}async close(){this.destroy()}spawn(t){const e=new class extends n{constructor(t){super(),this.id=-1,this.framer=new c,this.parser=new u,this.pending=new Map,this.child=new h(t),this.init()}init(){this.child.on("data",t=>{this.parser.feed(t)}),this.child.on("exit",(t,e)=>{this.emit("exit",t,e)}),this.child.on("error",t=>{this.emit("error",t)}),this.parser.on("error",t=>{this.emit("error",t)}),this.parser.on("packet",t=>{this.emit("packet",t)}),this.listen()}listen(){this.on("exit",(t,e)=>{this.killJobs()}),this.on("error",t=>{this.killJobs()}),this.on("packet",t=>{try{this.handlePacket(t)}catch(t){this.emit("error",t)}}),this.sendEnv({BCASH_WORKER_NETWORK:a.type,BCASH_WORKER_ISTTY:s.stdout&&s.stdout.isTTY?"1":"0"})}handlePacket(t){switch(t.cmd){case f.types.EVENT:this.emit("event",t.items),this.emit(...t.items);break;case f.types.LOG:this.emit("log",t.text);break;case f.types.ERROR:this.emit("error",t.error);break;case f.types.ERRORRESULT:this.rejectJob(t.id,t.error);break;default:this.resolveJob(t.id,t)}}write(t){return this.child.write(t)}send(t){return this.write(this.framer.packet(t))}sendEnv(t){return this.send(new f.EnvPacket(t))}sendEvent(...t){return this.send(new f.EventPacket(t))}destroy(){return this.child.destroy()}execute(t,e){return new Promise((i,s)=>{this._execute(t,e,i,s)})}_execute(t,e,i,s){const n=new d(this,t.id,i,s);r(!this.pending.has(t.id),"ID overflow."),this.pending.set(t.id,n),n.start(e),this.send(t)}resolveJob(t,e){const i=this.pending.get(t);if(!i)throw new Error(`Job ${t} is not in progress.`);i.resolve(e)}rejectJob(t,e){const i=this.pending.get(t);if(!i)throw new Error(`Job ${t} is not in progress.`);i.reject(e)}killJobs(){for(const t of this.pending.values())t.destroy()}}(this.file);return e.id=t,e.on("error",t=>{this.emit("error",t,e)}),e.on("exit",i=>{this.emit("exit",i,e),this.children.get(t)===e&&this.children.delete(t)}),e.on("event",t=>{this.emit("event",t,e),this.emit(...t)}),e.on("log",t=>{this.emit("log",t,e)}),this.emit("spawn",e),e}alloc(){const t=this.uid++%this.size;return this.children.has(t)||this.children.set(t,this.spawn(t)),this.children.get(t)}sendEvent(){let t=!0;for(const e of this.children.values())e.sendEvent.apply(e,arguments)||(t=!1);return t}destroy(){for(const t of this.children.values())t.destroy()}execute(t,i){return this.enabled&&h.hasSupport()?(i||(i=this.timeout),this.alloc().execute(t,i)):new Promise((i,s)=>{e(()=>{let e;try{e=l.handle(t)}catch(t){return void s(t)}i(e)})})}async check(t,e,i){const s=new f.CheckPacket(t,e,i),r=await this.execute(s,-1);if(r.error)throw r.error;return null}async sign(t,e,i){let s=e;Array.isArray(s)||(s=[s]);const r=new f.SignPacket(t,s,i),n=await this.execute(r,-1);return n.inject(t),n.total}async checkInput(t,e,i,s){const r=new f.CheckInputPacket(t,e,i,s),n=await this.execute(r,-1);if(n.error)throw n.error;return null}async signInput(t,e,i,s,r){const n=new f.SignInputPacket(t,e,i,s,r),o=await this.execute(n,-1);return o.inject(t),o.value}async ecVerify(t,e,i){const s=new f.ECVerifyPacket(t,e,i);return(await this.execute(s,-1)).value}async ecSign(t,e){const i=new f.ECSignPacket(t,e);return(await this.execute(i,-1)).sig}async mine(t,e,i,s){const r=new f.MinePacket(t,e,i,s);return(await this.execute(r,-1)).nonce}async scrypt(t,e,i,s,r,n){const o=new f.ScryptPacket(t,e,i,s,r,n);return(await this.execute(o,-1)).key}}}).call(this,i(26).setImmediate,i(15))},function(t,e,i){"use strict";
/*!
 * peer.js - peer object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(7),{Lock:n}=i(27),{format:o}=i(48),a=i(212),h=i(109),l=i(50),{RollingFilter:u}=i(62),c=i(5),f=i(213),d=i(216),p=i(54),g=i(3),m=i(34),w=i(35),y=i(133),b=i(135),v=i(108),k=i(51),E=i(14),R=i(67),S=i(8),_=m.services,x=w.types,I=p.types;class A extends r{constructor(t){super(),this.options=t,this.network=this.options.network,this.logger=this.options.logger.context("peer"),this.locker=new n,this.parser=new f(this.network),this.framer=new d(this.network),this.id=-1,this.socket=null,this.opened=!1,this.outbound=!1,this.loader=!1,this.address=new R,this.local=new R,this.name=null,this.connected=!1,this.destroyed=!1,this.ack=!1,this.handshake=!1,this.time=0,this.lastSend=0,this.lastRecv=0,this.drainSize=0,this.drainQueue=[],this.banScore=0,this.invQueue=[],this.onPacket=null,this.next=null,this.prev=null,this.version=-1,this.services=0,this.height=-1,this.agent=null,this.noRelay=!1,this.preferHeaders=!1,this.hashContinue=null,this.spvFilter=null,this.feeRate=-1,this.bip151=null,this.bip150=null,this.compactMode=-1,this.merkleBlock=null,this.merkleTime=-1,this.merkleMatches=0,this.merkleMap=null,this.syncing=!1,this.sentAddr=!1,this.sentGetAddr=!1,this.challenge=null,this.lastPong=-1,this.lastPing=-1,this.minPing=-1,this.blockTime=-1,this.bestHash=null,this.bestHeight=-1,this.connectTimeout=null,this.pingTimer=null,this.invTimer=null,this.stallTimer=null,this.addrFilter=new u(5e3,.001),this.invFilter=new u(5e4,1e-6),this.blockMap=new Map,this.txMap=new Map,this.responseMap=new Map,this.compactBlocks=new Map,this.init()}static fromInbound(t,e){const i=new this(t);return i.accept(e),i}static fromOutbound(t,e){const i=new this(t);return i.connect(e),i}static fromOptions(t){return new this(new O(t))}init(){this.parser.on("packet",async t=>{try{await this.readPacket(t)}catch(t){this.error(t),this.destroy()}}),this.parser.on("error",t=>{this.destroyed||(this.error(t),this.sendReject("malformed","error parsing message"),this.increaseBan(10))})}hostname(){return this.address.hostname}framePacket(t,e,i){return this.bip151&&this.bip151.handshake?this.bip151.packet(t,e):this.framer.packet(t,e,i)}feedParser(t){return this.bip151&&this.bip151.handshake?this.bip151.feed(t):this.parser.feed(t)}setCipher(t){s(!this.bip151,"BIP151 already set."),s(this.socket,"Peer must be initialized with a socket."),s(!this.opened,"Cannot set cipher after open."),this.bip151=new y(t),this.bip151.on("error",t=>{this.error(t),this.destroy()}),this.bip151.on("rekey",()=>{this.destroyed||(this.logger.debug("Rekeying with peer (%s).",this.hostname()),this.send(this.bip151.toRekey()))}),this.bip151.on("packet",(t,e)=>{let i=null;try{i=this.parser.parsePayload(t,e)}catch(t){return void this.parser.error(t)}this.parser.emit("packet",i)})}setAuth(t,e){const i=this.bip151,r=this.hostname(),n=this.outbound;s(this.bip151,"BIP151 not set."),s(!this.bip150,"BIP150 already set."),s(this.socket,"Peer must be initialized with a socket."),s(!this.opened,"Cannot set auth after open."),this.bip150=new b(i,r,n,t,e),this.bip151.bip150=this.bip150}_bind(t){s(!this.socket),this.socket=t,this.socket.once("error",t=>{this.connected&&(this.error(t),this.destroy())}),this.socket.once("close",()=>{this.error("Socket hangup."),this.destroy()}),this.socket.on("drain",()=>{this.handleDrain()}),this.socket.on("data",t=>{this.lastRecv=Date.now(),this.feedParser(t)}),this.socket.setNoDelay(!0)}accept(t){return s(!this.socket),this.address=R.fromSocket(t,this.network),this.address.services=0,this.time=Date.now(),this.outbound=!1,this.connected=!0,this._bind(t),t}connect(t){s(!this.socket);const e=this.options.createSocket(t.port,t.host);return this.address=t,this.outbound=!0,this.connected=!1,this._bind(e),e}async getName(){try{if(!this.name){const{host:t,port:e}=this.address,{hostname:i}=await h.lookupService(t,e);this.name=i}}catch(t){}return this.name}async tryOpen(){try{await this.open()}catch(t){}}async open(){try{await this._open()}catch(t){throw this.error(t),this.destroy(),t}}async _open(){this.opened=!0,await this.initConnect(),await this.initStall(),await this.initBIP151(),await this.initBIP150(),await this.initVersion(),await this.finalize(),s(!this.destroyed),this.emit("open")}initConnect(){return this.connected?(s(!this.outbound),Promise.resolve()):new Promise((t,e)=>{const i=()=>{null!=this.connectTimeout&&(clearTimeout(this.connectTimeout),this.connectTimeout=null),this.socket.removeListener("error",s)},s=t=>{i(),e(t)};this.socket.once("connect",()=>{this.time=Date.now(),this.connected=!0,this.emit("connect"),i(),t()}),this.socket.once("error",s),this.connectTimeout=setTimeout(()=>{this.connectTimeout=null,i(),e(new Error("Connection timed out."))},1e4)})}initStall(){return s(!this.stallTimer),s(!this.destroyed),this.stallTimer=setInterval(()=>{this.maybeTimeout()},A.STALL_INTERVAL),Promise.resolve()}async initBIP151(){if(s(!this.destroyed),this.bip151){s(!this.bip151.completed),this.logger.info("Attempting BIP151 handshake (%s).",this.hostname()),this.send(this.bip151.toEncinit());try{await this.bip151.wait(3e3)}catch(t){this.error(t)}if(this.destroyed)throw new Error("Peer was destroyed during BIP151 handshake.");s(this.bip151.completed),this.bip151.handshake&&(this.logger.info("BIP151 handshake complete (%s).",this.hostname()),this.logger.info("Connection is encrypted (%s).",this.hostname()))}}async initBIP150(){if(s(!this.destroyed),this.bip150){if(s(this.bip151),s(!this.bip150.completed),!this.bip151.handshake)throw new Error("BIP151 handshake was not completed for BIP150.");if(this.logger.info("Attempting BIP150 handshake (%s).",this.hostname()),this.bip150.outbound){if(!this.bip150.peerIdentity)throw new Error("No known identity for peer.");this.send(this.bip150.toChallenge())}await this.bip150.wait(3e3),s(!this.destroyed),s(this.bip150.completed),this.bip150.auth&&(this.logger.info("BIP150 handshake complete (%s).",this.hostname()),this.logger.info("Peer is authed (%s): %s.",this.hostname(),this.bip150.getAddress()))}}async initVersion(){if(s(!this.destroyed),this.sendVersion(),this.ack||(await this.wait(I.VERACK,1e4),s(this.ack)),-1===this.version&&(this.logger.debug("Peer sent a verack without a version (%s).",this.hostname()),await this.wait(I.VERSION,1e4),s(-1!==this.version)),this.destroyed)throw new Error("Peer was destroyed during handshake.");this.handshake=!0,this.logger.debug("Version handshake complete (%s).",this.hostname())}async finalize(){s(!this.destroyed),this.pingTimer=setInterval(()=>{this.sendPing()},A.PING_INTERVAL),this.invTimer=setInterval(()=>{this.flushInv()},A.INV_INTERVAL)}announceBlock(t){if(!this.handshake)return;if(this.destroyed)return;Array.isArray(t)||(t=[t]);const e=[];for(const i of t)s(i instanceof k),this.invFilter.test(i.hash())||(1!==this.compactMode?this.preferHeaders?e.push(i.toHeaders()):e.push(i.toInv()):(this.invFilter.add(i.hash()),this.sendCompactBlock(i)));this.preferHeaders?this.sendHeaders(e):this.queueInv(e)}announceTX(t){if(!this.handshake)return;if(this.destroyed)return;if(this.noRelay)return;Array.isArray(t)||(t=[t]);const e=[];for(const i of t)if(s(i instanceof E),!this.invFilter.test(i.hash())&&(!this.spvFilter||i.isWatched(this.spvFilter))){if(-1!==this.feeRate){const t=i.hash("hex"),e=this.options.getRate(t);if(-1!==e&&e<this.feeRate)continue}e.push(i.toInv())}this.queueInv(e)}queueInv(t){if(!this.handshake)return;if(this.destroyed)return;Array.isArray(t)||(t=[t]);let e=!1;for(const i of t)i.type===x.BLOCK&&(e=!0),this.invQueue.push(i);(this.invQueue.length>=500||e)&&this.flushInv()}flushInv(){if(this.destroyed)return;const t=this.invQueue;if(0===t.length)return;this.invQueue=[],this.logger.spam("Serving %d inv items to %s.",t.length,this.hostname());const e=[];for(const i of t)this.invFilter.added(i.hash,"hex")&&e.push(i);for(let t=0;t<e.length;t+=1e3){const i=e.slice(t,t+1e3);this.send(new p.InvPacket(i))}}sendInv(t){if(this.handshake&&!this.destroyed){Array.isArray(t)||(t=[t]);for(const e of t)this.invFilter.add(e.hash,"hex");if(0!==t.length){this.logger.spam("Serving %d inv items to %s.",t.length,this.hostname());for(let e=0;e<t.length;e+=1e3){const i=t.slice(e,e+1e3);this.send(new p.InvPacket(i))}}}}sendHeaders(t){if(this.handshake&&!this.destroyed){Array.isArray(t)||(t=[t]);for(const e of t)this.invFilter.add(e.hash());if(0!==t.length){this.logger.spam("Serving %d headers to %s.",t.length,this.hostname());for(let e=0;e<t.length;e+=2e3){const i=t.slice(e,e+2e3);this.send(new p.HeadersPacket(i))}}}}sendCompactBlock(t){const e=v.CompactBlock.fromBlock(t);this.send(new p.CmpctBlockPacket(e))}sendVersion(){const t=new p.VersionPacket;t.version=this.options.version,t.services=this.options.services,t.time=this.network.now(),t.remote=this.address,t.local.setNull(),t.local.services=this.options.services,t.nonce=this.options.createNonce(this.hostname()),t.agent=this.options.agent,t.height=this.options.getHeight(),t.noRelay=this.options.noRelay,this.send(t)}sendGetAddr(){this.sentGetAddr||(this.sentGetAddr=!0,this.send(new p.GetAddrPacket))}sendPing(){this.handshake&&(this.version<=m.PONG_VERSION?this.send(new p.PingPacket):this.challenge?this.logger.debug("Peer has not responded to ping (%s).",this.hostname()):(this.lastPing=Date.now(),this.challenge=m.nonce(),this.send(new p.PingPacket(this.challenge))))}sendFilterLoad(t){this.handshake&&this.options.spv&&this.services&_.BLOOM&&this.send(new p.FilterLoadPacket(t))}sendFeeRate(t){this.handshake&&this.send(new p.FeeFilterPacket(t))}destroy(){const t=this.connected;if(this.destroyed)return;this.destroyed=!0,this.connected=!1,this.socket.destroy(),this.socket=null,this.bip151&&this.bip151.destroy(),this.bip150&&this.bip150.destroy(),null!=this.pingTimer&&(clearInterval(this.pingTimer),this.pingTimer=null),null!=this.invTimer&&(clearInterval(this.invTimer),this.invTimer=null),null!=this.stallTimer&&(clearInterval(this.stallTimer),this.stallTimer=null),null!=this.connectTimeout&&(clearTimeout(this.connectTimeout),this.connectTimeout=null);const e=this.drainQueue;this.drainSize=0,this.drainQueue=[];for(const t of e)t.reject(new Error("Peer was destroyed."));for(const[t,e]of this.responseMap)this.responseMap.delete(t),e.reject(new Error("Peer was destroyed."));this.locker.destroy(),this.emit("close",t)}write(t){if(this.destroyed)throw new Error("Peer is destroyed (write).");this.lastSend=Date.now(),!1===this.socket.write(t)&&this.needsDrain(t.length)}send(t){if(this.destroyed)throw new Error("Peer is destroyed (send).");let e=null;t.type===I.TX&&(e=t.tx.hash()),this.sendRaw(t.cmd,t.toRaw(),e),this.addTimeout(t)}sendRaw(t,e,i){const s=this.framePacket(t,e,i);this.write(s)}drain(){return this.destroyed?Promise.reject(new Error("Peer is destroyed.")):0===this.drainSize?Promise.resolve():new Promise((t,e)=>{this.drainQueue.push({resolve:t,reject:e})})}handleDrain(){const t=this.drainQueue;if(this.drainSize=0,0!==t.length){this.drainQueue=[];for(const e of t)e.resolve()}}needsDrain(t){this.drainSize+=t,this.drainSize>=A.DRAIN_MAX&&(this.logger.warning("Peer is not reading: %dmb buffered (%s).",this.drainSize/(1<<20),this.hostname()),this.error("Peer stalled (drain)."),this.destroy())}addTimeout(t){const e=A.RESPONSE_TIMEOUT;if(this.outbound)switch(t.type){case I.MEMPOOL:this.request(I.INV,e);break;case I.GETBLOCKS:this.options.isFull()||this.request(I.INV,e);break;case I.GETHEADERS:this.request(I.HEADERS,2*e);break;case I.GETDATA:this.request(I.DATA,2*e);break;case I.GETBLOCKTXN:this.request(I.BLOCKTXN,e)}}fulfill(t){switch(t.type){case I.BLOCK:case I.CMPCTBLOCK:case I.MERKLEBLOCK:case I.TX:case I.NOTFOUND:{const e=this.response(I.DATA,t);s(!e||0===e.jobs.length);break}}return this.response(t.type,t)}maybeTimeout(){const t=Date.now();for(const[e,i]of this.responseMap)if(t>i.timeout){const t=p.typesByVal[e];return this.error("Peer is stalling (%s).",t.toLowerCase()),void this.destroy()}if(this.merkleBlock&&(s(-1!==this.merkleTime),t>this.merkleTime+A.BLOCK_TIMEOUT))return this.error("Peer is stalling (merkleblock)."),void this.destroy();if(this.syncing&&this.loader&&!this.options.isFull()&&t>this.blockTime+A.BLOCK_TIMEOUT)return this.error("Peer is stalling (block)."),void this.destroy();if(this.options.isFull()||!this.syncing){for(const e of this.blockMap.values())if(t>e+A.BLOCK_TIMEOUT)return this.error("Peer is stalling (block)."),void this.destroy();for(const e of this.txMap.values())if(t>e+A.TX_TIMEOUT)return this.error("Peer is stalling (tx)."),void this.destroy();for(const e of this.compactBlocks.values())if(t>e.now+A.RESPONSE_TIMEOUT)return this.error("Peer is stalling (blocktxn)."),void this.destroy()}if(t>this.time+6e4){if(s(0!==this.time),0===this.lastRecv||0===this.lastSend)return this.error("Peer is stalling (no message)."),void this.destroy();if(t>this.lastSend+A.TIMEOUT_INTERVAL)return this.error("Peer is stalling (send)."),void this.destroy();const e=this.version<=m.PONG_VERSION?4:1;if(t>this.lastRecv+A.TIMEOUT_INTERVAL*e)return this.error("Peer is stalling (recv)."),void this.destroy();if(this.challenge&&t>this.lastPing+A.TIMEOUT_INTERVAL)return this.error("Peer is stalling (ping)."),void this.destroy()}}request(t,e){if(this.destroyed)return null;let i=this.responseMap.get(t);return i||(i=new B,this.responseMap.set(t,i)),i.setTimeout(e),i}response(t,e){const i=this.responseMap.get(t);return i?(this.responseMap.delete(t),i):null}wait(t,e){return new Promise((i,s)=>{if(this.destroyed)return void s(new Error("Peer is destroyed (request)."));const r=this.request(t);r.setTimeout(e),r.addJob(i,s)})}error(t){if(!this.destroyed){if("string"==typeof t){const e=o.apply(null,arguments);t=new Error(e)}if("string"==typeof t.code&&"E"===t.code[0]){const e=t.code;(t=new Error(e)).code=e,t.message=`Socket Error: ${e}`}t.message+=` (${this.hostname()})`,this.emit("error",t)}}blockType(){return this.options.spv?x.FILTERED_BLOCK:this.options.compact&&this.hasCompactSupport()&&this.hasCompact()?x.CMPCT_BLOCK:x.BLOCK}txType(){return x.TX}getData(t){this.send(new p.GetDataPacket(t))}getItems(t,e){const i=[];for(const s of e)i.push(new w(t,s));0!==i.length&&this.getData(i)}getBlock(t){this.getItems(this.blockType(),t)}getTX(t){this.getItems(this.txType(),t)}getFullBlock(t){s(!this.options.spv);const e=x.BLOCK;this.getItems(e,[t])}async readPacket(t){if(!this.destroyed)switch(t.type){case I.ENCINIT:case I.ENCACK:case I.AUTHCHALLENGE:case I.AUTHREPLY:case I.AUTHPROPOSE:case I.PONG:try{this.socket.pause(),await this.handlePacket(t)}finally{this.destroyed||this.socket.resume()}break;default:{const e=await this.locker.lock();try{this.socket.pause(),await this.handlePacket(t)}finally{this.destroyed||this.socket.resume(),e()}break}}}async handlePacket(t){if(this.destroyed)throw new Error("Destroyed peer sent a packet.");this.bip151&&this.bip151.job&&!this.bip151.completed&&t.type!==I.ENCINIT&&t.type!==I.ENCACK&&this.bip151.reject(new Error("Message before BIP151 handshake.")),this.bip150&&this.bip150.job&&!this.bip150.completed&&t.type!==I.AUTHCHALLENGE&&t.type!==I.AUTHREPLY&&t.type!==I.AUTHPROPOSE&&this.bip150.reject(new Error("Message before BIP150 auth."));const e=this.fulfill(t);switch(t.type){case I.VERSION:await this.handleVersion(t);break;case I.VERACK:await this.handleVerack(t);break;case I.PING:await this.handlePing(t);break;case I.PONG:await this.handlePong(t);break;case I.SENDHEADERS:await this.handleSendHeaders(t);break;case I.FILTERLOAD:await this.handleFilterLoad(t);break;case I.FILTERADD:await this.handleFilterAdd(t);break;case I.FILTERCLEAR:await this.handleFilterClear(t);break;case I.FEEFILTER:await this.handleFeeFilter(t);break;case I.SENDCMPCT:await this.handleSendCmpct(t);break;case I.ENCINIT:await this.handleEncinit(t);break;case I.ENCACK:await this.handleEncack(t);break;case I.AUTHCHALLENGE:await this.handleAuthChallenge(t);break;case I.AUTHREPLY:await this.handleAuthReply(t);break;case I.AUTHPROPOSE:await this.handleAuthPropose(t)}this.onPacket&&await this.onPacket(t),this.emit("packet",t),e&&e.resolve(t)}async handleVersion(t){if(-1!==this.version)throw new Error("Peer sent a duplicate version.");if(this.version=t.version,this.services=t.services,this.height=t.height,this.agent=t.agent,this.noRelay=t.noRelay,this.local=t.remote,!this.network.selfConnect&&this.options.hasNonce(t.nonce))throw new Error("We connected to ourself. Oops.");if(this.version<m.MIN_VERSION)throw new Error("Peer does not support required protocol version.");if(this.outbound){if(!(this.services&_.NETWORK))throw new Error("Peer does not support network services.");if(this.options.headers&&this.version<m.HEADERS_VERSION)throw new Error("Peer does not support getheaders.");if(this.options.spv){if(!(this.services&_.BLOOM))throw new Error("Peer does not support BIP37.");if(this.version<m.BLOOM_VERSION)throw new Error("Peer does not support BIP37.")}this.options.compact&&(this.hasCompactSupport()||this.logger.debug("Peer does not support compact blocks (%s).",this.hostname()))}this.send(new p.VerackPacket)}async handleVerack(t){this.ack?this.logger.debug("Peer sent duplicate ack (%s).",this.hostname()):(this.ack=!0,this.logger.debug("Received verack (%s).",this.hostname()))}async handlePing(t){t.nonce&&this.send(new p.PongPacket(t.nonce))}async handlePong(t){const e=t.nonce,i=Date.now();if(this.challenge){if(!e.equals(this.challenge))return e.equals(m.ZERO_NONCE)?(this.logger.debug("Peer sent a zero nonce (%s).",this.hostname()),void(this.challenge=null)):void this.logger.debug("Peer sent the wrong nonce (%s).",this.hostname());i>=this.lastPing?(this.lastPong=i,-1===this.minPing&&(this.minPing=i-this.lastPing),this.minPing=Math.min(this.minPing,i-this.lastPing)):this.logger.debug("Timing mismatch (what?) (%s).",this.hostname()),this.challenge=null}else this.logger.debug("Peer sent an unsolicited pong (%s).",this.hostname())}async handleSendHeaders(t){this.preferHeaders?this.logger.debug("Peer sent a duplicate sendheaders (%s).",this.hostname()):this.preferHeaders=!0}async handleFilterLoad(t){t.isWithinConstraints()?(this.spvFilter=t.filter,this.noRelay=!1):this.increaseBan(100)}async handleFilterAdd(t){const e=t.data;e.length>g.MAX_SCRIPT_PUSH?this.increaseBan(100):(this.spvFilter&&this.spvFilter.add(e),this.noRelay=!1)}async handleFilterClear(t){this.spvFilter&&this.spvFilter.reset(),this.noRelay=!1}async handleFeeFilter(t){const e=t.rate;e<0||e>g.MAX_MONEY?this.increaseBan(100):this.feeRate=e}async handleSendCmpct(t){-1===this.compactMode?t.version>1?this.logger.info("Peer request compact blocks version %d (%s).",t.version,this.hostname()):t.mode>1?this.logger.info("Peer request compact blocks mode %d (%s).",t.mode,this.hostname()):(this.logger.info("Peer initialized compact blocks (mode=%d, version=%d) (%s).",t.mode,t.version,this.hostname()),this.compactMode=t.mode):this.logger.debug("Peer sent a duplicate sendcmpct (%s).",this.hostname())}async handleEncinit(t){this.bip151&&(this.bip151.encinit(t.publicKey,t.cipher),this.send(this.bip151.toEncack()))}async handleEncack(t){this.bip151&&this.bip151.encack(t.publicKey)}async handleAuthChallenge(t){if(!this.bip150)return;const e=this.bip150.challenge(t.hash);this.send(new p.AuthReplyPacket(e))}async handleAuthReply(t){if(!this.bip150)return;const e=this.bip150.reply(t.signature);e&&this.send(new p.AuthProposePacket(e))}async handleAuthPropose(t){if(!this.bip150)return;const e=this.bip150.propose(t.hash);this.send(new p.AuthChallengePacket(e))}sendGetHeaders(t,e){const i=new p.GetHeadersPacket(t,e);let s=null;i.locator.length>0&&(s=c.revHex(i.locator[0]));let r=null;e&&(r=c.revHex(e)),this.logger.debug("Requesting headers packet from peer with getheaders (%s).",this.hostname()),this.logger.debug("Sending getheaders (hash=%s, stop=%s).",s,r),this.send(i)}sendGetBlocks(t,e){const i=new p.GetBlocksPacket(t,e);let s=null;i.locator.length>0&&(s=c.revHex(i.locator[0]));let r=null;e&&(r=c.revHex(e)),this.logger.debug("Requesting inv packet from peer with getblocks (%s).",this.hostname()),this.logger.debug("Sending getblocks (hash=%s, stop=%s).",s,r),this.send(i)}sendMempool(){this.handshake&&(this.services&_.BLOOM?(this.logger.debug("Requesting inv packet from peer with mempool (%s).",this.hostname()),this.send(new p.MempoolPacket)):this.logger.debug("Cannot request mempool for non-bloom peer (%s).",this.hostname()))}sendReject(t,e,i,s){const r=p.RejectPacket.fromReason(t,e,i,s);i?this.logger.debug("Rejecting %s %s (%s): code=%s reason=%s.",i,c.revHex(s),this.hostname(),t,e):this.logger.debug("Rejecting packet from %s: code=%s reason=%s.",this.hostname(),t,e),this.logger.debug("Sending reject packet to peer (%s).",this.hostname()),this.send(r)}sendCompact(t){this.version>=m.COMPACT_VERSION&&(this.logger.info("Initializing normal compact blocks (%s).",this.hostname()),this.send(new p.SendCmpctPacket(t,1)))}increaseBan(t){return this.banScore+=t,this.banScore>=this.options.banScore&&(this.logger.debug("Ban threshold exceeded (%s).",this.hostname()),this.ban(),!0)}ban(){this.emit("ban")}reject(t,e){return this.sendReject(e.code,e.reason,t,e.hash),this.increaseBan(e.score)}hasServices(t){return(this.services&t)===t}hasCompactSupport(){return this.version>=m.COMPACT_VERSION}hasCompact(){return-1!==this.compactMode}inspect(){return"<Peer:"+` handshake=${this.handshake}`+` host=${this.hostname()}`+` outbound=${this.outbound}`+` ping=${this.minPing}`+">"}}A.DRAIN_MAX=10<<20,A.STALL_INTERVAL=5e3,A.PING_INTERVAL=3e4,A.INV_INTERVAL=5e3,A.RESPONSE_TIMEOUT=3e4,A.BLOCK_TIMEOUT=12e4,A.TX_TIMEOUT=12e4,A.TIMEOUT_INTERVAL=12e5;class O{constructor(t){this.network=S.primary,this.logger=l.global,this.createSocket=a.createSocket,this.version=m.PROTOCOL_VERSION,this.services=m.LOCAL_SERVICES,this.agent=m.USER_AGENT,this.noRelay=!1,this.spv=!1,this.compact=!1,this.headers=!1,this.banScore=m.BAN_SCORE,this.getHeight=O.getHeight,this.isFull=O.isFull,this.createNonce=O.createNonce,this.hasNonce=O.hasNonce,this.getRate=O.getRate,t&&this.fromOptions(t)}fromOptions(t){return s(t,"Options are required."),null!=t.network&&(this.network=S.get(t.network)),null!=t.logger&&(s("object"==typeof t.logger),this.logger=t.logger),null!=t.createSocket&&(s("function"==typeof t.createSocket),this.createSocket=t.createSocket),null!=t.version&&(s("number"==typeof t.version),this.version=t.version),null!=t.services&&(s("number"==typeof t.services),this.services=t.services),null!=t.agent&&(s("string"==typeof t.agent),this.agent=t.agent),null!=t.noRelay&&(s("boolean"==typeof t.noRelay),this.noRelay=t.noRelay),null!=t.spv&&(s("boolean"==typeof t.spv),this.spv=t.spv),null!=t.compact&&(s("boolean"==typeof t.compact),this.compact=t.compact),null!=t.headers&&(s("boolean"==typeof t.headers),this.headers=t.headers),null!=t.banScore&&(s("number"==typeof t.banScore),this.banScore=t.banScore),null!=t.getHeight&&(s("function"==typeof t.getHeight),this.getHeight=t.getHeight),null!=t.isFull&&(s("function"==typeof t.isFull),this.isFull=t.isFull),null!=t.createNonce&&(s("function"==typeof t.createNonce),this.createNonce=t.createNonce),null!=t.hasNonce&&(s("function"==typeof t.hasNonce),this.hasNonce=t.hasNonce),null!=t.getRate&&(s("function"==typeof t.getRate),this.getRate=t.getRate),this}static fromOptions(t){return(new this).fromOptions(t)}static getHeight(){return 0}static isFull(){return!1}static createNonce(t){return m.nonce()}static hasNonce(t){return!1}static getRate(t){return-1}}class B{constructor(){this.timeout=0,this.jobs=[]}addJob(t,e){this.jobs.push({resolve:t,reject:e})}setTimeout(t){this.timeout=Date.now()+t}reject(t){for(const e of this.jobs)e.reject(t);this.jobs.length=0}resolve(t){for(const e of this.jobs)e.resolve(t);this.jobs.length=0}}t.exports=A},function(t,e,i){"use strict";(function(e){
/*!
 * bip151.js - peer-to-peer communication encryption.
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 * Resources:
 *   https://github.com/bitcoin/bips/blob/master/bip-0151.mediawiki
 *   https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.chacha20poly1305
 *   https://github.com/openssh/openssh-portable/blob/master/cipher-chachapoly.c
 *   https://github.com/openssh/openssh-portable/blob/master/cipher.c
 *   https://github.com/openssh/openssh-portable/blob/master/packet.c
 */
const s=i(0),r=i(7),{format:n}=i(48),o=i(2),a=i(5),h=i(9),l=i(30),u=i(218),c=i(217),f=i(283),d=i(282),p=i(13),g=i(54),m=i(34),{encoding:w}=o,{EncinitPacket:y,EncackPacket:b}=g,v=e.from("bitcoinecdh","ascii"),k=e.from("BitcoinK1","ascii"),E=e.from("BitcoinK2","ascii"),R=e.from("BitcoinSessionID","ascii"),S=1073741824;class _{constructor(t){this.cipher=x.ciphers.CHACHAPOLY,this.privateKey=p.generatePrivateKey(),this.publicKey=null,this.k1=null,this.k2=null,this.sid=null,null!=t&&(s(t===x.ciphers.CHACHAPOLY,"Unknown cipher type."),this.cipher=t),this.chacha=new u,this.aead=new f,this.tag=null,this.seq=0,this.iv=e.allocUnsafe(8),this.iv.fill(0),this.processed=0,this.lastRekey=0}init(t){s(e.isBuffer(t)),this.publicKey=t;const i=p.ecdh(this.publicKey,this.privateKey).slice(1),r=o.pool(33);r.writeBytes(i),r.writeU8(this.cipher);const n=r.render(),h=d.extract(l,n,v);this.k1=d.expand(l,h,k,32),this.k2=d.expand(l,h,E,32),this.sid=d.expand(l,h,R,32),this.seq=0,this.update(),this.chacha.init(this.k1,this.iv),this.aead.init(this.k2,this.iv),this.lastRekey=a.now()}shouldRekey(t){const e=a.now();return this.processed+=t.length,(e>=this.lastRekey+10||this.processed>=S)&&(this.lastRekey=e,this.processed=0,!0)}rekey(t,e){s(this.sid,"Cannot rekey before initialization."),t?(this.k1=t,this.k2=e):(this.k1=h.root(this.sid,this.k1),this.k2=h.root(this.sid,this.k2)),s(this.k1),s(this.k2),this.chacha.init(this.k1,this.iv),this.aead.init(this.k2,this.iv)}sequence(){4294967296==++this.seq&&(this.seq=0),this.update(),this.chacha.init(null,this.iv),this.aead.init(null,this.iv)}update(){return this.iv.writeUInt32LE(this.seq,0,!0),this.iv}getPublicKey(){return p.publicKeyCreate(this.privateKey,!0)}encryptSize(t){return this.chacha.encrypt(t.slice(0,4))}decryptSize(t){return this.chacha.encrypt(t),t.readUInt32LE(0,!0)}encrypt(t){return this.aead.encrypt(t)}decrypt(t){return this.aead.chacha20.encrypt(t)}auth(t){return this.aead.auth(t)}final(){return this.tag=this.aead.final(),this.tag}verify(t){return c.verify(this.tag,t)}}class x extends r{constructor(t){super(),this.input=new _(t),this.output=new _(t),this.initReceived=!1,this.ackReceived=!1,this.initSent=!1,this.ackSent=!1,this.completed=!1,this.handshake=!1,this.pending=[],this.total=0,this.waiting=4,this.hasSize=!1,this.timeout=null,this.job=null,this.onShake=null,this.bip150=null}error(){const t=n.apply(null,arguments);this.emit("error",new Error(t))}isReady(){return this.initSent&&this.ackReceived&&this.initReceived&&this.ackSent}toEncinit(){return s(!this.initSent,"Cannot init twice."),this.initSent=!0,new y(this.input.getPublicKey(),this.input.cipher)}toEncack(){return s(this.output.sid,"Cannot ack before init."),s(!this.ackSent,"Cannot ack twice."),this.ackSent=!0,this.isReady()&&(s(!this.completed,"No encack after timeout."),this.handshake=!0,this.emit("handshake")),new b(this.output.getPublicKey())}toRekey(){return s(this.handshake,"Cannot rekey before handshake."),new b(m.ZERO_KEY)}encinit(t,e){s(e===this.output.cipher,"Cipher mismatch."),s(!this.initReceived,"Already initialized."),s(!this.completed,"No encinit after timeout."),this.initReceived=!0,this.output.init(t)}encack(t){if(s(this.initSent,"Unsolicited ACK."),t.equals(m.ZERO_KEY))return s(this.handshake,"No initialization before rekey."),this.bip150&&this.bip150.auth?void this.bip150.rekeyInput():void this.input.rekey();s(!this.ackReceived,"Already ACKed."),s(!this.completed,"No encack after timeout."),this.ackReceived=!0,this.input.init(t),this.isReady()&&(this.handshake=!0,this.emit("handshake"))}cleanup(){const t=this.job;return s(!this.completed,"Already completed."),s(t,"No completion job."),this.completed=!0,this.job=null,null!=this.timeout&&(clearTimeout(this.timeout),this.timeout=null),this.onShake&&(this.removeListener("handshake",this.onShake),this.onShake=null),t}resolve(t){this.cleanup().resolve(t)}reject(t){this.cleanup().reject(t)}wait(t){return new Promise((e,i)=>{this._wait(t,e,i)})}_wait(t,e,i){s(!this.handshake,"Cannot wait for init after handshake."),this.job={resolve:e,reject:i},this.timeout=setTimeout(()=>{this.reject(new Error("BIP151 handshake timed out."))},t),this.onShake=this.resolve.bind(this),this.once("handshake",this.onShake)}destroy(){this.job&&this.reject(new Error("BIP151 stream was destroyed."))}maybeRekey(t){this.output.shouldRekey(t)&&(this.emit("rekey"),this.bip150&&this.bip150.auth?this.bip150.rekeyOutput():this.output.rekey())}packetSize(t,e){let i=0;return i+=4,i+=w.sizeVarString(t,"ascii"),i+=4,(i+=e.length)+16}packet(t,e){const i=this.packetSize(t,e),s=o.write(i),r=i-20;s.writeU32(r),s.writeVarString(t,"ascii"),s.writeU32(e.length),s.writeBytes(e),s.seek(16);const n=s.render(),a=n.slice(4,4+r);return this.maybeRekey(n),this.output.encryptSize(n),this.output.encrypt(a),this.output.final().copy(n,4+r),this.output.sequence(),n}feed(t){for(this.total+=t.length,this.pending.push(t);this.total>=this.waiting;){const t=this.read(this.waiting);this.parse(t)}}read(t){if(s(this.total>=t,"Reading too much."),0===t)return e.alloc(0);const i=this.pending[0];if(i.length>t){const e=i.slice(0,t);return this.pending[0]=i.slice(t),this.total-=e.length,e}if(i.length===t){const t=this.pending.shift();return this.total-=t.length,t}const r=e.allocUnsafe(t);let n=0;for(;n<r.length;){const t=this.pending[0],e=t.copy(r,n);e===t.length?this.pending.shift():this.pending[0]=t.slice(e),n+=e}return s.strictEqual(n,r.length),this.total-=r.length,r}parse(t){if(!this.hasSize){const e=this.input.decryptSize(t);return s(4===this.waiting),s(4===t.length),e<6||e>x.MAX_MESSAGE?void this.error("Bad packet size: %d.",e):(this.hasSize=!0,void(this.waiting=e+16))}const e=t.slice(0,this.waiting-16),i=t.slice(this.waiting-16,this.waiting);if(this.hasSize=!1,this.waiting=4,this.input.auth(e),this.input.final(),!this.input.verify(i))return this.input.sequence(),void this.error("Bad tag: %s.",i.toString("hex"));this.input.decrypt(e),this.input.sequence();const r=o.read(e);for(;r.left();){let e,i;try{e=r.readVarString("ascii"),i=r.readBytes(r.readU32())}catch(t){return void this.emit("error",t)}this.emit("packet",e,i)}}}x.ciphers={CHACHAPOLY:0},x.MAX_MESSAGE=12e6,t.exports=x}).call(this,i(1).Buffer)},function(t,e){e.endianness=function(){return"LE"},e.hostname=function(){return"undefined"!=typeof location?location.hostname:""},e.loadavg=function(){return[]},e.uptime=function(){return 0},e.freemem=function(){return Number.MAX_VALUE},e.totalmem=function(){return Number.MAX_VALUE},e.cpus=function(){return[]},e.type=function(){return"Browser"},e.release=function(){return"undefined"!=typeof navigator?navigator.appVersion:""},e.networkInterfaces=e.getNetworkInterfaces=function(){return{}},e.arch=function(){return"javascript"},e.platform=function(){return"browser"},e.tmpdir=e.tmpDir=function(){return"/tmp"},e.EOL="\n",e.homedir=function(){return"/"}},function(t,e,i){"use strict";(function(s){
/*!
 * bip150.js - peer auth.
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 * Resources:
 *   https://github.com/bitcoin/bips/blob/master/bip-0150.mediawiki
 */
const r=i(0),n=i(41),o=i(7),a=i(2),h=i(72),l=i(109),u=i(70),c=i(50),{base58:f}=i(31),d=i(69),p=i(24),g=i(9),m=i(38),w=i(13),y=i(3),b=i(54),v=i(34);class k extends o{constructor(t,e,i,n,o){super(),r(t,"BIP150 requires BIP151."),r("string"==typeof e,"Hostname required."),r("boolean"==typeof i,"Outbound flag required."),r(n instanceof E,"Auth DB required."),r(s.isBuffer(o),"Identity key required."),this.bip151=t,this.input=t.input,this.output=t.output,this.hostname=e,this.outbound=i,this.db=n,this.privateKey=o,this.publicKey=w.publicKeyCreate(o,!0),this.peerIdentity=null,this.challengeReceived=!1,this.replyReceived=!1,this.proposeReceived=!1,this.challengeSent=!1,this.auth=!1,this.completed=!1,this.job=null,this.timeout=null,this.onAuth=null,this.init()}init(){this.outbound&&(this.peerIdentity=this.db.getKnown(this.hostname))}isAuthed(){return this.outbound?this.challengeSent&&this.challengeReceived:this.challengeReceived&&this.replyReceived}challenge(t){const e=this.outbound?"r":"i";if(r(this.bip151.handshake,"No BIP151 handshake before challenge."),r(!this.challengeReceived,"Peer challenged twice."),this.challengeReceived=!0,t.equals(y.ZERO_HASH))throw new Error("Auth failure.");const i=this.hash(this.input.sid,e,this.publicKey);return d(t,i)?(this.isAuthed()&&(this.auth=!0,this.emit("auth")),w.sign(i,this.privateKey)):v.ZERO_SIG}reply(t){const e=this.outbound?"i":"r";if(r(this.challengeSent,"Unsolicited reply."),r(!this.replyReceived,"Peer replied twice."),this.replyReceived=!0,t.equals(v.ZERO_SIG))throw new Error("Auth failure.");if(!this.peerIdentity)return m.randomBytes(32);const i=this.hash(this.output.sid,e,this.peerIdentity);return w.verify(i,t,this.peerIdentity)?this.isAuthed()?(this.auth=!0,this.emit("auth"),null):(r(this.outbound,"No challenge received before reply on inbound."),this.hash(this.input.sid,"p",this.publicKey)):m.randomBytes(32)}propose(t){r(!this.outbound,"Outbound peer tried to propose."),r(!this.challengeSent,"Unsolicited propose."),r(!this.proposeReceived,"Peer proposed twice."),this.proposeReceived=!0;const e=this.findAuthorized(t);return e?(this.peerIdentity=e,this.db.addKnown(this.hostname,this.peerIdentity),this.challengeSent=!0,this.hash(this.output.sid,"r",this.peerIdentity)):y.ZERO_HASH}toChallenge(){r(this.bip151.handshake,"No BIP151 handshake before challenge."),r(this.outbound,"Cannot challenge an inbound connection."),r(this.peerIdentity,"Cannot challenge without a peer identity.");const t=this.hash(this.output.sid,"i",this.peerIdentity);return r(!this.challengeSent,"Cannot initiate challenge twice."),this.challengeSent=!0,new b.AuthChallengePacket(t)}rekey(t,e,i,r){const n=s.allocUnsafe(130);return t.copy(n,0),e.copy(n,32),i.copy(n,64),r.copy(n,97),g.digest(n)}rekeyInput(){const t=this.input,e=this.peerIdentity,i=this.publicKey,s=this.rekey(t.sid,t.k1,e,i),r=this.rekey(t.sid,t.k2,e,i);t.rekey(s,r)}rekeyOutput(){const t=this.output,e=this.publicKey,i=this.peerIdentity,s=this.rekey(t.sid,t.k1,e,i),r=this.rekey(t.sid,t.k2,e,i);t.rekey(s,r)}hash(t,e,i){const r=s.allocUnsafe(66);return t.copy(r,0),r[32]=e.charCodeAt(0),i.copy(r,33),g.digest(r)}findAuthorized(t){for(const e of this.db.authorized){const i=this.hash(this.output.sid,"p",e);if(d(i,t))return e}return null}destroy(){this.job&&this.reject(new Error("BIP150 stream was destroyed."))}cleanup(){const t=this.job;return r(!this.completed,"Already completed."),r(t,"No completion job."),this.completed=!0,this.job=null,null!=this.timeout&&(clearTimeout(this.timeout),this.timeout=null),this.onAuth&&(this.removeListener("auth",this.onAuth),this.onAuth=null),t}resolve(t){this.cleanup().resolve(t)}reject(t){this.cleanup().reject(t)}wait(t){return new Promise((e,i)=>{this._wait(t,e,i)})}_wait(t,e,i){r(!this.auth,"Cannot wait for init after handshake."),this.job={resolve:e,reject:i},!this.outbound||this.peerIdentity?(this.timeout=setTimeout(()=>{this.reject(new Error("BIP150 handshake timed out."))},t),this.onAuth=this.resolve.bind(this),this.once("auth",this.onAuth)):this.reject(new Error(`No identity for ${this.hostname}.`))}getAddress(){return r(this.peerIdentity,"Cannot serialize address."),k.address(this.peerIdentity)}static address(t){const e=a.write(27);return e.writeU8(15),e.writeU16BE(65281),e.writeBytes(p.digest(t)),e.writeChecksum(g.digest),f.encode(e.render())}}class E{constructor(t){this.logger=c.global,this.resolve=l.lookup,this.prefix=null,this.dnsKnown=[],this.known=new Map,this.authorized=[],this.init(t)}init(t){t&&(null!=t.logger&&(r("object"==typeof t.logger),this.logger=t.logger.context("authdb")),null!=t.resolve&&(r("function"==typeof t.resolve),this.resolve=t.resolve),null!=t.knownPeers&&(r("object"==typeof t.knownPeers),this.setKnown(t.knownPeers)),null!=t.authPeers&&(r(Array.isArray(t.authPeers)),this.setAuthorized(t.authPeers)),null!=t.prefix&&(r("string"==typeof t.prefix),this.prefix=t.prefix))}async open(){await this.readKnown(),await this.readAuth(),await this.lookup()}async close(){}addKnown(t,e){r("string"==typeof t,"Known host must be a string."),r(s.isBuffer(e)&&33===e.length,"Invalid public key for known peer.");const i=u.fromHostname(t);i.type!==u.types.DNS?this.known.set(t,e):this.dnsKnown.push([i,e])}addAuthorized(t){r(s.isBuffer(t)&&33===t.length,"Invalid public key for authorized peer."),this.authorized.push(t)}setKnown(t){this.known.clear();for(const e of Object.keys(t)){const i=t[e];this.addKnown(e,i)}}setAuthorized(t){this.authorized.length=0;for(const e of t)this.addAuthorized(e)}getKnown(t){const e=this.known.get(t);if(e)return e;const i=u.fromHostname(t);return this.known.get(i.host)}async lookup(){const t=[];for(const[e,i]of this.dnsKnown)t.push(this.populate(e,i));await Promise.all(t)}async populate(t,e){let i;r(t.type===u.types.DNS,"Resolved host passed."),this.logger.info("Resolving authorized hosts from: %s.",t.host);try{i=await this.resolve(t.host)}catch(t){return void this.logger.error(t)}for(let s of i)0!==t.port&&(s=u.toHostname(s,t.port)),this.known.set(s,e)}async readKnown(){if(h.unsupported)return;if(!this.prefix)return;const t=n.join(this.prefix,"known-peers");let e;try{e=await h.readFile(t,"utf8")}catch(t){if("ENOENT"===t.code)return;throw t}this.parseKnown(e)}parseKnown(t){r("string"==typeof t),65279===t.charCodeAt(0)&&(t=t.substring(1)),t=(t=t.replace(/\r\n/g,"\n")).replace(/\r/g,"\n");let e=0;for(const i of t.split("\n")){const t=i.trim();if(e+=1,0===t.length)continue;if("#"===t[0])continue;const r=t.split(/\s+/);if(r.length<2)throw new Error(`No key present on line ${e}: "${t}".`);const n=r[0].split(",");let o,a;n.length>=2?(o=n[0],a=n[1]):(o=null,a=n[0]);const h=s.from(r[1],"hex");if(33!==h.length)throw new Error(`Invalid key on line ${e}: "${r[1]}".`);o&&o.length>0&&this.addKnown(o,h),0!==a.length&&this.addKnown(a,h)}}async readAuth(){if(h.unsupported)return;if(!this.prefix)return;const t=n.join(this.prefix,"authorized-peers");let e;try{e=await h.readFile(t,"utf8")}catch(t){if("ENOENT"===t.code)return;throw t}this.parseAuth(e)}parseAuth(t){r("string"==typeof t),65279===t.charCodeAt(0)&&(t=t.substring(1)),t=(t=t.replace(/\r\n/g,"\n")).replace(/\r/g,"\n");let e=0;for(const i of t.split("\n")){const t=i.trim();if(e+=1,0===t.length)continue;if("#"===t[0])continue;const r=s.from(t,"hex");if(33!==r.length)throw new Error(`Invalid key on line ${e}: "${t}".`);this.addAuthorized(r)}}}(e=k).BIP150=k,e.AuthDB=E,t.exports=e}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * miner.js - block generator for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(7),n=i(224),o=i(19),a=i(12),h=i(221),l=i(8),u=i(3),c=i(17),f=i(222),{BlockEntry:d}=h;function p(t,e){return t.priority===e.priority?g(t,e):e.priority-t.priority}function g(t,e){let i=t.rate,s=e.rate;return t.descRate>t.rate&&(i=t.descRate),e.descRate>e.rate&&(s=e.descRate),i===s&&(i=t.priority,s=e.priority),s-i}t.exports=class extends r{constructor(t){super(),this.opened=!1,this.options=new class{constructor(t){this.network=l.primary,this.logger=null,this.workers=null,this.chain=null,this.mempool=null,this.version=-1,this.addresses=[],this.coinbaseFlags=e.from("mined by bcoin","ascii"),this.preverify=!1,this.minSize=c.MIN_BLOCK_SIZE,this.maxSize=c.MAX_BLOCK_SIZE,this.priorityWeight=c.BLOCK_PRIORITY_SIZE,this.priorityThreshold=c.BLOCK_PRIORITY_THRESHOLD,this.maxSigops=u.maxBlockSigops(c.MAX_BLOCK_SIZE),this.reservedSize=1e3,this.reservedSigops=100,this.fromOptions(t)}fromOptions(t){if(s(t,"Miner requires options."),s(t.chain&&"object"==typeof t.chain,"Miner requires a blockchain."),this.chain=t.chain,this.network=t.chain.network,this.logger=t.chain.logger,this.workers=t.chain.workers,null!=t.logger&&(s("object"==typeof t.logger),this.logger=t.logger),null!=t.workers&&(s("object"==typeof t.workers),this.workers=t.workers),null!=t.mempool&&(s("object"==typeof t.mempool),this.mempool=t.mempool),null!=t.version&&(s(t.version>>>0===t.version),this.version=t.version),t.address)if(Array.isArray(t.address))for(const e of t.address)this.addresses.push(new a(e,this.network));else this.addresses.push(new a(t.address,this.network));if(t.addresses){s(Array.isArray(t.addresses));for(const e of t.addresses)this.addresses.push(new a(e,this.network))}if(t.coinbaseFlags){let i=t.coinbaseFlags;"string"==typeof i&&(i=e.from(i,"utf8")),s(e.isBuffer(i)),s(i.length<=20,"Coinbase flags > 20 bytes."),this.coinbaseFlags=i}return null!=t.preverify&&(s("boolean"==typeof t.preverify),this.preverify=t.preverify),null!=t.minSize&&(s(t.minSize>>>0===t.minSize),this.minSize=t.minSize),null!=t.maxSize&&(s(t.maxSize>>>0===t.maxSize),s(t.maxSize<=u.MAX_FORK_BLOCK_SIZE,"Max size must be below MAX_FORK_BLOCK_SIZE"),this.maxSize=t.maxSize),null!=t.maxSigops&&(s(t.maxSigops>>>0===t.maxSigops),s(t.maxSigops<=u.maxBlockSigops(this.maxSize),"Max sigops must be below maxBlockSigops(maxSize)"),this.maxSigops=t.maxSigops),null!=t.prioritySize&&(s(t.prioritySize>>>0===t.prioritySize),this.prioritySize=t.prioritySize),null!=t.priorityThreshold&&(s(t.priorityThreshold>>>0===t.priorityThreshold),this.priorityThreshold=t.priorityThreshold),null!=t.reservedSize&&(s(t.reservedSize>>>0===t.reservedSize),this.reservedSize=t.reservedSize),null!=t.reservedSigops&&(s(t.reservedSigops>>>0===t.reservedSigops),this.reservedSigops=t.reservedSigops),this}static fromOptions(t){return(new this).fromOptions(t)}}(t),this.network=this.options.network,this.logger=this.options.logger.context("miner"),this.workers=this.options.workers,this.chain=this.options.chain,this.mempool=this.options.mempool,this.addresses=this.options.addresses,this.locker=this.chain.locker,this.cpu=new f(this),this.init()}init(){this.cpu.on("error",t=>{this.emit("error",t)})}async open(){s(!this.opened,"Miner is already open."),this.opened=!0,await this.cpu.open(),this.logger.info("Miner loaded (flags=%s).",this.options.coinbaseFlags.toString("utf8")),0===this.addresses.length&&this.logger.warning("No reward address is set for miner!")}async close(){return s(this.opened,"Miner is not open."),this.opened=!1,this.cpu.close()}async createBlock(t,e){const i=await this.locker.lock();try{return await this._createBlock(t,e)}finally{i()}}async _createBlock(t,e){let i=this.options.version;t||(t=this.chain.tip),e||(e=this.getAddress()),-1===i&&(i=await this.chain.computeBlockVersion(t));const s=await this.chain.getMedianTime(t),r=Math.max(this.network.now(),s+1),n=await this.chain.getDeployments(r,t),a=await this.chain.getTarget(r,t),l=n.hasMTP()?s:r,u=new h({prevBlock:t.hash,height:t.height+1,version:i,time:r,bits:a,locktime:l,mtp:s,flags:n.flags,address:e,coinbaseFlags:this.options.coinbaseFlags,interval:this.network.halvingInterval,size:this.options.reservedWeight,sigops:this.options.reservedSigops});if(this.assemble(u),this.logger.debug("Created block tmpl (height=%d, size=%d, fees=%d, txs=%s, diff=%d).",u.height,u.size,o.btc(u.fees),u.items.length+1,u.getDifficulty()),this.options.preverify){const e=u.toBlock();try{await this.chain._verifyBlock(e)}catch(t){if("VerifyError"===t.type)throw this.logger.warning("Miner created invalid block!"),this.logger.error(t),new Error("BUG: Miner created invalid block.");throw t}this.logger.debug("Preverified block %d successfully!",u.height)}return u}updateTime(t){t.time=Math.max(this.network.now(),t.mtp+1)}createJob(t,e){return this.cpu.createJob(t,e)}mineBlock(t,e){return this.cpu.mineBlock(t,e)}addAddress(t){this.addresses.push(new a(t,this.network))}getAddress(){return 0===this.addresses.length?new a:this.addresses[Math.random()*this.addresses.length|0]}assemble(t){if(!this.mempool)return void t.refresh();s(this.mempool.tip===this.chain.tip.hash,"Mempool/chain tip mismatch! Unsafe to create block.");const e=new Map,i=new n(g);let r=this.options.priorityWeight>0;r&&i.set(p);for(const s of this.mempool.map.values()){const r=d.fromEntry(s,t),n=r.tx;if(n.isCoinbase())throw new Error("Cannot add coinbase to block.");for(const{prevout:t}of n.inputs){const i=t.hash;this.mempool.hasEntry(i)&&(r.depCount+=1,e.has(i)||e.set(i,[]),e.get(i).push(r))}r.depCount>0||i.insert(r)}for(;i.size()>0;){const s=i.shift(),n=s.tx,o=s.hash;let a=t.size,h=t.sigops;if(!n.isFinal(t.height,t.locktime))continue;if((a+=n.getSize())>this.options.maxSize)continue;if((h+=s.sigops)>this.options.maxSigops)continue;if(r){if(a>this.options.prioritySize||s.priority<this.options.priorityThreshold){r=!1,i.set(g),i.init(),i.insert(s);continue}}else if(s.free&&a>=this.options.minSize)continue;t.size=a,t.sigops=h,t.fees+=s.fee,t.items.push(s);const l=e.get(o);if(l)for(const t of l)0==--t.depCount&&i.insert(t)}if(t.refresh(),s(t.size<=u.MAX_FORK_BLOCK_SIZE,"Block exceeds reserved size!"),this.options.preverify){const e=t.toBlock();s(e.getSize()<=u.MAX_FORK_BLOCK_SIZE,"Block exceeds max block size.")}}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * mrmr.js - murmur3 for javascript
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(297)},function(t,e,i){"use strict";(function(e){
/*!
 * mempool.js - mempool for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(41),n=i(7),o=i(33),{RollingFilter:a}=i(62),h=i(224),l=i(76),u=i(3),c=i(17),f=i(5),d=i(38),{VerifyError:p}=i(148),g=i(12),m=i(11),w=i(18),y=i(14),b=i(46),v=i(141),k=i(139),E=i(8),R=i(225),S=i(110),_=i(25);class x{constructor(t){this.network=E.primary,this.chain=null,this.logger=null,this.workers=null,this.fees=null,this.limitFree=!0,this.limitFreeRelay=15,this.relayPriority=!0,this.requireStandard=this.network.requireStandard,this.rejectAbsurdFees=!0,this.paranoidChecks=!1,this.replaceByFee=!1,this.maxSize=c.MEMPOOL_MAX_SIZE,this.maxOrphans=c.MEMPOOL_MAX_ORPHANS,this.maxAncestors=c.MEMPOOL_MAX_ANCESTORS,this.expiryTime=c.MEMPOOL_EXPIRY_TIME,this.minRelay=this.network.minRelay,this.prefix=null,this.location=null,this.memory=!0,this.maxFiles=64,this.cacheSize=32<<20,this.compression=!0,this.persistent=!1,this.fromOptions(t)}fromOptions(t){return s(t,"Mempool requires options."),s(t.chain&&"object"==typeof t.chain,"Mempool requires a blockchain."),this.chain=t.chain,this.network=t.chain.network,this.logger=t.chain.logger,this.workers=t.chain.workers,this.requireStandard=this.network.requireStandard,this.minRelay=this.network.minRelay,null!=t.logger&&(s("object"==typeof t.logger),this.logger=t.logger),null!=t.workers&&(s("object"==typeof t.workers),this.workers=t.workers),null!=t.fees&&(s("object"==typeof t.fees),this.fees=t.fees),null!=t.limitFree&&(s("boolean"==typeof t.limitFree),this.limitFree=t.limitFree),null!=t.limitFreeRelay&&(s(t.limitFreeRelay>>>0===t.limitFreeRelay),this.limitFreeRelay=t.limitFreeRelay),null!=t.relayPriority&&(s("boolean"==typeof t.relayPriority),this.relayPriority=t.relayPriority),null!=t.requireStandard&&(s("boolean"==typeof t.requireStandard),this.requireStandard=t.requireStandard),null!=t.rejectAbsurdFees&&(s("boolean"==typeof t.rejectAbsurdFees),this.rejectAbsurdFees=t.rejectAbsurdFees),null!=t.paranoidChecks&&(s("boolean"==typeof t.paranoidChecks),this.paranoidChecks=t.paranoidChecks),null!=t.replaceByFee&&(s("boolean"==typeof t.replaceByFee),this.replaceByFee=t.replaceByFee),null!=t.maxSize&&(s(t.maxSize>>>0===t.maxSize),this.maxSize=t.maxSize),null!=t.maxOrphans&&(s(t.maxOrphans>>>0===t.maxOrphans),this.maxOrphans=t.maxOrphans),null!=t.maxAncestors&&(s(t.maxAncestors>>>0===t.maxAncestors),this.maxAncestors=t.maxAncestors),null!=t.expiryTime&&(s(t.expiryTime>>>0===t.expiryTime),this.expiryTime=t.expiryTime),null!=t.minRelay&&(s(t.minRelay>>>0===t.minRelay),this.minRelay=t.minRelay),null!=t.prefix&&(s("string"==typeof t.prefix),this.prefix=t.prefix,this.location=r.join(this.prefix,"mempool")),null!=t.location&&(s("string"==typeof t.location),this.location=t.location),null!=t.memory&&(s("boolean"==typeof t.memory),this.memory=t.memory),null!=t.maxFiles&&(s(t.maxFiles>>>0===t.maxFiles),this.maxFiles=t.maxFiles),null!=t.cacheSize&&(s(Number.isSafeInteger(t.cacheSize)),s(t.cacheSize>=0),this.cacheSize=t.cacheSize),null!=t.compression&&(s("boolean"==typeof t.compression),this.compression=t.compression),null!=t.persistent&&(s("boolean"==typeof t.persistent),this.persistent=t.persistent),null!=t.indexAddress&&(s("boolean"==typeof t.indexAddress),this.indexAddress=t.indexAddress),this}static fromOptions(t){return(new x).fromOptions(t)}}class I{constructor(t,e){this.tx=t,this.index=e}toCoin(){return b.fromTX(this.tx,this.index,-1)}}class A{constructor(t){this.logger=t.logger,this.chain=t.chain,this.network=t.network,this.db=null,this.batch=null,t.persistent&&(this.db=o.create(t))}async getVersion(){const t=await this.db.get(R.v.build());return t?t.readUInt32LE(0,!0):-1}async getTip(){const t=await this.db.get(R.R.build());return t?t.toString("hex"):null}async getFees(){const t=await this.db.get(R.F.build());if(!t)return null;let e=null;try{e=S.fromRaw(t)}catch(t){this.logger.warning("Fee data failed deserialization: %s.",t.message)}return e}getEntries(){return this.db.values({gte:R.e.min(),lte:R.e.max(),parse:t=>k.fromRaw(t)})}getKeys(){return this.db.keys({gte:R.e.min(),lte:R.e.max()})}async open(){this.db&&(await this.db.open(),await this.db.verify(R.V.build(),"mempool",0),await this.verify(),this.batch=this.db.batch())}async close(){this.db&&(await this.db.close(),this.batch=null)}save(t){this.db&&this.batch.put(R.e.build(t.hash()),t.toRaw())}remove(t){this.db&&this.batch.del(R.e.build(t))}sync(t){this.db&&this.batch.put(R.R.build(),e.from(t,"hex"))}writeFees(t){this.db&&this.batch.put(R.F.build(),t.toRaw())}clear(){this.batch.clear(),this.batch=this.db.batch()}async flush(){this.db&&(await this.batch.write(),this.batch=this.db.batch())}async init(t){const i=this.db.batch();i.put(R.v.build(),L(A.VERSION)),i.put(R.R.build(),e.from(t,"hex")),await i.write()}async verify(){let t,e=await this.getVersion();return-1===e&&(e=A.VERSION,t=this.chain.tip.hash,this.logger.info("Mempool cache is empty. Writing tip %s.",f.revHex(t)),await this.init(t)),e!==A.VERSION?(this.logger.warning("Mempool cache version mismatch (%d != %d)!",e,A.VERSION),this.logger.warning("Invalidating mempool cache."),await this.wipe(),!1):(t=await this.getTip())===this.chain.tip.hash||(this.logger.warning("Mempool tip not consistent with chain tip (%s != %s)!",f.revHex(t),this.chain.tip.rhash()),this.logger.warning("Invalidating mempool cache."),await this.wipe(),!1)}async wipe(){const t=this.db.batch(),i=await this.getKeys();for(const e of i)t.del(e);t.put(R.v.build(),L(A.VERSION)),t.put(R.R.build(),e.from(this.chain.tip.hash,"hex")),t.del(R.F.build()),await t.write(),this.logger.info("Removed %d mempool entries from disk.",i.length)}}function O(t,e){}function B(t,e){t.descFee+=e.deltaFee,t.descSize+=e.size}function P(t,e){t.descFee-=e.descFee,t.descSize-=e.descSize}function N(t,e){t.descFee-=e.deltaFee}function T(t,e){t.descFee+=e.deltaFee}function M(t,e){let i,s,r=t.deltaFee,n=t.size,o=e.deltaFee,a=e.size;return C(t)&&(r=t.descFee,n=t.descSize),C(e)&&(o=e.descFee,a=e.descSize),(i=r*a)==(s=n*o)&&(i=t.time,s=e.time),i-s}function C(t){const e=t.deltaFee*t.descSize;return t.descFee*t.size>e}function L(t){const i=e.allocUnsafe(4);return i.writeUInt32LE(t,0,!0),i}A.VERSION=2,t.exports=class extends n{constructor(t){super(),this.opened=!1,this.options=new x(t),this.network=this.options.network,this.logger=this.options.logger.context("mempool"),this.workers=this.options.workers,this.chain=this.options.chain,this.fees=this.options.fees,this.locker=this.chain.locker,this.cache=new A(this.options),this.size=0,this.freeCount=0,this.lastTime=0,this.lastFlush=0,this.tip=this.network.genesis.hash,this.waiting=new Map,this.orphans=new Map,this.map=new Map,this.spents=new Map,this.rejects=new a(12e4,1e-6),this.coinIndex=new class{constructor(){this.index=new Map,this.map=new Map}reset(){this.index.clear(),this.map.clear()}get(t){const e=this.index.get(t);if(!e)return[];const i=[];for(const t of e.values())i.push(t.toCoin());return i}insert(t,e){const i=t.outputs[e],r=t.hash("hex"),n=i.getHash("hex");if(!n)return;let o=this.index.get(n);o||(o=new Map,this.index.set(n,o));const a=w.toKey(r,e);s(!o.has(a)),o.set(a,new I(t,e)),this.map.set(a,n)}remove(t,e){const i=w.toKey(t,e),r=this.map.get(i);if(!r)return;const n=this.index.get(r);s(n),s(n.has(i)),n.delete(i),0===n.size&&this.index.delete(r),this.map.delete(i)}},this.txIndex=new class{constructor(){this.index=new Map,this.map=new Map}reset(){this.index.clear(),this.map.clear()}get(t){const e=this.index.get(t);if(!e)return[];const i=[];for(const t of e.values())i.push(t.tx);return i}getMeta(t){const e=this.index.get(t);if(!e)return[];const i=[];for(const t of e.values()){const e=v.fromTX(t.tx);e.mtime=t.time,i.push(e)}return i}insert(t,e){const i=t.tx,r=i.hash("hex"),n=i.getHashes(e,"hex");if(0!==n.length){for(const e of n){let i=this.index.get(e);i||(i=new Map,this.index.set(e,i)),s(!i.has(r)),i.set(r,t)}this.map.set(r,n)}}remove(t){const e=this.map.get(t);if(e){for(const i of e){const e=this.index.get(i);s(e),s(e.has(t)),e.delete(t),0===e.size&&this.index.delete(i)}this.map.delete(t)}}}}async open(){if(s(!this.opened,"Mempool is already open."),this.opened=!0,await this.cache.open(),this.options.persistent){const t=await this.cache.getEntries();for(const e of t)this.trackEntry(e);for(const e of t)if(this.updateAncestors(e,B),this.options.indexAddress){const t=await this.getCoinView(e.tx);this.indexEntry(e,t)}if(this.logger.info("Loaded mempool from disk (%d entries).",t.length),this.fees){const t=await this.cache.getFees();t&&(this.fees.inject(t),this.logger.info("Loaded mempool fee data (rate=%d).",this.fees.estimateFee()))}}this.tip=this.chain.tip.hash;const t=(this.options.maxSize/1024).toFixed(2);this.logger.info("Mempool loaded (maxsize=%dkb).",t)}async close(){return s(this.opened,"Mempool is not open."),this.opened=!1,this.cache.close()}async addBlock(t,e){const i=await this.locker.lock();try{return await this._addBlock(t,e)}finally{i()}}async _addBlock(t,e){if(0===this.map.size)return void(this.tip=t.hash);const i=[];for(let s=e.length-1;s>=1;s--){const r=e[s],n=r.hash("hex"),o=this.getEntry(n);o?(this.removeEntry(o),this.emit("confirmed",r,t),i.push(o)):(this.removeOrphan(n),this.removeDoubleSpends(r),this.waiting.has(n)&&await this.handleOrphans(r))}this.rejects.reset(),this.fees&&(this.fees.processBlock(t.height,i,this.chain.synced),this.cache.writeFees(this.fees)),this.cache.sync(t.hash),await this.cache.flush(),this.tip=t.hash,0!==i.length&&this.logger.debug("Removed %d txs from mempool for block %d.",i.length,t.height)}async removeBlock(t,e){const i=await this.locker.lock();try{return await this._removeBlock(t,e)}finally{i()}}async _removeBlock(t,e){if(0===this.map.size)return void(this.tip=t.prevBlock);let i=0;for(let s=1;s<e.length;s++){const r=e[s],n=r.hash("hex");if(!this.hasEntry(n)){try{await this.insertTX(r,-1),i++}catch(t){this.emit("error",t);continue}this.emit("unconfirmed",r,t)}}this.rejects.reset(),this.cache.sync(t.prevBlock),await this.cache.flush(),this.tip=t.prevBlock,0!==i&&this.logger.debug("Added %d txs back into the mempool for block %d.",i,t.height)}async _handleReorg(){const t=this.chain.height+1,e=await this.chain.getMedianTime(this.chain.tip),i=[];for(const[s,r]of this.map){const{tx:n}=r;if(n.isFinal(t,e)){if(n.version>1){let t=!1;for(const{sequence:e}of n.inputs)if(!(e&u.SEQUENCE_DISABLE_FLAG)){t=!0;break}if(t){i.push(s);continue}}r.coinbase&&i.push(s)}else i.push(s)}for(const t of i){const e=this.getEntry(t);e&&this.evictEntry(e)}}async reset(){const t=await this.locker.lock();try{return await this._reset()}finally{t()}}async _reset(){this.logger.info("Mempool reset (%d txs removed).",this.map.size),this.size=0,this.waiting.clear(),this.orphans.clear(),this.map.clear(),this.spents.clear(),this.coinIndex.reset(),this.txIndex.reset(),this.freeCount=0,this.lastTime=0,this.fees&&this.fees.reset(),this.rejects.reset(),this.options.persistent&&(await this.cache.wipe(),this.cache.clear()),this.tip=this.chain.tip.hash}limitSize(t){const e=this.options.maxSize;if(this.size<=e)return!1;const i=e-e/10,r=this.options.expiryTime,n=f.now();let o=f.bench();const a=new h(M);for(const t of this.map.values())this.hasDepends(t.tx)||(n<t.time+r?a.insert(t):(this.logger.debug("Removing package %s from mempool (too old).",t.txid()),this.evictEntry(t)));if(this.size<=i)return!this.hasEntry(t);for(this.logger.debug("(bench) Heap mempool traversal: %d.",f.bench(o)),o=f.bench(),this.logger.debug("(bench) Heap mempool queue size: %d.",a.size());a.size()>0;){const t=a.shift(),e=t.hash("hex");if(s(this.hasEntry(e)),this.logger.debug("Removing package %s from mempool (low fee).",t.txid()),this.evictEntry(t),this.size<=i)break}return this.logger.debug("(bench) Heap mempool map removal: %d.",f.bench(o)),!this.hasEntry(t)}getTX(t){const e=this.map.get(t);return e?e.tx:null}getEntry(t){return this.map.get(t)}getCoin(t,e){const i=this.map.get(t);return i?this.isSpent(t,e)?null:e>=i.tx.outputs.length?null:b.fromTX(i.tx,e,-1):null}isSpent(t,e){const i=w.toKey(t,e);return this.spents.has(i)}getSpent(t,e){const i=w.toKey(t,e);return this.spents.get(i)}getSpentTX(t,e){const i=w.toKey(t,e),s=this.spents.get(i);return s?s.tx:null}getCoinsByAddress(t){Array.isArray(t)||(t=[t]);const e=[];for(const i of t){const t=g.getHash(i,"hex"),s=this.coinIndex.get(t);for(const t of s)e.push(t)}return e}getTXByAddress(t){Array.isArray(t)||(t=[t]);const e=[];for(const i of t){const t=g.getHash(i,"hex"),s=this.txIndex.get(t);for(const t of s)e.push(t)}return e}getMetaByAddress(t){Array.isArray(t)||(t=[t]);const e=[];for(const i of t){const t=g.getHash(i,"hex"),s=this.txIndex.getMeta(t);for(const t of s)e.push(t)}return e}getMeta(t){const e=this.getEntry(t);if(!e)return null;const i=v.fromTX(e.tx);return i.mtime=e.time,i}hasEntry(t){return this.map.has(t)}has(t){return!!this.locker.has(t)||!!this.hasOrphan(t)||this.hasEntry(t)}exists(t){return!!this.locker.pending(t)||!!this.hasOrphan(t)||this.hasEntry(t)}hasReject(t){return this.rejects.test(t,"hex")}async addTX(t,e){const i=t.hash("hex"),s=await this.locker.lock(i);try{return await this._addTX(t,e)}finally{s()}}async _addTX(t,e){let i;null==e&&(e=-1);try{i=await this.insertTX(t,e)}catch(e){throw"VerifyError"===e.type&&this.rejects.add(t.hash()),e}return f.now()-this.lastFlush>10&&(await this.cache.flush(),this.lastFlush=f.now()),i}async insertTX(t,e){s(!t.mutable,"Cannot add mutable TX to mempool.");const i=l.lockFlags.STANDARD_LOCKTIME_FLAGS,r=this.chain.height,n=t.hash("hex"),[o,a,h]=t.checkSanity();if(!o)throw new p(t,"invalid",a,h);if(t.isCoinbase())throw new p(t,"invalid","coinbase",100);if(this.options.requireStandard&&!this.chain.state.hasCSV()&&t.version>=2)throw new p(t,"nonstandard","premature-version2-tx",0);if(this.options.requireStandard){const[e,i,s]=t.checkStandard();if(!e)throw new p(t,"nonstandard",i,s);if(!this.options.replaceByFee&&t.isRBF())throw new p(t,"nonstandard","replace-by-fee",0)}if(!await this.verifyFinal(t,i))throw new p(t,"nonstandard","non-final",0);if(this.exists(n))throw new p(t,"alreadyknown","txn-already-in-mempool",0);if(await this.chain.hasCoins(t))throw new p(t,"alreadyknown","txn-already-known",0);if(this.isDoubleSpend(t))throw this.emit("conflict",t),new p(t,"duplicate","bad-txns-inputs-spent",0);const u=await this.getCoinView(t),c=this.maybeOrphan(t,u,e);if(c)return c;const f=k.fromTX(t,u,r);if(await this.verify(f,u),await this.addEntry(f,u),this.limitSize(n))throw new p(t,"insufficientfee","mempool full",0);return null}async verify(t,e){const i=this.chain.height+1,r=l.lockFlags.STANDARD_LOCKTIME_FLAGS,n=t.tx;if(!await this.verifyLocks(n,e,r))throw new p(n,"nonstandard","non-BIP68-final",0);if(this.options.requireStandard&&!n.hasStandardInputs(e))throw new p(n,"nonstandard","bad-txns-nonstandard-inputs",0);if(t.sigops>c.MAX_TX_SIGOPS)throw new p(n,"nonstandard","bad-txns-too-many-sigops",0);const o=c.getMinFee(t.size,this.options.minRelay);if(this.options.relayPriority&&t.fee<o&&!t.isFree(i))throw new p(n,"insufficientfee","insufficient priority",0);if(this.options.limitFree&&t.fee<o){const e=f.now();if(this.freeCount*=Math.pow(1-1/600,e-this.lastTime),this.lastTime=e,this.freeCount>10*this.options.limitFreeRelay*1e3)throw new p(n,"insufficientfee","rate limited free transaction",0);this.freeCount+=t.size}if(this.options.rejectAbsurdFees&&t.fee>1e4*o)throw new p(n,"highfee","absurdly-high-fee",0);if(this.countAncestors(t)+1>this.options.maxAncestors)throw new p(n,"nonstandard","too-long-mempool-chain",0);const[a,h,u]=n.checkInputs(e,i);if(-1===a)throw new p(n,"invalid",h,u);const d=m.flags.STANDARD_VERIFY_FLAGS;if(await this.verifyInputs(n,e,d),this.options.paranoidChecks){const t=m.flags.MANDATORY_VERIFY_FLAGS;s(await this.verifyResult(n,e,t),"BUG: Verify failed for mandatory but not standard.")}}async verifyResult(t,e,i){try{await this.verifyInputs(t,e,i)}catch(t){if("VerifyError"===t.type)return!1;throw t}return!0}async verifyInputs(t,e,i){if(!await t.verifyAsync(e,i,this.workers)){if(i&m.flags.ONLY_STANDARD_VERIFY_FLAGS&&(i&=~m.flags.ONLY_STANDARD_VERIFY_FLAGS,await t.verifyAsync(e,i,this.workers)))throw new p(t,"nonstandard","non-mandatory-script-verify-flag",0);throw new p(t,"nonstandard","mandatory-script-verify-flag",100)}}async addEntry(t,e){const i=t.tx;this.trackEntry(t,e),this.updateAncestors(t,B),this.emit("tx",i,e),this.emit("add entry",t),this.fees&&this.fees.processTX(t,this.chain.synced),this.logger.debug("Added %s to mempool (txs=%d).",i.txid(),this.map.size),this.cache.save(t),await this.handleOrphans(i)}removeEntry(t){const e=t.tx,i=e.hash("hex");this.untrackEntry(t),this.fees&&this.fees.removeTX(i),this.cache.remove(e.hash()),this.emit("remove entry",t)}evictEntry(t){this.removeSpenders(t),this.updateAncestors(t,P),this.removeEntry(t)}removeSpenders(t){const e=t.tx,i=e.hash("hex");for(let t=0;t<e.outputs.length;t++){const e=this.getSpent(i,t);e&&(this.removeSpenders(e),this.removeEntry(e))}}countAncestors(t){return this._countAncestors(t,new Set,t,O)}updateAncestors(t,e){return this._countAncestors(t,new Set,t,e)}_countAncestors(t,e,i,s){const r=t.tx;for(const{prevout:t}of r.inputs){const r=t.hash,n=this.getEntry(r);if(n&&!e.has(r)){if(e.add(r),s(n,i),e.size>this.options.maxAncestors)break;if(this._countAncestors(n,e,i,s),e.size>this.options.maxAncestors)break}}return e.size}countDescendants(t){return this._countDescendants(t,new Set)}_countDescendants(t,e){const i=t.tx,s=i.hash("hex");for(let t=0;t<i.outputs.length;t++){const i=this.getSpent(s,t);if(!i)continue;const r=i.hash("hex");e.has(r)||(e.add(r),this._countDescendants(i,e))}return e.size}getAncestors(t){return this._getAncestors(t,[],new Set)}_getAncestors(t,e,i){const s=t.tx;for(const{prevout:t}of s.inputs){const s=t.hash,r=this.getEntry(s);r&&(i.has(s)||(i.add(s),e.push(r),this._getAncestors(r,e,i)))}return e}getDescendants(t){return this._getDescendants(t,[],new Set)}_getDescendants(t,e,i){const s=t.tx,r=s.hash("hex");for(let t=0;t<s.outputs.length;t++){const s=this.getSpent(r,t);if(!s)continue;const n=s.hash("hex");i.has(n)||(i.add(n),e.push(s),this._getDescendants(s,e,i))}return e}getDepends(t){const e=t.getPrevout(),i=[];for(const t of e)this.hasEntry(t)&&i.push(t);return i}hasDepends(t){for(const{prevout:e}of t.inputs)if(this.hasEntry(e.hash))return!0;return!1}getBalance(){let t=0;for(const[e,i]of this.map){const s=i.tx;for(let i=0;i<s.outputs.length;i++){const s=this.getCoin(e,i);s&&(t+=s.value)}}return t}getHistory(){const t=[];for(const e of this.map.values())t.push(e.tx);return t}getOrphan(t){return this.orphans.get(t)}hasOrphan(t){return this.orphans.has(t)}maybeOrphan(t,e,i){const s=new Set,r=[];for(const{prevout:i}of t.inputs)if(!e.hasEntry(i)){if(this.hasReject(i.hash))return this.logger.debug("Not storing orphan %s (rejected parents).",t.txid()),this.rejects.add(t.hash()),r;if(this.hasEntry(i.hash))return this.logger.debug("Not storing orphan %s (non-existent output).",t.txid()),this.rejects.add(t.hash()),r;s.add(i.hash)}if(0===s.size)return null;if(t.getSize()>c.MAX_TX_SIZE)return this.logger.debug("Ignoring large orphan: %s",t.txid()),this.rejects.add(t.hash()),r;if(0===this.options.maxOrphans)return r;this.limitOrphans();const n=t.hash("hex");for(const t of s.keys())this.waiting.has(t)||this.waiting.set(t,new Set),this.waiting.get(t).add(n),r.push(t);return this.orphans.set(n,new class{constructor(t,e,i){this.raw=t.toRaw(),this.missing=e,this.id=i}toTX(){return y.fromRaw(this.raw)}}(t,r.length,i)),this.logger.debug("Added orphan %s to mempool.",t.txid()),this.emit("add orphan",t),r}async handleOrphans(t){const e=this.resolveOrphans(t);for(const i of e){let e,s;try{e=i.toTX()}catch(t){this.logger.warning("%s %s","Warning: possible memory corruption.","Orphan failed deserialization.");continue}try{s=await this.insertTX(e,i.id)}catch(t){if("VerifyError"===t.type){this.logger.debug("Could not resolve orphan %s: %s.",e.txid(),t.message),this.rejects.add(e.hash()),this.emit("bad orphan",t,i.id);continue}throw t}s&&s.length>0?(this.logger.debug("Transaction %s was double-orphaned in mempool.",e.txid()),this.removeOrphan(e.hash("hex"))):this.logger.debug("Resolved orphan %s in mempool.",e.txid())}}resolveOrphans(t){const e=t.hash("hex"),i=this.waiting.get(e);if(!i)return[];s(i.size>0);const r=[];for(const t of i.keys()){const e=this.getOrphan(t);s(e),0==--e.missing&&(this.orphans.delete(t),r.push(e))}return this.waiting.delete(e),r}removeOrphan(t){const e=this.getOrphan(t);if(!e)return!1;let i;try{i=e.toTX()}catch(e){return this.orphans.delete(t),this.logger.warning("%s %s","Warning: possible memory corruption.","Orphan failed deserialization."),!1}for(const e of i.getPrevout()){const i=this.waiting.get(e);i&&(s(i.has(t)),i.delete(t),0===i.size&&this.waiting.delete(e))}return this.orphans.delete(t),this.emit("remove orphan",i),!0}limitOrphans(){if(this.orphans.size<this.options.maxOrphans)return!1;let t,e=d.randomRange(0,this.orphans.size);for(t of this.orphans.keys()){if(0===e)break;e--}return s(t),this.logger.debug("Removing orphan %s from mempool.",f.revHex(t)),this.removeOrphan(t),!0}isDoubleSpend(t){for(const{prevout:e}of t.inputs){const{hash:t,index:i}=e;if(this.isSpent(t,i))return!0}return!1}async getSpentView(t){const e=await this.locker.lock();try{return await this.getCoinView(t)}finally{e()}}async getCoinView(t){const e=new _;for(const{prevout:i}of t.inputs){const{hash:t,index:s}=i,r=this.getTX(t);if(r){s<r.outputs.length&&e.addIndex(r,s,-1);continue}const n=await this.chain.readCoin(i);n&&e.addEntry(i,n)}return e}getSnapshot(){const t=[];for(const e of this.map.keys())t.push(e);return t}verifyLocks(t,e,i){return this.chain.verifyLocks(this.chain.tip,t,e,i)}verifyFinal(t,e){return this.chain.verifyFinal(this.chain.tip,t,e)}trackEntry(t,e){const i=t.tx,r=i.hash("hex");s(!this.map.has(r)),this.map.set(r,t),s(!i.isCoinbase());for(const{prevout:e}of i.inputs){const i=e.toKey();this.spents.set(i,t)}this.options.indexAddress&&e&&this.indexEntry(t,e),this.size+=t.memUsage()}untrackEntry(t){const e=t.tx,i=e.hash("hex");s(this.map.has(i)),this.map.delete(i),s(!e.isCoinbase());for(const{prevout:t}of e.inputs){const e=t.toKey();this.spents.delete(e)}this.options.indexAddress&&this.unindexEntry(t),this.size-=t.memUsage()}indexEntry(t,e){const i=t.tx;this.txIndex.insert(t,e);for(const{prevout:t}of i.inputs){const{hash:e,index:i}=t;this.coinIndex.remove(e,i)}for(let t=0;t<i.outputs.length;t++)this.coinIndex.insert(i,t)}unindexEntry(t){const e=t.tx,i=e.hash("hex");this.txIndex.remove(i);for(const{prevout:t}of e.inputs){const{hash:e,index:i}=t,s=this.getTX(e);s&&this.coinIndex.insert(s,i)}for(let t=0;t<e.outputs.length;t++)this.coinIndex.remove(i,t)}removeDoubleSpends(t){for(const{prevout:e}of t.inputs){const{hash:t,index:i}=e,s=this.getSpent(t,i);s&&(this.logger.debug("Removing double spender from mempool: %s.",s.txid()),this.evictEntry(s),this.emit("double spend",s))}}getSize(){return this.size}prioritise(t,e,i){-e>t.priority&&(e=-t.priority),t.priority+=e,-i>t.deltaFee&&(i=-t.deltaFee),0!==i&&(this.updateAncestors(t,N),t.deltaFee+=i,t.descFee+=i,this.updateAncestors(t,T))}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * mempoolentry.js - mempool entry object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(2),r=i(17),n=i(5),o=i(11),a=i(14);t.exports=class{constructor(t){this.tx=null,this.height=-1,this.size=0,this.sigops=0,this.priority=0,this.fee=0,this.deltaFee=0,this.time=0,this.value=0,this.coinbase=!1,this.dependencies=!1,this.descFee=0,this.descSize=0,t&&this.fromOptions(t)}fromOptions(t){return this.tx=t.tx,this.height=t.height,this.size=t.size,this.sigops=t.sigops,this.priority=t.priority,this.fee=t.fee,this.deltaFee=t.deltaFee,this.time=t.time,this.value=t.value,this.coinbase=t.coinbase,this.dependencies=t.dependencies,this.descFee=t.descFee,this.descSize=t.descSize,this}static fromOptions(t){return(new this).fromOptions(t)}fromTX(t,e,i){const s=o.flags.STANDARD_VERIFY_FLAGS,r=t.getChainValue(e),a=t.getSigopsCount(e,s),h=t.getSize(),l=t.getPriority(e,i,h),u=t.getFee(e);let c=!1,f=!1;for(const{prevout:i}of t.inputs)e.isCoinbase(i)&&(f=!0),-1===e.getHeight(i)&&(c=!0);return this.tx=t,this.height=i,this.size=h,this.sigops=a,this.priority=l,this.fee=u,this.deltaFee=u,this.time=n.now(),this.value=r,this.coinbase=f,this.dependencies=c,this.descFee=u,this.descSize=h,this}static fromTX(t,e,i){return(new this).fromTX(t,e,i)}hash(t){return this.tx.hash(t)}txid(){return this.tx.txid()}getPriority(t){const e=(t-this.height)*this.value/this.size;let i=this.priority+Math.floor(e);return i<0&&(i=0),i}getFee(){return this.fee}getDeltaFee(){return this.deltaFee}getRate(){return r.getRate(this.size,this.fee)}getDeltaRate(){return r.getRate(this.size,this.deltaFee)}getDescRate(){return r.getRate(this.descSize,this.descFee)}memUsage(){const t=this.tx;let e=0;e+=192,e+=48,e+=48,e+=192,e+=80,e+=88,e+=80,e+=48,e+=32;for(const i of t.inputs){e+=112,e+=120,e+=88,e+=40,e+=80,e+=32,e+=40*i.script.code.length;for(const t of i.script.code)t.data&&(e+=80)}e+=32;for(const i of t.outputs){e+=104,e+=40,e+=80,e+=32,e+=40*i.script.code.length;for(const t of i.script.code)t.data&&(e+=80)}return e}isFree(t){return this.getPriority(t)>r.FREE_THRESHOLD}getSize(){return this.tx.getSize()+42}toRaw(){const t=s.write(this.getSize());return t.writeBytes(this.tx.toRaw()),t.writeU32(this.height),t.writeU32(this.size),t.writeU32(this.sigops),t.writeDouble(this.priority),t.writeU64(this.fee),t.writeU32(this.time),t.writeU64(this.value),t.writeU8(this.coinbase?1:0),t.writeU8(this.dependencies?1:0),t.render()}fromRaw(t){const e=s.read(t);return this.tx=a.fromReader(e),this.height=e.readU32(),this.size=e.readU32(),this.sigops=e.readU32(),this.priority=e.readDouble(),this.fee=e.readU64(),this.deltaFee=this.fee,this.time=e.readU32(),this.value=e.readU64(),this.coinbase=1===e.readU8(),this.dependencies=1===e.readU8(),this.descFee=this.fee,this.descSize=this.size,this}static fromRaw(t){return(new this).fromRaw(t)}}},function(t,e,i){"use strict";
/*!
 * addrindexer.js - addr indexer
 * Copyright (c) 2018, the bcoin developers (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(33),n=i(300),o=i(12),a=i(111);t.exports=class extends a{constructor(t){super("addr",t),this.db=r.create(this.options)}async indexBlock(t,e,i){const r=this.db.batch();for(let t=0;t<e.txs.length;t++){const o=e.txs[t],a=o.hash();for(const t of o.getHashes(i))r.put(n.T.build(t,a),null);if(!o.isCoinbase())for(const{prevout:t}of o.inputs){const{hash:e,index:o}=t,a=i.getOutput(t);s(a);const h=a.getHash();h&&r.del(n.C.build(h,e,o))}for(let t=0;t<o.outputs.length;t++){const e=o.outputs[t].getHash();e&&r.put(n.C.build(e,a,t),null)}}return r.write()}async unindexBlock(t,e,i){const r=this.db.batch();for(let t=0;t<e.txs.length;t++){const o=e.txs[t],a=o.hash();for(const t of o.getHashes(i))r.del(n.T.build(t,a));if(!o.isCoinbase())for(const{prevout:t}of o.inputs){const{hash:e,index:o}=t,a=i.getOutput(t);s(a);const h=a.getHash();h&&r.put(n.C.build(h,e,o),null)}for(let t=0;t<o.outputs.length;t++){const e=o.outputs[t].getHash();e&&r.del(n.C.build(e,a,t))}}return r.write()}async getCoinsByAddress(t){Array.isArray(t)||(t=[t]);const e=[];for(const i of t){const t=o.getHash(i),r=await this.db.keys({gte:n.C.min(t),lte:n.C.max(t),parse:t=>{const[,e,i]=n.C.parse(t);return[e,i]}});for(const[t,i]of r){const r=await this.client.getCoin(t,i);s(r),e.push(r)}}return e}async getHashesByAddress(t){const e=Object.create(null);for(const i of t){const t=o.getHash(i);await this.db.keys({gte:n.T.min(t),lte:n.T.max(t),parse:t=>{const[,i]=n.T.parse(t);e[i]=!0}})}return Object.keys(e)}}},function(t,e,i){"use strict";(function(e){
/*!
 * txmeta.js - extended transaction object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(5),o=i(14);class a{constructor(t){this.tx=new o,this.mtime=n.now(),this.height=-1,this.block=null,this.time=0,this.index=-1,t&&this.fromOptions(t)}fromOptions(t){return t.tx&&(s(t.tx instanceof o),this.tx=t.tx),null!=t.mtime&&(s(t.mtime>>>0===t.mtime),this.mtime=t.mtime),null!=t.height&&(s(Number.isSafeInteger(t.height)),this.height=t.height),void 0!==t.block&&(s(null===t.block||"string"==typeof t.block),this.block=t.block),null!=t.time&&(s(t.time>>>0===t.time),this.time=t.time),null!=t.index&&(s(Number.isSafeInteger(t.index)),this.index=t.index),this}static fromOptions(t){return(new this).fromOptions(t)}fromTX(t,e,i){return this.tx=t,e&&(this.height=e.height,this.block=e.hash,this.time=e.time,this.index=i),this}static fromTX(t,e,i){return(new this).fromTX(t,e,i)}inspect(){return this.format()}format(t){const e=this.tx.format(t,null,this.index);return e.mtime=this.mtime,e.height=this.height,e.block=this.block?n.revHex(this.block):null,e.time=this.time,e}toJSON(){return this.getJSON()}getJSON(t,e,i){const s=this.tx.getJSON(t,e,null,this.index);return s.mtime=this.mtime,s.height=this.height,s.block=this.block?n.revHex(this.block):null,s.time=this.time,s.confirmations=0,null!=i&&(s.confirmations=i-this.height+1),s}fromJSON(t){return this.tx.fromJSON(t),s(t.mtime>>>0===t.mtime),s(Number.isSafeInteger(t.height)),s(!t.block||"string"==typeof t.block),s(t.time>>>0===t.time),s(Number.isSafeInteger(t.index)),this.mtime=t.mtime,this.height=t.height,this.block=n.revHex(t.block),this.index=t.index,this}static fromJSON(t){return(new this).fromJSON(JSON)}getSize(){let t=0;return t+=this.tx.getSize(),t+=4,this.block?(t+=1,t+=32,t+=12):t+=1,t}toRaw(){const t=this.getSize(),e=r.write(t);return this.tx.toWriter(e),e.writeU32(this.mtime),this.block?(e.writeU8(1),e.writeHash(this.block),e.writeU32(this.height),e.writeU32(this.time),e.writeU32(this.index)):e.writeU8(0),e.render()}fromRaw(t){const e=r.read(t);return this.tx.fromReader(e),this.mtime=e.readU32(),1===e.readU8()&&(this.block=e.readHash("hex"),this.height=e.readU32(),this.time=e.readU32(),this.index=e.readU32(),2147483647===this.index&&(this.index=-1)),this}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}static isTXMeta(t){return t instanceof a}}t.exports=a}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * txindexer.js - tx indexer
 * Copyright (c) 2018, the bcoin developers (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(33),r=i(301),n=i(141),o=i(111);t.exports=class extends o{constructor(t){super("tx",t),this.db=s.create(this.options)}async indexBlock(t,e,i){const s=this.db.batch();for(let i=0;i<e.txs.length;i++){const o=e.txs[i],a=o.hash(),h=n.fromTX(o,t,i);s.put(r.t.build(a),h.toRaw())}return s.write()}async unindexBlock(t,e,i){const s=this.db.batch();for(let t=0;t<e.txs.length;t++){const i=e.txs[t].hash();s.del(r.t.build(i))}return s.write()}async getMeta(t){const e=await this.db.get(r.t.build(t));return e?n.fromRaw(e):null}async getTX(t){const e=await this.getMeta(t);return e?e.tx:null}async hasTX(t){return this.db.has(r.t.build(t))}}},function(t,e,i){"use strict";(function(e){
/*!
 * chainclient.js - chain client for bcoin
 * Copyright (c) 2018, the bcoin developers (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(149);t.exports=class extends r{constructor(t){super(),this.chain=t,this.network=t.network,this.filter=null,this.opened=!1,this.init()}init(){this.chain.on("connect",async(t,e,i)=>{this.opened&&await this.emitAsync("block connect",t,e,i)}),this.chain.on("disconnect",async(t,e,i)=>{this.opened&&await this.emitAsync("block disconnect",t,e,i)}),this.chain.on("reset",async t=>{this.opened&&await this.emitAsync("chain reset",t)})}async open(t){s(!this.opened,"ChainClient is already open."),this.opened=!0,e(()=>this.emit("connect"))}async close(){s(this.opened,"ChainClient is not open."),this.opened=!1,e(()=>this.emit("disconnect"))}async getTip(){return this.chain.tip}async getEntry(t){const e=await this.chain.getEntry(t);return e&&await this.chain.isMainChain(e)?e:null}async getCoin(t,e){return this.chain.getCoin(t,e)}async getHashes(t=-1,e=-1){return this.chain.getHashes(t,e)}async getBlock(t){return await this.chain.getBlock(t)||null}async getBlockView(t){return this.chain.getBlockView(t)}async rescan(t){for(let e=t;;e++){const t=await this.getEntry(e);if(!t)break;const i=await this.getBlock(t.hash);s(i);const r=await this.getBlockView(i);s(r),await this.emitAsync("block rescan",t,i,r)}}}}).call(this,i(26).setImmediate)},function(t,e,i){"use strict";
/*!
 * layout.js - indexer layout for bcoin
 * Copyright (c) 2018, the bcoin developers (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(33),r={V:s.key("V"),O:s.key("O"),h:s.key("h",["uint32"]),R:s.key("R")};t.exports=r},function(t,e,i){"use strict";
/*!
 * sha512.js - sha512 for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 */t.exports=i(317)},function(t,e,i){"use strict";(function(t,s){
/*!
 * pbkdf2.js - pbkdf2 for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),n=(t.crypto||t.msCrypto||{}).subtle||{};e.derive=function(t,e,i,n,o){r(t&&"string"==typeof t.id),r(s.isBuffer(e)),r(s.isBuffer(i)),r(n>>>0===n),r(o>>>0===o);const a=t.size,h=Math.ceil(o/a),l=s.allocUnsafe(o),u=s.allocUnsafe(i.length+4),c=s.allocUnsafe(a);let f=0;i.copy(u,0);for(let s=0;s<h;s++){u.writeUInt32BE(s+1,i.length);let r=t.mac(u,e);r.copy(c,0);for(let i=1;i<n;i++){r=t.mac(r,e);for(let t=0;t<a;t++)c[t]^=r[t]}c.copy(l,f),f+=a}return l},e.deriveAsync=async function(t,i,o,a,h){r(t&&"string"==typeof t.id),r(s.isBuffer(i)),r(s.isBuffer(o)),r(a>>>0===a),r(h>>>0===h);const l=function(t){switch(t.id){case"sha1":return"SHA-1";case"sha256":return"SHA-256";case"sha384":return"SHA-384";case"sha512":return"SHA-512";default:return null}}(t);if(!n.importKey||!n.deriveBits||!l)return e.derive(t,i,o,a,h);const u={name:"PBKDF2",salt:o,iterations:a,hash:l},c=await n.importKey("raw",i,{name:"PBKDF2"},!1,["deriveBits"]),f=await n.deriveBits(u,c,8*h);return s.from(f)}}).call(this,i(10),i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * hd.js - hd keys for bcoin
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(114),n=i(75),o=i(113),a=i(112),h=i(226),l=e;l.fromBase58=function(t,e){return o.isBase58(t)?o.fromBase58(t,e):a.fromBase58(t,e)},l.generate=function(){return o.generate()},l.fromSeed=function(t){return o.fromSeed(t)},l.fromMnemonic=function(t){return o.fromMnemonic(t)},l.fromJSON=function(t,e){return t.xprivkey?o.fromJSON(t,e):a.fromJSON(t,e)},l.fromRaw=function(t,e){return o.isRaw(t,e)?o.fromRaw(t,e):a.fromRaw(t,e)},l.from=function(t,e){if(s(t,"Options required."),l.isHD(t))return t;if(l.isBase58(t,e))return l.fromBase58(t,e);if(l.isRaw(t,e))return l.fromRaw(t,e);if(t&&"object"==typeof t)return l.fromMnemonic(t);throw new Error("Cannot create HD key from bad options.")},l.isBase58=function(t,e){return o.isBase58(t,e)||a.isBase58(t,e)},l.isRaw=function(t,e){return o.isRaw(t,e)||a.isRaw(t,e)},l.isHD=function(t){return o.isHDPrivateKey(t)||a.isHDPublicKey(t)},l.isPrivate=function(t){return o.isHDPrivateKey(t)},l.isPublic=function(t){return a.isHDPublicKey(t)},l.common=r,l.HD=l,l.Mnemonic=n,l.PrivateKey=o,l.PublicKey=a,l.HDPrivateKey=o,l.HDPublicKey=a,l.wordlist=h},function(t,e,i){"use strict";
/*!
 * errors.js - error objects for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0);class r extends Error{constructor(t,e,i,n,o){super(),s("string"==typeof e),s("string"==typeof i),s(n>=0),this.type="VerifyError",this.message="",this.code=e,this.reason=i,this.score=n,this.hash=t.hash("hex"),this.malleated=o||!1,this.message=`Verification failure: ${i}`+` (code=${e} score=${n} hash=${t.rhash()})`,Error.captureStackTrace&&Error.captureStackTrace(this,r)}}e.VerifyError=r},function(t,e,i){"use strict";
/*!
 * bevent.js - event emitter which resolves promises.
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(326)},function(t,e,i){"use strict";
/*!
 * int64.js - int64 object for javascript.
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/chjj/n64
 */function s(t){h(this instanceof s,"this","N64"),h(0===t||1===t,"sign","bit"),this.hi=0,this.lo=0,this.sign=t}function r(t,e){if(!(this instanceof r))return new r(t,e);s.call(this,0),this.from(t,e)}function n(t,e){if(!(this instanceof n))return new n(t,e);s.call(this,1),this.from(t,e)}function o(t){if(null==t)return 10;if("number"==typeof t)return t;switch(t){case"bin":return 2;case"oct":return 8;case"dec":return 10;case"hex":return 16}return 0}function a(t){if(Math.clz32)return 32-Math.clz32(t);let e=31;for(;e>=0&&0==(t&1<<e);e--);return e+1}function h(t,e,i){if(!t){const t=new TypeError(`'${e}' must be a(n) ${i}.`);throw Error.captureStackTrace&&Error.captureStackTrace(t,h),t}}function l(t){return"number"==typeof t&&isFinite(t)}function u(t){return Array.isArray?Array.isArray(t):"Array"==={}.toString.call(t).slice(8,-1)}function c(t,e){return t.allocUnsafe?t.allocUnsafe(e):new t(e)}function f(t,e){return t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24}function d(t,e){return t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3]}function p(t,e,i){t[i]=255&e,t[i+1]=e>>>8&255,t[i+2]=e>>>16&255,t[i+3]=e>>>24&255}function g(t,e,i){t[i]=e>>>24&255,t[i+1]=e>>>16&255,t[i+2]=e>>>8&255,t[i+3]=255&e}s.prototype._add=function(t,e){const i=this.hi,s=this.lo,r=s+e|0,n=s>>31,o=e>>31,a=(i+t|0)+(1&(n&o|~(r>>31)&(n^o)));return this.hi=0|a,this.lo=r,this},s.prototype.iadd=function(t){return h(s.isN64(t),"operand","int64"),this._add(t.hi,t.lo)},s.prototype.iaddn=function(t){return h(l(t),"operand","number"),this._add(t>>31&-this.sign,0|t)},s.prototype.add=function(t){return this.clone().iadd(t)},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype._sub=function(t,e){return t=~t,-1==(e=~e)?(e=0,t+=1,t|=0):e+=1,this._add(t,e)},s.prototype.isub=function(t){return h(s.isN64(t),"operand","int64"),this._sub(t.hi,t.lo)},s.prototype.isubn=function(t){return h(l(t),"operand","number"),this._sub(t>>31&-this.sign,0|t)},s.prototype.sub=function(t){return this.clone().isub(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype._mul=function(t,e){const i=this.hi,s=this.lo,r=65535&i,n=s>>>16,o=65535&s,a=65535&t,h=e>>>16,l=65535&e;let u=0,c=0,f=0,d=0;f+=(d+=o*l)>>>16,c+=(f+=n*l)>>>16,f&=65535,c+=(f+=o*h)>>>16,u+=(c+=r*l)>>>16,c&=65535,u+=(c+=n*h)>>>16,c&=65535,u+=(c+=o*a)>>>16,u+=(i>>>16)*l+r*h+n*a+o*(t>>>16);const p=(u&=65535)<<16|(c&=65535),g=(f&=65535)<<16|(d&=65535);return this.hi=p,this.lo=g,this},s.prototype.imul=function(t){return h(s.isN64(t),"multiplicand","int64"),this._mul(t.hi,t.lo)},s.prototype.imuln=function(t){return h(l(t),"multiplicand","number"),this._mul(t>>31&-this.sign,0|t)},s.prototype.mul=function(t){return this.clone().imul(t)},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.idiv=function(t){let e=this;if(h(s.isN64(t),"divisor","int64"),t.isZero())throw new Error("Cannot divide by zero.");if(e.isZero())return e;if(e.eq(t))return e.set(1);if(e.isSafe()&&t.isSafe()){const i=function(t){return t<0?-Math.floor(-t):Math.floor(t)}(e.toDouble()/t.toDouble());return e.set(i)}let i=!1;e.sign&&(e.hi<0?t.hi<0?(e=e.ineg(),t=t.neg()):(e=e.ineg(),i=!0):t.hi<0&&(t=t.neg(),i=!0));const n=e.toU64(),o=t.toU64();if(n.lt(o))return e.set(0);if(n.ushrn(1).lt(o))return e.set(i?-1:1);const a=new r,l=new r;let u=n.bitLength();for(;u--;)l.ishln(1),l.lo|=n.testn(u),l.gte(o)&&(l.isub(o),a.setn(u,1));return e.hi=a.hi,e.lo=a.lo,i&&e.ineg(),e},s.prototype.idivn=function(t){return h(l(t),"divisor","number"),this.idiv(this._small(t))},s.prototype.div=function(t){return this.clone().idiv(t)},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.imod=function(t){const e=this;if(h(s.isN64(t),"divisor","int64"),t.isZero())throw new Error("Cannot divide by zero.");if(e.isZero())return e;if(e.eq(t))return e.set(0);if(e.isSafe()&&t.isSafe()){const i=e.toDouble()%t.toDouble();return e.set(i)}return e.isub(e.div(t).imul(t))},s.prototype.imodn=function(t){return h(l(t),"divisor","number"),this.imod(this._small(t))},s.prototype.mod=function(t){return this.clone().imod(t)},s.prototype.modn=function(t){return this.clone().imodn(t)},s.prototype.ipow=function(t){return h(s.isN64(t),"exponent","int64"),this.ipown(t.lo)},s.prototype.ipown=function(t){if(h(l(t),"exponent","number"),this.isZero())return this;const e=this.clone(),i=this;let s=t>>>0;for(i.set(1);s>0;)1&s&&i.imul(e),s>>>=1,e.imul(e);return i},s.prototype.pow=function(t){return this.clone().ipow(t)},s.prototype.pown=function(t){return this.clone().ipown(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this)},s.prototype.iand=function(t){return h(s.isN64(t),"operand","int64"),this.hi&=t.hi,this.lo&=t.lo,this},s.prototype.iandn=function(t){return h(l(t),"operand","number"),this.hi&=t>>31&-this.sign,this.lo&=0|t,this},s.prototype.and=function(t){return this.clone().iand(t)},s.prototype.andn=function(t){return this.clone().iandn(t)},s.prototype.ior=function(t){return h(s.isN64(t),"operand","int64"),this.hi|=t.hi,this.lo|=t.lo,this},s.prototype.iorn=function(t){return h(l(t),"operand","number"),this.hi|=t>>31&-this.sign,this.lo|=0|t,this},s.prototype.or=function(t){return this.clone().ior(t)},s.prototype.orn=function(t){return this.clone().iorn(t)},s.prototype.ixor=function(t){return h(s.isN64(t),"operand","int64"),this.hi^=t.hi,this.lo^=t.lo,this},s.prototype.ixorn=function(t){return h(l(t),"operand","number"),this.hi^=t>>31&-this.sign,this.lo^=0|t,this},s.prototype.xor=function(t){return this.clone().ixor(t)},s.prototype.xorn=function(t){return this.clone().ixorn(t)},s.prototype.inot=function(){return this.hi=~this.hi,this.lo=~this.lo,this},s.prototype.not=function(){return this.clone().inot()},s.prototype.ishl=function(t){return h(s.isN64(t),"bits","int64"),this.ishln(t.lo)},s.prototype.ishln=function(t){if(h(l(t),"bits","number"),0==(t&=63))return this;let e=this.hi,i=this.lo;return t<32?(e<<=t,e|=i>>>32-t,i<<=t):(e=i<<t-32,i=0),this.hi=e,this.lo=i,this},s.prototype.shl=function(t){return this.clone().ishl(t)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ishr=function(t){return h(s.isN64(t),"bits","int64"),this.ishrn(t.lo)},s.prototype.ishrn=function(t){if(!this.sign)return this.iushrn(t);if(h(l(t),"bits","number"),0==(t&=63))return this;let e=this.hi,i=this.lo;return t<32?(i>>>=t,i|=e<<32-t,e>>=t):(i=e>>t-32,e>>=31),this.hi=e,this.lo=i,this},s.prototype.shr=function(t){return this.clone().ishr(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.iushr=function(t){return h(s.isN64(t),"bits","int64"),this.iushrn(t.lo)},s.prototype.iushrn=function(t){if(h(l(t),"bits","number"),0==(t&=63))return this;let e=this.hi,i=this.lo;return t<32?(i>>>=t,i|=e<<32-t,e>>>=t):(i=e>>>t-32,e=0),this.hi=0|e,this.lo=0|i,this},s.prototype.ushr=function(t){return this.clone().iushr(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.setn=function(t,e){return h(l(t),"bit","number"),(t&=63)<32?e?this.lo|=1<<t:this.lo&=~(1<<t):e?this.hi|=1<<t-32:this.hi&=~(1<<t-32),this},s.prototype.testn=function(t){return h(l(t),"bit","number"),(t&=63)<32?this.lo>>>t&1:this.hi>>>t-32&1},s.prototype.setb=function(t,e){return h(l(t),"pos","number"),h(l(e),"ch","number"),e&=255,(t&=7)<4?(this.lo&=~(255<<8*t),this.lo|=e<<8*t):(this.hi&=~(255<<8*(t-4)),this.hi|=e<<8*(t-4)),this},s.prototype.orb=function(t,e){return h(l(t),"pos","number"),h(l(e),"ch","number"),e&=255,(t&=7)<4?this.lo|=e<<8*t:this.hi|=e<<8*(t-4),this},s.prototype.getb=function(t){return h(l(t),"pos","number"),(t&=7)<4?this.lo>>8*t&255:this.hi>>8*(t-4)&255},s.prototype.imaskn=function(t){return h(l(t),"bit","number"),(t&=63)<32?(this.hi=0,this.lo&=(1<<t)-1):(this.hi&=(1<<t-32)-1,this.lo&=4294967295),this},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.andln=function(t){return h(l(t),"operand","number"),this.lo&t},s.prototype.ineg=function(){let t=~this.hi,e=~this.lo;return-1===e?(e=0,t+=1,t|=0):e+=1,this.hi=t,this.lo=e,this},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.iabs=function(){return this.isNeg()&&this.ineg(),this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._cmp=function(t,e){const i=this;let s=i.hi,r=i.lo;if(s===t&&r===e)return 0;let n=!1;if(i.sign){const e=s<0,i=t<0;if(e&&!i)return-1;if(!e&&i)return 1;n=e}return n||(s>>>=0,t>>>=0),s<t?-1:s>t?1:(r>>>=0)<(e>>>=0)?-1:1},s.prototype.cmp=function(t){return h(s.isN64(t),"value","int64"),this._cmp(t.hi,t.lo)},s.prototype.cmpn=function(t){return h(l(t),"value","number"),this._cmp(t>>31&-this.sign,0|t)},s.prototype.eq=function(t){return h(s.isN64(t),"value","int64"),this.hi===t.hi&&this.lo===t.lo},s.prototype.eqn=function(t){return h(l(t),"value","number"),this.hi===(t>>31&-this.sign)&&this.lo===(0|t)},s.prototype.gt=function(t){return this.cmp(t)>0},s.prototype.gtn=function(t){return this.cmpn(t)>0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.lt=function(t){return this.cmp(t)<0},s.prototype.ltn=function(t){return this.cmpn(t)<0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.isZero=function(){return 0===this.hi&&0===this.lo},s.prototype.isNeg=function(){return 1===this.sign&&this.hi<0},s.prototype.isOdd=function(){return 1==(1&this.lo)},s.prototype.isEven=function(){return 0==(1&this.lo)},s.prototype.clone=function(){const t=new this.constructor;return t.hi=this.hi,t.lo=this.lo,t},s.prototype.inject=function(t){return h(s.isN64(t),"value","int64"),this.hi=t.hi,this.lo=t.lo,this},s.prototype.set=function(t){h(function(t){return Number.isSafeInteger?Number.isSafeInteger(t):l(t)&&Math.floor(t)===t&&t>=-9007199254740991&&t<=9007199254740991}(t),"number","integer");let e=!1;return t<0&&(t=-t,e=!0),this.hi=t*(1/4294967296)|0,this.lo=0|t,e&&this.ineg(),this},s.prototype.join=function(t,e){return h(l(t),"hi","number"),h(l(e),"lo","number"),this.hi=0|t,this.lo=0|e,this},s.prototype._small=function(t){const e=new this.constructor;return e.hi=t>>31&-this.sign,e.lo=0|t,e},s.prototype.bitLength=function(){let t=this;return this.isNeg()&&(t=this.neg()),0===t.hi?a(t.lo):a(t.hi)+32},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.isSafe=function(){let t=this.hi;return this.isNeg()&&(t=~t,0===this.lo&&(t+=1)),0==(4292870144&t)},s.prototype.inspect=function(){let t="I64";return this.sign||(t="U64"),`<${t}: ${this.toString(10)}>`},s.prototype.readLE=function(t,e){return h(t&&"number"==typeof t.length,"data","arraylike"),h(e>>0===e,"offset","integer"),h(e+8<=t.length,"offset","valid offset"),this.lo=f(t,e),this.hi=f(t,e+4),e+8},s.prototype.readBE=function(t,e){return h(t&&"number"==typeof t.length,"data","arraylike"),h(e>>0===e,"offset","integer"),h(e+8<=t.length,"offset","valid offset"),this.hi=d(t,e),this.lo=d(t,e+4),e+8},s.prototype.readRaw=function(t,e){return this.readLE(t,e)},s.prototype.writeLE=function(t,e){return h(t&&"number"==typeof t.length,"data","arraylike"),h(e>>0===e,"offset","integer"),h(e+8<=t.length,"offset","valid offset"),p(t,this.lo,e),p(t,this.hi,e+4),e+8},s.prototype.writeBE=function(t,e){return h(t&&"number"==typeof t.length,"data","arraylike"),h(e>>0===e,"offset","integer"),h(e+8<=t.length,"offset","valid offset"),g(t,this.hi,e),g(t,this.lo,e+4),e+8},s.prototype.writeRaw=function(t,e){return this.writeLE(t,e)},s.prototype.toU64=function(){const t=new r;return t.hi=this.hi,t.lo=this.lo,t},s.prototype.toI64=function(){const t=new n;return t.hi=this.hi,t.lo=this.lo,t},s.prototype.toNumber=function(){if(!this.isSafe())throw new Error("Number exceeds 53 bits.");return this.toDouble()},s.prototype.toDouble=function(){let t=this.hi;return this.sign||(t>>>=0),4294967296*t+(this.lo>>>0)},s.prototype.toInt=function(){return this.sign?this.lo:this.lo>>>0},s.prototype.toBool=function(){return!this.isZero()},s.prototype.toBits=function(){return[this.hi,this.lo]},s.prototype.toObject=function(){return{hi:this.hi,lo:this.lo}},s.prototype.toString=function(t,e){if(t=o(t),null==e&&(e=0),h(t>>>0===t,"base","integer"),h(e>>>0===e,"pad","integer"),t<2||t>16)throw new Error("Base ranges between 2 and 16.");if(e>64)throw new Error("Maximum padding is 64 characters.");let i=this,s=!1;i.isNeg()&&(i=i.neg(),s=!0);let r=i.hi>>>0,n=i.lo>>>0,a="";do{const e=r%t;r-=e,r/=t;const i=(n+=4294967296*e)%t;n-=i,n/=t;let s=i;s+=s<10?48:87,a=String.fromCharCode(s)+a}while(n>0||r>0);for(;a.length<e;)a="0"+a;return s&&(a="-"+a),a},s.prototype.toJSON=function(){return this.toString(16,16)},s.prototype.toBN=function(t){const e=this.isNeg();let i=this.hi,s=this.lo;e&&(i=~i,-1==(s=~s)?(s=0,i+=1,i|=0):s+=1),s>>>=0;const r=new t(i>>>=0);return r.ishln(32),r.iadd(new t(s)),e&&r.ineg(),r},s.prototype.toLE=function(t){h("function"==typeof t,"ArrayLike","constructor");const e=c(t,8);return this.writeLE(e,0),e},s.prototype.toBE=function(t){h("function"==typeof t,"ArrayLike","constructor");const e=c(t,8);return this.writeBE(e,0),e},s.prototype.toRaw=function(t){return this.toLE(t)},s.prototype.fromNumber=function(t){return this.set(t)},s.prototype.fromInt=function(t){return h(l(t),"integer","number"),this.join(t>>31&-this.sign,t)},s.prototype.fromBool=function(t){return h("boolean"==typeof t,"value","boolean"),this.hi=0,this.lo=t?1:0,this},s.prototype.fromBits=function(t,e){return this.join(t,e)},s.prototype.fromObject=function(t){return h(t&&"object"==typeof t,"number","object"),this.fromBits(t.hi,t.lo)},s.prototype.fromString=function(t,e){if(e=o(e),h("string"==typeof t,"string","string"),h(e>>>0===e,"base","integer"),e<2||e>16)throw new Error("Base ranges between 2 and 16.");let i=!1,s=0;if(t.length>0&&"-"===t[0]&&(s+=1,i=!0),t.length===s||t.length>s+64)throw new Error("Invalid string (bad length).");let r=0,n=0;for(;s<t.length;s++){let i=t.charCodeAt(s);if(i>=48&&i<=57?i-=48:i>=65&&i<=90?i-=55:i>=97&&i<=122?i-=87:i=e,i>=e)throw new Error("Invalid string (parse error).");if(n*=e,r*=e,(n+=i)>4294967295&&(r+=(n-(i=n%4294967296))/4294967296,n=i),r>4294967295)throw new Error("Invalid string (overflow).")}return this.hi=0|r,this.lo=0|n,i&&this.ineg(),this},s.prototype.fromJSON=function(t){return this.fromString(t,16)},s.prototype.fromBN=function(t){h(t&&u(t.words),"number","big number");const e=this,i=t.clone(),s=i.isNeg();if(e.sign&&i.testn(63))throw new Error("Big number overflow.");let r=0;for(;!i.isZero();){if(8===r)throw new Error("Big number overflow.");e.orb(r,i.andln(255)),i.iushrn(8),r++}return s&&e.ineg(),e},s.prototype.fromLE=function(t){return this.readLE(t,0),this},s.prototype.fromBE=function(t){return this.readBE(t,0),this},s.prototype.fromRaw=function(t){return this.fromLE(t)},s.prototype.from=function(t,e){if(null==t)return this;if("number"==typeof t)return"number"==typeof e?this.fromBits(t,e):this.fromNumber(t);if("string"==typeof t)return this.fromString(t,e);if("object"==typeof t)return u(t.words)?this.fromBN(t):"number"==typeof t.length?this.fromRaw(t):this.fromObject(t);if("boolean"==typeof t)return this.fromBool(t);throw new TypeError("Non-numeric object passed to N64.")},s.min=function(t,e){return t.cmp(e)<0?t:e},s.max=function(t,e){return t.cmp(e)>0?t:e},s.random=function(){const t=new this;return t.hi=4294967296*Math.random()|0,t.lo=4294967296*Math.random()|0,t},s.pow=function(t,e){return(new this).fromInt(t).ipown(e)},s.shift=function(t,e){return(new this).fromInt(t).ishln(e)},s.readLE=function(t,e){const i=new this;return i.readLE(t,e),i},s.readBE=function(t,e){const i=new this;return i.readBE(t,e),i},s.readRaw=function(t,e){const i=new this;return i.readRaw(t,e),i},s.fromNumber=function(t){return(new this).fromNumber(t)},s.fromInt=function(t){return(new this).fromInt(t)},s.fromBool=function(t){return(new this).fromBool(t)},s.fromBits=function(t,e){return(new this).fromBits(t,e)},s.fromObject=function(t){return(new this).fromObject(t)},s.fromString=function(t,e){return(new this).fromString(t,e)},s.fromJSON=function(t){return(new this).fromJSON(t)},s.fromBN=function(t){return(new this).fromBN(t)},s.fromLE=function(t){return(new this).fromLE(t)},s.fromBE=function(t){return(new this).fromBE(t)},s.fromRaw=function(t){return(new this).fromRaw(t)},s.from=function(t,e){return(new this).from(t,e)},s.isN64=function(t){return t instanceof s},s.isU64=function(t){return t instanceof r},s.isI64=function(t){return t instanceof n},r.__proto__=s,r.prototype.__proto__=s.prototype,r.ULONG_MIN=0,r.ULONG_MAX=4294967295,r.UINT32_MIN=r(0,0),r.UINT32_MAX=r(0,4294967295),r.UINT64_MIN=r(0,0),r.UINT64_MAX=r(4294967295,4294967295),n.__proto__=s,n.prototype.__proto__=s.prototype,n.LONG_MIN=-2147483648,n.LONG_MAX=2147483647,n.INT32_MIN=n(4294967295,2147483648),n.INT32_MAX=n(0,2147483647),n.INT64_MIN=n(2147483648,0),n.INT64_MAX=n(2147483647,4294967295),e.N64=s,e.U64=r,e.I64=n},function(t,e,i){"use strict";(function(t,s,r){
/*!
 * random.js - randomness for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const n=i(0),o=t.crypto||t.msCrypto||{};e.randomBytes=function(t){n(t>>>0===t);const e=new Uint8Array(t);return o.getRandomValues(e),s.from(e.buffer)},e.randomFill=function(t,i,r){n(s.isBuffer(t)),null==i&&(i=0),n(i>>>0===i),null==r&&(r=t.length-i),n(r>>>0===r),n(i+r<=t.length);const o=e.randomBytes(r);return o.copy(t,i,0,o.length),t},e.randomBytesAsync=function(t){return new Promise((i,s)=>{let r;try{r=e.randomBytes(t)}catch(t){return void s(t)}i(r)})},e.randomFillAsync=function(t,i,s){return new Promise((r,n)=>{let o;try{o=e.randomFill(t,i,s)}catch(t){return void n(t)}r(o)})},e.randomInt=function(){return e.randomBytes(4).readUInt32LE(0)},e.randomRange=function(t,i){n(t>>>0===t),n(i>>>0===i),n(i>=t);const s=e.randomInt();return Math.floor(s/4294967296*(i-t)+t)},o.getRandomValues||("object"==typeof r&&r.env&&"js"===r.env.NODE_BACKEND?e.randomBytes=function(t){n(t>>>0===t);const e=s.allocUnsafe(t);for(let t=0;t<e.length;t++)e[t]=Math.floor(256*Math.random());return e}:e.randomBytes=function(t){throw new Error("Entropy source not available.")})}).call(this,i(10),i(1).Buffer,i(15))},function(t,e,i){"use strict";var s=i(4).Buffer,r=i(44),n=i(80),o=i(79);function a(){this.x=r.fromBuffer(s.from("79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798","hex")),this.y=r.fromBuffer(s.from("483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8","hex")),this.inf=!1,this._precompute()}a.prototype._precompute=function(){for(var t=new n(this.x,this.y),e=new Array(1+Math.ceil(64.25)),i=e[0]=t,s=1;s<e.length;++s){for(var r=0;r<4;r++)i=i.dbl();e[s]=i}this.precomputed={naf:t._getNAFPoints(7),doubles:{step:4,points:e,negpoints:e.map(function(t){return t.neg()})}}},a.prototype.mul=function(t){for(var e=this.precomputed.doubles.step,i=this.precomputed.doubles.points,s=this.precomputed.doubles.negpoints,r=t.getNAF(1),a=((1<<e+1)-(e%2==0?2:1))/3,h=[],l=0;l<r.length;l+=e){for(var u=0,c=l+e-1;c>=l;c--)u=(u<<1)+r[c];h.push(u)}for(var f=new o(null,null,null),d=new o(null,null,null),p=a;p>0;p--){for(var g=0;g<h.length;g++)h[g]===p?d=d.mixedAdd(i[g]):h[g]===-p&&(d=d.mixedAdd(s[g]));f=f.add(d)}return n.fromECJPoint(f)},a.prototype.mulAdd=function(t,e,i){for(var s=this.precomputed.naf,r=e._getNAFPoints1(),n=[s.points,r.points],a=[t.getNAF(s.wnd),i.getNAF(r.wnd)],h=new o(null,null,null),l=[null,null],u=Math.max(a[0].length,a[1].length);u>=0;u--){for(var c=0;u>=0&&(l[0]=0|a[0][u],l[1]=0|a[1][u],0===l[0]&&0===l[1]);++c,--u);if(u>=0&&(c+=1),h=h.dblp(c),u<0)break;for(var f=0;f<2;f++){var d,p=l[f];0!==p&&(p>0?d=n[f][p>>1]:p<0&&(d=n[f][-p>>1].neg()),h=void 0===d.z?h.mixedAdd(d):h.add(d))}}return h},t.exports=new a},function(t,e,i){"use strict";e.umulTo10x10=function(t,e,i){var s,r,n,o=t.words,a=e.words,h=i.words,l=0,u=0|o[0],c=8191&u,f=u>>>13,d=0|o[1],p=8191&d,g=d>>>13,m=0|o[2],w=8191&m,y=m>>>13,b=0|o[3],v=8191&b,k=b>>>13,E=0|o[4],R=8191&E,S=E>>>13,_=0|o[5],x=8191&_,I=_>>>13,A=0|o[6],O=8191&A,B=A>>>13,P=0|o[7],N=8191&P,T=P>>>13,M=0|o[8],C=8191&M,L=M>>>13,U=0|o[9],D=8191&U,F=U>>>13,H=0|a[0],z=8191&H,V=H>>>13,K=0|a[1],j=8191&K,q=K>>>13,Y=0|a[2],X=8191&Y,W=Y>>>13,G=0|a[3],J=8191&G,$=G>>>13,Z=0|a[4],Q=8191&Z,tt=Z>>>13,et=0|a[5],it=8191&et,st=et>>>13,rt=0|a[6],nt=8191&rt,ot=rt>>>13,at=0|a[7],ht=8191&at,lt=at>>>13,ut=0|a[8],ct=8191&ut,ft=ut>>>13,dt=0|a[9],pt=8191&dt,gt=dt>>>13;i.length=19,s=Math.imul(c,z),r=Math.imul(c,V);var mt=l+s+((8191&(r+=Math.imul(f,z)))<<13);l=(n=Math.imul(f,V))+(r>>>13)+(mt>>>26),mt&=67108863,s=Math.imul(p,z),r=Math.imul(p,V),r+=Math.imul(g,z),n=Math.imul(g,V),s+=Math.imul(c,j),r+=Math.imul(c,q);var wt=l+s+((8191&(r+=Math.imul(f,j)))<<13);l=(n+=Math.imul(f,q))+(r>>>13)+(wt>>>26),wt&=67108863,s=Math.imul(w,z),r=Math.imul(w,V),r+=Math.imul(y,z),n=Math.imul(y,V),s+=Math.imul(p,j),r+=Math.imul(p,q),r+=Math.imul(g,j),n+=Math.imul(g,q),s+=Math.imul(c,X),r+=Math.imul(c,W);var yt=l+s+((8191&(r+=Math.imul(f,X)))<<13);l=(n+=Math.imul(f,W))+(r>>>13)+(yt>>>26),yt&=67108863,s=Math.imul(v,z),r=Math.imul(v,V),r+=Math.imul(k,z),n=Math.imul(k,V),s+=Math.imul(w,j),r+=Math.imul(w,q),r+=Math.imul(y,j),n+=Math.imul(y,q),s+=Math.imul(p,X),r+=Math.imul(p,W),r+=Math.imul(g,X),n+=Math.imul(g,W),s+=Math.imul(c,J),r+=Math.imul(c,$);var bt=l+s+((8191&(r+=Math.imul(f,J)))<<13);l=(n+=Math.imul(f,$))+(r>>>13)+(bt>>>26),bt&=67108863,s=Math.imul(R,z),r=Math.imul(R,V),r+=Math.imul(S,z),n=Math.imul(S,V),s+=Math.imul(v,j),r+=Math.imul(v,q),r+=Math.imul(k,j),n+=Math.imul(k,q),s+=Math.imul(w,X),r+=Math.imul(w,W),r+=Math.imul(y,X),n+=Math.imul(y,W),s+=Math.imul(p,J),r+=Math.imul(p,$),r+=Math.imul(g,J),n+=Math.imul(g,$),s+=Math.imul(c,Q),r+=Math.imul(c,tt);var vt=l+s+((8191&(r+=Math.imul(f,Q)))<<13);l=(n+=Math.imul(f,tt))+(r>>>13)+(vt>>>26),vt&=67108863,s=Math.imul(x,z),r=Math.imul(x,V),r+=Math.imul(I,z),n=Math.imul(I,V),s+=Math.imul(R,j),r+=Math.imul(R,q),r+=Math.imul(S,j),n+=Math.imul(S,q),s+=Math.imul(v,X),r+=Math.imul(v,W),r+=Math.imul(k,X),n+=Math.imul(k,W),s+=Math.imul(w,J),r+=Math.imul(w,$),r+=Math.imul(y,J),n+=Math.imul(y,$),s+=Math.imul(p,Q),r+=Math.imul(p,tt),r+=Math.imul(g,Q),n+=Math.imul(g,tt),s+=Math.imul(c,it),r+=Math.imul(c,st);var kt=l+s+((8191&(r+=Math.imul(f,it)))<<13);l=(n+=Math.imul(f,st))+(r>>>13)+(kt>>>26),kt&=67108863,s=Math.imul(O,z),r=Math.imul(O,V),r+=Math.imul(B,z),n=Math.imul(B,V),s+=Math.imul(x,j),r+=Math.imul(x,q),r+=Math.imul(I,j),n+=Math.imul(I,q),s+=Math.imul(R,X),r+=Math.imul(R,W),r+=Math.imul(S,X),n+=Math.imul(S,W),s+=Math.imul(v,J),r+=Math.imul(v,$),r+=Math.imul(k,J),n+=Math.imul(k,$),s+=Math.imul(w,Q),r+=Math.imul(w,tt),r+=Math.imul(y,Q),n+=Math.imul(y,tt),s+=Math.imul(p,it),r+=Math.imul(p,st),r+=Math.imul(g,it),n+=Math.imul(g,st),s+=Math.imul(c,nt),r+=Math.imul(c,ot);var Et=l+s+((8191&(r+=Math.imul(f,nt)))<<13);l=(n+=Math.imul(f,ot))+(r>>>13)+(Et>>>26),Et&=67108863,s=Math.imul(N,z),r=Math.imul(N,V),r+=Math.imul(T,z),n=Math.imul(T,V),s+=Math.imul(O,j),r+=Math.imul(O,q),r+=Math.imul(B,j),n+=Math.imul(B,q),s+=Math.imul(x,X),r+=Math.imul(x,W),r+=Math.imul(I,X),n+=Math.imul(I,W),s+=Math.imul(R,J),r+=Math.imul(R,$),r+=Math.imul(S,J),n+=Math.imul(S,$),s+=Math.imul(v,Q),r+=Math.imul(v,tt),r+=Math.imul(k,Q),n+=Math.imul(k,tt),s+=Math.imul(w,it),r+=Math.imul(w,st),r+=Math.imul(y,it),n+=Math.imul(y,st),s+=Math.imul(p,nt),r+=Math.imul(p,ot),r+=Math.imul(g,nt),n+=Math.imul(g,ot),s+=Math.imul(c,ht),r+=Math.imul(c,lt);var Rt=l+s+((8191&(r+=Math.imul(f,ht)))<<13);l=(n+=Math.imul(f,lt))+(r>>>13)+(Rt>>>26),Rt&=67108863,s=Math.imul(C,z),r=Math.imul(C,V),r+=Math.imul(L,z),n=Math.imul(L,V),s+=Math.imul(N,j),r+=Math.imul(N,q),r+=Math.imul(T,j),n+=Math.imul(T,q),s+=Math.imul(O,X),r+=Math.imul(O,W),r+=Math.imul(B,X),n+=Math.imul(B,W),s+=Math.imul(x,J),r+=Math.imul(x,$),r+=Math.imul(I,J),n+=Math.imul(I,$),s+=Math.imul(R,Q),r+=Math.imul(R,tt),r+=Math.imul(S,Q),n+=Math.imul(S,tt),s+=Math.imul(v,it),r+=Math.imul(v,st),r+=Math.imul(k,it),n+=Math.imul(k,st),s+=Math.imul(w,nt),r+=Math.imul(w,ot),r+=Math.imul(y,nt),n+=Math.imul(y,ot),s+=Math.imul(p,ht),r+=Math.imul(p,lt),r+=Math.imul(g,ht),n+=Math.imul(g,lt),s+=Math.imul(c,ct),r+=Math.imul(c,ft);var St=l+s+((8191&(r+=Math.imul(f,ct)))<<13);l=(n+=Math.imul(f,ft))+(r>>>13)+(St>>>26),St&=67108863,s=Math.imul(D,z),r=Math.imul(D,V),r+=Math.imul(F,z),n=Math.imul(F,V),s+=Math.imul(C,j),r+=Math.imul(C,q),r+=Math.imul(L,j),n+=Math.imul(L,q),s+=Math.imul(N,X),r+=Math.imul(N,W),r+=Math.imul(T,X),n+=Math.imul(T,W),s+=Math.imul(O,J),r+=Math.imul(O,$),r+=Math.imul(B,J),n+=Math.imul(B,$),s+=Math.imul(x,Q),r+=Math.imul(x,tt),r+=Math.imul(I,Q),n+=Math.imul(I,tt),s+=Math.imul(R,it),r+=Math.imul(R,st),r+=Math.imul(S,it),n+=Math.imul(S,st),s+=Math.imul(v,nt),r+=Math.imul(v,ot),r+=Math.imul(k,nt),n+=Math.imul(k,ot),s+=Math.imul(w,ht),r+=Math.imul(w,lt),r+=Math.imul(y,ht),n+=Math.imul(y,lt),s+=Math.imul(p,ct),r+=Math.imul(p,ft),r+=Math.imul(g,ct),n+=Math.imul(g,ft),s+=Math.imul(c,pt),r+=Math.imul(c,gt);var _t=l+s+((8191&(r+=Math.imul(f,pt)))<<13);l=(n+=Math.imul(f,gt))+(r>>>13)+(_t>>>26),_t&=67108863,s=Math.imul(D,j),r=Math.imul(D,q),r+=Math.imul(F,j),n=Math.imul(F,q),s+=Math.imul(C,X),r+=Math.imul(C,W),r+=Math.imul(L,X),n+=Math.imul(L,W),s+=Math.imul(N,J),r+=Math.imul(N,$),r+=Math.imul(T,J),n+=Math.imul(T,$),s+=Math.imul(O,Q),r+=Math.imul(O,tt),r+=Math.imul(B,Q),n+=Math.imul(B,tt),s+=Math.imul(x,it),r+=Math.imul(x,st),r+=Math.imul(I,it),n+=Math.imul(I,st),s+=Math.imul(R,nt),r+=Math.imul(R,ot),r+=Math.imul(S,nt),n+=Math.imul(S,ot),s+=Math.imul(v,ht),r+=Math.imul(v,lt),r+=Math.imul(k,ht),n+=Math.imul(k,lt),s+=Math.imul(w,ct),r+=Math.imul(w,ft),r+=Math.imul(y,ct),n+=Math.imul(y,ft),s+=Math.imul(p,pt),r+=Math.imul(p,gt);var xt=l+s+((8191&(r+=Math.imul(g,pt)))<<13);l=(n+=Math.imul(g,gt))+(r>>>13)+(xt>>>26),xt&=67108863,s=Math.imul(D,X),r=Math.imul(D,W),r+=Math.imul(F,X),n=Math.imul(F,W),s+=Math.imul(C,J),r+=Math.imul(C,$),r+=Math.imul(L,J),n+=Math.imul(L,$),s+=Math.imul(N,Q),r+=Math.imul(N,tt),r+=Math.imul(T,Q),n+=Math.imul(T,tt),s+=Math.imul(O,it),r+=Math.imul(O,st),r+=Math.imul(B,it),n+=Math.imul(B,st),s+=Math.imul(x,nt),r+=Math.imul(x,ot),r+=Math.imul(I,nt),n+=Math.imul(I,ot),s+=Math.imul(R,ht),r+=Math.imul(R,lt),r+=Math.imul(S,ht),n+=Math.imul(S,lt),s+=Math.imul(v,ct),r+=Math.imul(v,ft),r+=Math.imul(k,ct),n+=Math.imul(k,ft),s+=Math.imul(w,pt),r+=Math.imul(w,gt);var It=l+s+((8191&(r+=Math.imul(y,pt)))<<13);l=(n+=Math.imul(y,gt))+(r>>>13)+(It>>>26),It&=67108863,s=Math.imul(D,J),r=Math.imul(D,$),r+=Math.imul(F,J),n=Math.imul(F,$),s+=Math.imul(C,Q),r+=Math.imul(C,tt),r+=Math.imul(L,Q),n+=Math.imul(L,tt),s+=Math.imul(N,it),r+=Math.imul(N,st),r+=Math.imul(T,it),n+=Math.imul(T,st),s+=Math.imul(O,nt),r+=Math.imul(O,ot),r+=Math.imul(B,nt),n+=Math.imul(B,ot),s+=Math.imul(x,ht),r+=Math.imul(x,lt),r+=Math.imul(I,ht),n+=Math.imul(I,lt),s+=Math.imul(R,ct),r+=Math.imul(R,ft),r+=Math.imul(S,ct),n+=Math.imul(S,ft),s+=Math.imul(v,pt),r+=Math.imul(v,gt);var At=l+s+((8191&(r+=Math.imul(k,pt)))<<13);l=(n+=Math.imul(k,gt))+(r>>>13)+(At>>>26),At&=67108863,s=Math.imul(D,Q),r=Math.imul(D,tt),r+=Math.imul(F,Q),n=Math.imul(F,tt),s+=Math.imul(C,it),r+=Math.imul(C,st),r+=Math.imul(L,it),n+=Math.imul(L,st),s+=Math.imul(N,nt),r+=Math.imul(N,ot),r+=Math.imul(T,nt),n+=Math.imul(T,ot),s+=Math.imul(O,ht),r+=Math.imul(O,lt),r+=Math.imul(B,ht),n+=Math.imul(B,lt),s+=Math.imul(x,ct),r+=Math.imul(x,ft),r+=Math.imul(I,ct),n+=Math.imul(I,ft),s+=Math.imul(R,pt),r+=Math.imul(R,gt);var Ot=l+s+((8191&(r+=Math.imul(S,pt)))<<13);l=(n+=Math.imul(S,gt))+(r>>>13)+(Ot>>>26),Ot&=67108863,s=Math.imul(D,it),r=Math.imul(D,st),r+=Math.imul(F,it),n=Math.imul(F,st),s+=Math.imul(C,nt),r+=Math.imul(C,ot),r+=Math.imul(L,nt),n+=Math.imul(L,ot),s+=Math.imul(N,ht),r+=Math.imul(N,lt),r+=Math.imul(T,ht),n+=Math.imul(T,lt),s+=Math.imul(O,ct),r+=Math.imul(O,ft),r+=Math.imul(B,ct),n+=Math.imul(B,ft),s+=Math.imul(x,pt),r+=Math.imul(x,gt);var Bt=l+s+((8191&(r+=Math.imul(I,pt)))<<13);l=(n+=Math.imul(I,gt))+(r>>>13)+(Bt>>>26),Bt&=67108863,s=Math.imul(D,nt),r=Math.imul(D,ot),r+=Math.imul(F,nt),n=Math.imul(F,ot),s+=Math.imul(C,ht),r+=Math.imul(C,lt),r+=Math.imul(L,ht),n+=Math.imul(L,lt),s+=Math.imul(N,ct),r+=Math.imul(N,ft),r+=Math.imul(T,ct),n+=Math.imul(T,ft),s+=Math.imul(O,pt),r+=Math.imul(O,gt);var Pt=l+s+((8191&(r+=Math.imul(B,pt)))<<13);l=(n+=Math.imul(B,gt))+(r>>>13)+(Pt>>>26),Pt&=67108863,s=Math.imul(D,ht),r=Math.imul(D,lt),r+=Math.imul(F,ht),n=Math.imul(F,lt),s+=Math.imul(C,ct),r+=Math.imul(C,ft),r+=Math.imul(L,ct),n+=Math.imul(L,ft),s+=Math.imul(N,pt),r+=Math.imul(N,gt);var Nt=l+s+((8191&(r+=Math.imul(T,pt)))<<13);l=(n+=Math.imul(T,gt))+(r>>>13)+(Nt>>>26),Nt&=67108863,s=Math.imul(D,ct),r=Math.imul(D,ft),r+=Math.imul(F,ct),n=Math.imul(F,ft),s+=Math.imul(C,pt),r+=Math.imul(C,gt);var Tt=l+s+((8191&(r+=Math.imul(L,pt)))<<13);l=(n+=Math.imul(L,gt))+(r>>>13)+(Tt>>>26),Tt&=67108863,s=Math.imul(D,pt),r=Math.imul(D,gt);var Mt=l+s+((8191&(r+=Math.imul(F,pt)))<<13);return l=(n=Math.imul(F,gt))+(r>>>13)+(Mt>>>26),Mt&=67108863,h[0]=mt,h[1]=wt,h[2]=yt,h[3]=bt,h[4]=vt,h[5]=kt,h[6]=Et,h[7]=Rt,h[8]=St,h[9]=_t,h[10]=xt,h[11]=It,h[12]=At,h[13]=Ot,h[14]=Bt,h[15]=Pt,h[16]=Nt,h[17]=Tt,h[18]=Mt,0!==l&&(h[19]=l,i.length++),i}},function(t){t.exports={sha1:{securityStrength:128,outlen:160,seedlen:440},sha224:{securityStrength:192,outlen:224,seedlen:440},sha256:{securityStrength:256,outlen:256,seedlen:440},sha384:{securityStrength:256,outlen:384,seedlen:888},sha512:{securityStrength:256,outlen:512,seedlen:888}}},function(t,e,i){var s=i(91);t.exports=function(t){return(new s).update(t).digest()}},function(t,e,i){"use strict";var s=i(6),r=i(4).Buffer,n=i(56),o=r.alloc(128),a=64;function h(t,e){n.call(this,"digest"),"string"==typeof e&&(e=r.from(e)),this._alg=t,this._key=e,e.length>a?e=t(e):e.length<a&&(e=r.concat([e,o],a));for(var i=this._ipad=r.allocUnsafe(a),s=this._opad=r.allocUnsafe(a),h=0;h<a;h++)i[h]=54^e[h],s[h]=92^e[h];this._hash=[i]}s(h,n),h.prototype._update=function(t){this._hash.push(t)},h.prototype._final=function(){var t=this._alg(r.concat(this._hash));return this._alg(r.concat([this._opad,t]))},t.exports=h},function(t,e,i){"use strict";var s=i(6),r=i(156),n=i(56),o=i(4).Buffer,a=i(155),h=i(84),l=i(83),u=o.alloc(128);function c(t,e){n.call(this,"digest"),"string"==typeof e&&(e=o.from(e));var i="sha512"===t||"sha384"===t?128:64;this._alg=t,this._key=e,e.length>i?e=("rmd160"===t?new h:l(t)).update(e).digest():e.length<i&&(e=o.concat([e,u],i));for(var s=this._ipad=o.allocUnsafe(i),r=this._opad=o.allocUnsafe(i),a=0;a<i;a++)s[a]=54^e[a],r[a]=92^e[a];this._hash="rmd160"===t?new h:l(t),this._hash.update(s)}s(c,n),c.prototype._update=function(t){this._hash.update(t)},c.prototype._final=function(){var t=this._hash.digest();return("rmd160"===this._alg?new h:l(this._alg)).update(this._opad).update(t).digest()},t.exports=function(t,e){return"rmd160"===(t=t.toLowerCase())||"ripemd160"===t?new c("rmd160",e):"md5"===t?new r(a,e):new c(t,e)}},function(t,e,i){"use strict";(function(e){var s=i(157),r=i(154),n=new e(0),o=new e([0]),a=new e([1]);function h(t,e,i,s){var n=r[t];if(void 0===n)throw new Error("hash "+t+" is not supported");this._algo=t,this._securityStrength=n.securityStrength/8,this._outlen=n.outlen/8,this._reseedInterval=281474976710656,this._init(e,i,s)}h.prototype._update=function(t){var e=s(this._algo,this._K).update(this._V).update(o);t&&e.update(t),this._K=e.digest(),this._V=s(this._algo,this._K).update(this._V).digest(),t&&(this._K=s(this._algo,this._K).update(this._V).update(a).update(t).digest(),this._V=s(this._algo,this._K).update(this._V).digest())},h.prototype._init=function(t,i,s){if(t.length<this._securityStrength)throw new Error("Not enough entropy");this._K=new e(this._outlen),this._V=new e(this._outlen);for(var r=0;r<this._K.length;++r)this._K[r]=0,this._V[r]=1;this._update(e.concat([t,i,s||n])),this._reseed=1},h.prototype.reseed=function(t,i){if(t.length<this._securityStrength)throw new Error("Not enough entropy");this._update(e.concat([t,i||n])),this._reseed=1},h.prototype.generate=function(t,i){if(this._reseed>this._reseedInterval)throw new Error("Reseed is required");i&&0===i.length&&(i=void 0),i&&this._update(i);for(var r=new e(0);r.length<t;)this._V=s(this._algo,this._K).update(this._V).digest(),r=e.concat([r,this._V]);return this._update(i),this._reseed+=1,r.slice(0,t)},t.exports=h}).call(this,i(1).Buffer)},function(t,e,i){var s=i(6),r=i(81),n=i(21),o=i(4).Buffer,a=new Array(160);function h(){this.init(),this._w=a,n.call(this,128,112)}s(h,r),h.prototype.init=function(){return this._ah=3418070365,this._bh=1654270250,this._ch=2438529370,this._dh=355462360,this._eh=1731405415,this._fh=2394180231,this._gh=3675008525,this._hh=1203062813,this._al=3238371032,this._bl=914150663,this._cl=812702999,this._dl=4144912697,this._el=4290775857,this._fl=1750603025,this._gl=1694076839,this._hl=3204075428,this},h.prototype._hash=function(){var t=o.allocUnsafe(48);function e(e,i,s){t.writeInt32BE(e,s),t.writeInt32BE(i,s+4)}return e(this._ah,this._al,0),e(this._bh,this._bl,8),e(this._ch,this._cl,16),e(this._dh,this._dl,24),e(this._eh,this._el,32),e(this._fh,this._fl,40),t},t.exports=h},function(t,e,i){var s=i(6),r=i(82),n=i(21),o=i(4).Buffer,a=new Array(64);function h(){this.init(),this._w=a,n.call(this,64,56)}s(h,r),h.prototype.init=function(){return this._a=3238371032,this._b=914150663,this._c=812702999,this._d=4144912697,this._e=4290775857,this._f=1750603025,this._g=1694076839,this._h=3204075428,this},h.prototype._hash=function(){var t=o.allocUnsafe(28);return t.writeInt32BE(this._a,0),t.writeInt32BE(this._b,4),t.writeInt32BE(this._c,8),t.writeInt32BE(this._d,12),t.writeInt32BE(this._e,16),t.writeInt32BE(this._f,20),t.writeInt32BE(this._g,24),t},t.exports=h},function(t,e,i){var s=i(6),r=i(21),n=i(4).Buffer,o=[1518500249,1859775393,-1894007588,-899497514],a=new Array(80);function h(){this.init(),this._w=a,r.call(this,64,56)}function l(t){return t<<5|t>>>27}function u(t){return t<<30|t>>>2}function c(t,e,i,s){return 0===t?e&i|~e&s:2===t?e&i|e&s|i&s:e^i^s}s(h,r),h.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},h.prototype._update=function(t){for(var e,i=this._w,s=0|this._a,r=0|this._b,n=0|this._c,a=0|this._d,h=0|this._e,f=0;f<16;++f)i[f]=t.readInt32BE(4*f);for(;f<80;++f)i[f]=(e=i[f-3]^i[f-8]^i[f-14]^i[f-16])<<1|e>>>31;for(var d=0;d<80;++d){var p=~~(d/20),g=l(s)+c(p,r,n,a)+h+i[d]+o[p]|0;h=a,a=n,n=u(r),r=s,s=g}this._a=s+this._a|0,this._b=r+this._b|0,this._c=n+this._c|0,this._d=a+this._d|0,this._e=h+this._e|0},h.prototype._hash=function(){var t=n.allocUnsafe(20);return t.writeInt32BE(0|this._a,0),t.writeInt32BE(0|this._b,4),t.writeInt32BE(0|this._c,8),t.writeInt32BE(0|this._d,12),t.writeInt32BE(0|this._e,16),t},t.exports=h},function(t,e,i){var s=i(6),r=i(21),n=i(4).Buffer,o=[1518500249,1859775393,-1894007588,-899497514],a=new Array(80);function h(){this.init(),this._w=a,r.call(this,64,56)}function l(t){return t<<30|t>>>2}function u(t,e,i,s){return 0===t?e&i|~e&s:2===t?e&i|e&s|i&s:e^i^s}s(h,r),h.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},h.prototype._update=function(t){for(var e,i=this._w,s=0|this._a,r=0|this._b,n=0|this._c,a=0|this._d,h=0|this._e,c=0;c<16;++c)i[c]=t.readInt32BE(4*c);for(;c<80;++c)i[c]=i[c-3]^i[c-8]^i[c-14]^i[c-16];for(var f=0;f<80;++f){var d=~~(f/20),p=0|((e=s)<<5|e>>>27)+u(d,r,n,a)+h+i[f]+o[d];h=a,a=n,n=l(r),r=s,s=p}this._a=s+this._a|0,this._b=r+this._b|0,this._c=n+this._c|0,this._d=a+this._d|0,this._e=h+this._e|0},h.prototype._hash=function(){var t=n.allocUnsafe(20);return t.writeInt32BE(0|this._a,0),t.writeInt32BE(0|this._b,4),t.writeInt32BE(0|this._c,8),t.writeInt32BE(0|this._d,12),t.writeInt32BE(0|this._e,16),t},t.exports=h},function(t,e,i){t.exports=i(59).PassThrough},function(t,e,i){t.exports=i(59).Transform},function(t,e,i){t.exports=i(20)},function(t,e,i){t.exports=i(58)},function(t,e,i){"use strict";t.exports=n;var s=i(85),r=i(29);function n(t){if(!(this instanceof n))return new n(t);s.call(this,t)}r.inherits=i(6),r.inherits(n,s),n.prototype._transform=function(t,e,i){i(null,t)}},function(t,e,i){(function(e){function i(t){try{if(!e.localStorage)return!1}catch(t){return!1}var i=e.localStorage[t];return null!=i&&"true"===String(i).toLowerCase()}t.exports=function(t,e){if(i("noDeprecation"))return t;var s=!1;return function(){if(!s){if(i("throwDeprecation"))throw new Error(e);i("traceDeprecation")?console.trace(e):console.warn(e),s=!0}return t.apply(this,arguments)}}}).call(this,i(10))},function(t,e){},function(t,e,i){"use strict";var s=i(4).Buffer,r=i(169);t.exports=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.head=null,this.tail=null,this.length=0}return t.prototype.push=function(t){var e={data:t,next:null};this.length>0?this.tail.next=e:this.head=e,this.tail=e,++this.length},t.prototype.unshift=function(t){var e={data:t,next:this.head};0===this.length&&(this.tail=e),this.head=e,++this.length},t.prototype.shift=function(){if(0!==this.length){var t=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,t}},t.prototype.clear=function(){this.head=this.tail=null,this.length=0},t.prototype.join=function(t){if(0===this.length)return"";for(var e=this.head,i=""+e.data;e=e.next;)i+=t+e.data;return i},t.prototype.concat=function(t){if(0===this.length)return s.alloc(0);if(1===this.length)return this.head.data;for(var e,i,r=s.allocUnsafe(t>>>0),n=this.head,o=0;n;)e=r,i=o,n.data.copy(e,i),o+=n.data.length,n=n.next;return r},t}(),r&&r.inspect&&r.inspect.custom&&(t.exports.prototype[r.inspect.custom]=function(){var t=r.inspect({length:this.length});return this.constructor.name+" "+t})},function(t,e){},function(t,e,i){"use strict";var s=i(6),r=i(91),n=i(84),o=i(83),a=i(56);function h(t){a.call(this,"digest"),this._hash=t}s(h,a),h.prototype._update=function(t){this._hash.update(t)},h.prototype._final=function(){return this._hash.digest()},t.exports=function(t){return"md5"===(t=t.toLowerCase())?new r:"rmd160"===t||"ripemd160"===t?new n:new h(o(t))}},function(t,e,i){"use strict";var s=i(4).Buffer,r=i(172),n=i(158),o=i(92),a=i(44),h=i(80),l=i(152);e.privateKeyVerify=function(t){var e=a.fromBuffer(t);return!(e.isOverflow()||e.isZero())},e.privateKeyExport=function(t,e){var i=a.fromBuffer(t);if(i.isOverflow()||i.isZero())throw new Error(o.EC_PRIVATE_KEY_EXPORT_DER_FAIL);return l.mul(i).toPublicKey(e)},e.privateKeyNegate=function(t){var e=a.fromBuffer(t);return e.isZero()?s.alloc(32):(e.ucmp(a.n)>0&&e.isub(a.n),a.n.sub(e).toBuffer())},e.privateKeyModInverse=function(t){var e=a.fromBuffer(t);if(e.isOverflow()||e.isZero())throw new Error(o.EC_PRIVATE_KEY_RANGE_INVALID);return e.uinvm().toBuffer()},e.privateKeyTweakAdd=function(t,e){var i=a.fromBuffer(e);if(i.isOverflow())throw new Error(o.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);if(i.iadd(a.fromBuffer(t)),i.isOverflow()&&i.isub(a.n),i.isZero())throw new Error(o.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);return i.toBuffer()},e.privateKeyTweakMul=function(t,e){var i=a.fromBuffer(e);if(i.isOverflow()||i.isZero())throw new Error(o.EC_PRIVATE_KEY_TWEAK_MUL_FAIL);var s=a.fromBuffer(t);return i.umul(s).ureduce().toBuffer()},e.publicKeyCreate=function(t,e){var i=a.fromBuffer(t);if(i.isOverflow()||i.isZero())throw new Error(o.EC_PUBLIC_KEY_CREATE_FAIL);return l.mul(i).toPublicKey(e)},e.publicKeyConvert=function(t,e){var i=h.fromPublicKey(t);if(null===i)throw new Error(o.EC_PUBLIC_KEY_PARSE_FAIL);return i.toPublicKey(e)},e.publicKeyVerify=function(t){return null!==h.fromPublicKey(t)},e.publicKeyTweakAdd=function(t,e,i){var s=h.fromPublicKey(t);if(null===s)throw new Error(o.EC_PUBLIC_KEY_PARSE_FAIL);if((e=a.fromBuffer(e)).isOverflow())throw new Error(o.EC_PUBLIC_KEY_TWEAK_ADD_FAIL);return l.mul(e).add(s).toPublicKey(i)},e.publicKeyTweakMul=function(t,e,i){var s=h.fromPublicKey(t);if(null===s)throw new Error(o.EC_PUBLIC_KEY_PARSE_FAIL);if((e=a.fromBuffer(e)).isOverflow()||e.isZero())throw new Error(o.EC_PUBLIC_KEY_TWEAK_MUL_FAIL);return s.mul(e).toPublicKey(i)},e.publicKeyCombine=function(t,e){for(var i=new Array(t.length),s=0;s<t.length;++s)if(i[s]=h.fromPublicKey(t[s]),null===i[s])throw new Error(o.EC_PUBLIC_KEY_PARSE_FAIL);for(var r=i[0],n=1;n<i.length;++n)r=r.add(i[n]);if(r.inf)throw new Error(o.EC_PUBLIC_KEY_COMBINE_FAIL);return r.toPublicKey(e)},e.signatureNormalize=function(t){var e=a.fromBuffer(t.slice(0,32)),i=a.fromBuffer(t.slice(32,64));if(e.isOverflow()||i.isOverflow())throw new Error(o.ECDSA_SIGNATURE_PARSE_FAIL);var r=s.from(t);return i.isHigh()&&a.n.sub(i).toBuffer().copy(r,32),r},e.signatureExport=function(t){var e=t.slice(0,32),i=t.slice(32,64);if(a.fromBuffer(e).isOverflow()||a.fromBuffer(i).isOverflow())throw new Error(o.ECDSA_SIGNATURE_PARSE_FAIL);return{r:e,s:i}},e.signatureImport=function(t){var e=a.fromBuffer(t.r);e.isOverflow()&&(e=a.fromNumber(0));var i=a.fromBuffer(t.s);return i.isOverflow()&&(i=a.fromNumber(0)),s.concat([e.toBuffer(),i.toBuffer()])},e.sign=function(t,e,i,r){var h=a.fromBuffer(e);if(h.isOverflow()||h.isZero())throw new Error(o.ECDSA_SIGN_FAIL);if(null===i){var u=new n("sha256",e,t,r);i=function(){return u.generate(32)}}for(var c=a.fromBuffer(t),f=0;;++f){var d=i(t,e,null,r,f);if(!s.isBuffer(d)||32!==d.length)throw new Error(o.ECDSA_SIGN_FAIL);var p=a.fromBuffer(d);if(!p.isOverflow()&&!p.isZero()){var g=l.mul(p),m=g.x.fireduce();if(!m.isZero()){var w=p.uinvm().umul(m.umul(h).ureduce().iadd(c).fireduce()).ureduce();if(!w.isZero()){var y=(0!==g.x.ucmp(m)?2:0)|(g.y.isOdd()?1:0);return w.isHigh()&&(w=a.n.sub(w),y^=1),{signature:s.concat([m.toBuffer(),w.toBuffer()]),recovery:y}}}}}},e.verify=function(t,e,i){var s=a.fromBuffer(e.slice(0,32)),r=a.fromBuffer(e.slice(32,64));if(s.isOverflow()||r.isOverflow())throw new Error(o.ECDSA_SIGNATURE_PARSE_FAIL);if(r.isHigh()||s.isZero()||r.isZero())return!1;var n=h.fromPublicKey(i);if(null===n)throw new Error(o.EC_PUBLIC_KEY_PARSE_FAIL);var u=r.uinvm(),c=u.umul(a.fromBuffer(t)).ureduce(),f=u.umul(s).ureduce(),d=l.mulAdd(c,n,f);if(d.inf)return!1;var p=d.z.redSqr();return 0===s.redMul(p).ucmp(d.x)||!(s.ucmp(a.psn)>=0)&&0===s.iadd(a.psn).redMul(p).ucmp(d.x)},e.recover=function(t,e,i,r){var n=a.fromBuffer(e.slice(0,32)),u=a.fromBuffer(e.slice(32,64));if(n.isOverflow()||u.isOverflow())throw new Error(o.ECDSA_SIGNATURE_PARSE_FAIL);do{if(n.isZero()||u.isZero())break;var c=n;if(i>>1){if(c.ucmp(a.psn)>=0)break;c=n.add(a.n)}var f=s.concat([s.from([2+(1&i)]),c.toBuffer()]),d=h.fromPublicKey(f);if(null===d)break;var p=n.uinvm(),g=a.n.sub(a.fromBuffer(t)).umul(p).ureduce(),m=u.umul(p).ureduce();return h.fromECJPoint(l.mulAdd(g,d,m)).toPublicKey(r)}while(0);throw new Error(o.ECDSA_RECOVER_FAIL)},e.ecdh=function(t,i){var s=e.ecdhUnsafe(t,i,!0);return r("sha256").update(s).digest()},e.ecdhUnsafe=function(t,e,i){var s=h.fromPublicKey(t);if(null===s)throw new Error(o.EC_PUBLIC_KEY_PARSE_FAIL);var r=a.fromBuffer(e);if(r.isOverflow()||r.isZero())throw new Error(o.ECDH_FAIL);return s.mul(r).toPublicKey(i)}},function(t,e,i){var s=i(4).Buffer;t.exports={check:function(t){if(t.length<8)return!1;if(t.length>72)return!1;if(48!==t[0])return!1;if(t[1]!==t.length-2)return!1;if(2!==t[2])return!1;var e=t[3];if(0===e)return!1;if(5+e>=t.length)return!1;if(2!==t[4+e])return!1;var i=t[5+e];return!(0===i||6+e+i!==t.length||128&t[4]||e>1&&0===t[4]&&!(128&t[5])||128&t[e+6]||i>1&&0===t[e+6]&&!(128&t[e+7]))},decode:function(t){if(t.length<8)throw new Error("DER sequence length is too short");if(t.length>72)throw new Error("DER sequence length is too long");if(48!==t[0])throw new Error("Expected DER sequence");if(t[1]!==t.length-2)throw new Error("DER sequence length is invalid");if(2!==t[2])throw new Error("Expected DER integer");var e=t[3];if(0===e)throw new Error("R length is zero");if(5+e>=t.length)throw new Error("R length is too long");if(2!==t[4+e])throw new Error("Expected DER integer (2)");var i=t[5+e];if(0===i)throw new Error("S length is zero");if(6+e+i!==t.length)throw new Error("S length is invalid");if(128&t[4])throw new Error("R value is negative");if(e>1&&0===t[4]&&!(128&t[5]))throw new Error("R value excessively padded");if(128&t[e+6])throw new Error("S value is negative");if(i>1&&0===t[e+6]&&!(128&t[e+7]))throw new Error("S value excessively padded");return{r:t.slice(4,4+e),s:t.slice(6+e)}},encode:function(t,e){var i=t.length,r=e.length;if(0===i)throw new Error("R length is zero");if(0===r)throw new Error("S length is zero");if(i>33)throw new Error("R length is too long");if(r>33)throw new Error("S length is too long");if(128&t[0])throw new Error("R value is negative");if(128&e[0])throw new Error("S value is negative");if(i>1&&0===t[0]&&!(128&t[1]))throw new Error("R value excessively padded");if(r>1&&0===e[0]&&!(128&e[1]))throw new Error("S value excessively padded");var n=s.allocUnsafe(6+i+r);return n[0]=48,n[1]=n.length-2,n[2]=2,n[3]=t.length,t.copy(n,4),n[4+i]=2,n[5+i]=e.length,e.copy(n,6+i),n}}},function(t,e,i){"use strict";var s=i(4).Buffer,r=i(174),n=s.from([48,129,211,2,1,1,4,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,129,133,48,129,130,2,1,1,48,44,6,7,42,134,72,206,61,1,1,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,252,47,48,6,4,1,0,4,1,7,4,33,2,121,190,102,126,249,220,187,172,85,160,98,149,206,135,11,7,2,155,252,219,45,206,40,217,89,242,129,91,22,248,23,152,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,186,174,220,230,175,72,160,59,191,210,94,140,208,54,65,65,2,1,1,161,36,3,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),o=s.from([48,130,1,19,2,1,1,4,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,129,165,48,129,162,2,1,1,48,44,6,7,42,134,72,206,61,1,1,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,252,47,48,6,4,1,0,4,1,7,4,65,4,121,190,102,126,249,220,187,172,85,160,98,149,206,135,11,7,2,155,252,219,45,206,40,217,89,242,129,91,22,248,23,152,72,58,218,119,38,163,196,101,93,164,251,252,14,17,8,168,253,23,180,72,166,133,84,25,156,71,208,143,251,16,212,184,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,186,174,220,230,175,72,160,59,191,210,94,140,208,54,65,65,2,1,1,161,68,3,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);e.privateKeyExport=function(t,e,i){var r=s.from(i?n:o);return t.copy(r,i?8:9),e.copy(r,i?181:214),r},e.privateKeyImport=function(t){var e=t.length,i=0;if(!(e<i+1||48!==t[i])&&!(e<(i+=1)+1)&&128&t[i]){var s=127&t[i];if(i+=1,!(s<1||s>2||e<i+s)){var r=t[i+s-1]|(s>1?t[i+s-2]<<8:0);if(!(e<(i+=s)+r||e<i+3||2!==t[i]||1!==t[i+1]||1!==t[i+2]||e<(i+=3)+2||4!==t[i]||t[i+1]>32||e<i+2+t[i+1]))return t.slice(i+2,i+2+t[i+1])}}},e.signatureExport=function(t){for(var e=s.concat([s.from([0]),t.r]),i=33,n=0;i>1&&0===e[n]&&!(128&e[n+1]);--i,++n);for(var o=s.concat([s.from([0]),t.s]),a=33,h=0;a>1&&0===o[h]&&!(128&o[h+1]);--a,++h);return r.encode(e.slice(n),o.slice(h))},e.signatureImport=function(t){var e=s.alloc(32,0),i=s.alloc(32,0);try{var n=r.decode(t);if(33===n.r.length&&0===n.r[0]&&(n.r=n.r.slice(1)),n.r.length>32)throw new Error("R length is too long");if(33===n.s.length&&0===n.s[0]&&(n.s=n.s.slice(1)),n.s.length>32)throw new Error("S length is too long")}catch(t){return}return n.r.copy(e,32-n.r.length),n.s.copy(i,32-n.s.length),{r:e,s:i}},e.signatureImportLax=function(t){var e=s.alloc(32,0),i=s.alloc(32,0),r=t.length,n=0;if(48===t[n++]){var o=t[n++];if(!(128&o&&(n+=o-128)>r)&&2===t[n++]){var a=t[n++];if(128&a){if(n+(o=a-128)>r)return;for(;o>0&&0===t[n];n+=1,o-=1);for(a=0;o>0;n+=1,o-=1)a=(a<<8)+t[n]}if(!(a>r-n)){var h=n;if(n+=a,2===t[n++]){var l=t[n++];if(128&l){if(n+(o=l-128)>r)return;for(;o>0&&0===t[n];n+=1,o-=1);for(l=0;o>0;n+=1,o-=1)l=(l<<8)+t[n]}if(!(l>r-n)){var u=n;for(n+=l;a>0&&0===t[h];a-=1,h+=1);if(!(a>32)){var c=t.slice(h,h+a);for(c.copy(e,32-c.length);l>0&&0===t[u];l-=1,u+=1);if(!(l>32)){var f=t.slice(u,u+l);return f.copy(i,32-f.length),{r:e,s:i}}}}}}}}}},function(t,e,i){"use strict";(function(t){var i=Object.prototype.toString;e.isArray=function(t,e){if(!Array.isArray(t))throw TypeError(e)},e.isBoolean=function(t,e){if("[object Boolean]"!==i.call(t))throw TypeError(e)},e.isBuffer=function(e,i){if(!t.isBuffer(e))throw TypeError(i)},e.isFunction=function(t,e){if("[object Function]"!==i.call(t))throw TypeError(e)},e.isNumber=function(t,e){if("[object Number]"!==i.call(t))throw TypeError(e)},e.isObject=function(t,e){if("[object Object]"!==i.call(t))throw TypeError(e)},e.isBufferLength=function(t,e,i){if(t.length!==e)throw RangeError(i)},e.isBufferLength2=function(t,e,i,s){if(t.length!==e&&t.length!==i)throw RangeError(s)},e.isLengthGTZero=function(t,e){if(0===t.length)throw RangeError(e)},e.isNumberInInterval=function(t,e,i,s){if(t<=e||t>=i)throw RangeError(s)}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";var s=i(176),r=i(175),n=i(92);function o(t,e){return void 0===t?e:(s.isBoolean(t,n.COMPRESSED_TYPE_INVALID),t)}t.exports=function(t){return{privateKeyVerify:function(e){return s.isBuffer(e,n.EC_PRIVATE_KEY_TYPE_INVALID),32===e.length&&t.privateKeyVerify(e)},privateKeyExport:function(e,i){s.isBuffer(e,n.EC_PRIVATE_KEY_TYPE_INVALID),s.isBufferLength(e,32,n.EC_PRIVATE_KEY_LENGTH_INVALID),i=o(i,!0);var a=t.privateKeyExport(e,i);return r.privateKeyExport(e,a,i)},privateKeyImport:function(e){if(s.isBuffer(e,n.EC_PRIVATE_KEY_TYPE_INVALID),(e=r.privateKeyImport(e))&&32===e.length&&t.privateKeyVerify(e))return e;throw new Error(n.EC_PRIVATE_KEY_IMPORT_DER_FAIL)},privateKeyNegate:function(e){return s.isBuffer(e,n.EC_PRIVATE_KEY_TYPE_INVALID),s.isBufferLength(e,32,n.EC_PRIVATE_KEY_LENGTH_INVALID),t.privateKeyNegate(e)},privateKeyModInverse:function(e){return s.isBuffer(e,n.EC_PRIVATE_KEY_TYPE_INVALID),s.isBufferLength(e,32,n.EC_PRIVATE_KEY_LENGTH_INVALID),t.privateKeyModInverse(e)},privateKeyTweakAdd:function(e,i){return s.isBuffer(e,n.EC_PRIVATE_KEY_TYPE_INVALID),s.isBufferLength(e,32,n.EC_PRIVATE_KEY_LENGTH_INVALID),s.isBuffer(i,n.TWEAK_TYPE_INVALID),s.isBufferLength(i,32,n.TWEAK_LENGTH_INVALID),t.privateKeyTweakAdd(e,i)},privateKeyTweakMul:function(e,i){return s.isBuffer(e,n.EC_PRIVATE_KEY_TYPE_INVALID),s.isBufferLength(e,32,n.EC_PRIVATE_KEY_LENGTH_INVALID),s.isBuffer(i,n.TWEAK_TYPE_INVALID),s.isBufferLength(i,32,n.TWEAK_LENGTH_INVALID),t.privateKeyTweakMul(e,i)},publicKeyCreate:function(e,i){return s.isBuffer(e,n.EC_PRIVATE_KEY_TYPE_INVALID),s.isBufferLength(e,32,n.EC_PRIVATE_KEY_LENGTH_INVALID),i=o(i,!0),t.publicKeyCreate(e,i)},publicKeyConvert:function(e,i){return s.isBuffer(e,n.EC_PUBLIC_KEY_TYPE_INVALID),s.isBufferLength2(e,33,65,n.EC_PUBLIC_KEY_LENGTH_INVALID),i=o(i,!0),t.publicKeyConvert(e,i)},publicKeyVerify:function(e){return s.isBuffer(e,n.EC_PUBLIC_KEY_TYPE_INVALID),t.publicKeyVerify(e)},publicKeyTweakAdd:function(e,i,r){return s.isBuffer(e,n.EC_PUBLIC_KEY_TYPE_INVALID),s.isBufferLength2(e,33,65,n.EC_PUBLIC_KEY_LENGTH_INVALID),s.isBuffer(i,n.TWEAK_TYPE_INVALID),s.isBufferLength(i,32,n.TWEAK_LENGTH_INVALID),r=o(r,!0),t.publicKeyTweakAdd(e,i,r)},publicKeyTweakMul:function(e,i,r){return s.isBuffer(e,n.EC_PUBLIC_KEY_TYPE_INVALID),s.isBufferLength2(e,33,65,n.EC_PUBLIC_KEY_LENGTH_INVALID),s.isBuffer(i,n.TWEAK_TYPE_INVALID),s.isBufferLength(i,32,n.TWEAK_LENGTH_INVALID),r=o(r,!0),t.publicKeyTweakMul(e,i,r)},publicKeyCombine:function(e,i){s.isArray(e,n.EC_PUBLIC_KEYS_TYPE_INVALID),s.isLengthGTZero(e,n.EC_PUBLIC_KEYS_LENGTH_INVALID);for(var r=0;r<e.length;++r)s.isBuffer(e[r],n.EC_PUBLIC_KEY_TYPE_INVALID),s.isBufferLength2(e[r],33,65,n.EC_PUBLIC_KEY_LENGTH_INVALID);return i=o(i,!0),t.publicKeyCombine(e,i)},signatureNormalize:function(e){return s.isBuffer(e,n.ECDSA_SIGNATURE_TYPE_INVALID),s.isBufferLength(e,64,n.ECDSA_SIGNATURE_LENGTH_INVALID),t.signatureNormalize(e)},signatureExport:function(e){s.isBuffer(e,n.ECDSA_SIGNATURE_TYPE_INVALID),s.isBufferLength(e,64,n.ECDSA_SIGNATURE_LENGTH_INVALID);var i=t.signatureExport(e);return r.signatureExport(i)},signatureImport:function(e){s.isBuffer(e,n.ECDSA_SIGNATURE_TYPE_INVALID),s.isLengthGTZero(e,n.ECDSA_SIGNATURE_LENGTH_INVALID);var i=r.signatureImport(e);if(i)return t.signatureImport(i);throw new Error(n.ECDSA_SIGNATURE_PARSE_DER_FAIL)},signatureImportLax:function(e){s.isBuffer(e,n.ECDSA_SIGNATURE_TYPE_INVALID),s.isLengthGTZero(e,n.ECDSA_SIGNATURE_LENGTH_INVALID);var i=r.signatureImportLax(e);if(i)return t.signatureImport(i);throw new Error(n.ECDSA_SIGNATURE_PARSE_DER_FAIL)},sign:function(e,i,r){s.isBuffer(e,n.MSG32_TYPE_INVALID),s.isBufferLength(e,32,n.MSG32_LENGTH_INVALID),s.isBuffer(i,n.EC_PRIVATE_KEY_TYPE_INVALID),s.isBufferLength(i,32,n.EC_PRIVATE_KEY_LENGTH_INVALID);var o=null,a=null;return void 0!==r&&(s.isObject(r,n.OPTIONS_TYPE_INVALID),void 0!==r.data&&(s.isBuffer(r.data,n.OPTIONS_DATA_TYPE_INVALID),s.isBufferLength(r.data,32,n.OPTIONS_DATA_LENGTH_INVALID),o=r.data),void 0!==r.noncefn&&(s.isFunction(r.noncefn,n.OPTIONS_NONCEFN_TYPE_INVALID),a=r.noncefn)),t.sign(e,i,a,o)},verify:function(e,i,r){return s.isBuffer(e,n.MSG32_TYPE_INVALID),s.isBufferLength(e,32,n.MSG32_LENGTH_INVALID),s.isBuffer(i,n.ECDSA_SIGNATURE_TYPE_INVALID),s.isBufferLength(i,64,n.ECDSA_SIGNATURE_LENGTH_INVALID),s.isBuffer(r,n.EC_PUBLIC_KEY_TYPE_INVALID),s.isBufferLength2(r,33,65,n.EC_PUBLIC_KEY_LENGTH_INVALID),t.verify(e,i,r)},recover:function(e,i,r,a){return s.isBuffer(e,n.MSG32_TYPE_INVALID),s.isBufferLength(e,32,n.MSG32_LENGTH_INVALID),s.isBuffer(i,n.ECDSA_SIGNATURE_TYPE_INVALID),s.isBufferLength(i,64,n.ECDSA_SIGNATURE_LENGTH_INVALID),s.isNumber(r,n.RECOVERY_ID_TYPE_INVALID),s.isNumberInInterval(r,-1,4,n.RECOVERY_ID_VALUE_INVALID),a=o(a,!0),t.recover(e,i,r,a)},ecdh:function(e,i){return s.isBuffer(e,n.EC_PUBLIC_KEY_TYPE_INVALID),s.isBufferLength2(e,33,65,n.EC_PUBLIC_KEY_LENGTH_INVALID),s.isBuffer(i,n.EC_PRIVATE_KEY_TYPE_INVALID),s.isBufferLength(i,32,n.EC_PRIVATE_KEY_LENGTH_INVALID),t.ecdh(e,i)},ecdhUnsafe:function(e,i,r){return s.isBuffer(e,n.EC_PUBLIC_KEY_TYPE_INVALID),s.isBufferLength2(e,33,65,n.EC_PUBLIC_KEY_LENGTH_INVALID),s.isBuffer(i,n.EC_PRIVATE_KEY_TYPE_INVALID),s.isBufferLength(i,32,n.EC_PRIVATE_KEY_LENGTH_INVALID),r=o(r,!0),t.ecdhUnsafe(e,i,r)}}}},function(t,e,i){"use strict";t.exports=i(177)(i(173))},function(t,e,i){"use strict";t.exports=i(178)},function(t,e,i){"use strict";(function(e){
/*!
 * sha1.js - SHA1 implementation for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 * Parts of this software based on hash.js.
 */
const s=i(0),r=i(23),n=-1,o=e.alloc(8,0),a=e.alloc(64,0);a[0]=128;const h=new Uint32Array([1518500249,1859775393,2400959708,3395469782]);class l{constructor(){this.state=new Uint32Array(5),this.msg=new Uint32Array(80),this.block=e.allocUnsafe(64),this.size=n}init(){return this.state[0]=1732584193,this.state[1]=4023233417,this.state[2]=2562383102,this.state[3]=271733878,this.state[4]=3285377520,this.size=0,this}update(t){return s(e.isBuffer(t)),this._update(t,t.length),this}final(){return this._final(e.allocUnsafe(20))}_update(t,e){s(this.size!==n,"Context already finalized.");let i=63&this.size,r=0;if(this.size+=e,i>0){let s=64-i;if(s>e&&(s=e),t.copy(this.block,i,r,r+s),e-=s,r+=s,(i+=s)<64)return;this.transform(this.block,0)}for(;e>=64;)this.transform(t,r),r+=64,e-=64;e>0&&t.copy(this.block,0,r,r+e)}_final(t){s(this.size!==n,"Context already finalized.");const e=this.size%64,i=8*this.size;f(o,i*(1/4294967296),0),f(o,i,4),this._update(a,1+(119-e)%64),this._update(o,8);for(let e=0;e<5;e++)f(t,this.state[e],4*e),this.state[e]=0;for(let t=0;t<80;t++)this.msg[t]=0;for(let t=0;t<64;t++)this.block[t]=0;return this.size=n,t}transform(t,e){const i=this.msg;let s=this.state[0],r=this.state[1],n=this.state[2],o=this.state[3],a=this.state[4],l=0;for(;l<16;l++)i[l]=16777216*(255&(f=t)[d=e+4*l])+((255&f[d+1])<<16|(255&f[d+2])<<8|255&f[d+3]);for(var f,d;l<80;l++)i[l]=u(i[l-3]^i[l-8]^i[l-14]^i[l-16],1);for(l=0;l<80;l++){const t=l/20|0;let e=u(s,5);e+=c(t,r,n,o),e+=a,e+=i[l],e+=h[t],a=o,o=n,n=u(r,30),r=s,s=e}this.state[0]+=s,this.state[1]+=r,this.state[2]+=n,this.state[3]+=o,this.state[4]+=a}static hash(){return new l}static hmac(){return new r(l,64)}static digest(t){return l.ctx.init().update(t).final()}static root(t,i){return s(e.isBuffer(t)&&20===t.length),s(e.isBuffer(i)&&20===i.length),l.ctx.init().update(t).update(i).final()}static multi(t,e,i){const s=l.ctx;return s.init(),s.update(t),s.update(e),i&&s.update(i),s.final()}static mac(t,e){return l.hmac().init(e).update(t).final()}}function u(t,e){return t<<e|t>>>32-e}function c(t,e,i,s){return 0===t?function(t,e,i){return t&e^~t&s}(e,i):1===t||3===t?function(t,e,i){return t^e^s}(e,i):2===t?function(t,e,i){return t&e^t&s^e&s}(e,i):0}function f(t,e,i){t[i]=e>>>24,t[i+1]=e>>16&255,t[i+2]=e>>8&255,t[i+3]=255&e}l.id="sha1",l.size=20,l.bits=160,l.blockSize=64,l.zero=e.alloc(20,0),l.ctx=new l,t.exports=l}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * sha1.js - sha1 for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 */t.exports=i(180)},function(t,e,i){"use strict";
/*!
 * ripemd160.js - ripemd160 for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 */t.exports=i(93)},function(t,e,i){"use strict";(function(e){
/*!
 * hash256.js - Hash256 implementation for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(60),n=i(23);class o{constructor(){this.ctx=new r}init(){return this.ctx.init(),this}update(t){return this.ctx.update(t),this}final(){const t=e.allocUnsafe(32);return this.ctx._final(t),this.ctx.init(),this.ctx.update(t),this.ctx._final(t),t}static hash(){return new o}static hmac(){return new n(o,64)}static digest(t){return o.ctx.init().update(t).final()}static root(t,i){return s(e.isBuffer(t)&&32===t.length),s(e.isBuffer(i)&&32===i.length),o.ctx.init().update(t).update(i).final()}static multi(t,e,i){const s=o.ctx;return s.init(),s.update(t),s.update(e),i&&s.update(i),s.final()}static mac(t,e){return o.hmac().init(e).update(t).final()}}o.id="hash256",o.size=32,o.bits=256,o.blockSize=64,o.zero=e.alloc(32,0),o.ctx=new o,t.exports=o}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * hash160.js - Hash160 implementation for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(60),n=i(93),o=i(23),a=new n;class h{constructor(){this.ctx=new r}init(){return this.ctx.init(),this}update(t){return this.ctx.update(t),this}final(){const t=e.allocUnsafe(32);return this.ctx._final(t),a.init(),a.update(t),a._final(t),t.slice(0,20)}static hash(){return new h}static hmac(){return new o(h,64)}static digest(t){return h.ctx.init().update(t).final()}static root(t,i){return s(e.isBuffer(t)&&20===t.length),s(e.isBuffer(i)&&20===i.length),h.ctx.init().update(t).update(i).final()}static multi(t,e,i){const s=h.ctx;return s.init(),s.update(t),s.update(e),i&&s.update(i),s.final()}static mac(t,e){return h.hmac().init(e).update(t).final()}}h.id="hash160",h.size=20,h.bits=160,h.blockSize=64,h.zero=e.alloc(20,0),h.ctx=new h,t.exports=h}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * int64.js - int64 object for javascript.
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/chjj/n64
 */function s(t){h(this instanceof s,"this","N64"),h(0===t||1===t,"sign","bit"),this.hi=0,this.lo=0,this.sign=t}function r(t,e){if(!(this instanceof r))return new r(t,e);s.call(this,0),this.from(t,e)}function n(t,e){if(!(this instanceof n))return new n(t,e);s.call(this,1),this.from(t,e)}function o(t){if(null==t)return 10;if("number"==typeof t)return t;switch(t){case"bin":return 2;case"oct":return 8;case"dec":return 10;case"hex":return 16}return 0}function a(t){if(Math.clz32)return 32-Math.clz32(t);let e=31;for(;e>=0&&0==(t&1<<e);e--);return e+1}function h(t,e,i){if(!t){const t=new TypeError(`'${e}' must be a(n) ${i}.`);throw Error.captureStackTrace&&Error.captureStackTrace(t,h),t}}function l(t){return"number"==typeof t&&isFinite(t)}function u(t){return Array.isArray?Array.isArray(t):"Array"==={}.toString.call(t).slice(8,-1)}function c(t,e){return t.allocUnsafe?t.allocUnsafe(e):new t(e)}function f(t,e){return t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24}function d(t,e){return t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3]}function p(t,e,i){t[i]=255&e,t[i+1]=e>>>8&255,t[i+2]=e>>>16&255,t[i+3]=e>>>24&255}function g(t,e,i){t[i]=e>>>24&255,t[i+1]=e>>>16&255,t[i+2]=e>>>8&255,t[i+3]=255&e}s.prototype._add=function(t,e){const i=this.hi,s=this.lo,r=s+e|0,n=s>>31,o=e>>31,a=(i+t|0)+(1&(n&o|~(r>>31)&(n^o)));return this.hi=0|a,this.lo=r,this},s.prototype.iadd=function(t){return h(s.isN64(t),"operand","int64"),this._add(t.hi,t.lo)},s.prototype.iaddn=function(t){return h(l(t),"operand","number"),this._add(t>>31&-this.sign,0|t)},s.prototype.add=function(t){return this.clone().iadd(t)},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype._sub=function(t,e){return t=~t,-1==(e=~e)?(e=0,t+=1,t|=0):e+=1,this._add(t,e)},s.prototype.isub=function(t){return h(s.isN64(t),"operand","int64"),this._sub(t.hi,t.lo)},s.prototype.isubn=function(t){return h(l(t),"operand","number"),this._sub(t>>31&-this.sign,0|t)},s.prototype.sub=function(t){return this.clone().isub(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype._mul=function(t,e){const i=this.hi,s=this.lo,r=65535&i,n=s>>>16,o=65535&s,a=65535&t,h=e>>>16,l=65535&e;let u=0,c=0,f=0,d=0;f+=(d+=o*l)>>>16,c+=(f+=n*l)>>>16,f&=65535,c+=(f+=o*h)>>>16,u+=(c+=r*l)>>>16,c&=65535,u+=(c+=n*h)>>>16,c&=65535,u+=(c+=o*a)>>>16,u+=(i>>>16)*l+r*h+n*a+o*(t>>>16);const p=(u&=65535)<<16|(c&=65535),g=(f&=65535)<<16|(d&=65535);return this.hi=p,this.lo=g,this},s.prototype.imul=function(t){return h(s.isN64(t),"multiplicand","int64"),this._mul(t.hi,t.lo)},s.prototype.imuln=function(t){return h(l(t),"multiplicand","number"),this._mul(t>>31&-this.sign,0|t)},s.prototype.mul=function(t){return this.clone().imul(t)},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.idiv=function(t){let e=this;if(h(s.isN64(t),"divisor","int64"),t.isZero())throw new Error("Cannot divide by zero.");if(e.isZero())return e;if(e.eq(t))return e.set(1);if(e.isSafe()&&t.isSafe()){const i=function(t){return t<0?-Math.floor(-t):Math.floor(t)}(e.toDouble()/t.toDouble());return e.set(i)}let i=!1;e.sign&&(e.hi<0?t.hi<0?(e=e.ineg(),t=t.neg()):(e=e.ineg(),i=!0):t.hi<0&&(t=t.neg(),i=!0));const n=e.toU64(),o=t.toU64();if(n.lt(o))return e.set(0);if(n.ushrn(1).lt(o))return e.set(i?-1:1);const a=new r,l=new r;let u=n.bitLength();for(;u--;)l.ishln(1),l.lo|=n.testn(u),l.gte(o)&&(l.isub(o),a.setn(u,1));return e.hi=a.hi,e.lo=a.lo,i&&e.ineg(),e},s.prototype.idivn=function(t){return h(l(t),"divisor","number"),this.idiv(this._small(t))},s.prototype.div=function(t){return this.clone().idiv(t)},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.imod=function(t){const e=this;if(h(s.isN64(t),"divisor","int64"),t.isZero())throw new Error("Cannot divide by zero.");if(e.isZero())return e;if(e.eq(t))return e.set(0);if(e.isSafe()&&t.isSafe()){const i=e.toDouble()%t.toDouble();return e.set(i)}return e.isub(e.div(t).imul(t))},s.prototype.imodn=function(t){return h(l(t),"divisor","number"),this.imod(this._small(t))},s.prototype.mod=function(t){return this.clone().imod(t)},s.prototype.modn=function(t){return this.clone().imodn(t)},s.prototype.ipow=function(t){return h(s.isN64(t),"exponent","int64"),this.ipown(t.lo)},s.prototype.ipown=function(t){if(h(l(t),"exponent","number"),this.isZero())return this;const e=this.clone(),i=this;let s=t>>>0;for(i.set(1);s>0;)1&s&&i.imul(e),s>>>=1,e.imul(e);return i},s.prototype.pow=function(t){return this.clone().ipow(t)},s.prototype.pown=function(t){return this.clone().ipown(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this)},s.prototype.iand=function(t){return h(s.isN64(t),"operand","int64"),this.hi&=t.hi,this.lo&=t.lo,this},s.prototype.iandn=function(t){return h(l(t),"operand","number"),this.hi&=t>>31&-this.sign,this.lo&=0|t,this},s.prototype.and=function(t){return this.clone().iand(t)},s.prototype.andn=function(t){return this.clone().iandn(t)},s.prototype.ior=function(t){return h(s.isN64(t),"operand","int64"),this.hi|=t.hi,this.lo|=t.lo,this},s.prototype.iorn=function(t){return h(l(t),"operand","number"),this.hi|=t>>31&-this.sign,this.lo|=0|t,this},s.prototype.or=function(t){return this.clone().ior(t)},s.prototype.orn=function(t){return this.clone().iorn(t)},s.prototype.ixor=function(t){return h(s.isN64(t),"operand","int64"),this.hi^=t.hi,this.lo^=t.lo,this},s.prototype.ixorn=function(t){return h(l(t),"operand","number"),this.hi^=t>>31&-this.sign,this.lo^=0|t,this},s.prototype.xor=function(t){return this.clone().ixor(t)},s.prototype.xorn=function(t){return this.clone().ixorn(t)},s.prototype.inot=function(){return this.hi=~this.hi,this.lo=~this.lo,this},s.prototype.not=function(){return this.clone().inot()},s.prototype.ishl=function(t){return h(s.isN64(t),"bits","int64"),this.ishln(t.lo)},s.prototype.ishln=function(t){if(h(l(t),"bits","number"),0==(t&=63))return this;let e=this.hi,i=this.lo;return t<32?(e<<=t,e|=i>>>32-t,i<<=t):(e=i<<t-32,i=0),this.hi=e,this.lo=i,this},s.prototype.shl=function(t){return this.clone().ishl(t)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ishr=function(t){return h(s.isN64(t),"bits","int64"),this.ishrn(t.lo)},s.prototype.ishrn=function(t){if(!this.sign)return this.iushrn(t);if(h(l(t),"bits","number"),0==(t&=63))return this;let e=this.hi,i=this.lo;return t<32?(i>>>=t,i|=e<<32-t,e>>=t):(i=e>>t-32,e>>=31),this.hi=e,this.lo=i,this},s.prototype.shr=function(t){return this.clone().ishr(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.iushr=function(t){return h(s.isN64(t),"bits","int64"),this.iushrn(t.lo)},s.prototype.iushrn=function(t){if(h(l(t),"bits","number"),0==(t&=63))return this;let e=this.hi,i=this.lo;return t<32?(i>>>=t,i|=e<<32-t,e>>>=t):(i=e>>>t-32,e=0),this.hi=0|e,this.lo=0|i,this},s.prototype.ushr=function(t){return this.clone().iushr(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.setn=function(t,e){return h(l(t),"bit","number"),(t&=63)<32?e?this.lo|=1<<t:this.lo&=~(1<<t):e?this.hi|=1<<t-32:this.hi&=~(1<<t-32),this},s.prototype.testn=function(t){return h(l(t),"bit","number"),(t&=63)<32?this.lo>>>t&1:this.hi>>>t-32&1},s.prototype.setb=function(t,e){return h(l(t),"pos","number"),h(l(e),"ch","number"),e&=255,(t&=7)<4?(this.lo&=~(255<<8*t),this.lo|=e<<8*t):(this.hi&=~(255<<8*(t-4)),this.hi|=e<<8*(t-4)),this},s.prototype.orb=function(t,e){return h(l(t),"pos","number"),h(l(e),"ch","number"),e&=255,(t&=7)<4?this.lo|=e<<8*t:this.hi|=e<<8*(t-4),this},s.prototype.getb=function(t){return h(l(t),"pos","number"),(t&=7)<4?this.lo>>8*t&255:this.hi>>8*(t-4)&255},s.prototype.imaskn=function(t){return h(l(t),"bit","number"),(t&=63)<32?(this.hi=0,this.lo&=(1<<t)-1):(this.hi&=(1<<t-32)-1,this.lo&=4294967295),this},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.andln=function(t){return h(l(t),"operand","number"),this.lo&t},s.prototype.ineg=function(){let t=~this.hi,e=~this.lo;return-1===e?(e=0,t+=1,t|=0):e+=1,this.hi=t,this.lo=e,this},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.iabs=function(){return this.isNeg()&&this.ineg(),this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._cmp=function(t,e){const i=this;let s=i.hi,r=i.lo;if(s===t&&r===e)return 0;let n=!1;if(i.sign){const e=s<0,i=t<0;if(e&&!i)return-1;if(!e&&i)return 1;n=e}return n||(s>>>=0,t>>>=0),s<t?-1:s>t?1:(r>>>=0)<(e>>>=0)?-1:1},s.prototype.cmp=function(t){return h(s.isN64(t),"value","int64"),this._cmp(t.hi,t.lo)},s.prototype.cmpn=function(t){return h(l(t),"value","number"),this._cmp(t>>31&-this.sign,0|t)},s.prototype.eq=function(t){return h(s.isN64(t),"value","int64"),this.hi===t.hi&&this.lo===t.lo},s.prototype.eqn=function(t){return h(l(t),"value","number"),this.hi===(t>>31&-this.sign)&&this.lo===(0|t)},s.prototype.gt=function(t){return this.cmp(t)>0},s.prototype.gtn=function(t){return this.cmpn(t)>0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.lt=function(t){return this.cmp(t)<0},s.prototype.ltn=function(t){return this.cmpn(t)<0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.isZero=function(){return 0===this.hi&&0===this.lo},s.prototype.isNeg=function(){return 1===this.sign&&this.hi<0},s.prototype.isOdd=function(){return 1==(1&this.lo)},s.prototype.isEven=function(){return 0==(1&this.lo)},s.prototype.clone=function(){const t=new this.constructor;return t.hi=this.hi,t.lo=this.lo,t},s.prototype.inject=function(t){return h(s.isN64(t),"value","int64"),this.hi=t.hi,this.lo=t.lo,this},s.prototype.set=function(t){h(function(t){return Number.isSafeInteger?Number.isSafeInteger(t):l(t)&&Math.floor(t)===t&&t>=-9007199254740991&&t<=9007199254740991}(t),"number","integer");let e=!1;return t<0&&(t=-t,e=!0),this.hi=t*(1/4294967296)|0,this.lo=0|t,e&&this.ineg(),this},s.prototype.join=function(t,e){return h(l(t),"hi","number"),h(l(e),"lo","number"),this.hi=0|t,this.lo=0|e,this},s.prototype._small=function(t){const e=new this.constructor;return e.hi=t>>31&-this.sign,e.lo=0|t,e},s.prototype.bitLength=function(){let t=this;return this.isNeg()&&(t=this.neg()),0===t.hi?a(t.lo):a(t.hi)+32},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.isSafe=function(){let t=this.hi;return this.isNeg()&&(t=~t,0===this.lo&&(t+=1)),0==(4292870144&t)},s.prototype.inspect=function(){let t="I64";return this.sign||(t="U64"),`<${t}: ${this.toString(10)}>`},s.prototype.readLE=function(t,e){return h(t&&"number"==typeof t.length,"data","arraylike"),h(e>>0===e,"offset","integer"),h(e+8<=t.length,"offset","valid offset"),this.lo=f(t,e),this.hi=f(t,e+4),e+8},s.prototype.readBE=function(t,e){return h(t&&"number"==typeof t.length,"data","arraylike"),h(e>>0===e,"offset","integer"),h(e+8<=t.length,"offset","valid offset"),this.hi=d(t,e),this.lo=d(t,e+4),e+8},s.prototype.readRaw=function(t,e){return this.readLE(t,e)},s.prototype.writeLE=function(t,e){return h(t&&"number"==typeof t.length,"data","arraylike"),h(e>>0===e,"offset","integer"),h(e+8<=t.length,"offset","valid offset"),p(t,this.lo,e),p(t,this.hi,e+4),e+8},s.prototype.writeBE=function(t,e){return h(t&&"number"==typeof t.length,"data","arraylike"),h(e>>0===e,"offset","integer"),h(e+8<=t.length,"offset","valid offset"),g(t,this.hi,e),g(t,this.lo,e+4),e+8},s.prototype.writeRaw=function(t,e){return this.writeLE(t,e)},s.prototype.toU64=function(){const t=new r;return t.hi=this.hi,t.lo=this.lo,t},s.prototype.toI64=function(){const t=new n;return t.hi=this.hi,t.lo=this.lo,t},s.prototype.toNumber=function(){if(!this.isSafe())throw new Error("Number exceeds 53 bits.");return this.toDouble()},s.prototype.toDouble=function(){let t=this.hi;return this.sign||(t>>>=0),4294967296*t+(this.lo>>>0)},s.prototype.toInt=function(){return this.sign?this.lo:this.lo>>>0},s.prototype.toBool=function(){return!this.isZero()},s.prototype.toBits=function(){return[this.hi,this.lo]},s.prototype.toObject=function(){return{hi:this.hi,lo:this.lo}},s.prototype.toString=function(t,e){if(t=o(t),null==e&&(e=0),h(t>>>0===t,"base","integer"),h(e>>>0===e,"pad","integer"),t<2||t>16)throw new Error("Base ranges between 2 and 16.");if(e>64)throw new Error("Maximum padding is 64 characters.");let i=this,s=!1;i.isNeg()&&(i=i.neg(),s=!0);let r=i.hi>>>0,n=i.lo>>>0,a="";do{const e=r%t;r-=e,r/=t;const i=(n+=4294967296*e)%t;n-=i,n/=t;let s=i;s+=s<10?48:87,a=String.fromCharCode(s)+a}while(n>0||r>0);for(;a.length<e;)a="0"+a;return s&&(a="-"+a),a},s.prototype.toJSON=function(){return this.toString(16,16)},s.prototype.toBN=function(t){const e=this.isNeg();let i=this.hi,s=this.lo;e&&(i=~i,-1==(s=~s)?(s=0,i+=1,i|=0):s+=1),s>>>=0;const r=new t(i>>>=0);return r.ishln(32),r.iadd(new t(s)),e&&r.ineg(),r},s.prototype.toLE=function(t){h("function"==typeof t,"ArrayLike","constructor");const e=c(t,8);return this.writeLE(e,0),e},s.prototype.toBE=function(t){h("function"==typeof t,"ArrayLike","constructor");const e=c(t,8);return this.writeBE(e,0),e},s.prototype.toRaw=function(t){return this.toLE(t)},s.prototype.fromNumber=function(t){return this.set(t)},s.prototype.fromInt=function(t){return h(l(t),"integer","number"),this.join(t>>31&-this.sign,t)},s.prototype.fromBool=function(t){return h("boolean"==typeof t,"value","boolean"),this.hi=0,this.lo=t?1:0,this},s.prototype.fromBits=function(t,e){return this.join(t,e)},s.prototype.fromObject=function(t){return h(t&&"object"==typeof t,"number","object"),this.fromBits(t.hi,t.lo)},s.prototype.fromString=function(t,e){if(e=o(e),h("string"==typeof t,"string","string"),h(e>>>0===e,"base","integer"),e<2||e>16)throw new Error("Base ranges between 2 and 16.");let i=!1,s=0;if(t.length>0&&"-"===t[0]&&(s+=1,i=!0),t.length===s||t.length>s+64)throw new Error("Invalid string (bad length).");let r=0,n=0;for(;s<t.length;s++){let i=t.charCodeAt(s);if(i>=48&&i<=57?i-=48:i>=65&&i<=90?i-=55:i>=97&&i<=122?i-=87:i=e,i>=e)throw new Error("Invalid string (parse error).");if(n*=e,r*=e,(n+=i)>4294967295&&(r+=(n-(i=n%4294967296))/4294967296,n=i),r>4294967295)throw new Error("Invalid string (overflow).")}return this.hi=0|r,this.lo=0|n,i&&this.ineg(),this},s.prototype.fromJSON=function(t){return this.fromString(t,16)},s.prototype.fromBN=function(t){h(t&&u(t.words),"number","big number");const e=this,i=t.clone(),s=i.isNeg();if(e.sign&&i.testn(63))throw new Error("Big number overflow.");let r=0;for(;!i.isZero();){if(8===r)throw new Error("Big number overflow.");e.orb(r,i.andln(255)),i.iushrn(8),r++}return s&&e.ineg(),e},s.prototype.fromLE=function(t){return this.readLE(t,0),this},s.prototype.fromBE=function(t){return this.readBE(t,0),this},s.prototype.fromRaw=function(t){return this.fromLE(t)},s.prototype.from=function(t,e){if(null==t)return this;if("number"==typeof t)return"number"==typeof e?this.fromBits(t,e):this.fromNumber(t);if("string"==typeof t)return this.fromString(t,e);if("object"==typeof t)return u(t.words)?this.fromBN(t):"number"==typeof t.length?this.fromRaw(t):this.fromObject(t);if("boolean"==typeof t)return this.fromBool(t);throw new TypeError("Non-numeric object passed to N64.")},s.min=function(t,e){return t.cmp(e)<0?t:e},s.max=function(t,e){return t.cmp(e)>0?t:e},s.random=function(){const t=new this;return t.hi=4294967296*Math.random()|0,t.lo=4294967296*Math.random()|0,t},s.pow=function(t,e){return(new this).fromInt(t).ipown(e)},s.shift=function(t,e){return(new this).fromInt(t).ishln(e)},s.readLE=function(t,e){const i=new this;return i.readLE(t,e),i},s.readBE=function(t,e){const i=new this;return i.readBE(t,e),i},s.readRaw=function(t,e){const i=new this;return i.readRaw(t,e),i},s.fromNumber=function(t){return(new this).fromNumber(t)},s.fromInt=function(t){return(new this).fromInt(t)},s.fromBool=function(t){return(new this).fromBool(t)},s.fromBits=function(t,e){return(new this).fromBits(t,e)},s.fromObject=function(t){return(new this).fromObject(t)},s.fromString=function(t,e){return(new this).fromString(t,e)},s.fromJSON=function(t){return(new this).fromJSON(t)},s.fromBN=function(t){return(new this).fromBN(t)},s.fromLE=function(t){return(new this).fromLE(t)},s.fromBE=function(t){return(new this).fromBE(t)},s.fromRaw=function(t){return(new this).fromRaw(t)},s.from=function(t,e){return(new this).from(t,e)},s.isN64=function(t){return t instanceof s},s.isU64=function(t){return t instanceof r},s.isI64=function(t){return t instanceof n},r.__proto__=s,r.prototype.__proto__=s.prototype,r.ULONG_MIN=0,r.ULONG_MAX=4294967295,r.UINT32_MIN=r(0,0),r.UINT32_MAX=r(0,4294967295),r.UINT64_MIN=r(0,0),r.UINT64_MAX=r(4294967295,4294967295),n.__proto__=s,n.prototype.__proto__=s.prototype,n.LONG_MIN=-2147483648,n.LONG_MAX=2147483647,n.INT32_MIN=n(4294967295,2147483648),n.INT32_MAX=n(0,2147483647),n.INT64_MIN=n(2147483648,0),n.INT64_MAX=n(2147483647,4294967295),e.N64=s,e.U64=r,e.I64=n},function(t,e,i){"use strict";(function(t){
/*!
 * cashaddr.js - cashaddr for bcash
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 *
 * Implementation of CashAddr
 * https://github.com/bitcoincashorg/spec/blob/master/cashaddr.md
 *
 * Parts of this software are based on "bitcoin-abc".
 * https://github.com/Bitcoin-ABC/bitcoin-abc
 *
 * Parts of this software are based on "bech32".
 * https://github.com/sipa/bech32
 *
 * Copyright (c) 2017 Pieter Wuille
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
const s=i(0),{U64:r}=i(185),n=t.allocUnsafe(105),o="qpzry9x8gf2tvdw0s3jn54khce6mua7l",a=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,-1,10,17,21,20,26,30,7,5,-1,-1,-1,-1,-1,-1,-1,29,-1,24,13,25,9,8,23,-1,18,22,31,27,19,-1,1,0,3,16,11,28,12,14,6,4,2,-1,-1,-1,-1,-1,-1,29,-1,24,13,25,9,8,23,-1,18,22,31,27,19,-1,1,0,3,16,11,28,12,14,6,4,2,-1,-1,-1,-1,-1],h={20:0,24:1,28:2,32:3,40:4,48:5,56:6,64:7},l=r.fromNumber(34359738367),u=[r.fromNumber(656907472481),r.fromNumber(522768456162),r.fromNumber(0xf33e5fb3c4),r.fromNumber(748107326120),r.fromNumber(130178868336)];function c(t){const e=t.clone(),i=e.ushrn(35).lo;e.iand(l).ishln(5);for(let t=0;t<u.length;t++)i>>t&1&&e.ixor(u[t]);return e}function f(t,e){let i=r.fromNumber(1),s="";for(let e=0;e<t.length;e++){const r=t.charCodeAt(e);if(65280&r||r>>5==0)throw new Error("Invalid cashaddr character.");i=c(i).ixorn(31&r),s+=t[e]}i=c(i),s+=":";for(let t=0;t<e.length;t++){const r=e[t];if(r>>5!=0)throw new Error("Invalid cashaddr value.");i=c(i).ixorn(r),s+=o[r]}for(let t=0;t<8;t++)i=c(i);i.ixorn(1);for(let t=0;t<8;t++){const e=31&i.shrn(5*(7-t)).lo;s+=o[e]}return s}function d(e,i){if(e.length<8)throw new Error("Invalid cashaddr string length.");let s=!1,n=!1,o=!1,h=0;for(let t=0;t<e.length;t++){const i=e.charCodeAt(t);if(i>=97&&i<=122)s=!0;else if(i>=65&&i<=90)n=!0;else if(i>=48&&i<=57)o=!0;else{if(58!==i)throw new Error("Invalid cashaddr charater.");if(o)throw new Error("Numbers are not allowed in prefix.");if(0===t)throw new Error("Empty cashaddr prefix.");if(0!==h)throw new Error("There must not be two separators.");h=t}}if(n&&s)throw new Error("Invalid cashaddr casing.");let l,u=r.fromNumber(1);0===h?l=i:(l=e.slice(0,h),h++);for(let t=0;t<l.length;t++){const e=l.charCodeAt(t);u=c(u).ixorn(31&(32|e))}u=c(u);const f=t.allocUnsafe(e.length-h);for(let t=h;t<e.length;t++){const i=e.charCodeAt(t),s=65408&i?-1:a[i];if(-1===s)throw new Error("Invalid cashaddr character.");u=c(u).ixorn(s),t+8<e.length&&(f[t-h]=s)}if(!u.eqn(1))throw new Error("Invalid cashaddr checksum.");return[l,f.slice(0,-8)]}function p(t,e){s("string"==typeof t);const[i,r]=d(t,e),n=5*r.length%8;if(n>=5)throw new Error("Invalid padding in data.");if(r[r.length-1]&(1<<n)-1)throw new Error("Non zero padding.");const o=m(r,r,5,8,!1,0),a=o[0]>>3&31,h=o.slice(1);let l=20+4*(3&o[0]);if(4&o[0]&&(l*=2),l!==h.length)throw new Error("Invalid cashaddr data length.");return new g(i,a,h)}class g{constructor(t,e,i){this.prefix=t,this.type=e,this.hash=i}}function m(t,e,i,s,r,n){const o=(1<<s)-1;let a=0,h=0,l=0;for(let r=n;r<t.length;r++){const n=t[r];if(n>>i!=0)throw new Error("Invalid cashaddr bits.");for(a=a<<i|n,h+=i;h>=s;)h-=s,e[l++]=a>>>h&o}if(r)h>0&&(e[l++]=a<<s-h&o);else if(h>=i||a<<s-h&o)throw new Error("Invalid cashaddr bits.");return e.slice(0,l)}e.encode=function(e,i,r){if(s("string"==typeof e),s((255&i)===i),s(t.isBuffer(r)),i<0||i>1)throw new Error("Invalid cashaddr type.");const o=h[r.length];if(null==o)throw new Error("Non standard length.");const a=t.allocUnsafe(r.length+1);return a[0]=i<<3|o,r.copy(a,1),f(e,m(a,n,8,5,!0,0))},e.decode=p,e.test=function(t,e){try{p(t,e)}catch(t){return!1}return!0},e.serialize=f,e.deserialize=d}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * bech32.js - bech32 for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 *
 * Parts of this software are based on "bech32".
 * https://github.com/sipa/bech32
 *
 * Copyright (c) 2017 Pieter Wuille
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
const s=i(0),r=t.allocUnsafe(65),n="qpzry9x8gf2tvdw0s3jn54khce6mua7l",o=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,-1,10,17,21,20,26,30,7,5,-1,-1,-1,-1,-1,-1,-1,29,-1,24,13,25,9,8,23,-1,18,22,31,27,19,-1,1,0,3,16,11,28,12,14,6,4,2,-1,-1,-1,-1,-1,-1,29,-1,24,13,25,9,8,23,-1,18,22,31,27,19,-1,1,0,3,16,11,28,12,14,6,4,2,-1,-1,-1,-1,-1];function a(t){const e=t>>>25;return(33554431&t)<<5^996825010&-(e>>0&1)^642813549&-(e>>1&1)^513874426&-(e>>2&1)^1027748829&-(e>>3&1)^705979059&-(e>>4&1)}function h(e){if(e.length<8||e.length>90)throw new Error("Invalid bech32 string length.");let i=0;for(;i<e.length&&"1"!==e[e.length-1-i];)i+=1;const s=e.length-(1+i);if(s<1||i<6)throw new Error("Invalid bech32 data length.");i-=6;const r=t.allocUnsafe(i);let n,h=1,l=!1,u=!1,c="";for(let t=0;t<s;t++){let i=e.charCodeAt(t);if(i<33||i>126)throw new Error("Invalid bech32 character.");i>=97&&i<=122?l=!0:i>=65&&i<=90&&(u=!0,i=i-65+97),c+=String.fromCharCode(i),h=a(h)^i>>5}for(h=a(h),n=0;n<s;n++)h=a(h)^31&e.charCodeAt(n);for(n+=1;n<e.length;){const t=e.charCodeAt(n),i=65408&t?-1:o[t];if(-1===i)throw new Error("Invalid bech32 character.");t>=97&&t<=122?l=!0:t>=65&&t<=90&&(u=!0),h=a(h)^i,n+6<e.length&&(r[n-(1+s)]=i),n+=1}if(l&&u)throw new Error("Invalid bech32 casing.");if(1!==h)throw new Error("Invalid bech32 checksum.");return[c,r.slice(0,i)]}function l(t,e,i,s,r,n){const o=(1<<s)-1;let a=0,h=0,l=0;-1!==r&&(e[l++]=r);for(let r=n;r<t.length;r++){const n=t[r];if(n>>i!=0)throw new Error("Invalid bech32 bits.");for(a=a<<i|n,h+=i;h>=s;)h-=s,e[l++]=a>>>h&o}if(-1!==r)h>0&&(e[l++]=a<<s-h&o);else if(h>=i||a<<s-h&o)throw new Error("Invalid bech32 bits.");return e.slice(0,l)}e.encode=function(e,i,o){if(s("string"==typeof e),s((255&i)===i),s(t.isBuffer(o)),i<0||i>31)throw new Error("Invalid bech32 version.");if(o.length<2||o.length>40)throw new Error("Invalid bech32 data length.");return function(t,e){let i,s=1;for(i=0;i<t.length;i++){const e=t.charCodeAt(i);if(65280&e||e>>5==0)throw new Error("Invalid bech32 character.");s=a(s)^e>>5}if(i+7+e.length>90)throw new Error("Invalid bech32 data length.");s=a(s);let r="";for(let e=0;e<t.length;e++){const i=t.charCodeAt(e);s=a(s)^31&i,r+=t[e]}r+="1";for(let t=0;t<e.length;t++){const i=e[t];if(i>>5!=0)throw new Error("Invalid bech32 value.");s=a(s)^i,r+=n[i]}for(let t=0;t<6;t++)s=a(s);s^=1;for(let t=0;t<6;t++)r+=n[s>>>5*(5-t)&31];return r}(e,l(o,r,8,5,i,0))},e.decode=function(t){s("string"==typeof t);const[e,i]=h(t);if(0===i.length||i.length>65)throw new Error("Invalid bech32 data length.");if(i[0]>31)throw new Error("Invalid bech32 version.");const r=i[0],n=l(i,i,5,8,-1,1);if(n.length<2||n.length>40)throw new Error("Invalid bech32 data length.");return new function(t,e,i){this.hrp=t,this.version=e,this.hash=i}(e,r,n)},e.test=function(t){if("string"!=typeof t)return!1;let e;try{[,e]=h(t)}catch(t){return!1}return!(0===e.length||e.length>65||e[0]>31)}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * base58.js - base58 for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,-1,-1,-1,-1,-1,-1,-1,9,10,11,12,13,14,15,16,-1,17,18,19,20,21,-1,22,23,24,25,26,27,28,29,30,31,32,-1,-1,-1,-1,-1,-1,33,34,35,36,37,38,39,40,41,42,43,-1,44,45,46,47,48,49,50,51,52,53,54,55,56,57,-1,-1,-1,-1,-1];e.encode=function(e){s(t.isBuffer(e));let i=0,r=0;for(;r<e.length&&0===e[r];r++)i+=1;const n=t.allocUnsafe(1+(138*e.length/100|0));n.fill(0);let o=0;for(;r<e.length;r++){let t=e[r],i=0;for(let e=n.length-1;e>=0&&!(0===t&&i>=o);e--,i++)t+=256*n[e],n[e]=t%58,t=t/58|0;s(0===t),o=i}for(r=n.length-o;r<n.length&&0===n[r];)r+=1;let a="";for(let t=0;t<i;t++)a+="1";for(;r<n.length;r++)a+="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"[n[r]];return a},e.decode=function(e){s("string"==typeof e);let i=0,n=0;for(;n<e.length&&"1"===e[n];n++)i+=1;const o=t.allocUnsafe(1+(733*e.length/1e3|0));o.fill(0);let a=0;for(;n<e.length;n++){const t=e.charCodeAt(n),i=65408&t?-1:r[t];if(-1===i)throw new Error("Non-base58 character.");let h=i,l=0;for(let t=o.length-1;t>=0&&!(0===h&&l>=a);t--,l++)h+=58*o[t],o[t]=h%256,h=h/256|0;s(0===h),a=l}for(n=0;n<o.length&&0===o[n];)n+=1;const h=t.allocUnsafe(i+(o.length-n));let l;for(l=0;l<i;l++)h[l]=0;for(;n<o.length;)h[l++]=o[n++];return h},e.test=function(t){if("string"!=typeof t)return!1;for(let e=0;e<t.length;e++){const i=t.charCodeAt(e);if(65408&i)return!1;if(-1===r[i])return!1}return!0}}).call(this,i(1).Buffer)},function(t,e){},function(t,e,i){"use strict";t.exports=i(328)},function(t,e,i){"use strict";(function(e){
/*!
 * struct.js - struct object for bcoin
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(98),n=i(97),o=i(96);t.exports=class{constructor(){}inject(t){return s(t instanceof this.constructor),this.decode(t.encode())}clone(){return(new this.constructor).inject(this)}getSize(t){return-1}write(t,e){return t}read(t,e){return this}toString(){return Object.prototype.toString.call(this)}fromString(t,e){return this}getJSON(){return this}fromJSON(t,e){return this}fromOptions(t,e){return this}from(t,e){return this.fromOptions(t,e)}format(){return this.getJSON()}encode(t){const e=this.getSize(t),i=-1===e?new n:new o(e);return this.write(i,t),i.render()}decode(t,e){const i=new r(t);return this.read(i,e),this}toHex(t){return this.encode(t).toString("hex")}fromHex(t,i){s("string"==typeof t);const r=t.length>>>1,n=e.from(t,"hex");if(n.length!==r)throw new Error("Invalid hex string.");return this.decode(n,i)}toBase64(t){return this.encode(t).toString("base64")}fromBase64(t,i){s("string"==typeof t);const r=3*(t.length-3&-4)/4|0,n=e.from(t,"base64");if(n.length<r)throw new Error("Invalid base64 string.");return this.decode(n,i)}toJSON(){return this.getJSON()}inspect(){return this.format()}static read(t,e){return(new this).read(t,e)}static decode(t,e){return(new this).decode(t,e)}static fromHex(t,e){return(new this).fromHex(t,e)}static fromBase64(t,e){return(new this).fromBase64(t,e)}static fromString(t,e){return(new this).fromString(t,e)}static fromJSON(t,e){return(new this).fromJSON(t,e)}static fromOptions(t,e){return(new this).fromOptions(t,e)}static from(t,e){return(new this).from(t,e)}toWriter(t,e){return this.write(t,e)}fromReader(t,e){return this.read(t,e)}toRaw(t){return this.encode(t)}fromRaw(t,e){return this.decode(t,e)}static fromReader(t,e){return this.read(t,e)}static fromRaw(t,e){return this.decode(t,e)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * staticwriter.js - buffer writer for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(22),n=e.allocUnsafe(0),o=e.allocUnsafe(1),a=e.allocUnsafe(2),h=e.allocUnsafe(3),l=e.allocUnsafe(4),u=e.allocUnsafe(5),c=e.allocUnsafe(6),f=e.allocUnsafe(7),d=e.allocUnsafe(8),p=e.allocUnsafe(9),g=e.allocUnsafe(32),m=[n,o,a,h,l,u,c,f,d,p];t.exports=class{constructor(t){s(t),this.ctx=t}init(...t){return this.ctx.init(...t)}update(t){return this.ctx.update(t)}final(){return this.ctx.digest?this.ctx.digest():this.ctx.final()}render(){return this.final()}getSize(){throw new Error("Not available.")}seek(t){throw new Error("Not available.")}destroy(){throw new Error("Not available.")}writeU8(t){return r.writeU8(o,t,0),this.ctx.update(o),this}writeU16(t){return r.writeU16(a,t,0),this.ctx.update(a),this}writeU16BE(t){return r.writeU16BE(a,t,0),this.ctx.update(a),this}writeU32(t){return r.writeU32(l,t,0),this.ctx.update(l),this}writeU32BE(t){return r.writeU32BE(l,t,0),this.ctx.update(l),this}writeU64(t){return r.writeU64(d,t,0),this.ctx.update(d),this}writeU64BE(t){return r.writeU64BE(d,t,0),this.ctx.update(d),this}writeI8(t){return r.writeI8(o,t,0),this.ctx.update(o),this}writeI16(t){return r.writeI16(a,t,0),this.ctx.update(a),this}writeI16BE(t){return r.writeI16BE(a,t,0),this.ctx.update(a),this}writeI32(t){return r.writeI32(l,t,0),this.ctx.update(l),this}writeI32BE(t){return r.writeI32BE(l,t,0),this.ctx.update(l),this}writeI64(t){return r.writeI64(d,t,0),this.ctx.update(d),this}writeI64BE(t){return r.writeI64BE(d,t,0),this.ctx.update(d),this}writeFloat(t){return r.writeFloat(l,t,0),this.ctx.update(l),this}writeFloatBE(t){return r.writeFloatBE(l,t,0),this.ctx.update(l),this}writeDouble(t){return r.writeDouble(d,t,0),this.ctx.update(d),this}writeDoubleBE(t){return r.writeDoubleBE(d,t,0),this.ctx.update(d),this}writeVarint(t){const e=r.sizeVarint(t),i=m[e];return r.writeVarint(i,t,0),this.ctx.update(i),this}writeVarint2(t){const e=r.sizeVarint2(t),i=m[e];return r.writeVarint2(i,t,0),this.ctx.update(i),this}writeBytes(t){return this.ctx.update(t),this}writeVarBytes(t){return this.writeVarint(t.length),this.writeBytes(t),this}copy(t,e,i){return this.ctx.update(t.slice(e,i)),this}writeString(t,i){return 0===t.length?this:("string"==typeof t&&(t=e.from(t,i)),this.ctx.update(t),this)}writeHash(t){return"string"!=typeof t?(s(32===t.length),this.writeBytes(t),this):(s(64===t.length),g.write(t,0,"hex"),this.ctx.update(g),this)}writeVarString(t,i){if(0===t.length)return this.writeVarint(0),this;const s=e.byteLength(t,i);return this.writeVarint(s),this.ctx.update(t,i),this}writeNullString(t,e){return this.writeString(t,e),this.writeU8(0),this}writeChecksum(){throw new Error("Not available.")}fill(t,i){if(s(i>=0),0===i)return this;if(i<=32){const e=g.slice(0,i);return e.fill(t),this.ctx.update(e),this}const r=e.allocUnsafe(i);return r.fill(t),this.ctx.update(r),this}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * sizewriter.js - buffer writer for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(22);t.exports=class{constructor(){this.offset=0}render(){const t=this.offset;return this.destroy(),t}getSize(){return this.offset}seek(t){return this.offset+=t,this}destroy(){return this.offset=0,this}writeU8(t){return this.offset+=1,this}writeU16(t){return this.offset+=2,this}writeU16BE(t){return this.offset+=2,this}writeU32(t){return this.offset+=4,this}writeU32BE(t){return this.offset+=4,this}writeU64(t){return this.offset+=8,this}writeU64BE(t){return this.offset+=8,this}writeU64N(t){return this.offset+=8,this}writeU64BEN(t){return this.offset+=8,this}writeI8(t){return this.offset+=1,this}writeI16(t){return this.offset+=2,this}writeI16BE(t){return this.offset+=2,this}writeI32(t){return this.offset+=4,this}writeI32BE(t){return this.offset+=4,this}writeI64(t){return this.offset+=8,this}writeI64BE(t){return this.offset+=8,this}writeI64N(t){return this.offset+=8,this}writeI64BEN(t){return this.offset+=8,this}writeFloat(t){return this.offset+=4,this}writeFloatBE(t){return this.offset+=4,this}writeDouble(t){return this.offset+=8,this}writeDoubleBE(t){return this.offset+=8,this}writeVarint(t){return this.offset+=s.sizeVarint(t),this}writeVarintN(t){return this.offset+=s.sizeVarintN(t),this}writeVarint2(t){return this.offset+=s.sizeVarint2(t),this}writeVarint2N(t){return this.offset+=s.sizeVarint2N(t),this}writeBytes(t){return this.offset+=t.length,this}writeVarBytes(t){return this.writeVarint(t.length),this.writeBytes(t),this}copy(t,e,i){return this.offset+=i-e,this}writeString(t,i){return 0===t.length?this:(this.offset+=e.byteLength(t,i),this)}writeHash(t){return this.offset+=32,this}writeVarString(t,i){if(0===t.length)return this.offset+=1,this;const s=e.byteLength(t,i);return this.writeVarint(s),this.offset+=s,this}writeNullString(t,e){return this.writeString(t,e),this.writeU8(0),this}writeChecksum(t){return this.offset+=4,this}fill(t,e){return this.offset+=e,this}}}).call(this,i(1).Buffer)},function(t,e,i){(function(t,e){!function(t,i){"use strict";if(!t.setImmediate){var s,r,n,o,a,h=1,l={},u=!1,c=t.document,f=Object.getPrototypeOf&&Object.getPrototypeOf(t);f=f&&f.setTimeout?f:t,"[object process]"==={}.toString.call(t.process)?s=function(t){e.nextTick(function(){p(t)})}:function(){if(t.postMessage&&!t.importScripts){var e=!0,i=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=i,e}}()?(o="setImmediate$"+Math.random()+"$",a=function(e){e.source===t&&"string"==typeof e.data&&0===e.data.indexOf(o)&&p(+e.data.slice(o.length))},t.addEventListener?t.addEventListener("message",a,!1):t.attachEvent("onmessage",a),s=function(e){t.postMessage(o+e,"*")}):t.MessageChannel?((n=new MessageChannel).port1.onmessage=function(t){p(t.data)},s=function(t){n.port2.postMessage(t)}):c&&"onreadystatechange"in c.createElement("script")?(r=c.documentElement,s=function(t){var e=c.createElement("script");e.onreadystatechange=function(){p(t),e.onreadystatechange=null,r.removeChild(e),e=null},r.appendChild(e)}):s=function(t){setTimeout(p,0,t)},f.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),i=0;i<e.length;i++)e[i]=arguments[i+1];var r={callback:t,args:e};return l[h]=r,s(h),h++},f.clearImmediate=d}function d(t){delete l[t]}function p(t){if(u)setTimeout(p,0,t);else{var e=l[t];if(e){u=!0;try{!function(t){var e=t.callback,s=t.args;switch(s.length){case 0:e();break;case 1:e(s[0]);break;case 2:e(s[0],s[1]);break;case 3:e(s[0],s[1],s[2]);break;default:e.apply(i,s)}}(e)}finally{d(t),u=!1}}}}}("undefined"==typeof self?void 0===t?this:t:self)}).call(this,i(10),i(15))},function(t,e){t.exports=function(t){return t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8}},function(t,e){e.read=function(t,e,i,s,r){var n,o,a=8*r-s-1,h=(1<<a)-1,l=h>>1,u=-7,c=i?r-1:0,f=i?-1:1,d=t[e+c];for(c+=f,n=d&(1<<-u)-1,d>>=-u,u+=a;u>0;n=256*n+t[e+c],c+=f,u-=8);for(o=n&(1<<-u)-1,n>>=-u,u+=s;u>0;o=256*o+t[e+c],c+=f,u-=8);if(0===n)n=1-l;else{if(n===h)return o?NaN:1/0*(d?-1:1);o+=Math.pow(2,s),n-=l}return(d?-1:1)*o*Math.pow(2,n-s)},e.write=function(t,e,i,s,r,n){var o,a,h,l=8*n-r-1,u=(1<<l)-1,c=u>>1,f=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,d=s?0:n-1,p=s?1:-1,g=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,o=u):(o=Math.floor(Math.log(e)/Math.LN2),e*(h=Math.pow(2,-o))<1&&(o--,h*=2),(e+=o+c>=1?f/h:f*Math.pow(2,1-c))*h>=2&&(o++,h/=2),o+c>=u?(a=0,o=u):o+c>=1?(a=(e*h-1)*Math.pow(2,r),o+=c):(a=e*Math.pow(2,c-1)*Math.pow(2,r),o=0));r>=8;t[i+d]=255&a,d+=p,a/=256,r-=8);for(o=o<<r|a,l+=r;l>0;t[i+d]=255&o,d+=p,o/=256,l-=8);t[i+d-p]|=128*g}},function(t,e,i){"use strict";e.byteLength=function(t){var e=l(t),i=e[0],s=e[1];return 3*(i+s)/4-s},e.toByteArray=function(t){for(var e,i=l(t),s=i[0],o=i[1],a=new n(3*(s+o)/4-o),h=0,u=o>0?s-4:s,c=0;c<u;c+=4)e=r[t.charCodeAt(c)]<<18|r[t.charCodeAt(c+1)]<<12|r[t.charCodeAt(c+2)]<<6|r[t.charCodeAt(c+3)],a[h++]=e>>16&255,a[h++]=e>>8&255,a[h++]=255&e;return 2===o&&(e=r[t.charCodeAt(c)]<<2|r[t.charCodeAt(c+1)]>>4,a[h++]=255&e),1===o&&(e=r[t.charCodeAt(c)]<<10|r[t.charCodeAt(c+1)]<<4|r[t.charCodeAt(c+2)]>>2,a[h++]=e>>8&255,a[h++]=255&e),a},e.fromByteArray=function(t){for(var e,i=t.length,r=i%3,n=[],o=0,a=i-r;o<a;o+=16383)n.push(u(t,o,o+16383>a?a:o+16383));return 1===r?(e=t[i-1],n.push(s[e>>2]+s[e<<4&63]+"==")):2===r&&(e=(t[i-2]<<8)+t[i-1],n.push(s[e>>10]+s[e>>4&63]+s[e<<2&63]+"=")),n.join("")};for(var s=[],r=[],n="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",a=0,h=o.length;a<h;++a)s[a]=o[a],r[o.charCodeAt(a)]=a;function l(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var i=t.indexOf("=");return-1===i&&(i=e),[i,i===e?0:4-i%4]}function u(t,e,i){for(var r,n,o=[],a=e;a<i;a+=3)r=(t[a]<<16&16711680)+(t[a+1]<<8&65280)+(255&t[a+2]),o.push(s[(n=r)>>18&63]+s[n>>12&63]+s[n>>6&63]+s[63&n]);return o.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},function(t,e,i){"use strict";(function(e){
/*!
 * txdb.js - persistent transaction pool
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(5),o=i(19),a=i(25),h=i(46),l=i(18),u=i(122),c=i(123).txdb,f=i(3),d=i(17),{TXRecord:p}=u;class g{constructor(t=-1){s("number"==typeof t),this.account=t,this.tx=0,this.coin=0,this.unconfirmed=0,this.confirmed=0}applyTo(t){t.tx+=this.tx,t.coin+=this.coin,t.unconfirmed+=this.unconfirmed,t.confirmed+=this.confirmed,s(t.tx>=0),s(t.coin>=0),s(t.unconfirmed>=0),s(t.confirmed>=0)}toRaw(){const t=r.write(32);return t.writeU64(this.tx),t.writeU64(this.coin),t.writeU64(this.unconfirmed),t.writeU64(this.confirmed),t.render()}fromRaw(t){const e=r.read(t);return this.tx=e.readU64(),this.coin=e.readU64(),this.unconfirmed=e.readU64(),this.confirmed=e.readU64(),this}static fromRaw(t,e){return new this(t).fromRaw(e)}toJSON(t){return{account:t?void 0:this.account,tx:this.tx,coin:this.coin,unconfirmed:this.unconfirmed,confirmed:this.confirmed}}inspect(){return"<Balance"+` tx=${this.tx}`+` coin=${this.coin}`+` unconfirmed=${o.btc(this.unconfirmed)}`+` confirmed=${o.btc(this.confirmed)}`+">"}}class m{constructor(){this.wallet=new g,this.accounts=new Map}updated(){return 0!==this.wallet.tx}applyTo(t){this.wallet.applyTo(t)}get(t){return this.accounts.has(t.account)||this.accounts.set(t.account,new g),this.accounts.get(t.account)}tx(t,e){this.get(t).tx=e,this.wallet.tx=e}coin(t,e){this.get(t).coin+=e,this.wallet.coin+=e}unconfirmed(t,e){this.get(t).unconfirmed+=e,this.wallet.unconfirmed+=e}confirmed(t,e){this.get(t).confirmed+=e,this.wallet.confirmed+=e}}class w{constructor(t,e){this.coin=t||new h,this.spent=e||!1,this.own=!1}fromRaw(t){const e=r.read(t);return this.coin.fromReader(e),this.spent=1===e.readU8(),this.own=1===e.readU8(),this}static fromRaw(t){return(new this).fromRaw(t)}getSize(){return this.coin.getSize()+2}toRaw(){const t=this.getSize(),e=r.write(t);return this.coin.toWriter(e),e.writeU8(this.spent?1:0),e.writeU8(this.own?1:0),e.render()}fromTX(t,e,i){return this.coin.fromTX(t,e,i),this.spent=!1,this.own=!1,this}static fromTX(t,e,i){return(new this).fromTX(t,e,i)}}class y{constructor(t,e){this.hash=t.hash,this.tx=t.tx,this.mtime=t.mtime,this.size=this.tx.getSize(),this.block=null,this.height=-1,this.time=0,e&&(this.block=e.hash,this.height=e.height,this.time=e.time),this.inputs=[],this.outputs=[],this.init()}init(){for(const t of this.tx.inputs){const e=new b;e.address=t.getAddress(),this.inputs.push(e)}for(const t of this.tx.outputs){const e=new b;e.value=t.value,e.address=t.getAddress(),this.outputs.push(e)}}setInput(t,e,i){const s=this.inputs[t];i&&(s.value=i.value,s.address=i.getAddress()),e&&(s.path=e)}setOutput(t,e){const i=this.outputs[t];e&&(i.path=e)}getDepth(t){if(-1===this.height)return 0;if(null==t)return 0;const e=t-this.height;return e<0?0:e+1}getFee(){let t=0,e=0;for(const e of this.inputs){if(!e.path)return 0;t+=e.value}for(const t of this.outputs)e+=t.value;return t-e}getRate(t){return d.getRate(this.size,t)}toJSON(t,e){const i=this.getFee(),s=this.getRate(i);return{hash:n.revHex(this.hash),height:this.height,block:this.block?n.revHex(this.block):null,time:this.time,mtime:this.mtime,date:n.date(this.time),mdate:n.date(this.mtime),size:this.size,fee:i,rate:s,confirmations:this.getDepth(e),inputs:this.inputs.map(e=>e.getJSON(t)),outputs:this.outputs.map(e=>e.getJSON(t)),tx:this.tx.toRaw().toString("hex")}}}class b{constructor(){this.value=0,this.address=null,this.path=null}toJSON(){return this.getJSON()}getJSON(t){return{value:this.value,address:this.address?this.address.toString(t):null,path:this.path?this.path.toJSON():null}}}class v{constructor(t,e,i){this.hash=t||f.NULL_HASH,this.height=null!=e?e:-1,this.time=i||0,this.hashes=new Set}add(t){return!this.hashes.has(t)&&(this.hashes.add(t),!0)}remove(t){return this.hashes.delete(t)}fromRaw(t){const e=r.read(t);this.hash=e.readHash("hex"),this.height=e.readU32(),this.time=e.readU32();const i=e.readU32();for(let t=0;t<i;t++){const t=e.readHash("hex");this.hashes.add(t)}return this}static fromRaw(t){return(new this).fromRaw(t)}getSize(){return 44+32*this.hashes.size}toRaw(){const t=this.getSize(),e=r.write(t);e.writeHash(this.hash),e.writeU32(this.height),e.writeU32(this.time),e.writeU32(this.hashes.size);for(const t of this.hashes)e.writeHash(t);return e.render()}toArray(){const t=[];for(const e of this.hashes)t.push(e);return t}toJSON(){return{hash:n.revHex(this.hash),height:this.height,time:this.time,hashes:this.toArray().map(n.revHex)}}fromMeta(t){return this.hash=t.hash,this.height=t.height,this.time=t.time,this}static fromMeta(t){return(new this).fromMeta(t)}}t.exports=class{constructor(t,e){this.wdb=t,this.db=t.db,this.logger=t.logger,this.wid=e||0,this.bucket=null,this.wallet=null,this.locked=new Set}async open(t){const e=c.prefix.build(t.wid);this.wid=t.wid,this.bucket=this.db.bucket(e),this.wallet=t}emit(t,e,i){this.wdb.emit(t,this.wallet,e,i),this.wallet.emit(t,e,i)}getPath(t){const e=t.getHash("hex");return e?this.wdb.getPath(this.wid,e):null}hasPath(t){const e=t.getHash("hex");return!!e&&this.wdb.hasPath(this.wid,e)}async saveCredit(t,e,i){const{coin:s}=e;return t.put(c.c.build(s.hash,s.index),e.toRaw()),t.put(c.C.build(i.account,s.hash,s.index),null),this.addOutpointMap(t,s.hash,s.index)}async removeCredit(t,e,i){const{coin:s}=e;return t.del(c.c.build(s.hash,s.index)),t.del(c.C.build(i.account,s.hash,s.index)),this.removeOutpointMap(t,s.hash,s.index)}spendCredit(t,e,i,s){const r=i.inputs[s].prevout,n=l.fromTX(i,s);t.put(c.s.build(r.hash,r.index),n.toRaw()),t.put(c.d.build(n.hash,n.index),e.coin.toRaw())}unspendCredit(t,e,i){const s=e.inputs[i].prevout,r=l.fromTX(e,i);t.del(c.s.build(s.hash,s.index)),t.del(c.d.build(r.hash,r.index))}async writeInput(t,e,i){const s=e.inputs[i].prevout,r=l.fromTX(e,i);return t.put(c.s.build(s.hash,s.index),r.toRaw()),this.addOutpointMap(t,s.hash,s.index)}async removeInput(t,e,i){const s=e.inputs[i].prevout;return t.del(c.s.build(s.hash,s.index)),this.removeOutpointMap(t,s.hash,s.index)}async updateBalance(t,e){const i=await this.getWalletBalance();return e.applyTo(i),t.put(c.R.build(),i.toRaw()),i}async updateAccountBalance(t,e,i){const s=await this.getAccountBalance(e);return i.applyTo(s),t.put(c.r.build(e),s.toRaw()),s}async getSpent(t,e){const i=await this.bucket.get(c.s.build(t,e));return i?l.fromRaw(i):null}isSpent(t,e){return this.bucket.has(c.s.build(t,e))}addBlockMap(t,e){return this.wdb.addBlockMap(t.root(),e,this.wid)}removeBlockMap(t,e){return this.wdb.removeBlockMap(t.root(),e,this.wid)}addTXMap(t,e){return this.wdb.addTXMap(t.root(),e,this.wid)}removeTXMap(t,e){return this.wdb.removeTXMap(t.root(),e,this.wid)}addOutpointMap(t,e,i){return this.wdb.addOutpointMap(t.root(),e,i,this.wid)}removeOutpointMap(t,e,i){return this.wdb.removeOutpointMap(t.root(),e,i,this.wid)}getBlocks(){return this.bucket.keys({gte:c.b.min(),lte:c.b.max(),parse:t=>c.b.parse(t)})}async getBlock(t){const e=await this.bucket.get(c.b.build(t));return e?v.fromRaw(e):null}async addBlock(t,i,s){const r=c.b.build(s.height),n=await this.bucket.get(r);if(!n){const e=v.fromMeta(s);return e.add(i),void t.put(r,e.toRaw())}const o=e.allocUnsafe(n.length+32);n.copy(o,0);const a=o.readUInt32LE(40,!0);o.writeUInt32LE(a+1,40,!0),i.copy(o,n.length),t.put(r,o)}async removeBlock(t,e,i){const r=c.b.build(i),n=await this.bucket.get(r);if(!n)return;const o=n.readUInt32LE(40,!0);if(s(o>0),s(n.slice(-32).equals(e)),1===o)return void t.del(r);const a=n.slice(0,-32);a.writeUInt32LE(o-1,40,!0),t.put(r,a)}async spliceBlock(t,e,i){const s=await this.getBlock(i);s&&s.remove(e)&&(0!==s.hashes.size?t.put(c.b.build(i),s.toRaw()):t.del(c.b.build(i)))}async add(t,e){const i=t.hash("hex"),r=await this.getTX(i);if(s(!t.mutable,"Cannot add mutable TX to wallet."),r)return-1!==r.height?null:e?this.confirm(r,e):null;const n=p.fromTX(t,e);if(e)await this.removeConflicts(t,!1);else if(!await this.removeConflicts(t,!0))return null;return this.insert(n,e)}async insert(t,e){const i=this.bucket.batch(),{tx:r,hash:n}=t,o=e?e.height:-1,a=new y(t,e),h=new m;let l=!1;if(!r.isCoinbase())for(let t=0;t<r.inputs.length;t++){const n=r.inputs[t],{hash:o,index:u}=n.prevout,c=await this.getCredit(o,u);if(!c){e||await this.writeInput(i,r,t);continue}const f=c.coin,d=await this.getPath(f);s(d),a.setInput(t,d,f),this.spendCredit(i,c,r,t),h.tx(d,1),h.coin(d,-1),h.unconfirmed(d,-f.value),e?(h.confirmed(d,-f.value),await this.removeCredit(i,c,d)):(c.spent=!0,await this.saveCredit(i,c,d)),l=!0}for(let t=0;t<r.outputs.length;t++){const s=r.outputs[t],n=await this.getPath(s);if(!n)continue;a.setOutput(t,n);const u=w.fromTX(r,t,o);u.own=l,h.tx(n,1),h.coin(n,1),h.unconfirmed(n,s.value),e&&h.confirmed(n,s.value),await this.saveCredit(i,u,n)}if(!h.updated())return null;i.put(c.t.build(n),t.toRaw()),i.put(c.m.build(t.mtime,n),null),e?i.put(c.h.build(o,n),null):i.put(c.p.build(n),null);for(const[s,r]of h.accounts)await this.updateAccountBalance(i,s,r),i.put(c.T.build(s,n),null),i.put(c.M.build(s,t.mtime,n),null),e?i.put(c.H.build(s,o,n),null):i.put(c.P.build(s,n),null);e?(await this.addBlockMap(i,o),await this.addBlock(i,r.hash(),e)):await this.addTXMap(i,n);const u=await this.updateBalance(i,h);return await i.write(),this.unlockTX(r),this.emit("tx",r,a),this.emit("balance",u),a}async confirm(t,e){const i=this.bucket.batch(),{tx:r,hash:n}=t,o=e.height,a=new y(t,e),h=new m;if(t.setBlock(e),!r.isCoinbase()){const t=await this.getSpentCredits(r);for(let e=0;e<r.inputs.length;e++){const n=r.inputs[e],{hash:o,index:l}=n.prevout;let u=!1;if(!t[e]){await this.removeInput(i,r,e);const s=await this.getCredit(o,l);if(!s)continue;this.spendCredit(i,s,r,e),t[e]=s,u=!0}const c=t[e],f=c.coin;s(-1!==f.height);const d=await this.getPath(f);s(d),a.setInput(e,d,f),u&&(h.coin(d,-1),h.unconfirmed(d,-f.value)),h.confirmed(d,-f.value),await this.removeCredit(i,c,d)}}for(let t=0;t<r.outputs.length;t++){const e=r.outputs[t],l=await this.getPath(e);if(!l)continue;a.setOutput(t,l);const u=await this.getCredit(n,t);s(u),u.spent&&await this.updateSpentCoin(i,r,t,o),h.confirmed(l,e.value),u.coin.height=o,await this.saveCredit(i,u,l)}i.put(c.t.build(n),t.toRaw()),i.del(c.p.build(n)),i.put(c.h.build(o,n),null);for(const[t,e]of h.accounts)await this.updateAccountBalance(i,t,e),i.del(c.P.build(t,n)),i.put(c.H.build(t,o,n),null);await this.removeTXMap(i,n),await this.addBlockMap(i,o),await this.addBlock(i,r.hash(),e);const l=await this.updateBalance(i,h);return await i.write(),this.unlockTX(r),this.emit("confirmed",r,a),this.emit("balance",l),a}async remove(t){const e=await this.getTX(t);return e?this.removeRecursive(e):null}async erase(t,e){const i=this.bucket.batch(),{tx:r,hash:n}=t,o=e?e.height:-1,a=new y(t,e),h=new m;if(!r.isCoinbase()){const t=await this.getSpentCredits(r);for(let n=0;n<r.inputs.length;n++){const o=t[n];if(!o){e||await this.removeInput(i,r,n);continue}const l=o.coin,u=await this.getPath(l);s(u),a.setInput(n,u,l),h.tx(u,-1),h.coin(u,1),h.unconfirmed(u,l.value),e&&h.confirmed(u,l.value),this.unspendCredit(i,r,n),o.spent=!1,await this.saveCredit(i,o,u)}}for(let t=0;t<r.outputs.length;t++){const s=r.outputs[t],n=await this.getPath(s);if(!n)continue;a.setOutput(t,n);const l=w.fromTX(r,t,o);h.tx(n,-1),h.coin(n,-1),h.unconfirmed(n,-s.value),e&&h.confirmed(n,-s.value),await this.removeCredit(i,l,n)}i.del(c.t.build(n)),i.del(c.m.build(t.mtime,n)),e?i.del(c.h.build(o,n)):i.del(c.p.build(n));for(const[s,r]of h.accounts)await this.updateAccountBalance(i,s,r),i.del(c.T.build(s,n)),i.del(c.M.build(s,t.mtime,n)),e?i.del(c.H.build(s,o,n)):i.del(c.P.build(s,n));e?(await this.removeBlockMap(i,o),await this.spliceBlock(i,n,o)):await this.removeTXMap(i,n);const l=await this.updateBalance(i,h);return await i.write(),this.emit("remove tx",r,a),this.emit("balance",l),a}async removeRecursive(t){const{tx:e,hash:i}=t;for(let t=0;t<e.outputs.length;t++){const e=await this.getSpent(i,t);if(!e)continue;const r=await this.getTX(e.hash);s(r),await this.removeRecursive(r)}return this.erase(t,t.getBlock())}async revert(t){const e=await this.getBlock(t);if(!e)return 0;const i=e.toArray();for(let t=i.length-1;t>=0;t--){const e=i[t];await this.unconfirm(e)}return i.length}async unconfirm(t){const e=await this.getTX(t);return e?-1===e.height?null:this.disconnect(e,e.getBlock()):null}async disconnect(t,e){const i=this.bucket.batch(),{tx:r,hash:n,height:o}=t,a=new y(t,e),h=new m;if(s(e),t.unsetBlock(),!r.isCoinbase()){const t=await this.getSpentCredits(r);for(let e=0;e<r.inputs.length;e++){const n=t[e];if(!n){await this.writeInput(i,r,e);continue}const o=n.coin;s(-1!==o.height);const l=await this.getPath(o);s(l),a.setInput(e,l,o),h.confirmed(l,o.value),n.spent=!0,await this.saveCredit(i,n,l)}}for(let t=0;t<r.outputs.length;t++){const e=r.outputs[t],s=await this.getPath(e);if(!s)continue;const l=await this.getCredit(n,t);l?(l.spent&&await this.updateSpentCoin(i,r,t,o),a.setOutput(t,s),l.coin.height=-1,h.confirmed(s,-e.value),await this.saveCredit(i,l,s)):await this.updateSpentCoin(i,r,t,o)}await this.addTXMap(i,n),await this.removeBlockMap(i,o),await this.removeBlock(i,r.hash(),o),i.put(c.t.build(n),t.toRaw()),i.put(c.p.build(n),null),i.del(c.h.build(o,n));for(const[t,e]of h.accounts)await this.updateAccountBalance(i,t,e),i.put(c.P.build(t,n),null),i.del(c.H.build(t,o,n));const l=await this.updateBalance(i,h);return await i.write(),this.emit("unconfirmed",r,a),this.emit("balance",l),a}async removeConflict(t){const e=t.tx;this.logger.warning("Handling conflicting tx: %s.",e.txid());const i=await this.removeRecursive(t);return this.logger.warning("Removed conflict: %s.",e.txid()),this.emit("conflict",e,i),i}async removeConflicts(t,e){if(t.isCoinbase())return!0;const i=t.hash("hex"),r=[];for(const{prevout:n}of t.inputs){const{hash:t,index:o}=n,a=await this.getSpent(t,o);if(!a)continue;if(a.hash===i)continue;const h=await this.getTX(a.hash);if(s(h),e&&-1!==h.height)return!1;r.push(h)}for(const t of r)await this.removeConflict(t);return!0}lockTX(t){if(!t.isCoinbase())for(const e of t.inputs)this.lockCoin(e.prevout)}unlockTX(t){if(!t.isCoinbase())for(const e of t.inputs)this.unlockCoin(e.prevout)}lockCoin(t){const e=t.toKey();this.locked.add(e)}unlockCoin(t){const e=t.toKey();return this.locked.delete(e)}isLocked(t){const e=t.toKey();return this.locked.has(e)}filterLocked(t){const e=[];for(const i of t)this.isLocked(i)||e.push(i);return e}getLocked(){const t=[];for(const e of this.locked.keys())t.push(l.fromKey(e));return t}getAccountHistoryHashes(t){return s("number"==typeof t),this.bucket.keys({gte:c.T.min(t),lte:c.T.max(t),parse:t=>{const[,e]=c.T.parse(t);return e}})}getHistoryHashes(t){return s("number"==typeof t),-1!==t?this.getAccountHistoryHashes(t):this.bucket.keys({gte:c.t.min(),lte:c.t.max(),parse:t=>c.t.parse(t)})}getAccountPendingHashes(t){return s("number"==typeof t),this.bucket.keys({gte:c.P.min(t),lte:c.P.max(t),parse:t=>{const[,e]=c.P.parse(t);return e}})}getPendingHashes(t){return s("number"==typeof t),-1!==t?this.getAccountPendingHashes(t):this.bucket.keys({gte:c.p.min(),lte:c.p.max(),parse:t=>c.p.parse(t)})}getAccountOutpoints(t){return s("number"==typeof t),this.bucket.keys({gte:c.C.min(t),lte:c.C.max(t),parse:t=>{const[,e,i]=c.C.parse(t);return new l(e,i)}})}getOutpoints(t){return s("number"==typeof t),-1!==t?this.getAccountOutpoints(t):this.bucket.keys({gte:c.c.min(),lte:c.c.max(),parse:t=>{const[e,i]=c.c.parse(t);return new l(e,i)}})}getAccountHeightRangeHashes(t,e){s("number"==typeof t);const i=e.start||0,r=e.end||4294967295;return this.bucket.keys({gte:c.H.min(t,i),lte:c.H.max(t,r),limit:e.limit,reverse:e.reverse,parse:t=>{const[,,e]=c.H.parse(t);return e}})}getHeightRangeHashes(t,e){if(s("number"==typeof t),-1!==t)return this.getAccountHeightRangeHashes(t,e);const i=e.start||0,r=e.end||4294967295;return this.bucket.keys({gte:c.h.min(i),lte:c.h.max(r),limit:e.limit,reverse:e.reverse,parse:t=>{const[,e]=c.h.parse(t);return e}})}getHeightHashes(t){return this.getHeightRangeHashes({start:t,end:t})}getAccountRangeHashes(t,e){s("number"==typeof t);const i=e.start||0,r=e.end||4294967295;return this.bucket.keys({gte:c.M.min(t,i),lte:c.M.max(t,r),limit:e.limit,reverse:e.reverse,parse:t=>{const[,,e]=c.M.parse(t);return e}})}getRangeHashes(t,e){if(s("number"==typeof t),-1!==t)return this.getAccountRangeHashes(t,e);const i=e.start||0,r=e.end||4294967295;return this.bucket.keys({gte:c.m.min(i),lte:c.m.max(r),limit:e.limit,reverse:e.reverse,parse:t=>{const[,e]=c.m.parse(t);return e}})}async getRange(t,e){const i=await this.getRangeHashes(t,e),r=[];for(const t of i){const e=await this.getTX(t);s(e),r.push(e)}return r}getLast(t,e){return this.getRange(t,{start:0,end:4294967295,reverse:!0,limit:e||10})}getHistory(t){return s("number"==typeof t),-1!==t?this.getAccountHistory(t):this.bucket.values({gte:c.t.min(),lte:c.t.max(),parse:t=>p.fromRaw(t)})}async getAccountHistory(t){const e=await this.getHistoryHashes(t),i=[];for(const t of e){const e=await this.getTX(t);s(e),i.push(e)}return i}async getPending(t){const e=await this.getPendingHashes(t),i=[];for(const t of e){const e=await this.getTX(t);s(e),i.push(e)}return i}getCredits(t){return s("number"==typeof t),-1!==t?this.getAccountCredits(t):this.bucket.range({gte:c.c.min(),lte:c.c.max(),parse:(t,e)=>{const[i,s]=c.c.parse(t),r=w.fromRaw(e);return r.coin.hash=i,r.coin.index=s,r}})}async getAccountCredits(t){const e=await this.getOutpoints(t),i=[];for(const{hash:t,index:r}of e){const e=await this.getCredit(t,r);s(e),i.push(e)}return i}async getSpentCredits(t){if(t.isCoinbase())return[];const e=t.hash("hex"),i=[];for(let e=0;e<t.inputs.length;e++)i.push(null);return await this.bucket.range({gte:c.d.min(e),lte:c.d.max(e),parse:(e,r)=>{const[,n]=c.d.parse(e),o=h.fromRaw(r),a=t.inputs[n];s(a),o.hash=a.prevout.hash,o.index=a.prevout.index,i[n]=new w(o)}}),i}async getCoins(t){const e=await this.getCredits(t),i=[];for(const t of e)t.spent||i.push(t.coin);return i}async getAccountCoins(t){const e=await this.getAccountCredits(t),i=[];for(const t of e)t.spent||i.push(t.coin);return i}async getSpentCoins(t){if(t.isCoinbase())return[];const e=await this.getSpentCredits(t),i=[];for(const t of e)t?i.push(t.coin):i.push(null);return i}async getCoinView(t){const e=new a;if(t.isCoinbase())return e;for(const{prevout:i}of t.inputs){const{hash:t,index:s}=i,r=await this.getCoin(t,s);r&&e.addCoin(r)}return e}async getSpentView(t){const e=new a;if(t.isCoinbase())return e;const i=await this.getSpentCoins(t);for(const t of i)t&&e.addCoin(t);return e}async getTX(t){const e=await this.bucket.get(c.t.build(t));return e?p.fromRaw(e):null}async getDetails(t){const e=await this.getTX(t);return e?this.toDetails(e):null}async toDetails(t){const e=[];if(!Array.isArray(t))return this._toDetails(t);for(const i of t){const t=await this._toDetails(i);t&&e.push(t)}return e}async _toDetails(t){const e=t.tx,i=t.getBlock(),s=new y(t,i),r=await this.getSpentCoins(e);for(let t=0;t<e.inputs.length;t++){const e=r[t];let i=null;e&&(i=await this.getPath(e)),s.setInput(t,i,e)}for(let t=0;t<e.outputs.length;t++){const i=e.outputs[t],r=await this.getPath(i);s.setOutput(t,r)}return s}hasTX(t){return this.bucket.has(c.t.build(t))}async getCoin(t,e){const i=await this.getCredit(t,e);return i?i.coin:null}async getCredit(t,e){const i=await this.bucket.get(c.c.build(t,e));if(!i)return null;const s=w.fromRaw(i);return s.coin.hash=t,s.coin.index=e,s}async getSpentCoin(t,e){const i=await this.bucket.get(c.d.build(t.hash,t.index));if(!i)return null;const s=h.fromRaw(i);return s.hash=e.hash,s.index=e.index,s}hasSpentCoin(t){return this.bucket.has(c.d.build(t.hash,t.index))}async updateSpentCoin(t,e,i,s){const r=l.fromTX(e,i),n=await this.getSpent(r.hash,r.index);if(!n)return;const o=await this.getSpentCoin(n,r);o&&(o.height=s,t.put(c.d.build(n.hash,n.index),o.toRaw()))}async hasCoin(t,e){return this.bucket.has(c.c.build(t,e))}async getBalance(t){return s("number"==typeof t),-1!==t?this.getAccountBalance(t):this.getWalletBalance()}async getWalletBalance(){const t=await this.bucket.get(c.R.build());return t?g.fromRaw(-1,t):new g}async getAccountBalance(t){const e=await this.bucket.get(c.r.build(t));return e?g.fromRaw(t,e):new g(t)}async zap(t,e){s(e>>>0===e);const i=n.now(),r=await this.getRange(t,{start:0,end:i-e}),o=[];for(const t of r)-1===t.height&&(s(i-t.mtime>=e),this.logger.debug("Zapping TX: %s (%d)",t.tx.txid(),this.wid),await this.remove(t.hash),o.push(t.hash));return o}async abandon(t){if(!await this.bucket.has(c.p.build(t)))throw new Error("TX not eligible.");return this.remove(t)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * wallet.js - wallet object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(7),{Lock:n}=i(27),{base58:o}=i(31),a=i(2),h=i(24),l=i(9),u=i(74),c=i(198),f=i(65),d=i(61),p=i(12),g=i(40),m=i(11),w=i(126),y=i(147),b=i(16),v=i(127),k=i(202),E=i(17),R=i(3),{encoding:S}=a,{Mnemonic:_}=y;class x extends r{constructor(t,e){super(),s(t,"WDB required."),this.wdb=t,this.db=t.db,this.network=t.network,this.logger=t.logger,this.writeLock=new n,this.fundLock=new n,this.wid=0,this.id=null,this.watchOnly=!1,this.accountDepth=0,this.token=R.ZERO_HASH,this.tokenDepth=0,this.master=new k,this.txdb=new c(this.wdb),e&&this.fromOptions(e)}fromOptions(t){if(!t)return this;let i,r,n,o=t.master;return o?("string"==typeof o&&(o=y.PrivateKey.fromBase58(o,this.network)),s(y.isPrivate(o),"Must create wallet with hd private key.")):(n=new _(t.mnemonic),o=y.fromMnemonic(n,t.password)),this.master.fromKey(o,n),null!=t.wid&&(s(t.wid>>>0===t.wid),this.wid=t.wid),t.id&&(s(d.isName(t.id),"Bad wallet ID."),i=t.id),null!=t.watchOnly&&(s("boolean"==typeof t.watchOnly),this.watchOnly=t.watchOnly),null!=t.accountDepth&&(s(t.accountDepth>>>0===t.accountDepth),this.accountDepth=t.accountDepth),t.token&&(s(e.isBuffer(t.token)),s(32===t.token.length),r=t.token),null!=t.tokenDepth&&(s(t.tokenDepth>>>0===t.tokenDepth),this.tokenDepth=t.tokenDepth),i||(i=this.getID()),r||(r=this.getToken(this.tokenDepth)),this.id=i,this.token=r,this}static fromOptions(t,e){return new this(t).fromOptions(e)}async init(t,e){e&&await this.master.encrypt(e);const i=await this._createAccount(t,e);return s(i),this.logger.info("Wallet initialized (%s).",this.id),this.txdb.open(this)}async open(){if(!await this.getAccount(0))throw new Error("Default account not found.");return this.logger.info("Wallet opened (%s).",this.id),this.txdb.open(this)}async destroy(){const t=await this.writeLock.lock(),e=await this.fundLock.lock();try{await this.master.destroy(),this.writeLock.destroy(),this.fundLock.destroy()}finally{e(),t()}}async addSharedKey(t,e){const i=await this.writeLock.lock();try{return await this._addSharedKey(t,e)}finally{i()}}async _addSharedKey(t,e){const i=await this.getAccount(t);if(!i)throw new Error("Account not found.");const s=this.db.batch(),r=await i.addSharedKey(s,e);return await s.write(),r}async removeSharedKey(t,e){const i=await this.writeLock.lock();try{return await this._removeSharedKey(t,e)}finally{i()}}async _removeSharedKey(t,e){const i=await this.getAccount(t);if(!i)throw new Error("Account not found.");const s=this.db.batch(),r=await i.removeSharedKey(s,e);return await s.write(),r}async setPassphrase(t,e){null!=e&&await this.decrypt(e),await this.encrypt(t)}async encrypt(t){const e=await this.writeLock.lock();try{return await this._encrypt(t)}finally{e()}}async _encrypt(t){const e=await this.master.encrypt(t,!0),i=this.db.batch();try{await this.wdb.encryptKeys(i,this.wid,e)}finally{u(e)}this.save(i),await i.write()}async decrypt(t){const e=await this.writeLock.lock();try{return await this._decrypt(t)}finally{e()}}async _decrypt(t){const e=await this.master.decrypt(t,!0),i=this.db.batch();try{await this.wdb.decryptKeys(i,this.wid,e)}finally{u(e)}this.save(i),await i.write()}async retoken(t){const e=await this.writeLock.lock();try{return await this._retoken(t)}finally{e()}}async _retoken(t){t&&await this.unlock(t),this.tokenDepth+=1,this.token=this.getToken(this.tokenDepth);const e=this.db.batch();return this.save(e),await e.write(),this.token}async rename(t){const e=await this.writeLock.lock();try{return await this.wdb.rename(this,t)}finally{e()}}async renameAccount(t,e){const i=await this.writeLock.lock();try{return await this._renameAccount(t,e)}finally{i()}}async _renameAccount(t,e){if(!d.isName(e))throw new Error("Bad account name.");const i=await this.getAccount(t);if(!i)throw new Error("Account not found.");if(0===i.accountIndex)throw new Error("Cannot rename default account.");if(await this.hasAccount(e))throw new Error("Account name not available.");const s=this.db.batch();this.wdb.renameAccount(s,i,e),await s.write()}async lock(){const t=await this.writeLock.lock(),e=await this.fundLock.lock();try{await this.master.lock()}finally{e(),t()}}unlock(t,e){return this.master.unlock(t,e)}getID(){s(this.master.key,"Cannot derive id.");const t=this.master.key.derive(44),e=a.write(37);e.writeBytes(t.publicKey),e.writeU32(this.network.magic);const i=h.digest(e.render()),r=a.write(27);return r.writeU8(3),r.writeU8(190),r.writeU8(4),r.writeBytes(i),r.writeChecksum(l.digest),o.encode(r.render())}getToken(t){if(!this.master.key)throw new Error("Cannot derive token.");const e=this.master.key.derive(44,!0),i=a.write(36);return i.writeBytes(e.privateKey),i.writeU32(t),l.digest(i.render())}async createAccount(t,e){const i=await this.writeLock.lock();try{return await this._createAccount(t,e)}finally{i()}}async _createAccount(t,e){let i,r=t.name;if(r||(r=this.accountDepth.toString(10)),await this.hasAccount(r))throw new Error("Account already exists.");if(await this.unlock(e),this.watchOnly&&t.accountKey){if("string"==typeof(i=t.accountKey)&&(i=y.PublicKey.fromBase58(i,this.network)),!y.isPublic(i))throw new Error("Must add HD public keys to watch only wallet.")}else{s(this.master.key);const t=this.network.keyPrefix.coinType;i=(i=this.master.key.deriveAccount(44,t,this.accountDepth)).toPublic()}const n={wid:this.wid,id:this.id,name:0===this.accountDepth?"default":r,watchOnly:this.watchOnly,accountKey:i,accountIndex:this.accountDepth,type:t.type,m:t.m,n:t.n,keys:t.keys},o=this.db.batch(),a=v.fromOptions(this.wdb,n);return await a.init(o),this.logger.info("Created account %s/%s/%d.",a.id,a.name,a.accountIndex),this.accountDepth+=1,this.save(o),1===this.accountDepth&&this.increment(o),await o.write(),a}async ensureAccount(t,e){const i=t.name;return await this.getAccount(i)||this.createAccount(t,e)}getAccounts(){return this.wdb.getAccounts(this.wid)}getAddressHashes(t){return null!=t?this.getAccountHashes(t):this.wdb.getWalletHashes(this.wid)}async getAccountHashes(t){const e=await this.getAccountIndex(t);if(-1===e)throw new Error("Account not found.");return this.wdb.getAccountHashes(this.wid,e)}async getAccount(t){const e=await this.getAccountIndex(t);if(-1===e)return null;const i=await this.wdb.getAccount(this.wid,e);return i?(i.wid=this.wid,i.id=this.id,i.watchOnly=this.watchOnly,i):null}getAccountIndex(t){return null==t?-1:"number"==typeof t?t:this.wdb.getAccountIndex(this.wid,t)}async ensureIndex(t){if(null==t||-1===t)return-1;const e=await this.getAccountIndex(t);if(-1===e)throw new Error("Account not found.");return e}async getAccountName(t){return"string"==typeof t?t:this.wdb.getAccountName(this.wid,t)}async hasAccount(t){const e=await this.getAccountIndex(t);return-1!==e&&this.wdb.hasAccount(this.wid,e)}createReceive(t=0){return this.createKey(t,0)}createChange(t=0){return this.createKey(t,1)}async createKey(t,e){const i=await this.writeLock.lock();try{return await this._createKey(t,e)}finally{i()}}async _createKey(t,e){const i=await this.getAccount(t);if(!i)throw new Error("Account not found.");const s=this.db.batch(),r=await i.createKey(s,e);return await s.write(),r}save(t){return this.wdb.save(t,this)}increment(t){return this.wdb.increment(t,this.wid)}async hasAddress(t){const e=p.getHash(t,"hex");return null!=await this.getPath(e)}async getPath(t){const e=p.getHash(t,"hex");return this.wdb.getPath(this.wid,e)}async readPath(t){const e=p.getHash(t,"hex");return this.wdb.readPath(this.wid,e)}async hasPath(t){const e=p.getHash(t,"hex");return this.wdb.hasPath(this.wid,e)}async getPaths(t){return null!=t?this.getAccountPaths(t):this.wdb.getWalletPaths(this.wid)}async getAccountPaths(t){const e=await this.getAccountIndex(t);if(-1===e)throw new Error("Account not found.");const i=await this.getAccountHashes(e),r=await this.getAccountName(t);s(r);const n=[];for(const t of i){const i=await this.readPath(t);s(i),s(i.account===e),i.name=r,n.push(i)}return n}async importKey(t,e,i){const s=await this.writeLock.lock();try{return await this._importKey(t,e,i)}finally{s()}}async _importKey(t,e,i){if(this.watchOnly){if(e.privateKey)throw new Error("Cannot import privkey into watch-only wallet.")}else if(!e.privateKey)throw new Error("Cannot import pubkey into non watch-only wallet.");const r=e.getHash("hex");if(await this.getPath(r))throw new Error("Key already exists.");const n=await this.getAccount(t);if(!n)throw new Error("Account not found.");if(n.type!==v.types.PUBKEYHASH)throw new Error("Cannot import into non-pkh account.");await this.unlock(i);const o=w.fromRing(n,e).toPath();this.master.encrypted&&(o.data=this.master.encipher(o.data,o.hash),s(o.data),o.encrypted=!0);const a=this.db.batch();await n.savePath(a,o),await a.write()}async importAddress(t,e){const i=await this.writeLock.lock();try{return await this._importAddress(t,e)}finally{i()}}async _importAddress(t,e){if(!this.watchOnly)throw new Error("Cannot import address into non watch-only wallet.");if(await this.getPath(e))throw new Error("Address already exists.");const i=await this.getAccount(t);if(!i)throw new Error("Account not found.");if(i.type!==v.types.PUBKEYHASH)throw new Error("Cannot import into non-pkh account.");const s=f.fromAddress(i,e),r=this.db.batch();await i.savePath(r,s),await r.write()}async fund(t,e,i){const s=await this.fundLock.lock(i);try{return await this._fund(t,e)}finally{s()}}async _fund(t,e){e||(e={});const i=e.account||0,r=await this.changeAddress(i);if(!r)throw new Error("Account not found.");let n,o=e.rate;null==o&&(o=await this.wdb.estimateFee(e.blocks)),e.smart?n=await this.getSmartCoins(e.account):(n=await this.getCoins(e.account),n=this.txdb.filterLocked(n)),await t.fund(n,{selection:e.selection,round:e.round,depth:e.depth,hardFee:e.hardFee,subtractFee:e.subtractFee,subtractIndex:e.subtractIndex,changeAddress:r,height:this.wdb.state.height,rate:o,maxFee:e.maxFee,estimate:t=>this.estimateSize(t)}),s(t.getFee()<=g.Selector.MAX_FEE,"TX exceeds MAX_FEE.")}async getAccountByAddress(t){const e=p.getHash(t,"hex"),i=await this.getPath(e);return i?this.getAccount(i.account):null}async estimateSize(t){const e=t.getAddress();if(!e)return-1;const i=await this.getAccountByAddress(e);if(!i)return-1;let s=0;switch(i.type){case v.types.PUBKEYHASH:s+=74,s+=34;break;case v.types.MULTISIG:s+=1,s+=74*i.m,s+=3,s+=1,s+=34*i.n,s+=1,s+=1}return s+S.sizeVarint(s)}async createTX(t,e){const i=t.outputs,r=new g;s(Array.isArray(i),"Outputs must be an array."),s(i.length>0,"No outputs available.");for(const t of i){const e=new b(t),i=e.getAddress();if(e.isDust())throw new Error("Output is dust.");if(e.value>0){if(!i)throw new Error("Cannot send to unknown address.");if(i.isNull())throw new Error("Cannot send to null address.")}r.outputs.push(e)}if(await this.fund(r,t,e),!1!==t.sort&&r.sortMembers(),null!=t.locktime&&r.setLocktime(t.locktime),s(r.isSane(),"TX failed sanity check."),s(r.verifyInputs(this.wdb.state.height+1),"TX failed context check."),0===await this.template(r))throw new Error("Templating failed.");return r}async send(t,e){const i=await this.fundLock.lock();try{return await this._send(t,e)}finally{i()}}async _send(t,e){const i=await this.createTX(t,!0);if(await this.sign(i,e),!i.isSigned())throw new Error("TX could not be fully signed.");const s=i.toTX();if(s.getSigopsCount(i.view)>E.MAX_TX_SIGOPS)throw new Error("TX exceeds policy sigops.");if(s.getSize()>E.MAX_TX_SIZE)throw new Error("TX exceeds policy size.");return await this.wdb.addTX(s),this.logger.debug("Sending wallet tx (%s): %s",this.id,s.txid()),await this.wdb.send(s),s}async increaseFee(t,e,i){s(e>>>0===e,"Rate must be a number.");const r=await this.getTX(t);if(!r)throw new Error("Transaction not found.");if(-1!==r.height)throw new Error("Transaction is confirmed.");const n=r.tx;if(n.isCoinbase())throw new Error("Transaction is a coinbase.");const o=await this.getSpentView(n);if(!n.hasCoins(o))throw new Error("Not all coins available.");const a=n.getFee(o);let h=n.getMinFee(null,e);if(h>g.Selector.MAX_FEE&&(h=g.Selector.MAX_FEE),a>=h)throw new Error("Fee is not increasing.");const l=g.fromTX(n);l.view=o;for(const t of l.inputs)t.script.clear();let u;for(let t=0;t<l.outputs.length;t++){const e=l.outputs[t],i=e.getAddress();if(!i)continue;const s=await this.getPath(i);if(s&&1===s.branch){u=e,l.changeIndex=t;break}}if(!u)throw new Error("No change output.");if(u.value+=a,0!==l.getFee())throw new Error("Arithmetic error for change.");if(u.value-=h,u.value<0)throw new Error("Fee is too high.");if(u.isDust()&&(l.outputs.splice(l.changeIndex,1),l.changeIndex=-1),await this.sign(l,i),!l.isSigned())throw new Error("TX could not be fully signed.");const c=l.toTX();return this.logger.debug("Increasing fee for wallet tx (%s): %s",this.id,c.txid()),await this.wdb.addTX(c),await this.wdb.send(c),c}async resend(){const t=await this.getPending();t.length>0&&this.logger.info("Rebroadcasting %d transactions.",t.length);const e=[];for(const i of t)e.push(i.tx);const i=d.sortDeps(e);for(const t of i)await this.wdb.send(t);return e}async deriveInputs(t){s(t.mutable);const e=await this.getInputPaths(t),i=[];for(const t of e){const e=await this.getAccount(t.account);if(!e)continue;const s=e.derivePath(t,this.master);s&&i.push(s)}return i}async getKey(t){const e=p.getHash(t,"hex"),i=await this.getPath(e);if(!i)return null;const s=await this.getAccount(i.account);return s?s.derivePath(i,this.master):null}async getPrivateKey(t,e){const i=p.getHash(t,"hex"),s=await this.getPath(i);if(!s)return null;const r=await this.getAccount(s.account);if(!r)return null;await this.unlock(e);const n=r.derivePath(s,this.master);return n.privateKey?n:null}async getInputPaths(t){if(s(t.mutable),!t.hasCoins())throw new Error("Not all coins available.");const e=t.getInputHashes("hex"),i=[];for(const t of e){const e=await this.getPath(t);e&&i.push(e)}return i}async getOutputPaths(t){const e=[],i=t.getOutputHashes("hex");for(const t of i){const i=await this.getPath(t);i&&e.push(i)}return e}async setLookahead(t,e){const i=await this.writeLock.lock();try{return this._setLookahead(t,e)}finally{i()}}async _setLookahead(t,e){const i=await this.getAccount(t);if(!i)throw new Error("Account not found.");const s=this.db.batch();await i.setLookahead(s,e),await s.write()}async syncOutputDepth(t){const e=new Map;for(const i of t.getOutputHashes("hex")){const t=await this.readPath(i);t&&-1!==t.index&&(e.has(t.account)||e.set(t.account,[]),e.get(t.account).push(t))}const i=[],r=this.db.batch();for(const[t,n]of e){let e=-1,o=-1;for(const t of n)switch(t.branch){case 0:t.index>e&&(e=t.index);break;case 1:t.index>o&&(o=t.index)}e+=2,o+=2;const a=await this.getAccount(t);s(a);const h=await a.syncDepth(r,e,o);h&&i.push(h)}return await r.write(),i}async template(t){const e=await this.deriveInputs(t);return t.template(e)}async sign(t,e){if(this.watchOnly)throw new Error("Cannot sign from a watch-only wallet.");await this.unlock(e);const i=await this.deriveInputs(t);return t.signAsync(i,m.hashType.ALL,this.wdb.workers)}getCoinView(t){return this.txdb.getCoinView(t)}getSpentView(t){return this.txdb.getSpentView(t)}toDetails(t){return this.txdb.toDetails(t)}getDetails(t){return this.txdb.getDetails(t)}getCoin(t,e){return this.txdb.getCoin(t,e)}getTX(t){return this.txdb.getTX(t)}getBlocks(){return this.txdb.getBlocks()}getBlock(t){return this.txdb.getBlock(t)}async add(t,e){const i=await this.writeLock.lock();try{return await this._add(t,e)}finally{i()}}async _add(t,e){const i=await this.txdb.add(t,e);if(i){const e=await this.syncOutputDepth(t);e.length>0&&(this.wdb.emit("address",this,e),this.emit("address",e))}return i}async revert(t){const e=await this.writeLock.lock();try{return await this.txdb.revert(t)}finally{e()}}async remove(t){const e=await this.writeLock.lock();try{return await this.txdb.remove(t)}finally{e()}}async zap(t,e){const i=await this.writeLock.lock();try{return await this._zap(t,e)}finally{i()}}async _zap(t,e){const i=await this.ensureIndex(t);return this.txdb.zap(i,e)}async abandon(t){const e=await this.writeLock.lock();try{return await this._abandon(t)}finally{e()}}_abandon(t){return this.txdb.abandon(t)}lockCoin(t){return this.txdb.lockCoin(t)}unlockCoin(t){return this.txdb.unlockCoin(t)}isLocked(t){return this.txdb.isLocked(t)}getLocked(){return this.txdb.getLocked()}async getHistory(t){const e=await this.ensureIndex(t);return this.txdb.getHistory(e)}async getCoins(t){const e=await this.ensureIndex(t);return this.txdb.getCoins(e)}async getCredits(t){const e=await this.ensureIndex(t);return this.txdb.getCredits(e)}async getSmartCoins(t){const e=await this.getCredits(t),i=[];for(const t of e){const e=t.coin;t.spent||this.txdb.isLocked(e)||(-1===e.height?t.own&&i.push(e):i.push(e))}return i}async getPending(t){const e=await this.ensureIndex(t);return this.txdb.getPending(e)}async getBalance(t){const e=await this.ensureIndex(t);return this.txdb.getBalance(e)}async getRange(t,e){const i=await this.ensureIndex(t);return this.txdb.getRange(i,e)}async getLast(t,e){const i=await this.ensureIndex(t);return this.txdb.getLast(i,e)}async accountKey(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.accountKey}async receiveDepth(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.receiveDepth}async changeDepth(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.changeDepth}async receiveAddress(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.receiveAddress()}async changeAddress(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.changeAddress()}async receiveKey(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.receiveKey()}async changeKey(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.changeKey()}inspect(){return{wid:this.wid,id:this.id,network:this.network.type,accountDepth:this.accountDepth,token:this.token.toString("hex"),tokenDepth:this.tokenDepth,master:this.master}}toJSON(t,e){return{network:this.network.type,wid:this.wid,id:this.id,watchOnly:this.watchOnly,accountDepth:this.accountDepth,token:this.token.toString("hex"),tokenDepth:this.tokenDepth,master:this.master.toJSON(this.network,t),balance:e?e.toJSON(!0):null}}getSize(){let t=0;return(t+=41)+this.master.getSize()}toRaw(){const t=this.getSize(),e=a.write(t);let i=0;return this.watchOnly&&(i|=1),e.writeU8(i),e.writeU32(this.accountDepth),e.writeBytes(this.token),e.writeU32(this.tokenDepth),this.master.toWriter(e),e.render()}fromRaw(t){const e=a.read(t),i=e.readU8();return this.watchOnly=0!=(1&i),this.accountDepth=e.readU32(),this.token=e.readBytes(32),this.tokenDepth=e.readU32(),this.master.fromReader(e),this}static fromRaw(t,e){return new this(t).fromRaw(e)}static isWallet(t){return t instanceof x}}t.exports=x}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * nodeclient.js - node client for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(149);t.exports=class extends r{constructor(t){super(),this.node=t,this.network=t.network,this.filter=null,this.opened=!1,this.init()}init(){this.node.on("connect",(t,e)=>{this.opened&&this.emit("block connect",t,e.txs)}),this.node.on("disconnect",(t,e)=>{this.opened&&this.emit("block disconnect",t)}),this.node.on("tx",t=>{this.opened&&this.emit("tx",t)}),this.node.on("reset",t=>{this.opened&&this.emit("chain reset",t)})}async open(t){s(!this.opened,"NodeClient is already open."),this.opened=!0,e(()=>this.emit("connect"))}async close(){s(this.opened,"NodeClient is not open."),this.opened=!1,e(()=>this.emit("disconnect"))}bind(t,e){return this.on(t,e)}hook(t,e){return this.on(t,e)}async getTip(){return this.node.chain.tip}async getEntry(t){const e=await this.node.chain.getEntry(t);return e&&await this.node.chain.isMainChain(e)?e:null}async send(t){this.node.relay(t)}async setFilter(t){this.filter=t,this.node.pool.setFilter(t)}async addFilter(t){this.node.pool.queueFilterLoad()}async resetFilter(){this.node.pool.queueFilterLoad()}async estimateFee(t){return this.node.fees?this.node.fees.estimateFee(t):this.network.feeRate}async getHashes(t=-1,e=-1){return this.node.chain.getHashes(t,e)}async rescan(t){return this.node.chain.scan(t,this.filter,(t,e)=>this.emitAsync("block rescan",t,e))}}}).call(this,i(26).setImmediate)},function(t,e,i){"use strict";
/*!
 * aes.js - aes for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 */t.exports=i(237)},function(t,e,i){"use strict";(function(e){
/*!
 * masterkey.js - master bip32 key object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),{Lock:n}=i(27),o=i(38),a=i(74),h=i(201),l=i(30),u=i(9),c=i(13),f=i(73),d=i(105),p=i(5),g=i(113),m=i(75),{encoding:w}=r;class y{constructor(t){this.encrypted=!1,this.iv=null,this.ciphertext=null,this.key=null,this.mnemonic=null,this.alg=y.alg.PBKDF2,this.n=5e4,this.r=0,this.p=0,this.aesKey=null,this.timer=null,this.until=0,this.locker=new n,t&&this.fromOptions(t)}fromOptions(t){return s(t),null!=t.encrypted&&(s("boolean"==typeof t.encrypted),this.encrypted=t.encrypted),t.iv&&(s(e.isBuffer(t.iv)),this.iv=t.iv),t.ciphertext&&(s(e.isBuffer(t.ciphertext)),this.ciphertext=t.ciphertext),t.key&&(s(g.isHDPrivateKey(t.key)),this.key=t.key),t.mnemonic&&(s(t.mnemonic instanceof m),this.mnemonic=t.mnemonic),null!=t.alg&&("string"==typeof t.alg?(this.alg=y.alg[t.alg.toUpperCase()],s(null!=this.alg,"Unknown algorithm.")):(s("number"==typeof t.alg),s(y.algByVal[t.alg]),this.alg=t.alg)),null!=t.rounds&&(s(t.rounds>>>0===t.rounds),this.rounds=t.rounds),null!=t.n&&(s(t.n>>>0===t.n),this.n=t.n),null!=t.r&&(s(t.r>>>0===t.r),this.r=t.r),null!=t.p&&(s(t.p>>>0===t.p),this.p=t.p),s(this.encrypted?!this.key:this.key),this}static fromOptions(t){return(new this).fromOptions(t)}async unlock(t,e){const i=await this.locker.lock();try{return await this._unlock(t,e)}finally{i()}}async _unlock(t,e){if(this.key)return this.encrypted&&(s(null!=this.timer),this.start(e)),this.key;if(!t)throw new Error("No passphrase.");s(this.encrypted);const i=await this.derive(t),r=h.decipher(this.ciphertext,i,this.iv);return this.readKey(r),this.start(e),this.aesKey=i,this.key}start(t){t||(t=60),this.stop(),-1!==t&&(s(t>>>0===t),this.until=p.now()+t,this.timer=setTimeout(()=>this.lock(),1e3*t))}stop(){null!=this.timer&&(clearTimeout(this.timer),this.timer=null,this.until=0)}async derive(t){const i=y.SALT,s=this.n,r=this.r,n=this.p;switch("string"==typeof t&&(t=e.from(t,"utf8")),this.alg){case y.alg.PBKDF2:return f.deriveAsync(l,t,i,s,32);case y.alg.SCRYPT:return d.deriveAsync(t,i,s,r,n,32);default:throw new Error(`Unknown algorithm: ${this.alg}.`)}}encipher(t,i){return this.aesKey?("string"==typeof i&&(i=e.from(i,"hex")),h.encipher(t,this.aesKey,i.slice(0,16))):null}decipher(t,i){return this.aesKey?("string"==typeof i&&(i=e.from(i,"hex")),h.decipher(t,this.aesKey,i.slice(0,16))):null}async lock(){const t=await this.locker.lock();try{return await this._lock()}finally{t()}}_lock(){if(!this.encrypted)return s(null==this.timer),void s(this.key);this.stop(),this.key&&(this.key.destroy(!0),this.key=null),this.aesKey&&(a(this.aesKey),this.aesKey=null)}async destroy(){await this.lock(),this.locker.destroy()}async decrypt(t,e){const i=await this.locker.lock();try{return await this._decrypt(t,e)}finally{i()}}async _decrypt(t,e){if(!this.encrypted)throw new Error("Master key is not encrypted.");if(!t)throw new Error("No passphrase provided.");this._lock();const i=await this.derive(t),s=h.decipher(this.ciphertext,i,this.iv);return this.readKey(s),this.encrypted=!1,this.iv=null,this.ciphertext=null,e?i:(a(i),null)}async encrypt(t,e){const i=await this.locker.lock();try{return await this._encrypt(t,e)}finally{i()}}async _encrypt(t,e){if(this.encrypted)throw new Error("Master key is already encrypted.");if(!t)throw new Error("No passphrase provided.");const i=this.writeKey(),s=o.randomBytes(16);this.stop();const r=await this.derive(t),n=h.encipher(i,r,s);return this.key=null,this.mnemonic=null,this.encrypted=!0,this.iv=s,this.ciphertext=n,e?r:(a(r),null)}keySize(){let t=0;return t+=64,t+=1,this.mnemonic&&(t+=this.mnemonic.getSize()),t}writeKey(){const t=r.write(this.keySize());return t.writeBytes(this.key.chainCode),t.writeBytes(this.key.privateKey),this.mnemonic?(t.writeU8(1),this.mnemonic.toWriter(t)):t.writeU8(0),t.render()}readKey(t){const e=r.read(t);return this.key=new g,function(t){if(t.length<82)return!1;const e=t.slice(0,78),i=t.readUInt32LE(78,!0);return u.digest(e).readUInt32LE(0,!0)===i}(t)?(e.seek(13),this.key.chainCode=e.readBytes(32),s(0===e.readU8()),this.key.privateKey=e.readBytes(32)):(this.key.chainCode=e.readBytes(32),this.key.privateKey=e.readBytes(32)),this.key.publicKey=c.publicKeyCreate(this.key.privateKey,!0),1===e.readU8()&&(this.mnemonic=m.fromReader(e)),this}getSize(){let t=0;return this.encrypted?(t+=1,t+=w.sizeVarBytes(this.iv),t+=w.sizeVarBytes(this.ciphertext),t+=13):(t+=1,t+=this.keySize())}toWriter(t){return this.encrypted?(t.writeU8(1),t.writeVarBytes(this.iv),t.writeVarBytes(this.ciphertext),t.writeU8(this.alg),t.writeU32(this.n),t.writeU32(this.r),t.writeU32(this.p),t):(t.writeU8(0),t.writeBytes(this.key.chainCode),t.writeBytes(this.key.privateKey),this.mnemonic?(t.writeU8(1),this.mnemonic.toWriter(t)):t.writeU8(0),t)}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}fromReader(t){return this.encrypted=1===t.readU8(),this.encrypted?(this.iv=t.readVarBytes(),this.ciphertext=t.readVarBytes(),this.alg=t.readU8(),s(this.alg<y.algByVal.length),this.n=t.readU32(),this.r=t.readU32(),this.p=t.readU32(),this):(this.key=new g,this.key.chainCode=t.readBytes(32),this.key.privateKey=t.readBytes(32),this.key.publicKey=c.publicKeyCreate(this.key.privateKey,!0),1===t.readU8()&&(this.mnemonic=m.fromReader(t)),this)}static fromReader(t){return(new this).fromReader(t)}fromRaw(t){return this.fromReader(r.read(t))}static fromRaw(t){return(new this).fromRaw(t)}fromKey(t,e){return this.encrypted=!1,this.iv=null,this.ciphertext=null,this.key=t,this.mnemonic=e||null,this}static fromKey(t,e){return(new this).fromKey(t,e)}toJSON(t,e){return this.encrypted?{encrypted:!0,until:this.until,iv:this.iv.toString("hex"),ciphertext:e?this.ciphertext.toString("hex"):void 0,algorithm:y.algByVal[this.alg].toLowerCase(),n:this.n,r:this.r,p:this.p}:{encrypted:!1,key:e?this.key.toJSON(t):void 0,mnemonic:e&&this.mnemonic?this.mnemonic.toJSON():void 0}}inspect(){const t=this.toJSON(null,!0);return this.key&&(t.key=this.key.toJSON()),this.mnemonic&&(t.mnemonic=this.mnemonic.toJSON()),t}static isMasterKey(t){return t instanceof y}}y.SALT=e.from("bcoin","ascii"),y.alg={PBKDF2:0,SCRYPT:1},y.algByVal=["PBKDF2","SCRYPT"],t.exports=y}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){const s=i(0),r=e.alloc(0),n={OPEN:0,CLOSE:1,PING:2,PONG:3,MESSAGE:4,UPGRADE:5,NOOP:6};class o{constructor(t,i,o){s("number"==typeof t),s(t>>>0===t),s(t<=n.NOOP),s("boolean"==typeof o),o?(null==i&&(i=r),s(e.isBuffer(i))):(null==i&&(i=""),s("string"==typeof i)),this.type=t,this.data=i,this.binary=o}toString(){let t="";return this.binary?(t+="b",t+=this.type.toString(10),t+=this.data.toString("base64")):(t+=this.type.toString(10),t+=this.data),t}static fromString(t){s("string"==typeof t);let i,r=t.charCodeAt(0),o=!1;return 98===r?(s(t.length>1),r=t.charCodeAt(1),i=e.from(t.substring(2),"base64"),o=!0):i=t.substring(1),s((r-=48)>=0&&r<=9),s(r<=n.NOOP),new this(r,i,o)}size(){let t=1;return this.binary?t+=this.data.length:t+=e.byteLength(this.data,"utf8"),t}toRaw(){const t=e.allocUnsafe(this.size());return t[0]=this.type,this.binary?this.data.copy(t,1):this.data.length>0&&t.write(this.data,1,"utf8"),t}static fromRaw(t){s(e.isBuffer(t)),s(t.length>0);const i=t[0];return s(i<=n.NOOP),new this(i,t.slice(1),!0)}}o.types=n,o.table=["open","close","ping","pong","message","upgrade","noop"],t.exports=o}).call(this,i(1).Buffer)},function(t,e,i){"use strict";t.exports={Client:window.WebSocket||window.MozWebSocket}},function(t,e,i){"use strict";e.decode=e.parse=i(251),e.encode=e.stringify=i(250)},function(t,e,i){"use strict";
/*!
 * bcurl.js - simple http client
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcurl
 */const s=i(254);e.Client=s,e.client=(t=>new s(t))},function(t,e,i){"use strict";(function(e){
/*!
 * client.js - http client for wallets
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),{NodeClient:r}=i(256),n=i(5),o=i(14),a=i(9),h={"block connect":(t,e)=>u(t,e),"block disconnect":t=>[l(t)],"block rescan":(t,e)=>u(t,e),"chain reset":t=>[l(t)],tx:t=>[o.fromRaw(t)]};function l(t){return s(e.isBuffer(t)),s(t.length>=84),{hash:a.digest(t.slice(0,80)).toString("hex"),height:t.readUInt32LE(80,!0),time:t.readUInt32LE(68,!0)}}function u(t,e){const i=l(t),s=[];for(const t of e)s.push(o.fromRaw(t));return[i,s]}t.exports=class extends r{constructor(t){super(t)}bind(t,e){const i=h[t];i?super.bind(t,(...t)=>e(...i(...t))):super.bind(t,e)}hook(t,e){const i=h[t];i?super.hook(t,(...t)=>e(...i(...t))):super.hook(t,e)}async getTip(){return l(await super.getTip())}async getEntry(t){return"string"==typeof t&&(t=n.revHex(t)),l(await super.getEntry(t))}async send(t){return super.send(t.toRaw())}async setFilter(t){return super.setFilter(t.toRaw())}async rescan(t){return"string"==typeof t&&(t=n.revHex(t)),super.rescan(t)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * sigcache.js - signature cache for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(13);class n{constructor(t,i){this.sig=e.from(t),this.key=e.from(i)}equals(t,e){return this.sig.equals(t)&&this.key.equals(e)}}t.exports=class{constructor(t){null==t&&(t=1e4),s(t>>>0===t),this.size=t,this.keys=[],this.valid=new Map}resize(t){s(t>>>0===t),this.size=t,this.keys.length=0,this.valid.clear()}add(t,e,i){if(0!==this.size)if(this.valid.set(t,new n(e,i)),this.keys.length>=this.size){const e=Math.floor(Math.random()*this.keys.length),i=this.keys[e];this.valid.delete(i),this.keys[e]=t}else this.keys.push(t)}has(t,e,i){const s=this.valid.get(t);return!!s&&s.equals(e,i)}verify(t,e,i){if(0===this.size)return r.verifyDER(t,e,i);const s=t.toString("hex");return!!this.has(s,e,i)||!!r.verifyDER(t,e,i)&&(this.add(s,e,i),!0)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * spvnode.js - spv node for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),{Lock:r}=i(27),n=i(115),o=i(107),a=i(66),h=i(129),l=i(128);t.exports=class extends a{constructor(t){super("bcash","bcash.conf","debug.log",t),this.opened=!1,this.spv=!0,this.chain=new n({network:this.network,logger:this.logger,prefix:this.config.prefix,memory:this.config.bool("memory"),maxFiles:this.config.uint("max-files"),cacheSize:this.config.mb("cache-size"),entryCache:this.config.uint("entry-cache"),forceFlags:this.config.bool("force-flags"),checkpoints:this.config.bool("checkpoints"),spv:!0}),this.pool=new o({network:this.network,logger:this.logger,chain:this.chain,prefix:this.config.prefix,proxy:this.config.str("proxy"),onion:this.config.bool("onion"),upnp:this.config.bool("upnp"),seeds:this.config.array("seeds"),nodes:this.config.array("nodes"),only:this.config.array("only"),bip151:this.config.bool("bip151"),bip150:this.config.bool("bip150"),identityKey:this.config.buf("identity-key"),maxOutbound:this.config.uint("max-outbound"),createSocket:this.config.func("create-socket"),memory:this.config.bool("memory"),selfish:!0,listen:!1}),this.rpc=new l(this),this.http=new h({network:this.network,logger:this.logger,node:this,prefix:this.config.prefix,ssl:this.config.bool("ssl"),keyFile:this.config.path("ssl-key"),certFile:this.config.path("ssl-cert"),host:this.config.str("http-host"),port:this.config.uint("http-port"),apiKey:this.config.str("api-key"),noAuth:this.config.bool("no-auth"),cors:this.config.bool("cors")}),this.rescanJob=null,this.scanLock=new r,this.watchLock=new r,this.init()}init(){this.chain.on("error",t=>this.error(t)),this.pool.on("error",t=>this.error(t)),this.http&&this.http.on("error",t=>this.error(t)),this.pool.on("tx",t=>{this.rescanJob||this.emit("tx",t)}),this.chain.on("block",t=>{this.emit("block",t)}),this.chain.on("connect",async(t,e)=>{if(this.rescanJob)try{await this.watchBlock(t,e)}catch(t){this.error(t)}else this.emit("connect",t,e)}),this.chain.on("disconnect",(t,e)=>{this.emit("disconnect",t,e)}),this.chain.on("reorganize",(t,e)=>{this.emit("reorganize",t,e)}),this.chain.on("reset",t=>{this.emit("reset",t)}),this.loadPlugins()}async open(){s(!this.opened,"SPVNode is already open."),this.opened=!0,await this.handlePreopen(),await this.chain.open(),await this.pool.open(),await this.openPlugins(),await this.http.open(),await this.handleOpen(),this.logger.info("Node is loaded.")}async close(){s(this.opened,"SPVNode is not open."),this.opened=!1,await this.handlePreclose(),await this.http.close(),await this.closePlugins(),await this.pool.close(),await this.chain.close(),await this.handleClose()}async scan(t,e,i){const s=await this.scanLock.lock();this.chain.height;try{await this.chain.replay(t),this.chain.height}finally{s()}}watchUntil(t,e){return new Promise((i,s)=>{this.rescanJob=new class{constructor(t,e,i,s){this.resolve=t,this.reject=e,this.height=i,this.iter=s}}(i,s,t,e)})}async watchBlock(t,e){const i=await this.watchLock.lock();try{if(t.height<this.rescanJob.height)return void await this.rescanJob.iter(t,e.txs);this.rescanJob.resolve(),this.rescanJob=null}catch(t){this.rescanJob.reject(t),this.rescanJob=null}finally{i()}}async broadcast(t){try{await this.pool.broadcast(t)}catch(t){this.emit("error",t)}}sendTX(t){return this.broadcast(t)}relay(t){return this.broadcast(t)}connect(){return this.pool.connect()}disconnect(){return this.pool.disconnect()}startSync(){return this.pool.startSync()}stopSync(){return this.pool.stopSync()}}},function(t,e,i){"use strict";
/*!
 * rpc.js - json rpc for bweb.
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(7),n={INVALID_REQUEST:-32600,METHOD_NOT_FOUND:-32601,INVALID_PARAMS:-32602,INTERNAL_ERROR:-32603,PARSE_ERROR:-32700};class o extends r{constructor(){super(),this.calls=Object.create(null),this.mounts=[]}getCode(t){switch(t.type){case"RPCError":return t.code;default:return n.INTERNAL_ERROR}}handleCall(t,e){}handleError(t){}async call(t,e){let i=t,s=[],r=!0;e||(e={}),Array.isArray(i)||(i=[i],r=!1);for(const t of i){if(!t||"object"!=typeof t){s.push({result:null,error:{message:"Invalid request.",code:n.INVALID_REQUEST},id:null});continue}if(t.id&&"object"==typeof t.id){s.push({result:null,error:{message:"Invalid ID.",code:n.INVALID_REQUEST},id:null});continue}if(null==t.id&&(t.id=null),t.params||(t.params=[]),"string"!=typeof t.method){s.push({result:null,error:{message:"Method not found.",code:n.METHOD_NOT_FOUND},id:t.id});continue}if(!Array.isArray(t.params)){s.push({result:null,error:{message:"Invalid params.",code:n.INVALID_PARAMS},id:t.id});continue}let i;this.handleCall(t,e),this.emit("call",t,e);try{i=await this.execute(t)}catch(e){const i=this.getCode(e);i===n.INTERNAL_ERROR&&(this.handleError(e),this.emit("error",e)),s.push({result:null,error:{message:e.message,code:i},id:t.id});continue}void 0===i&&(i=null),s.push({result:i,error:null,id:t.id})}return r||(s=s[0]),s}async execute(t,e){const i=this.calls[t.method];if(!i){for(const i of this.mounts)if(i.calls[t.method])return await i.execute(t,e);throw new a(n.METHOD_NOT_FOUND,`Method not found: ${t.method}.`)}return i.call(this,t.params,e)}add(t,e,i){s("function"==typeof e,"Handler must be a function."),s(!this.calls[t],"Duplicate RPC call."),i&&(e=e.bind(i)),this.calls[t]=e}mount(t){s(t,"RPC must be an object."),s("function"==typeof t.execute,"Execute must be a method."),this.mounts.push(t)}attach(t){s(t,"RPC must be an object."),s("function"==typeof t.execute,"Execute must be a method."),t.mount(this)}}class a extends Error{constructor(t,e){super(),s("number"==typeof t),s("string"==typeof e),this.type="RPCError",this.message=e,this.code=t,Error.captureStackTrace&&Error.captureStackTrace(this,a)}}o.RPC=o,o.errors=n,o.RPCError=a,t.exports=o},function(t,e,i){"use strict";
/*!
 * fullnode.js - full node for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(115),n=i(110),o=i(138),a=i(107),h=i(136),l=i(66),u=i(129),c=i(128),f=i(142),d=i(140);t.exports=class extends l{constructor(t){super("bcash","bcash.conf","debug.log",t),this.opened=!1,this.spv=!1,this.chain=new r({network:this.network,logger:this.logger,workers:this.workers,memory:this.config.bool("memory"),prefix:this.config.prefix,maxFiles:this.config.uint("max-files"),cacheSize:this.config.mb("cache-size"),forceFlags:this.config.bool("force-flags"),prune:this.config.bool("prune"),checkpoints:this.config.bool("checkpoints"),coinCache:this.config.mb("coin-cache"),entryCache:this.config.uint("entry-cache")}),this.fees=new n(this.logger),this.fees.init(),this.mempool=new o({network:this.network,logger:this.logger,workers:this.workers,chain:this.chain,fees:this.fees,memory:this.config.bool("memory"),prefix:this.config.prefix,persistent:this.config.bool("persistent-mempool"),maxSize:this.config.mb("mempool-size"),limitFree:this.config.bool("limit-free"),limitFreeRelay:this.config.uint("limit-free-relay"),requireStandard:this.config.bool("require-standard"),rejectAbsurdFees:this.config.bool("reject-absurd-fees"),replaceByFee:this.config.bool("replace-by-fee"),indexAddress:this.config.bool("index-address")}),this.pool=new a({network:this.network,logger:this.logger,chain:this.chain,mempool:this.mempool,prefix:this.config.prefix,selfish:this.config.bool("selfish"),compact:this.config.bool("compact"),bip37:this.config.bool("bip37"),bip151:this.config.bool("bip151"),bip150:this.config.bool("bip150"),identityKey:this.config.buf("identity-key"),maxOutbound:this.config.uint("max-outbound"),maxInbound:this.config.uint("max-inbound"),createSocket:this.config.func("create-socket"),proxy:this.config.str("proxy"),onion:this.config.bool("onion"),upnp:this.config.bool("upnp"),seeds:this.config.array("seeds"),nodes:this.config.array("nodes"),only:this.config.array("only"),publicHost:this.config.str("public-host"),publicPort:this.config.uint("public-port"),host:this.config.str("host"),port:this.config.uint("port"),listen:this.config.bool("listen"),memory:this.config.bool("memory")}),this.miner=new h({network:this.network,logger:this.logger,workers:this.workers,chain:this.chain,mempool:this.mempool,address:this.config.array("coinbase-address"),coinbaseFlags:this.config.str("coinbase-flags"),preverify:this.config.bool("preverify"),maxWeight:this.config.uint("max-weight"),reservedWeight:this.config.uint("reserved-weight"),reservedSigops:this.config.uint("reserved-sigops")}),this.rpc=new c(this),this.http=new u({network:this.network,logger:this.logger,node:this,prefix:this.config.prefix,ssl:this.config.bool("ssl"),keyFile:this.config.path("ssl-key"),certFile:this.config.path("ssl-cert"),host:this.config.str("http-host"),port:this.config.uint("http-port"),apiKey:this.config.str("api-key"),noAuth:this.config.bool("no-auth"),cors:this.config.bool("cors")}),this.txindex=null,this.config.bool("index-tx")&&(this.txindex=new f({network:this.network,logger:this.logger,chain:this.chain,memory:this.config.bool("memory"),prefix:this.config.filter("index").str("prefix")||this.config.prefix})),this.addrindex=null,this.config.bool("index-address")&&(this.addrindex=new d({network:this.network,logger:this.logger,chain:this.chain,memory:this.config.bool("memory"),prefix:this.config.filter("index").str("prefix")||this.config.prefix})),this.init()}init(){this.chain.on("error",t=>this.error(t)),this.mempool.on("error",t=>this.error(t)),this.pool.on("error",t=>this.error(t)),this.miner.on("error",t=>this.error(t)),this.txindex&&this.txindex.on("error",t=>this.error(t)),this.addrindex&&this.addrindex.on("error",t=>this.error(t)),this.http&&this.http.on("error",t=>this.error(t)),this.mempool.on("tx",t=>{this.miner.cpu.notifyEntry(),this.emit("tx",t)}),this.chain.on("connect",async(t,e)=>{try{await this.mempool._addBlock(t,e.txs)}catch(t){this.error(t)}this.emit("block",e),this.emit("connect",t,e)}),this.chain.on("disconnect",async(t,e)=>{try{await this.mempool._removeBlock(t,e.txs)}catch(t){this.error(t)}this.emit("disconnect",t,e)}),this.chain.on("reorganize",async(t,e)=>{try{await this.mempool._handleReorg()}catch(t){this.error(t)}this.emit("reorganize",t,e)}),this.chain.on("reset",async t=>{try{await this.mempool._reset()}catch(t){this.error(t)}this.emit("reset",t)}),this.loadPlugins()}async open(){s(!this.opened,"FullNode is already open."),this.opened=!0,await this.handlePreopen(),await this.chain.open(),await this.mempool.open(),await this.miner.open(),await this.pool.open(),this.txindex&&await this.txindex.open(),this.addrindex&&await this.addrindex.open(),await this.openPlugins(),await this.http.open(),await this.handleOpen(),this.logger.info("Node is loaded.")}async close(){s(this.opened,"FullNode is not open."),this.opened=!1,await this.handlePreclose(),await this.http.close(),this.txindex&&await this.txindex.close(),this.addrindex&&await this.addrindex.close(),await this.closePlugins(),await this.pool.close(),await this.miner.close(),await this.mempool.close(),await this.chain.close(),await this.handleClose(),this.logger.info("Node is closed.")}scan(t,e,i){return this.chain.scan(t,e,i)}async broadcast(t){try{await this.pool.broadcast(t)}catch(t){this.emit("error",t)}}async sendTX(t){let e;try{e=await this.mempool.addTX(t)}catch(e){if("VerifyError"===e.type&&0===e.score)return this.error(e),this.logger.warning("Verification failed for tx: %s.",t.txid()),this.logger.warning("Attempting to broadcast anyway..."),void this.broadcast(t);throw e}if(e)return this.logger.warning("TX was orphaned in mempool: %s.",t.txid()),this.logger.warning("Attempting to broadcast anyway..."),void this.broadcast(t);this.pool.options.selfish&&this.broadcast(t)}async relay(t){try{await this.sendTX(t)}catch(t){this.error(t)}}connect(){return this.pool.connect()}disconnect(){return this.pool.disconnect()}startSync(){return this.pool.startSync()}stopSync(){return this.pool.stopSync()}getBlock(t){return this.chain.getBlock(t)}async getCoin(t,e){return this.mempool.getCoin(t,e)||(this.mempool.isSpent(t,e)?null:this.chain.getCoin(t,e))}async getCoinsByAddress(t){const e=this.mempool.getCoinsByAddress(t);if(!this.addrindex)return e;const i=await this.addrindex.getCoinsByAddress(t),s=[];for(const t of i)this.mempool.isSpent(t.hash,t.index)||s.push(t);for(const t of e)s.push(t);return s}async getMetaByAddress(t){const e=this.mempool.getMetaByAddress(t);if(this.txindex&&this.addrindex){Array.isArray(t)||(t=[t]);const i=await this.addrindex.getHashesByAddress(t),r=[];for(const t of i){const e=await this.txindex.getMeta(t);s(e),r.push(e)}return r.concat(e)}return e}async getMeta(t){return this.mempool.getMeta(t)||(this.txindex?this.txindex.getMeta(t):null)}async getMetaView(t){return-1===t.height?this.mempool.getSpentView(t.tx):this.chain.getSpentView(t)}async getTXByAddress(t){const e=await this.getMetaByAddress(t),i=[];for(const t of e)i.push(t.tx);return i}async getTX(t){const e=await this.getMeta(t);return e?e.tx:null}async hasTX(t){return!!this.mempool.hasEntry(t)||!!this.txindex&&this.txindex.hasTX(t)}}},function(t,e,i){"use strict";t.exports=i(277)},function(t,e,i){"use strict";(function(e){
/*!
 * parser.js - packet parser for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(7),{format:n}=i(48),o=i(8),a=i(9),h=i(34),l=i(54);t.exports=class extends r{constructor(t){super(),this.network=o.get(t),this.pending=[],this.total=0,this.waiting=24,this.header=null}error(){const t=n.apply(null,arguments);this.emit("error",new Error(t))}feed(t){for(this.total+=t.length,this.pending.push(t);this.total>=this.waiting;){const t=e.allocUnsafe(this.waiting);let i=0;for(;i<t.length;){const e=this.pending[0].copy(t,i);e===this.pending[0].length?this.pending.shift():this.pending[0]=this.pending[0].slice(e),i+=e}s.strictEqual(i,t.length),this.total-=t.length,this.parse(t)}}parse(t){if(s(t.length<=h.MAX_MESSAGE),!this.header)return void(this.header=this.parseHeader(t));const e=a.digest(t).readUInt32LE(0,!0);if(e!==this.header.checksum)return this.waiting=24,this.header=null,void this.error("Invalid checksum: %s.",e.toString(16));let i;try{i=this.parsePayload(this.header.cmd,t)}catch(t){return this.waiting=24,this.header=null,void this.emit("error",t)}this.waiting=24,this.header=null,this.emit("packet",i)}parseHeader(t){const e=t.readUInt32LE(0,!0);if(e!==this.network.magic)return this.error("Invalid magic value: %s.",e.toString(16)),null;let i=0;for(;0!==t[i+4]&&i<12;i++);if(12===i)return this.error("Non NULL-terminated command."),null;const s=t.toString("ascii",4,4+i),r=t.readUInt32LE(16,!0);return r>h.MAX_MESSAGE?(this.waiting=24,this.error("Packet length too large: %d.",r),null):(this.waiting=r,new class{constructor(t,e,i){this.cmd=t,this.size=e,this.checksum=i}}(s,r,t.readUInt32LE(20,!0)))}parsePayload(t,e){return l.fromRaw(t,e)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";t.exports=i(281)},function(t,e,i){"use strict";(function(e){
/*!
 * hostlist.js - address management for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(41),n=i(72),o=i(70),a=i(109),h=i(50),l=i(137),u=i(214),c=i(5),f=i(8),d=i(67),p=i(34),g=i(280),m=e.allocUnsafe(32);class w{constructor(t){this.options=new v(t),this.network=this.options.network,this.logger=this.options.logger.context("hostlist"),this.address=this.options.address,this.resolve=this.options.resolve,this.dnsSeeds=[],this.dnsNodes=[],this.map=new Map,this.fresh=[],this.totalFresh=0,this.used=[],this.totalUsed=0,this.nodes=[],this.local=new Map,this.banned=new Map,this.timer=null,this.needsFlush=!1,this.flushing=!1,this.init()}init(){const t=this.options,e=w.scores;for(let e=0;e<t.maxBuckets;e++)this.fresh.push(new Map);for(let e=0;e<t.maxBuckets;e++)this.used.push(new u);this.setSeeds(t.seeds),this.setNodes(t.nodes),this.pushLocal(this.address,e.MANUAL),this.addLocal(t.host,t.port,e.BIND);const i=o.getPublic(),s=this.address.port;for(const t of i)this.addLocal(t,s,e.IF)}async open(){try{await this.loadFile()}catch(t){this.logger.warning("Hosts deserialization failed."),this.logger.error(t)}0===this.size()&&this.injectSeeds(),await this.discoverNodes(),this.start()}async close(){this.stop(),await this.flush(),this.reset()}start(){this.options.memory||this.options.filename&&(s(null==this.timer),this.timer=setInterval(()=>this.flush(),this.options.flushInterval))}stop(){this.options.memory||this.options.filename&&(s(null!=this.timer),clearInterval(this.timer),this.timer=null)}injectSeeds(){const t=g.get(this.network.type);for(const e of t){const t=d.fromHostname(e,this.network);t.isRoutable()&&(!this.options.onion&&t.isOnion()||0!==t.port&&this.add(t))}}async loadFile(){const t=this.options.filename;if(n.unsupported)return;if(this.options.memory)return;if(!t)return;let e;try{e=await n.readFile(t,"utf8")}catch(t){if("ENOENT"===t.code)return;throw t}const i=JSON.parse(e);this.fromJSON(i)}async flush(){const t=this.options.filename;if(n.unsupported)return;if(this.options.memory)return;if(!t)return;if(!this.needsFlush)return;if(this.flushing)return;this.needsFlush=!1,this.logger.debug("Writing hosts to %s.",t);const e=this.toJSON(),i=JSON.stringify(e);this.flushing=!0;try{await n.writeFile(t,i,"utf8")}catch(t){this.logger.warning("Writing hosts failed."),this.logger.error(t)}this.flushing=!1}size(){return this.totalFresh+this.totalUsed}isFull(){const t=this.options.maxBuckets*this.options.maxEntries;return this.size()>=t}reset(){this.map.clear();for(const t of this.fresh)t.clear();for(const t of this.used)t.reset();this.totalFresh=0,this.totalUsed=0,this.nodes.length=0}ban(t){this.banned.set(t,c.now())}unban(t){this.banned.delete(t)}clearBanned(){this.banned.clear()}isBanned(t){const e=this.banned.get(t);return!(null==e||c.now()>e+this.options.banTime&&(this.banned.delete(t),1))}getHost(){let t=null;if(this.totalFresh>0&&(t=this.fresh),this.totalUsed>0&&(0!==this.totalFresh&&0!==k(2)||(t=this.used)),!t)return null;const e=this.network.now();let i=1;for(;;){const s=t[k(t.length)];if(0===s.size)continue;let r,n=k(s.size);if(t===this.used)for(r=s.head;n--;)r=r.next;else for(r of s.values()){if(0===n)break;n-=1}if(k(1<<30)<i*r.chance(e)*(1<<30))return r;i*=1.2}}freshBucket(t){const e=t.addr,i=t.src,s=function(t,e){const i=m;return t.copy(i,0),e.copy(i,32),i}(e.raw,i.raw),r=l.sum(s,4221880213)%this.fresh.length;return this.fresh[r]}usedBucket(t){const e=t.addr,i=l.sum(e.raw,4221880213)%this.used.length;return this.used[i]}add(t,e){s(0!==t.port);let i=this.map.get(t.hostname);if(i){let r=7200,n=86400;if(e||(r=0),i.addr.services|=t.services,i.addr.services>>>=0,this.network.now()-t.time<86400&&(n=3600),i.addr.time<t.time-n-r&&(i.addr.time=t.time,this.needsFlush=!0),i.addr.time&&t.time<=i.addr.time)return!1;if(i.used)return!1;if(s(i.refCount>0),i.refCount===w.MAX_REFS)return!1;s(i.refCount<w.MAX_REFS);let o=1;for(let t=0;t<i.refCount;t++)o*=2;if(0!==k(o))return!1}else{if(this.isFull())return!1;e||(e=this.address),i=new y(t,e),this.totalFresh+=1}const r=this.freshBucket(i);return!r.has(i.key())&&(r.size>=this.options.maxEntries&&this.evictFresh(r),r.set(i.key(),i),i.refCount+=1,this.map.set(i.key(),i),this.needsFlush=!0,!0)}evictFresh(t){let e=null;for(const i of t.values())this.isStale(i)?(t.delete(i.key()),0==--i.refCount&&(this.map.delete(i.key()),this.totalFresh-=1)):e?i.addr.time<e.addr.time&&(e=i):e=i;e&&(t.delete(e.key()),0==--e.refCount&&(this.map.delete(e.key()),this.totalFresh-=1))}isStale(t){const e=this.network.now();return!(t.lastAttempt&&t.lastAttempt>=e-60)&&(t.addr.time>e+600||0===t.addr.time||e-t.addr.time>24*w.HORIZON_DAYS*60*60||0===t.lastSuccess&&t.attempts>=w.RETRIES||e-t.lastSuccess>24*w.MIN_FAIL_DAYS*60*60&&t.attempts>=w.MAX_FAILURES)}remove(t){const e=this.map.get(t);if(!e)return null;if(e.used){let t=e;for(s(0===e.refCount);t.prev;)t=t.prev;for(const i of this.used)if(i.head===t){i.remove(e),this.totalUsed-=1,t=null;break}s(!t)}else{for(const t of this.fresh)t.delete(e.key())&&(e.refCount-=1);this.totalFresh-=1,s(0===e.refCount)}return this.map.delete(e.key()),e.addr}markAttempt(t){const e=this.map.get(t),i=this.network.now();e&&(e.attempts+=1,e.lastAttempt=i)}markSuccess(t){const e=this.map.get(t),i=this.network.now();e&&i-e.addr.time>1200&&(e.addr.time=i)}markAck(t,e){const i=this.map.get(t);if(!i)return;const r=this.network.now();if(i.addr.services|=e,i.addr.services>>>=0,i.lastSuccess=r,i.lastAttempt=r,i.attempts=0,i.used)return;s(i.refCount>0);let n=null;for(const t of this.fresh)t.delete(i.key())&&(i.refCount-=1,n=t);s(n),s(0===i.refCount),this.totalFresh-=1;const o=this.usedBucket(i);if(o.size<this.options.maxEntries)return i.used=!0,o.push(i),void(this.totalUsed+=1);const a=this.evictUsed(o);let h=this.freshBucket(a);h.size>=this.options.maxEntries&&(h=n),i.used=!0,o.replace(a,i),a.used=!1,h.set(a.key(),a),s(0===a.refCount),a.refCount+=1,this.totalFresh+=1}evictUsed(t){let e=t.head;for(let i=t.head;i;i=i.next)i.addr.time<e.addr.time&&(e=i);return e}toArray(){const t=[];for(const e of this.map.values())t.push(e.addr);return s.strictEqual(t.length,this.size()),t}addSeed(t){const e=o.fromHostname(t,this.network.port);if(e.type===o.types.DNS)return this.dnsSeeds.push(e),null;const i=d.fromHost(e.host,e.port,this.network);return this.add(i),i}addNode(t){const e=o.fromHostname(t,this.network.port);if(e.type===o.types.DNS)return this.dnsNodes.push(e),null;const i=d.fromHost(e.host,e.port,this.network);return this.nodes.push(i),this.add(i),i}removeNode(t){const e=o.fromHostname(t,this.network.port);for(let t=0;t<this.nodes.length;t++){const i=this.nodes[t];if(i.host===e.host&&i.port===e.port)return this.nodes.splice(t,1),!0}return!1}setSeeds(t){this.dnsSeeds.length=0;for(const e of t)this.addSeed(e)}setNodes(t){this.dnsNodes.length=0,this.nodes.length=0;for(const e of t)this.addNode(e)}addLocal(t,e,i){const s=d.fromHost(t,e,this.network);return s.services=this.options.services,this.pushLocal(s,i)}pushLocal(t,e){if(!t.isRoutable())return!1;if(this.local.has(t.hostname))return!1;const i=new b(t,e);return this.local.set(t.hostname,i),!0}getLocal(t){let e=-1,i=-1,s=null;if(t||(t=this.address),0===this.local.size)return null;for(const r of this.local.values()){const n=t.getReachability(r.addr);n<e||(n>e||r.score>i)&&(e=n,i=r.score,s=r.addr)}return s.time=this.network.now(),s}markLocal(t){const e=this.local.get(t.hostname);return!!e&&(e.score+=1,!0)}async discoverSeeds(){const t=[];for(const e of this.dnsSeeds)t.push(this.populateSeed(e));return Promise.all(t)}async discoverNodes(){const t=[];for(const e of this.dnsNodes)t.push(this.populateNode(e));return Promise.all(t)}async populateNode(t){const e=await this.populate(t);0!==e.length&&(this.nodes.push(e[0]),this.add(e[0]))}async populateSeed(t){const e=await this.populate(t);for(const t of e)this.add(t)}async populate(t){const e=[];let i;s(t.type===o.types.DNS,"Resolved host passed."),this.logger.info("Resolving host: %s.",t.host);try{i=await this.resolve(t.host)}catch(t){return this.logger.error(t),e}for(const s of i){const i=d.fromHost(s,t.port,this.network);e.push(i)}return e}toJSON(){const t=[],e=[],i=[];for(const e of this.map.values())t.push(e.toJSON());for(const t of this.fresh){const i=[];for(const e of t.keys())i.push(e);e.push(i)}for(const t of this.used){const e=[];for(let i=t.head;i;i=i.next)e.push(i.key());i.push(e)}return{version:w.VERSION,network:this.network.type,addrs:t,fresh:e,used:i}}fromJSON(t){const e=new Map,i=new Map,r=[],n=[];let o=0,a=0;s(t&&"object"==typeof t),s(!t.network||t.network===this.network.type,"Network mistmatch."),s(t.version===w.VERSION,"Bad address serialization version."),s(Array.isArray(t.addrs));for(const s of t.addrs){const t=y.fromJSON(s,this.network);let r=e.get(t.src.hostname);r||(r=t.src,e.set(r.hostname,r)),t.src=r,i.set(t.key(),t)}s(Array.isArray(t.fresh)),s(t.fresh.length<=this.options.maxBuckets,"Buckets mismatch.");for(const e of t.fresh){const t=new Map;for(const r of e){const e=i.get(r);s(e),0===e.refCount&&(o+=1),e.refCount+=1,t.set(r,e)}s(t.size<=this.options.maxEntries,"Bucket size mismatch."),r.push(t)}s(r.length===this.fresh.length,"Buckets mismatch."),s(Array.isArray(t.used)),s(t.used.length<=this.options.maxBuckets,"Buckets mismatch.");for(const e of t.used){const t=new u;for(const r of e){const e=i.get(r);s(e),s(0===e.refCount),s(!e.used),e.used=!0,a+=1,t.push(e)}s(t.size<=this.options.maxEntries,"Bucket size mismatch."),n.push(t)}s(n.length===this.used.length,"Buckets mismatch.");for(const t of i.values())s(t.used||t.refCount>0);return this.map=i,this.fresh=r,this.totalFresh=o,this.used=n,this.totalUsed=a,this}static fromJSON(t,e){return new this(t).fromJSON(e)}}w.HORIZON_DAYS=30,w.RETRIES=3,w.MIN_FAIL_DAYS=7,w.MAX_FAILURES=10,w.MAX_REFS=8,w.VERSION=0,w.scores={NONE:0,IF:1,BIND:2,UPNP:3,DNS:3,MANUAL:4,MAX:5};class y{constructor(t,e){this.addr=t||new d,this.src=e||new d,this.prev=null,this.next=null,this.used=!1,this.refCount=0,this.attempts=0,this.lastSuccess=0,this.lastAttempt=0,t&&this.fromOptions(t,e)}fromOptions(t,e){return s(t instanceof d),s(e instanceof d),this.addr=t,this.src=e,this}static fromOptions(t,e){return(new this).fromOptions(t,e)}key(){return this.addr.hostname}chance(t){let e=1;return t-this.lastAttempt<600&&(e*=.01),e*Math.pow(.66,Math.min(this.attempts,8))}inspect(){return{addr:this.addr,src:this.src,used:this.used,refCount:this.refCount,attempts:this.attempts,lastSuccess:c.date(this.lastSuccess),lastAttempt:c.date(this.lastAttempt)}}toJSON(){return{addr:this.addr.hostname,src:this.src.hostname,services:this.addr.services.toString(2),time:this.addr.time,attempts:this.attempts,lastSuccess:this.lastSuccess,lastAttempt:this.lastAttempt}}fromJSON(t,e){if(s(t&&"object"==typeof t),s("string"==typeof t.addr),s("string"==typeof t.src),this.addr.fromHostname(t.addr,e),null!=t.services){s("string"==typeof t.services),s(t.services.length>0),s(t.services.length<=32);const e=parseInt(t.services,2);s(e>>>0===e),this.addr.services=e}return null!=t.time&&(s(Number.isSafeInteger(t.time)),s(t.time>=0),this.addr.time=t.time),null!=t.src&&(s("string"==typeof t.src),this.src.fromHostname(t.src,e)),null!=t.attempts&&(s(t.attempts>>>0===t.attempts),this.attempts=t.attempts),null!=t.lastSuccess&&(s(Number.isSafeInteger(t.lastSuccess)),s(t.lastSuccess>=0),this.lastSuccess=t.lastSuccess),null!=t.lastAttempt&&(s(Number.isSafeInteger(t.lastAttempt)),s(t.lastAttempt>=0),this.lastAttempt=t.lastAttempt),this}static fromJSON(t,e){return(new this).fromJSON(t,e)}}class b{constructor(t,e){this.addr=t,this.score=e||0}}class v{constructor(t){this.network=f.primary,this.logger=h.global,this.resolve=a.lookup,this.host="0.0.0.0",this.port=this.network.port,this.services=p.LOCAL_SERVICES,this.onion=!1,this.banTime=p.BAN_TIME,this.address=new d,this.address.services=this.services,this.address.time=this.network.now(),this.seeds=this.network.seeds,this.nodes=[],this.maxBuckets=20,this.maxEntries=50,this.prefix=null,this.filename=null,this.memory=!0,this.flushInterval=12e4,t&&this.fromOptions(t)}fromOptions(t){if(s(t,"Options are required."),null!=t.network&&(this.network=f.get(t.network),this.seeds=this.network.seeds,this.address.port=this.network.port,this.port=this.network.port),null!=t.logger&&(s("object"==typeof t.logger),this.logger=t.logger),null!=t.resolve&&(s("function"==typeof t.resolve),this.resolve=t.resolve),null!=t.banTime&&(s(t.banTime>=0),this.banTime=t.banTime),t.seeds&&(s(Array.isArray(t.seeds)),this.seeds=t.seeds),t.nodes&&(s(Array.isArray(t.nodes)),this.nodes=t.nodes),null!=t.host){s("string"==typeof t.host);const e=o.toBuffer(t.host);this.host=o.toString(e),o.isRoutable(e)&&this.address.setHost(this.host)}return null!=t.port&&(s("number"==typeof t.port),s(t.port>0&&t.port<=65535),this.port=t.port,this.address.setPort(this.port)),null!=t.publicHost&&(s("string"==typeof t.publicHost),this.address.setHost(t.publicHost)),null!=t.publicPort&&(s("number"==typeof t.publicPort),s(t.publicPort>0&&t.publicPort<=65535),this.address.setPort(t.publicPort)),null!=t.services&&(s("number"==typeof t.services),this.services=t.services),null!=t.onion&&(s("boolean"==typeof t.onion),this.onion=t.onion),null!=t.maxBuckets&&(s("number"==typeof t.maxBuckets),this.maxBuckets=t.maxBuckets),null!=t.maxEntries&&(s("number"==typeof t.maxEntries),this.maxEntries=t.maxEntries),null!=t.memory&&(s("boolean"==typeof t.memory),this.memory=t.memory),null!=t.prefix&&(s("string"==typeof t.prefix),this.prefix=t.prefix,this.filename=r.join(this.prefix,"hosts.json")),null!=t.filename&&(s("string"==typeof t.filename),this.filename=t.filename),null!=t.flushInterval&&(s(t.flushInterval>=0),this.flushInterval=t.flushInterval),this.address.time=this.network.now(),this.address.services=this.services,this}}function k(t){return Math.floor(Math.random()*t)}t.exports=w}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * framer.js - packet framer for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(8),n=i(9);t.exports=class{constructor(t){this.network=r.get(t)}packet(t,i,r){s(i,"No payload."),s(t.length<12),s(i.length<=4294967295);const o=e.allocUnsafe(24+i.length);o.writeUInt32LE(this.network.magic,0,!0),o.write(t,4,"ascii");for(let e=4+t.length;e<16;e++)o[e]=0;return o.writeUInt32LE(i.length,16,!0),r||(r=n.digest(i)),r.copy(o,20,0,4),i.copy(o,24),o}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * poly1305.js - poly1305 for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 */t.exports=i(284)},function(t,e,i){"use strict";
/*!
 * chacha20.js - chacha20 for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 */t.exports=i(285)},function(t,e,i){"use strict";(function(e){
/*!
 * memblock.js - memblock block object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(2),r=i(64),n=i(51),o=i(42),a=i(11),h=e.alloc(0);class l extends r{constructor(){super(),this._raw=h}isMemory(){return!0}toHead(){return this._raw.slice(0,80)}getSize(){return this._raw.length}verifyBody(){return!0}getCoinbaseHeight(){if(this.version<2)return-1;try{return this.parseCoinbaseHeight()}catch(t){return-1}}parseCoinbaseHeight(){const t=s.read(this._raw,!0);if(t.seek(80),0===t.readVarint())return-1;t.seek(4);let e=t.readVarint();if(0===e&&0!==t.readU8()&&(e=t.readVarint()),0===e)return-1;t.seek(36);const i=t.readVarBytes();return a.getCoinbaseHeight(i)}fromRaw(t){const e=s.read(t,!0);return this.readHead(e),this._raw=e.data,this}static fromRaw(t){return(new this).fromRaw(t)}toRaw(){return this._raw}toBlock(){const t=n.fromRaw(this._raw);return t._hash=this._hash,t._hhash=this._hhash,t}toHeaders(){return o.fromBlock(this)}static isMemBlock(t){return t instanceof l}}t.exports=l}).call(this,i(1).Buffer)},function(t,e,i){"use strict";t.exports=i(290)},function(t,e,i){"use strict";(function(s){
/*!
 * template.js - block template object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),n=i(2),o=i(9),a=i(5),h=i(12),l=i(14),u=i(51),c=i(43),f=i(16),d=i(3),p=i(17),g=i(25),m=i(223),w=s.alloc(0);class y{constructor(t){this.prevBlock=d.NULL_HASH,this.version=1,this.height=0,this.time=0,this.bits=0,this.target=d.ZERO_HASH,this.locktime=0,this.mtp=0,this.flags=0,this.coinbaseFlags=w,this.address=new h,this.sigops=100,this.size=1e3,this.interval=21e4,this.fees=0,this.tree=new k,this.left=w,this.right=w,this.items=[],t&&this.fromOptions(t)}fromOptions(t){return r(t),null!=t.prevBlock&&(r("string"==typeof t.prevBlock),this.prevBlock=t.prevBlock),null!=t.version&&(r("number"==typeof t.version),this.version=t.version),null!=t.height&&(r("number"==typeof t.height),this.height=t.height),null!=t.time&&(r("number"==typeof t.time),this.time=t.time),null!=t.bits&&this.setBits(t.bits),null!=t.target&&this.setTarget(t.target),null!=t.locktime&&(r("number"==typeof t.locktime),this.locktime=t.locktime),null!=t.mtp&&(r("number"==typeof t.mtp),this.mtp=t.mtp),null!=t.flags&&(r("number"==typeof t.flags),this.flags=t.flags),null!=t.coinbaseFlags&&(r(s.isBuffer(t.coinbaseFlags)),this.coinbaseFlags=t.coinbaseFlags),null!=t.address&&this.address.fromOptions(t.address),null!=t.sigops&&(r("number"==typeof t.sigops),this.sigops=t.sigops),null!=t.size&&(r("number"==typeof t.size),this.size=t.size),null!=t.interval&&(r("number"==typeof t.interval),this.interval=t.interval),null!=t.fees&&(r("number"==typeof t.fees),this.fees=t.fees),null!=t.items&&(r(Array.isArray(t.items)),this.items=t.items),this}static fromOptions(t){return(new this).fromOptions(t)}setBits(t){r("number"==typeof t),this.bits=t,this.target=m.getTarget(t)}setTarget(t){r(s.isBuffer(t)),this.bits=m.getBits(t),this.target=t}getReward(){return d.getReward(this.height,this.interval)+this.fees}createCoinbase(){const t=new l,e=new c;e.script.pushInt(this.height),e.script.pushData(s.alloc(20,0));const i=s.allocUnsafe(4);i.writeUInt32LE(4294967296*Math.random(),0,!0),e.script.pushData(i),e.script.pushData(s.alloc(8,0)),e.script.compile(),t.inputs.push(e);const n=new f;n.script.fromPubkeyhash(s.alloc(20,0)),n.value=this.getReward(),t.outputs.push(n);const o=e.script.get(0);r(o);const a=5-o.getSize();return r(a>=0),r.strictEqual(t.getSize()+a,125),e.script.setData(1,this.coinbaseFlags),e.script.compile(),n.script.fromAddress(this.address),t.refresh(),r(e.script.getSize()<=100,"Coinbase input script is too large!"),t}refresh(){const t=this.createCoinbase(),e=t.toRaw();let i=0;i+=4,i+=1,i+=t.inputs[0].getSize(),i-=12;const s=e.slice(0,i);i+=8;const r=e.slice(i);this.left=s,this.right=r,this.tree=k.fromItems(this.items)}getRawCoinbase(t,e){let i=0;i+=this.left.length,i+=8,i+=this.right.length;const s=n.write(i);return s.writeBytes(this.left),s.writeU32BE(t),s.writeU32BE(e),s.writeBytes(this.right),s.render()}getRoot(t,e){const i=this.getRawCoinbase(t,e),s=o.digest(i);return this.tree.withFirst(s)}getHeader(t,e,i){const s=n.write(80);return s.writeU32(this.version),s.writeHash(this.prevBlock),s.writeHash(t),s.writeU32(e),s.writeU32(this.bits),s.writeU32(i),s.render()}getProof(t,e,i,s){const r=this.getRoot(t,e),n=this.getHeader(r,i,s),a=o.digest(n);return new v(a,r,t,e,i,s)}getCoinbase(t,e){const i=this.getRawCoinbase(t,e);return l.fromRaw(i)}commit(t){const e=t.root,i=t.nonce1,s=t.nonce2,r=t.time,n=t.nonce,o=new u;o.version=this.version,o.prevBlock=this.prevBlock,o.merkleRoot=e.toString("hex"),o.time=r,o.bits=this.bits,o.nonce=n;const a=this.getCoinbase(i,s);o.txs.push(a);for(const t of this.items)o.txs.push(t.tx);return o}toCoinbase(){return this.getCoinbase(0,0)}toBlock(){const t=this.getProof(0,0,this.time,0);return this.commit(t)}getDifficulty(){return m.getDifficulty(this.target)}setAddress(t){this.address=new h(t),this.refresh()}addTX(t,e){r(!t.mutable,"Cannot add mutable TX to block.");const i=b.fromTX(t,e,this),s=i.tx.getSize(),n=i.sigops;return!(!t.isFinal(this.height,this.locktime)||this.size+s>d.MAX_FORK_BLOCK_SIZE||this.sigops+n>d.maxBlockSigops(this.size+s)||(this.size+=s,this.sigops+=n,this.fees+=i.fee,this.items.push(i),0))}pushTX(t,e){r(!t.mutable,"Cannot add mutable TX to block."),e||(e=new g);const i=b.fromTX(t,e,this),s=i.tx.getSize(),n=i.sigops;return this.size+=s,this.sigops+=n,this.fees+=i.fee,this.items.push(i),!0}}class b{constructor(t){this.tx=t,this.hash=t.hash("hex"),this.fee=0,this.rate=0,this.priority=0,this.free=!1,this.sigops=0,this.descRate=0,this.depCount=0}static fromTX(t,e,i){const s=new this(t);return s.fee=t.getFee(e),s.rate=t.getRate(e),s.priority=t.getPriority(e,i.height),s.free=!1,s.sigops=t.getSigopsCount(e,i.flags),s.descRate=s.rate,s}static fromEntry(t,e){const i=new this(t.tx);return i.fee=t.getFee(),i.rate=t.getDeltaRate(),i.priority=t.getPriority(e.height),i.free=t.getDeltaFee()<p.getMinFee(t.size),i.sigops=t.sigops,i.descRate=t.getDescRate(),i}}class v{constructor(t,e,i,s,r,n){this.hash=t,this.root=e,this.nonce1=i,this.nonce2=s,this.time=r,this.nonce=n}rhash(){return a.revHex(this.hash.toString("hex"))}verify(t){return m.rcmp(this.hash,t)<=0}getDifficulty(){return m.getDifficulty(this.hash)}}class k{constructor(){this.steps=[]}withFirst(t){for(const e of this.steps)t=o.root(t,e);return t}toJSON(){const t=[];for(const e of this.steps)t.push(e.toString("hex"));return t}fromItems(t){const e=[];e.push(d.ZERO_HASH);for(const i of t)e.push(i.tx.hash());return this.fromLeaves(e)}static fromItems(t){return(new this).fromItems(t)}fromBlock(t){const e=[];e.push(d.ZERO_HASH);for(let i=1;i<t.length;i++){const s=t[i];e.push(s.hash())}return this.fromLeaves(e)}static fromBlock(t){return(new this).fromBlock(t)}fromLeaves(t){let e=t.length;for(;e>1;){const i=[d.ZERO_HASH];this.steps.push(t[1]),e%2&&t.push(t[e-1]);for(let s=2;s<e;s+=2){const e=o.root(t[s],t[s+1]);i.push(e)}e=(t=i).length}return this}static fromLeaves(t){return(new this).fromLeaves(t)}}(e=y).BlockTemplate=y,e.BlockEntry=b,t.exports=e}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * cpuminer.js - inefficient cpu miner for bcoin (because we can)
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(7),{Lock:n}=i(27),o=i(5),a=i(71);class h extends r{constructor(t){super(),this.opened=!1,this.miner=t,this.network=this.miner.network,this.logger=this.miner.logger.context("cpuminer"),this.workers=this.miner.workers,this.chain=this.miner.chain,this.locker=new n,this.running=!1,this.stopping=!1,this.job=null,this.stopJob=null,this.init()}init(){this.chain.on("tip",t=>{this.job&&this.job.attempt.prevBlock===t.prevBlock&&this.job.destroy()})}async open(){s(!this.opened,"CPUMiner is already open."),this.opened=!0}async close(){return s(this.opened,"CPUMiner is not open."),this.opened=!1,this.stop()}start(){s(!this.running,"Miner is already running."),this._start().catch(()=>{})}async _start(){for(s(!this.running,"Miner is already running."),this.running=!0,this.stopping=!1;;){this.job=null;try{this.job=await this.createJob()}catch(t){if(this.stopping)break;this.emit("error",t);break}if(this.stopping)break;let e,i;try{e=await this.mineAsync(this.job)}catch(t){if(this.stopping)break;this.emit("error",t);break}if(this.stopping)break;if(e){try{i=await this.chain.add(e)}catch(t){if(this.stopping)break;if("VerifyError"===t.type){this.logger.warning("Mined an invalid block!"),this.logger.error(t);continue}this.emit("error",t);break}if(i){if(this.stopping)break;this.logger.info("Found block: %d (%s).",i.height,i.rhash()),this.logger.debug("Raw: %s",e.toRaw().toString("hex")),this.emit("block",e,i)}else this.logger.warning("Mined a bad-prevblk (race condition?)")}}const t=this.stopJob;t&&(this.stopJob=null,t.resolve())}async stop(){const t=await this.locker.lock();try{return await this._stop()}finally{t()}}async _stop(){this.running&&(s(this.running,"Miner is not running."),s(!this.stopping,"Miner is already stopping."),this.stopping=!0,this.job&&(this.job.destroy(),this.job=null),await this.wait(),this.running=!1,this.stopping=!1,this.job=null)}wait(){return new Promise((t,e)=>{s(!this.stopJob),this.stopJob={resolve:t,reject:e}})}async createJob(t,e){const i=await this.miner.createBlock(t,e);return new l(this,i)}async mineBlock(t,e){const i=await this.createJob(t,e);return await this.mineAsync(i)}notifyEntry(){this.running&&this.job&&o.now()-this.job.start>10&&(this.job.destroy(),this.job=null)}findNonce(t){const e=t.getHeader(),i=t.attempt.target,s=h.INTERVAL;let r,n=0,o=s;for(;o<=4294967295&&-1===(r=a(e,i,n,o));)this.sendStatus(t,o),n+=s,o+=s;return r}async findNonceAsync(t){if(!this.workers)return this.findNonce(t);const e=t.getHeader(),i=t.attempt.target,s=h.INTERVAL;let r,n=0,o=s;for(;o<=4294967295&&-1===(r=await this.workers.mine(e,i,n,o));){if(t.destroyed)return r;this.sendStatus(t,o),n+=s,o+=s}return r}mine(t){let e;for(t.start=o.now();-1===(e=this.findNonce(t));)t.updateNonce(),this.sendStatus(t,0);return t.commit(e)}async mineAsync(t){let e;for(t.start=o.now();-1===(e=await this.findNonceAsync(t));){if(t.destroyed)return null;t.updateNonce(),this.sendStatus(t,0)}return t.commit(e)}sendStatus(t,e){const i=t.attempt,s=o.revHex(i.prevBlock),r=t.getHashes(e),n=t.getRate(e);this.logger.info("Status: hashrate=%dkhs hashes=%d target=%d height=%d tip=%s",Math.floor(n/1e3),r,i.bits,i.height,s),this.emit("status",t,r,n)}}h.INTERVAL=2863311;class l{constructor(t,e){this.miner=t,this.attempt=e,this.destroyed=!1,this.committed=!1,this.start=o.now(),this.nonce1=0,this.nonce2=0,this.refresh()}getHeader(){const t=this.attempt,e=this.nonce1,i=this.nonce2,s=t.time,r=t.getRoot(e,i);return t.getHeader(r,s,0)}commit(t){const e=this.attempt,i=this.nonce1,r=this.nonce2,n=e.time;s(!this.committed,"Job already committed."),this.committed=!0;const o=e.getProof(i,r,n,t);return e.commit(o)}mine(){return this.miner.mine(this)}mineAsync(){return this.miner.mineAsync(this)}refresh(){return this.attempt.refresh()}updateNonce(){4294967296==++this.nonce2&&(this.nonce2=0,this.nonce1++)}destroy(){s(!this.destroyed,"Job already destroyed."),this.destroyed=!0}getHashes(t){return 4294967295*(4294967296*this.nonce1+this.nonce2)+t}getRate(t){const e=this.getHashes(t),i=o.now()-this.start;return Math.floor(e/Math.max(1,i))}addTX(t,e){return this.attempt.addTX(t,e)}pushTX(t,e){return this.attempt.pushTX(t,e)}}t.exports=h},function(t,e,i){"use strict";(function(t){
/*!
 * common.js - mining utils
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(3),n=i(52),o=e;o.swap32=function(t){for(let e=0;e<t.length;e+=4){const i=t.readUInt32LE(e,!0);t.writeUInt32BE(i,e,!0)}return t},o.swap32hex=function(e){const i=t.from(e,"hex");return o.swap32(i).toString("hex")},o.rcmp=function(t,e){s(t.length===e.length);for(let i=t.length-1;i>=0;i--){if(t[i]<e[i])return-1;if(t[i]>e[i])return 1}return 0},o.double256=function(t){let e,i,r=0;return s(32===t.length),r+=6.277101735386681e57*(4294967296*(e=t.readUInt32LE(28,!0))+(i=t.readUInt32LE(24,!0))),r+=3.402823669209385e38*(4294967296*(e=t.readUInt32LE(20,!0))+(i=t.readUInt32LE(16,!0))),(r+=0x10000000000000000*(4294967296*(e=t.readUInt32LE(12,!0))+(i=t.readUInt32LE(8,!0))))+1*(4294967296*(e=t.readUInt32LE(4,!0))+t.readUInt32LE(0,!0))},o.getDifficulty=function(t){const e=2.695953529101131e67,i=o.double256(t);return 0===i?e:Math.floor(e/i)},o.getTarget=function(e){const i=r.fromCompact(e);if(i.isNeg())throw new Error("Target is negative.");if(i.isZero())throw new Error("Target is zero.");return i.toArrayLike(t,"le",32)},o.getBits=function(t){const e=new n(t,"le");if(e.isZero())throw new Error("Target is zero.");return r.toCompact(e)}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";t.exports=i(295)},function(t,e,i){"use strict";
/*!
 * layout.js - mempool data layout for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(33),r={V:s.key("V"),v:s.key("v"),R:s.key("R"),F:s.key("F"),e:s.key("e",["hash256"])};t.exports=r},function(t,e,i){"use strict";
/*!
 * wordlist.js - wordlists for bcoin
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(316);e.get=function(t){switch(t){case"simplified chinese":return s.chinese.simplified;case"traditional chinese":return s.chinese.traditional;case"english":return s.english;case"french":return s.french;case"italian":return s.italian;case"japanese":return s.japanese;case"spanish":return s.spanish;default:throw new Error(`Unknown language: ${t}.`)}}},function(t,e,i){"use strict";const s=i(0),r=i(12),n=i(19);function o(t){try{t=(t=decodeURIComponent(t)).replace(/\+/g," ")}catch(t){throw new Error("Malformed URI.")}if(-1!==t.indexOf("\0"))throw new Error("Malformed URI.");return t}function a(t){return(t=encodeURIComponent(t)).replace(/%20/g,"+")}t.exports=class{constructor(t){this.address=new r,this.amount=-1,this.label=null,this.message=null,this.request=null,t&&this.fromOptions(t)}fromOptions(t){return"string"==typeof t?this.fromString(t):(t.address&&this.address.fromOptions(t.address),null!=t.amount&&(s(Number.isSafeInteger(t.amount)&&t.amount>=0,"Amount must be a uint64."),this.amount=t.amount),t.label&&(s("string"==typeof t.label,"Label must be a string."),this.label=t.label),t.message&&(s("string"==typeof t.message,"Message must be a string."),this.message=t.message),t.request&&(s("string"==typeof t.request,"Request must be a string."),this.request=t.request),this)}static fromOptions(t){return(new this).fromOptions(t)}fromString(t,e){s("string"==typeof t),s(t.length>8,"Not a bitcoin URI.");const i=t.substring(0,8);s("bitcoin:"===i,"Not a bitcoin URI.");const r=(t=t.substring(8)).indexOf("?");let a,h;if(-1===r?a=t:(a=t.substring(0,r),h=t.substring(r+1)),this.address.fromString(a,e),!h)return this;const l=function(t){const e=h.split("&"),i=new class{constructor(){this.amount=null,this.label=null,this.message=null,this.r=null}};let r=0;for(const t of e){const e=t.indexOf("=");let n,a;if(-1===e?(n=t,a=""):(n=t.substring(0,e),a=t.substring(e+1)),0!==n.length){switch(s(r<4,"Too many keys in querystring."),n){case"amount":s(null==i.amount,"Duplicate key in querystring (amount)."),i.amount=o(a);break;case"label":s(null==i.label,"Duplicate key in querystring (label)."),i.label=o(a);break;case"message":s(null==i.message,"Duplicate key in querystring (message)."),i.message=o(a);break;case"r":s(null==i.r,"Duplicate key in querystring (r)."),i.r=o(a);break;default:s(!1,`Unknown querystring key: ${a}.`)}r+=1}else s(0===a.length,"Empty key in querystring.")}return i}();return l.amount&&(s(l.amount.length>0,"Value is empty."),s("-"!==l.amount[0],"Value is negative."),this.amount=n.value(l.amount)),l.label&&(this.label=l.label),l.message&&(this.message=l.message),l.r&&(this.request=l.r),this}static fromString(t,e){return(new this).fromString(t,e)}toString(){let t="bitcoin:";t+=this.address.toString();const e=[];return-1!==this.amount&&e.push(`amount=${n.btc(this.amount)}`),this.label&&e.push(`label=${a(this.label)}`),this.message&&e.push(`message=${a(this.message)}`),this.request&&e.push(`r=${a(this.request)}`),e.length>0&&(t+="?"+e.join("&")),t}inspect(){return`<URI: ${this.toString()}>`}}},function(t,e,i){"use strict";
/*!
 * layout.js - blockchain data layout for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(33),r={V:s.key("V"),O:s.key("O"),R:s.key("R"),D:s.key("D"),e:s.key("e",["hash256"]),h:s.key("h",["hash256"]),H:s.key("H",["uint32"]),n:s.key("n",["hash256"]),p:s.key("p",["hash256"]),b:s.key("b",["hash256"]),c:s.key("c",["hash256","uint32"]),u:s.key("u",["hash256"]),v:s.key("v",["uint8","hash256"])};t.exports=r},function(t,e,i){"use strict";(function(e,s){
/*!
 * chaindb.js - blockchain data management for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),n=i(33),o=i(2),a=i(190),h=i(19),l=i(8),u=i(25),c=i(77),f=i(228),d=i(5),p=i(3),g=i(51),m=i(18),w=i(116),y=i(47);class b{constructor(t){this.network=l.primary,this.spv=!1,this.prune=!1,t&&this.fromOptions(t)}fromOptions(t){return this.network=l.get(t.network),null!=t.spv&&(r("boolean"==typeof t.spv),this.spv=t.spv),null!=t.prune&&(r("boolean"==typeof t.prune),this.prune=t.prune),this}static fromOptions(t){return(new b).fromOptions(t)}toRaw(){const t=o.write(12);let e=0;return this.spv&&(e|=1),this.prune&&(e|=2),t.writeU32(this.network.magic),t.writeU32(e),t.writeU32(0),t.render()}fromRaw(t){const e=o.read(t);this.network=l.fromMagic(e.readU32());const i=e.readU32();return this.spv=0!=(1&i),this.prune=0!=(2&i),this}static fromRaw(t){return(new b).fromRaw(t)}}class v{constructor(){this.tip=p.NULL_HASH,this.tx=0,this.coin=0,this.value=0,this.committed=!1}rhash(){return d.revHex(this.tip)}clone(){const t=new v;return t.tip=this.tip,t.tx=this.tx,t.coin=this.coin,t.value=this.value,t}connect(t){this.tx+=t.txs.length}disconnect(t){this.tx-=t.txs.length}add(t){this.coin+=1,this.value+=t.value}spend(t){this.coin-=1,this.value-=t.value}commit(t){return"string"!=typeof t&&(t=t.toString("hex")),this.tip=t,this.committed=!0,this.toRaw()}toRaw(){const t=o.write(56);return t.writeHash(this.tip),t.writeU64(this.tx),t.writeU64(this.coin),t.writeU64(this.value),t.render()}static fromRaw(t){const e=new v,i=o.read(t);return e.tip=i.readHash("hex"),e.tx=i.readU64(),e.coin=i.readU64(),e.value=i.readU64(),e}}class k{constructor(t){this.network=t,this.bits=[],this.updates=[],this.init()}init(){for(let t=0;t<32;t++)this.bits.push(null);for(const{bit:t}of this.network.deploys)r(!this.bits[t]),this.bits[t]=new Map}set(t,e,i){const s=this.bits[t];r(s),s.get(e.hash)!==i&&(s.set(e.hash,i),this.updates.push(new E(t,e.hash,i)))}get(t,e){const i=this.bits[t];r(i);const s=i.get(e.hash);return null==s?-1:s}commit(){this.updates.length=0}drop(){for(const{bit:t,hash:e}of this.updates){const i=this.bits[t];r(i),i.delete(e)}this.updates.length=0}insert(t,e,i){const s=this.bits[t];r(s),s.set(e,i)}}class E{constructor(t,e,i){this.bit=t,this.hash=e,this.state=i}toRaw(){const t=s.allocUnsafe(1);return t[0]=this.state,t}}function R(t){return t.length+80}t.exports=class{constructor(t){this.options=t,this.network=this.options.network,this.logger=this.options.logger.context("chaindb"),this.db=n.create(this.options),this.stateCache=new k(this.network),this.state=new v,this.pending=null,this.current=null,this.coinCache=new a(this.options.coinCache,R),this.cacheHash=new a(this.options.entryCache),this.cacheHeight=new a(this.options.entryCache)}async open(){this.logger.info("Opening ChainDB..."),await this.db.open(),await this.db.verify(f.V.build(),"chain",133);const t=await this.getState();t?(await this.verifyFlags(t),await this.verifyDeployments(),this.stateCache=await this.getStateCache(),this.state=t,this.logger.info("ChainDB successfully loaded.")):(await this.saveFlags(),await this.saveDeployments(),await this.saveGenesis(),this.logger.info("ChainDB successfully initialized.")),this.logger.info("Chain State: hash=%s tx=%d coin=%d value=%s.",this.state.rhash(),this.state.tx,this.state.coin,h.btc(this.state.value))}close(){return this.db.close()}start(){return r(!this.current),r(!this.pending),this.current=this.db.batch(),this.pending=this.state.clone(),this.coinCache.start(),this.cacheHash.start(),this.cacheHeight.start(),this.current}put(t,e){r(this.current),this.current.put(t,e)}del(t){r(this.current),this.current.del(t)}batch(){return r(this.current),this.current}drop(){const t=this.current;r(this.current),r(this.pending),this.current=null,this.pending=null,this.coinCache.drop(),this.cacheHash.drop(),this.cacheHeight.drop(),this.stateCache.drop(),t.clear()}async commit(){r(this.current),r(this.pending);try{await this.current.write()}catch(t){throw this.current=null,this.pending=null,this.coinCache.drop(),this.cacheHash.drop(),this.cacheHeight.drop(),t}this.pending.committed&&(this.state=this.pending),this.current=null,this.pending=null,this.coinCache.commit(),this.cacheHash.commit(),this.cacheHeight.commit(),this.stateCache.commit()}hasCache(t){return"number"==typeof t?this.cacheHeight.has(t):(r("string"==typeof t),this.cacheHash.has(t))}getCache(t){return"number"==typeof t?this.cacheHeight.get(t):(r("string"==typeof t),this.cacheHash.get(t))}async getHeight(t){if("number"==typeof t)return t;if(r("string"==typeof t),t===p.NULL_HASH)return-1;const e=this.cacheHash.get(t);if(e)return e.height;const i=await this.db.get(f.h.build(t));return i?i.readUInt32LE(0,!0):-1}async getHash(t){if("string"==typeof t)return t;if(r("number"==typeof t),t<0)return null;const e=this.cacheHeight.get(t);if(e)return e.hash;const i=await this.db.get(f.H.build(t));return i?i.toString("hex"):null}async getEntryByHeight(t){if(r("number"==typeof t),t<0)return null;const e=this.cacheHeight.get(t);if(e)return e;const i=await this.db.get(f.H.build(t));if(!i)return null;const s=i.toString("hex"),n=this.state,o=await this.getEntryByHash(s);return o?(this.state===n&&this.cacheHeight.set(o.height,o),o):null}async getEntryByHash(t){if(r("string"==typeof t),t===p.NULL_HASH)return null;const e=this.cacheHash.get(t);if(e)return e;const i=await this.db.get(f.e.build(t));if(!i)return null;const s=w.fromRaw(i);return this.cacheHash.set(s.hash,s),s}getEntry(t){return"number"==typeof t?this.getEntryByHeight(t):this.getEntryByHash(t)}async hasEntry(t){return-1!==await this.getHeight(t)}async getAncestor(t,e){if(e<0)return null;if(r(e>=0),r(e<=t.height),await this.isMainChain(t))return this.getEntryByHeight(e);for(;t.height!==e;){t=this.getPrevCache(t)||await this.getPrevious(t),r(t)}return t}getPrevious(t){return this.getEntryByHash(t.prevBlock)}getPrevCache(t){return this.cacheHash.get(t.prevBlock)||null}async getNext(t){const e=await this.getNextHash(t.hash);return e?this.getEntryByHash(e):null}async getNextEntry(t){const e=await this.getEntryByHeight(t.height+1);return e?e.prevBlock!==t.hash?null:e:null}getTip(){return this.getEntryByHash(this.state.tip)}async getState(){const t=await this.db.get(f.R.build());return t?v.fromRaw(t):null}async saveGenesis(){const t=this.network.genesisBlock,e=g.fromRaw(t,"hex"),i=w.fromBlock(e);return this.logger.info("Writing genesis block to ChainDB."),this.save(i,e,new u)}async getFlags(){const t=await this.db.get(f.O.build());return t?b.fromRaw(t):null}async verifyFlags(t){const e=this.options,i=await this.getFlags();let s=!1;if(!i)throw new Error("No flags found.");if(e.network!==i.network)throw new Error("Network mismatch for chain.");if(e.spv&&!i.spv)throw new Error("Cannot retroactively enable SPV.");if(!e.spv&&i.spv)throw new Error("Cannot retroactively disable SPV.");if(e.prune&&!i.prune){if(!e.forceFlags)throw new Error("Cannot retroactively prune.");s=!0}if(!e.prune&&i.prune)throw new Error("Cannot retroactively unprune.");s&&(await this.logger.info("Retroactively pruning chain."),await this.prune(t.tip))}async getStateCache(){const t=new k(this.network),e=await this.db.range({gte:f.v.min(),lte:f.v.max(),values:!0});for(const i of e){const[e,s]=f.v.parse(i.key),r=i.value[0];t.insert(e,s,r)}return t}saveDeployments(){const t=this.db.batch();return this.writeDeployments(t),t.write()}writeDeployments(t){const e=o.write(1+17*this.network.deploys.length);e.writeU8(this.network.deploys.length);for(const t of this.network.deploys)e.writeU8(t.bit),e.writeU32(t.startTime),e.writeU32(t.timeout),e.writeI32(t.threshold),e.writeI32(t.window);t.put(f.D.build(),e.render())}async checkDeployments(){const t=await this.db.get(f.D.build());r(t,"No deployment table found.");const e=o.read(t),i=e.readU8(),s=[];for(let t=0;t<i;t++){const t=e.readU8(),i=e.readU32(),r=e.readU32(),n=e.readI32(),o=e.readI32(),a=this.network.byBit(t);a&&i===a.startTime&&r===a.timeout&&n===a.threshold&&o===a.window||s.push(t)}return s}async verifyDeployments(){let t;try{t=await this.checkDeployments()}catch(e){if("EncodingError"!==e.type)throw e;t=[];for(let e=0;e<32;e++)t.push(e)}if(0===t.length)return!0;const e=this.db.batch();for(const i of t)this.logger.warning("Versionbit deployment params modified."),this.logger.warning("Invalidating cache for bit %d.",i),await this.invalidateCache(i,e);return this.writeDeployments(e),await e.write(),!1}async invalidateCache(t,e){const i=await this.db.keys({gte:f.v.min(t),lte:f.v.max(t)});for(const t of i)e.del(t)}async prune(){const t=this.options,e=this.network.block.keepBlocks,i=this.network.block.pruneAfterHeight;if((await this.getFlags()).prune)throw new Error("Chain is already pruned.");const s=await this.getHeight(this.state.tip);if(s<=i+e)return!1;const n=i+1,o=s-e,a=this.db.batch();for(let t=n;t<=o;t++){const e=await this.getHash(t);if(!e)throw new Error(`Cannot find hash for ${t}.`);a.del(f.b.build(e)),a.del(f.u.build(e))}try{t.prune=!0;const i=b.fromOptions(t);r(i.prune),a.put(f.O.build(),i.toRaw()),await a.write()}catch(e){throw t.prune=!1,e}return await this.db.compactRange(),!0}async getNextHash(t){const e=await this.db.get(f.n.build(t));return e?e.toString("hex"):null}async isMainHash(t){if(r("string"==typeof t),t===p.NULL_HASH)return!1;if(t===this.network.genesis.hash)return!0;if(t===this.state.tip)return!0;const e=this.cacheHash.get(t);if(e){const i=this.cacheHeight.get(e.height);if(i)return i.hash===t}return!!await this.getNextHash(t)}async isMainChain(t){if(t.isGenesis())return!0;if(t.hash===this.state.tip)return!0;const e=this.getCache(t.height);return e?t.hash===e.hash:!!await this.getNextHash(t.hash)}async getHashes(t=-1,e=-1){return-1===t&&(t=0),-1===e&&(e>>>=0),r(t>>>0===t),r(e>>>0===e),this.db.values({gte:f.H.min(t),lte:f.H.max(e),parse:t=>t.toString("hex")})}async getEntries(){return this.db.values({gte:f.e.min(),lte:f.e.max(),parse:t=>w.fromRaw(t)})}async getTips(){return this.db.keys({gte:f.p.min(),lte:f.p.max(),parse:t=>f.p.parse(t)})}async readCoin(t){if(this.options.spv)return null;const{hash:e,index:i}=t,s=t.toKey(),r=this.state,n=this.coinCache.get(s);if(n)return y.fromRaw(n);const o=await this.db.get(f.c.build(e,i));return o?(r===this.state&&this.coinCache.set(s,o),y.fromRaw(o)):null}async getCoin(t,e){const i=new m(t,e),s=await this.readCoin(i);return s?s.toCoin(i):null}async hasCoins(t){for(let e=0;e<t.outputs.length;e++){const i=f.c.build(t.hash(),e);if(await this.db.has(i))return!0}return!1}async getCoinView(t){const e=new u;for(const{prevout:i}of t.inputs){const t=await this.readCoin(i);t&&e.addEntry(i,t)}return e}async getSpentView(t){const e=t.tx,i=await this.getCoinView(e);for(const{prevout:s}of e.inputs){if(i.hasEntry(s))continue;const{hash:e,index:r}=s,{tx:n,height:o}=t;r<n.outputs.length&&i.addIndex(n,r,o)}return i}async getUndoCoins(t){const e=await this.db.get(f.u.build(t));return e?c.fromRaw(e):new c}async getBlock(t){const e=await this.getRawBlock(t);return e?g.fromRaw(e):null}async getRawBlock(t){if(this.options.spv)return null;const e=await this.getHash(t);return e?this.db.get(f.b.build(e)):null}async getBlockView(t){const e=new u,i=await this.getUndoCoins(t.hash());if(i.isEmpty())return e;for(let s=t.txs.length-1;s>0;s--){const r=t.txs[s];for(let t=r.inputs.length-1;t>=0;t--){const s=r.inputs[t];i.apply(e,s.prevout)}}return r(i.isEmpty(),"Undo coins data inconsistency."),e}async getMeta(t){return e.emitWarning("deprecated, use node.txindex.getMeta","DeprecationWarning"),null}async getTX(t){return e.emitWarning("deprecated, use node.txindex.getTX","DeprecationWarning"),null}async hasTX(t){return e.emitWarning("deprecated, use node.txindex.hasTX","DeprecationWarning"),!1}async getCoinsByAddress(t){return e.emitWarning("deprecated, use node.addrindex.getTX","DeprecationWarning"),[]}async getHashesByAddress(t){return e.emitWarning("deprecated, use node.addrindex.getTX","DeprecationWarning"),[]}async getTXByAddress(t){return e.emitWarning("deprecated, use node.addrindex.getTX","DeprecationWarning"),[]}async getMetaByAddress(t){return e.emitWarning("deprecated, use node.addrindex.getMetaByAddress","DeprecationWarning"),[]}async scan(t,e,i){null==t&&(t=this.network.genesis.hash),"number"==typeof t?this.logger.info("Scanning from height %d.",t):this.logger.info("Scanning from block %s.",d.revHex(t));let s=await this.getEntry(t);if(!s)return;if(!await this.isMainChain(s))throw new Error("Cannot rescan an alternate chain.");let r=0;for(;s;){const t=await this.getBlock(s.hash),n=[];if(r+=1,t){this.logger.info("Scanning block %s (%d).",s.rhash(),s.height);for(let i=0;i<t.txs.length;i++){const s=t.txs[i];let r=!1;for(let t=0;t<s.outputs.length;t++){const i=s.outputs[t].getHash();if(i&&e.test(i)){const i=m.fromTX(s,t);e.add(i.toRaw()),r=!0}}if(r)n.push(s);else if(0!==i)for(const{prevout:t}of s.inputs)if(e.test(t.toRaw())){n.push(s);break}}await i(s,n),s=await this.getNext(s)}else{if(!this.options.spv&&!this.options.prune)throw new Error("Block not found.");await i(s,n),s=await this.getNext(s)}}this.logger.info("Finished scanning %d blocks.",r)}async save(t,e,i){this.start();try{await this._save(t,e,i)}catch(t){throw this.drop(),t}await this.commit()}async _save(t,e,i){const r=e.hash();this.put(f.h.build(r),function(t){const e=s.allocUnsafe(4);return e.writeUInt32LE(t,0,!0),e}(t.height)),this.put(f.e.build(r),t.toRaw()),this.cacheHash.push(t.hash,t),this.del(f.p.build(t.prevBlock)),this.put(f.p.build(r),null),this.saveUpdates(),i?(t.isGenesis()||this.put(f.n.build(t.prevBlock),r),this.put(f.H.build(t.height),r),this.cacheHeight.push(t.height,t),await this.saveBlock(t,e,i),this.put(f.R.build(),this.pending.commit(r))):await this.saveBlock(t,e)}async reconnect(t,e,i){this.start();try{await this._reconnect(t,e,i)}catch(t){throw this.drop(),t}await this.commit()}async _reconnect(t,e,i){const s=e.hash();r(!t.isGenesis()),this.put(f.n.build(t.prevBlock),s),this.put(f.H.build(t.height),s),this.cacheHeight.push(t.height,t),this.cacheHash.push(t.hash,t),this.saveUpdates(),await this.connectBlock(t,e,i),this.put(f.R.build(),this.pending.commit(s))}async disconnect(t,e){let i;this.start();try{i=await this._disconnect(t,e)}catch(t){throw this.drop(),t}return await this.commit(),i}async _disconnect(t,e){this.del(f.n.build(t.prevBlock)),this.del(f.H.build(t.height)),this.cacheHeight.unpush(t.height),this.saveUpdates();const i=await this.disconnectBlock(t,e);return this.put(f.R.build(),this.pending.commit(t.prevBlock)),i}saveUpdates(){const t=this.stateCache.updates;if(0!==t.length){this.logger.info("Saving %d state cache updates.",t.length);for(const e of t){const{bit:t,hash:i}=e;this.put(f.v.build(t,i),e.toRaw())}}}async reset(t){const e=await this.getEntry(t);if(!e)throw new Error("Block not found.");if(!await this.isMainChain(e))throw new Error("Cannot reset on alternate chain.");if(this.options.prune)throw new Error("Cannot reset when pruned.");await this.removeChains();let i=await this.getTip();for(r(i),this.logger.debug("Resetting main chain to: %s",e.rhash());;){if(this.start(),i.hash===e.hash){this.put(f.R.build(),this.pending.commit(i.hash)),await this.commit();break}r(!i.isGenesis()),this.del(f.p.build(i.hash)),this.put(f.p.build(i.prevBlock),null),this.del(f.H.build(i.height)),this.del(f.h.build(i.hash)),this.del(f.e.build(i.hash)),this.del(f.n.build(i.prevBlock));try{await this.removeBlock(i)}catch(t){throw this.drop(),t}this.put(f.R.build(),this.pending.commit(i.prevBlock)),await this.commit(),this.cacheHeight.remove(i.height),this.cacheHash.remove(i.hash),i=await this.getPrevious(i),r(i)}return i}async removeChains(){const t=await this.getTips();this.start();try{for(const e of t)await this._removeChain(e)}catch(t){throw this.drop(),t}await this.commit()}async _removeChain(t){let e=await this.getEntryByHash(t);if(!e)throw new Error("Alternate chain tip not found.");for(this.logger.debug("Removing alternate chain: %s.",e.rhash());!await this.isMainChain(e);)r(!e.isGenesis()),this.del(f.p.build(e.hash)),this.del(f.h.build(e.hash)),this.del(f.e.build(e.hash)),this.del(f.b.build(e.hash)),this.cacheHash.unpush(e.hash),e=await this.getPrevious(e),r(e)}async saveBlock(t,e,i){const s=e.hash();this.options.spv||(this.put(f.b.build(s),e.toRaw()),i&&await this.connectBlock(t,e,i))}async removeBlock(t){if(this.options.spv)return new u;const e=await this.getBlock(t.hash);if(!e)throw new Error("Block not found.");return this.del(f.b.build(e.hash())),this.disconnectBlock(t,e)}saveView(t){for(const[e,i]of t.map)for(const[t,s]of i.outputs){if(s.spent){this.del(f.c.build(e,t)),this.coinCache.unpush(e+t);continue}const i=s.toRaw();this.put(f.c.build(e,t),i),this.coinCache.push(e+t,i)}}async connectBlock(t,e,i){if(this.options.spv)return;const s=e.hash();if(this.pending.connect(e),!t.isGenesis()){for(let t=0;t<e.txs.length;t++){const s=e.txs[t];if(t>0)for(const{prevout:t}of s.inputs)this.pending.spend(i.getOutput(t));for(const t of s.outputs)t.script.isUnspendable()||this.pending.add(t)}return this.saveView(i),i.undo.isEmpty()||this.put(f.u.build(s),i.undo.commit()),this.pruneBlock(t)}}async disconnectBlock(t,e){const i=new u;if(this.options.spv)return i;const s=e.hash(),n=await this.getUndoCoins(s);this.pending.disconnect(e);for(let s=e.txs.length-1;s>=0;s--){const r=e.txs[s];if(s>0)for(let t=r.inputs.length-1;t>=0;t--){const{prevout:e}=r.inputs[t];n.apply(i,e),this.pending.add(i.getOutput(e))}i.removeTX(r,t.height);for(let t=r.outputs.length-1;t>=0;t--){const e=r.outputs[t];e.script.isUnspendable()||this.pending.spend(e)}}return r(n.isEmpty(),"Undo coins data inconsistency."),this.saveView(i),this.del(f.u.build(s)),i}async pruneBlock(t){if(this.options.spv)return;if(!this.options.prune)return;const e=t.height-this.network.block.keepBlocks;if(e<=this.network.block.pruneAfterHeight)return;const i=await this.getHash(e);i&&(this.del(f.b.build(i)),this.del(f.u.build(i)))}saveFlags(){const t=b.fromOptions(this.options),e=this.db.batch();return e.put(f.O.build(),t.toRaw()),e.write()}}}).call(this,i(15),i(1).Buffer)},,,,function(t,e,i){"use strict";
/*!
 * workers/index.js - workers for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.Framer=i(103),e.jobs=i(106),e.packets=i(49),e.Parser=i(104),e.WorkerPool=i(131)},function(t,e,i){"use strict";
/*!
 * server.js - wallet server for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(66),n=i(100),o=i(124),a=i(207),h=i(121);t.exports=class extends r{constructor(t){super("bcash","wallet.conf","wallet.log",t),this.opened=!1,this.client=new a({network:this.network,url:this.config.str("node-url"),host:this.config.str("node-host"),port:this.config.str("node-port",this.network.rpcPort),ssl:this.config.str("node-ssl"),apiKey:this.config.str("node-api-key")}),this.wdb=new n({network:this.network,logger:this.logger,workers:this.workers,client:this.client,prefix:this.config.prefix,memory:this.config.bool("memory"),maxFiles:this.config.uint("max-files"),cacheSize:this.config.mb("cache-size"),checkpoints:this.config.bool("checkpoints"),wipeNoReally:this.config.bool("wipe-no-really"),spv:this.config.bool("spv")}),this.rpc=new h(this),this.http=new o({network:this.network,logger:this.logger,node:this,prefix:this.config.prefix,ssl:this.config.bool("ssl"),keyFile:this.config.path("ssl-key"),certFile:this.config.path("ssl-cert"),host:this.config.str("http-host"),port:this.config.uint("http-port"),apiKey:this.config.str("api-key"),walletAuth:this.config.bool("wallet-auth"),noAuth:this.config.bool("no-auth"),cors:this.config.bool("cors"),adminToken:this.config.str("admin-token")}),this.init()}init(){this.wdb.on("error",t=>this.error(t)),this.http.on("error",t=>this.error(t)),this.loadPlugins()}async open(){s(!this.opened,"WalletNode is already open."),this.opened=!0,await this.handlePreopen(),await this.wdb.open(),this.rpc.wallet=this.wdb.primary,await this.openPlugins(),await this.http.open(),await this.handleOpen(),this.logger.info("Wallet node is loaded.")}async close(){s(this.opened,"WalletNode is not open."),this.opened=!1,await this.handlePreclose(),await this.http.close(),await this.closePlugins(),this.rpc.wallet=null,await this.wdb.close(),await this.handleClose()}}},function(t,e,i){"use strict";(function(e){
/*!
 * nullclient.js - node client for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(7);t.exports=class extends r{constructor(t){super(),this.wdb=t,this.network=t.network,this.opened=!1}async open(t){s(!this.opened,"NullClient is already open."),this.opened=!0,e(()=>this.emit("connect"))}async close(){s(this.opened,"NullClient is not open."),this.opened=!1,e(()=>this.emit("disconnect"))}bind(t,e){return this.on(t,e)}hook(t,e){return this.on(t,e)}async getTip(){const{hash:t,height:e,time:i}=this.network.genesis;return{hash:t,height:e,time:i}}async getEntry(t){return{hash:t,height:0,time:0}}async send(t){this.wdb.emit("send",t)}async setFilter(t){this.wdb.emit("set filter",t)}async addFilter(t){this.wdb.emit("add filter",t)}async resetFilter(){this.wdb.emit("reset filter")}async estimateFee(t){return this.network.feeRate}async getHashes(t=-1,e=-1){return[this.network.genesis.hash]}async rescan(t){}}}).call(this,i(26).setImmediate)},function(t,e,i){"use strict";
/*!
 * plugin.js - wallet plugin for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(7),r=i(100),n=i(200),o=i(124),a=i(121),h=e;h.id="walletdb",h.init=function(t){return new class extends s{constructor(t){super(),this.config=t.config.filter("wallet"),this.config.open("wallet.conf"),this.network=t.network,this.logger=t.logger,this.client=new n(t),this.wdb=new r({network:this.network,logger:this.logger,workers:this.workers,client:this.client,prefix:this.config.prefix,memory:this.config.bool("memory",t.memory),maxFiles:this.config.uint("max-files"),cacheSize:this.config.mb("cache-size"),checkpoints:this.config.bool("checkpoints"),wipeNoReally:this.config.bool("wipe-no-really"),spv:t.spv}),this.rpc=new a(this),this.http=new o({network:this.network,logger:this.logger,node:this,ssl:this.config.bool("ssl"),keyFile:this.config.path("ssl-key"),certFile:this.config.path("ssl-cert"),host:this.config.str("http-host"),port:this.config.uint("http-port"),apiKey:this.config.str("api-key",t.config.str("api-key")),walletAuth:this.config.bool("wallet-auth"),noAuth:this.config.bool("no-auth"),cors:this.config.bool("cors"),adminToken:this.config.str("admin-token")}),this.init()}init(){this.wdb.on("error",t=>this.emit("error",t)),this.http.on("error",t=>this.emit("error",t))}async open(){await this.wdb.open(),this.rpc.wallet=this.wdb.primary,await this.http.open()}async close(){await this.http.close(),this.rpc.wallet=null,await this.wdb.close()}}(t)}},function(t,e,i){"use strict";(function(t){
/*!
 * aes.js - aes128/192/256 for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 *
 * Ported from:
 * https://github.com/openssl/openssl/blob/master/crypto/aes/aes_core.c
 * Entered into the public domain by Vincent Rijmen.
 */
const s=i(0),r=t.alloc(0),n=new Uint32Array([3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986]),o=new Uint32Array([2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766]),a=new Uint32Array([1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126]),h=new Uint32Array([1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436]),l=new Uint32Array([1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890]),u=new Uint32Array([1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935]),c=new Uint32Array([2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600]),f=new Uint32Array([4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480]),d=new Uint8Array([82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125]),p=new Uint32Array([16777216,33554432,67108864,134217728,268435456,536870912,1073741824,2147483648,452984832,905969664]);class g{constructor(t=256){s(t>>>0===t),this.bits=t,this.rounds=function(t){switch(t){case 128:return 10;case 192:return 12;case 256:return 14;default:throw new Error("Bad key size.")}}(t)}encryptKey(e){s(t.isBuffer(e),"Key must be a buffer"),s(e.length===this.bits/8,"Invalid key size.");const i=new Uint32Array(60);i[0]=y(e,0),i[1]=y(e,4),i[2]=y(e,8),i[3]=y(e,12);let r,l=0,u=0;if(128===this.bits){for(;;){const t=i[l+3];if(r=i[l],r^=4278190080&a[t>>>16&255],r^=16711680&h[t>>>8&255],r^=65280&n[t>>>0&255],r^=255&o[t>>>24&255],r^=p[u],i[l+4]=r,i[l+5]=i[l+1]^i[l+4],i[l+6]=i[l+2]^i[l+5],i[l+7]=i[l+3]^i[l+6],10===(u+=1))break;l+=4}return i}if(i[l+4]=y(e,16),i[l+5]=y(e,20),192===this.bits){for(;;){const t=i[l+5];if(r=i[l],r^=4278190080&a[t>>>16&255],r^=16711680&h[t>>>8&255],r^=65280&n[t>>>0&255],r^=255&o[t>>>24&255],r^=p[u],i[l+6]=r,i[l+7]=i[l+1]^i[l+6],i[l+8]=i[l+2]^i[l+7],i[l+9]=i[l+3]^i[l+8],8===(u+=1))break;i[l+10]=i[l+4]^i[l+9],i[l+11]=i[l+5]^i[l+10],l+=6}return i}if(i[l+6]=y(e,24),i[l+7]=y(e,28),256===this.bits){for(;;){let t=i[l+7];if(r=i[l],r^=4278190080&a[t>>>16&255],r^=16711680&h[t>>>8&255],r^=65280&n[t>>>0&255],r^=255&o[t>>>24&255],r^=p[u],i[l+8]=r,i[l+9]=i[l+1]^i[l+8],i[l+10]=i[l+2]^i[l+9],i[l+11]=i[l+3]^i[l+10],7===(u+=1))break;t=i[l+11],r=i[l+4],r^=4278190080&a[t>>>24&255],r^=16711680&h[t>>>16&255],r^=65280&n[t>>>8&255],r^=255&o[t>>>0&255],i[l+12]=r,i[l+13]=i[l+5]^i[l+12],i[l+14]=i[l+6]^i[l+13],i[l+15]=i[l+7]^i[l+14],l+=8}return i}throw new Error("Bad key size.")}decryptKey(t){const e=this.encryptKey(t);let i=0;for(let t=0,s=4*this.rounds;t<s;t+=4,s-=4){let r=e[i+t+0];e[i+t+0]=e[i+s+0],e[i+s+0]=r,r=e[i+t+1],e[i+t+1]=e[i+s+1],e[i+s+1]=r,r=e[i+t+2],e[i+t+2]=e[i+s+2],e[i+s+2]=r,r=e[i+t+3],e[i+t+3]=e[i+s+3],e[i+s+3]=r}for(let t=1;t<this.rounds;t++){let t,s,r,n;t=l[255&o[e[(i+=4)+0]>>>24&255]],t^=u[255&o[e[i+0]>>>16&255]],t^=c[255&o[e[i+0]>>>8&255]],t^=f[255&o[e[i+0]>>>0&255]],s=l[255&o[e[i+1]>>>24&255]],s^=u[255&o[e[i+1]>>>16&255]],s^=c[255&o[e[i+1]>>>8&255]],s^=f[255&o[e[i+1]>>>0&255]],r=l[255&o[e[i+2]>>>24&255]],r^=u[255&o[e[i+2]>>>16&255]],r^=c[255&o[e[i+2]>>>8&255]],r^=f[255&o[e[i+2]>>>0&255]],n=l[255&o[e[i+3]>>>24&255]],n^=u[255&o[e[i+3]>>>16&255]],n^=c[255&o[e[i+3]>>>8&255]],n^=f[255&o[e[i+3]>>>0&255]],e[i+0]=t,e[i+1]=s,e[i+2]=r,e[i+3]=n}return e}encryptBlock(t,e,i,s,r){let l,u,c,f,d=y(e,i+0)^t[0],p=y(e,i+4)^t[1],g=y(e,i+8)^t[2],m=y(e,i+12)^t[3],w=this.rounds>>>1,v=0;for(;l=n[d>>>24&255],l^=o[p>>>16&255],l^=a[g>>>8&255],l^=h[m>>>0&255],l^=t[v+4],u=n[p>>>24&255],u^=o[g>>>16&255],u^=a[m>>>8&255],u^=h[d>>>0&255],u^=t[v+5],c=n[g>>>24&255],c^=o[m>>>16&255],c^=a[d>>>8&255],c^=h[p>>>0&255],c^=t[v+6],f=n[m>>>24&255],f^=o[d>>>16&255],f^=a[p>>>8&255],f^=h[g>>>0&255],f^=t[v+7],v+=8,0!=(w-=1);)d=n[l>>>24&255],d^=o[u>>>16&255],d^=a[c>>>8&255],d^=h[f>>>0&255],d^=t[v+0],p=n[u>>>24&255],p^=o[c>>>16&255],p^=a[f>>>8&255],p^=h[l>>>0&255],p^=t[v+1],g=n[c>>>24&255],g^=o[f>>>16&255],g^=a[l>>>8&255],g^=h[u>>>0&255],g^=t[v+2],m=n[f>>>24&255],m^=o[l>>>16&255],m^=a[u>>>8&255],m^=h[c>>>0&255],m^=t[v+3];d=4278190080&a[l>>>24&255],d^=16711680&h[u>>>16&255],d^=65280&n[c>>>8&255],d^=255&o[f>>>0&255],d^=t[v+0],p=4278190080&a[u>>>24&255],p^=16711680&h[c>>>16&255],p^=65280&n[f>>>8&255],p^=255&o[l>>>0&255],p^=t[v+1],g=4278190080&a[c>>>24&255],g^=16711680&h[f>>>16&255],g^=65280&n[l>>>8&255],g^=255&o[u>>>0&255],g^=t[v+2],m=4278190080&a[f>>>24&255],m^=16711680&h[l>>>16&255],m^=65280&n[u>>>8&255],m^=255&o[c>>>0&255],m^=t[v+3],b(s,d,r+0),b(s,p,r+4),b(s,g,r+8),b(s,m,r+12)}decryptBlock(t,e,i,s,r){let n,o,a,h,p=y(e,i+0)^t[0],g=y(e,i+4)^t[1],m=y(e,i+8)^t[2],w=y(e,i+12)^t[3],v=this.rounds>>>1,k=0;for(;n=l[p>>>24&255],n^=u[w>>>16&255],n^=c[m>>>8&255],n^=f[g>>>0&255],n^=t[k+4],o=l[g>>>24&255],o^=u[p>>>16&255],o^=c[w>>>8&255],o^=f[m>>>0&255],o^=t[k+5],a=l[m>>>24&255],a^=u[g>>>16&255],a^=c[p>>>8&255],a^=f[w>>>0&255],a^=t[k+6],h=l[w>>>24&255],h^=u[m>>>16&255],h^=c[g>>>8&255],h^=f[p>>>0&255],h^=t[k+7],k+=8,0!=(v-=1);)p=l[n>>>24&255],p^=u[h>>>16&255],p^=c[a>>>8&255],p^=f[o>>>0&255],p^=t[k+0],g=l[o>>>24&255],g^=u[n>>>16&255],g^=c[h>>>8&255],g^=f[a>>>0&255],g^=t[k+1],m=l[a>>>24&255],m^=u[o>>>16&255],m^=c[n>>>8&255],m^=f[h>>>0&255],m^=t[k+2],w=l[h>>>24&255],w^=u[a>>>16&255],w^=c[o>>>8&255],w^=f[n>>>0&255],w^=t[k+3];p=d[n>>>24&255]<<24,p^=d[h>>>16&255]<<16,p^=d[a>>>8&255]<<8,p^=d[o>>>0&255]<<0,p^=t[k+0],g=d[o>>>24&255]<<24,g^=d[n>>>16&255]<<16,g^=d[h>>>8&255]<<8,g^=d[a>>>0&255]<<0,g^=t[k+1],m=d[a>>>24&255]<<24,m^=d[o>>>16&255]<<16,m^=d[n>>>8&255]<<8,m^=d[h>>>0&255]<<0,m^=t[k+2],w=d[h>>>24&255]<<24,w^=d[a>>>16&255]<<16,w^=d[o>>>8&255]<<8,w^=d[n>>>0&255]<<0,w^=t[k+3],b(s,p,r+0),b(s,g,r+4),b(s,m,r+8),b(s,w,r+12)}}class m extends g{constructor(e=256,i=!1){super(e),this.chain=i,this.key=null,this.prev=null,this.block=t.allocUnsafe(16),this.ppos=0,this.bpos=0}init(e,i){return s(t.isBuffer(e)),s(!this.chain||t.isBuffer(i)&&16===i.length),this.key=this.encryptKey(e),this.prev=i,this.ppos=0,this.bpos=0,this}update(e){s(t.isBuffer(e)),s(this.key,"Context already finalized.");let i=this.bpos,n=e.length,o=n-n%16,a=0,h=0;if(this.bpos=(this.bpos+n)%16,i>0){let t=16-i;if(t>n&&(t=n),e.copy(this.block,i,a,a+t),n-=t,a+=t,(i+=t)<16)return r;o+=16}const l=t.allocUnsafe(o);for(a&&(this.encrypt(this.block,0,l,h),h+=16);n>=16;)this.encrypt(e,a,l,h),h+=16,a+=16,n-=16;return n>0&&e.copy(this.block,0,a,a+n),l}final(){s(this.key,"Context already finalized.");const e=16-this.bpos,i=t.from(this.block);i.fill(e,this.bpos,16),this.encrypt(i,0,i,0);for(let t=0;t<60;t++)this.key[t]=0;for(let t=0;t<16;t++)this.block[t]=0;return this.key=null,this.prev=null,i}encrypt(t,e,i,s){if(this.chain){for(let r=0;r<16;r++)i[s+r]=t[e+r]^this.prev[this.ppos+r];this.encryptBlock(this.key,i,s,i,s),this.prev=i,this.ppos=s}else this.encryptBlock(this.key,t,e,i,s)}static encrypt(t,e,i,s=256,r=!1){const n=new m(s,r).init(e,i);return v(n.update(t),n.final())}}class w extends g{constructor(e=256,i=!1){super(e),this.chain=i,this.key=null,this.last=null,this.prev=null,this.block=t.allocUnsafe(16),this.ppos=0,this.bpos=0}init(e,i){return s(t.isBuffer(e)),s(!this.chain||t.isBuffer(i)&&16===i.length),this.key=this.decryptKey(e),this.prev=i,this.ppos=0,this.bpos=0,this}update(e){s(t.isBuffer(e)),s(this.key,"Context already finalized.");let i=this.bpos,n=e.length,o=n-n%16,a=0,h=0;if(this.bpos=(this.bpos+n)%16,i>0){let t=16-i;if(t>n&&(t=n),e.copy(this.block,i,a,a+t),n-=t,a+=t,(i+=t)<16)return r;o+=16}const l=t.allocUnsafe(o);for(a&&(this.decrypt(this.block,0,l,h),h+=16);n>=16;)this.decrypt(e,a,l,h),h+=16,a+=16,n-=16;return n>0&&e.copy(this.block,0,a,a+n),this.last=l,l.slice(0,o-16)}final(){s(this.key,"Context already finalized.");for(let t=0;t<16;t++)this.block[t]=0;for(let t=0;t<60;t++)this.key[t]=0;if(this.key=null,this.prev=null,!this.last)throw new Error("Bad decrypt (no data).");const t=this.last;if(this.last=null,0!==this.bpos)throw new Error("Bad decrypt (trailing bytes).");const e=t.length-16;let i=t.length;const r=t[i-1];if(0===r||r>16)throw new Error("Bad decrypt (padding).");for(let e=0;e<r;e++)if(t[i-=1]!==r)throw new Error("Bad decrypt (padding).");return t.slice(e,i)}decrypt(t,e,i,s){if(this.chain){this.decryptBlock(this.key,t,e,i,s);for(let t=0;t<16;t++)i[s+t]=i[s+t]^this.prev[this.ppos+t];this.prev=t,this.ppos=e}else this.decryptBlock(this.key,t,e,i,s)}static decrypt(t,e,i,s=256,r=!1){const n=new w(s,r).init(e,i);return v(n.update(t),n.final())}}function y(t,e){return t[e+0]<<24^t[e+1]<<16^t[e+2]<<8^t[e+3]}function b(t,e,i){t[i+0]=e>>>24&255,t[i+1]=e>>>16&255,t[i+2]=e>>>8&255,t[i+3]=255&e}function v(e,i){const s=t.allocUnsafe(e.length+i.length);return e.copy(s,0),i.copy(s,e.length),s}e.encipher=function(t,e,i){return m.encrypt(t,e,i,256,!0)},e.decipher=function(t,e,i){return w.decrypt(t,e,i,256,!0)}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * wallet.js - http wallet for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=i(7),{Client:n}=i(206);t.exports=class extends n{constructor(t){super(t),this.wallets=new Map}init(){this.bind("tx",(t,e)=>{this.dispatch(t,"tx",e)}),this.bind("confirmed",(t,e)=>{this.dispatch(t,"confirmed",e)}),this.bind("unconfirmed",(t,e)=>{this.dispatch(t,"unconfirmed",e)}),this.bind("conflict",(t,e)=>{this.dispatch(t,"conflict",e)}),this.bind("updated",(t,e)=>{this.dispatch(t,"updated",e)}),this.bind("address",(t,e)=>{this.dispatch(t,"address",e)}),this.bind("balance",(t,e)=>{this.dispatch(t,"balance",e)})}dispatch(t,e,...i){const s=this.wallets.get(t);s&&s.emit(e,...i)}async open(){await super.open(),this.init()}async close(){await super.close(),this.wallets=new Map}async auth(){await this.call("auth",this.password)}execute(t,e){return super.execute("/",t,e)}wallet(t,e){return new class extends r{constructor(t,e,i){super(),this.parent=t,this.client=t.clone(),this.client.token=i,this.id=e,this.token=i}async open(){await this.parent.join(this.id,this.token),this.parent.wallets.set(this.id,this)}async close(){await this.parent.leave(this.id),this.parent.wallets.delete(this.id)}getHistory(t){return this.client.getHistory(this.id,t)}getCoins(t){return this.client.getCoins(this.id,t)}getPending(t){return this.client.getPending(this.id,t)}getBalance(t){return this.client.getBalance(this.id,t)}getLast(t,e){return this.client.getLast(this.id,t,e)}getRange(t,e){return this.client.getRange(this.id,t,e)}getTX(t){return this.client.getTX(this.id,t)}getBlocks(){return this.client.getBlocks(this.id)}getBlock(t){return this.client.getBlock(this.id,t)}getCoin(t,e){return this.client.getCoin(this.id,t,e)}zap(t,e){return this.client.zap(this.id,t,e)}createTX(t){return this.client.createTX(this.id,t)}send(t){return this.client.send(this.id,t)}sign(t){return this.client.sign(this.id,t)}getInfo(){return this.client.getInfo(this.id)}getAccounts(){return this.client.getAccounts(this.id)}getMaster(){return this.client.getMaster(this.id)}getAccount(t){return this.client.getAccount(this.id,t)}createAccount(t,e){return this.client.createAccount(this.id,t,e)}createAddress(t){return this.client.createAddress(this.id,t)}createChange(t){return this.client.createChange(this.id,t)}createNested(t){return this.client.createNested(this.id,t)}setPassphrase(t,e){return this.client.setPassphrase(this.id,t,e)}async retoken(t){const e=await this.client.retoken(this.id,t);return s(e),s("string"==typeof e.token),this.token=e.token,e}importPrivate(t,e,i){return this.client.importPrivate(this.id,t,e,i)}importPublic(t,e){return this.client.importPublic(this.id,t,e)}importAddress(t,e){return this.client.importAddress(this.id,t,e)}lockCoin(t,e){return this.client.lockCoin(this.id,t,e)}unlockCoin(t,e){return this.client.unlockCoin(this.id,t,e)}getLocked(){return this.client.getLocked(this.id)}lock(){return this.client.lock(this.id)}unlock(t,e){return this.client.unlock(this.id,t,e)}getKey(t){return this.client.getKey(this.id,t)}getWIF(t,e){return this.client.getWIF(this.id,t,e)}addSharedKey(t,e){return this.client.addSharedKey(this.id,t,e)}removeSharedKey(t,e){return this.client.removeSharedKey(this.id,t,e)}resend(){return this.client.resendWallet(this.id)}}(this,t,e)}all(t){return this.call("join","*",t)}none(){return this.call("leave","*")}join(t,e){return this.call("join",t,e)}leave(t){return this.call("leave",t)}rescan(t){return this.post("/rescan",{height:t})}resend(){return this.post("/resend")}backup(t){return this.post("/backup",{path:t})}getWallets(){return this.get("/wallet")}createWallet(t,e){return this.put(`/wallet/${t}`,e)}getHistory(t,e){return this.get(`/wallet/${t}/tx/history`,{account:e})}getCoins(t,e){return this.get(`/wallet/${t}/coin`,{account:e})}getPending(t,e){return this.get(`/wallet/${t}/tx/unconfirmed`,{account:e})}getBalance(t,e){return this.get(`/wallet/${t}/balance`,{account:e})}getLast(t,e,i){return this.get(`/wallet/${t}/tx/last`,{account:e,limit:i})}getRange(t,e,i){return this.get(`/wallet/${t}/tx/range`,{account:e,start:i.start,end:i.end,limit:i.limit,reverse:i.reverse})}getTX(t,e){return this.get(`/wallet/${t}/tx/${e}`)}getBlocks(t){return this.get(`/wallet/${t}/block`)}getBlock(t,e){return this.get(`/wallet/${t}/block/${e}`)}getCoin(t,e,i){return this.get(`/wallet/${t}/coin/${e}/${i}`)}zap(t,e,i){return this.post(`/wallet/${t}/zap`,{account:e,age:i})}createTX(t,e){return this.post(`/wallet/${t}/create`,e)}send(t,e){return this.post(`/wallet/${t}/send`,e)}sign(t,e){return this.post(`/wallet/${t}/sign`,e)}getInfo(t){return this.get(`/wallet/${t}`)}getAccounts(t){return this.get(`/wallet/${t}/account`)}getMaster(t){return this.get(`/wallet/${t}/master`)}getAccount(t,e){return this.get(`/wallet/${t}/account/${e}`)}createAccount(t,e,i){return this.put(`/wallet/${t}/account/${e}`,i)}createAddress(t,e){return this.post(`/wallet/${t}/address`,{account:e})}createChange(t,e){return this.post(`/wallet/${t}/change`,{account:e})}createNested(t,e){return this.post(`/wallet/${t}/nested`,{account:e})}setPassphrase(t,e,i){return this.post(`/wallet/${t}/passphrase`,{passphrase:e,old:i})}retoken(t,e){return this.post(`/wallet/${t}/retoken`,{passphrase:e})}importPrivate(t,e,i,s){return this.post(`/wallet/${t}/import`,{account:e,privateKey:i,passphrase:s})}importPublic(t,e,i){return this.post(`/wallet/${t}/import`,{account:e,publicKey:i})}importAddress(t,e,i){return this.post(`/wallet/${t}/import`,{account:e,address:i})}lockCoin(t,e,i){return this.put(`/wallet/${t}/locked/${e}/${i}`)}unlockCoin(t,e,i){return this.del(`/wallet/${t}/locked/${e}/${i}`)}getLocked(t){return this.get(`/wallet/${t}/locked`)}lock(t){return this.post(`/wallet/${t}/lock`)}unlock(t,e,i){return this.post(`/wallet/${t}/unlock`,{passphrase:e,timeout:i})}getKey(t,e){return this.get(`/wallet/${t}/key/${e}`)}getWIF(t,e,i){return this.get(`/wallet/${t}/wif/${e}`,{passphrase:i})}addSharedKey(t,e,i){return this.put(`/wallet/${t}/shared-key`,{account:e,accountKey:i})}removeSharedKey(t,e,i){return this.del(`/wallet/${t}/shared-key`,{account:e,accountKey:i})}resendWallet(t){return this.post(`/wallet/${t}/resend`)}}},function(t,e,i){"use strict";
/*!
 * mime.js - mime types for brq
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/brq
 */const s=i(0),r={atom:["application/atom+xml",!0],bin:["application/octet-stream",!1],bmp:["image/bmp",!1],css:["text/css",!0],dat:["application/octet-stream",!1],form:["application/x-www-form-urlencoded",!0],gif:["image/gif",!1],gz:["application/x-gzip",!1],htc:["text/x-component",!0],html:["text/html",!0],ico:["image/x-icon",!1],jpg:["image/jpeg",!1],jpeg:["image/jpeg",!1],js:["application/javascript",!0],json:["application/json",!0],log:["text/plain",!0],manifest:["text/cache-manifest",!1],mathml:["application/mathml+xml",!0],md:["text/plain",!0],mkv:["video/x-matroska",!1],mml:["application/mathml+xml",!0],mp3:["audio/mpeg",!1],mp4:["video/mp4",!1],mpeg:["video/mpeg",!1],mpg:["video/mpeg",!1],oga:["audio/ogg",!1],ogg:["application/ogg",!1],ogv:["video/ogg",!1],otf:["font/otf",!1],pdf:["application/pdf",!1],png:["image/png",!1],rdf:["application/rdf+xml",!0],rss:["application/rss+xml",!0],svg:["image/svg+xml",!1],swf:["application/x-shockwave-flash",!1],tar:["application/x-tar",!1],torrent:["application/x-bittorrent",!1],txt:["text/plain",!0],ttf:["font/ttf",!1],wav:["audio/wav",!1],webm:["video/webm",!1],woff:["font/x-woff",!1],xhtml:["application/xhtml+xml",!0],xbl:["application/xml",!0],xml:["application/xml",!0],xsl:["application/xml",!0],xslt:["application/xslt+xml",!0],zip:["application/zip",!1]},n={"application/atom+xml":"atom","application/octet-stream":"bin","image/bmp":"bmp","text/css":"css","application/x-www-form-urlencoded":"form","image/gif":"gif","application/x-gzip":"gz","text/x-component":"htc","text/html":"html","image/x-icon":"ico","image/jpeg":"jpeg","text/javascript":"js","application/javascript":"js","text/x-json":"json","application/json":"json","text/plain":"txt","text/cache-manifest":"manifest","application/mathml+xml":"mml","video/x-matroska":"mkv","audio/x-matroska":"mkv","audio/mpeg":"mp3","audio/mpa":"mp3","video/mp4":"mp4","video/mpeg":"mpg","audio/ogg":"oga","application/ogg":"ogg","video/ogg":"ogv","font/otf":"otf","application/pdf":"pdf","application/x-pdf":"pdf","image/png":"png","application/rdf+xml":"rdf","application/rss+xml":"rss","image/svg+xml":"svg","application/x-shockwave-flash":"swf","application/x-tar":"tar","application/x-bittorrent":"torrent","font/ttf":"ttf","audio/wav":"wav","audio/wave":"wav","video/webm":"webm","audio/webm":"webm","font/x-woff":"woff","application/xhtml+xml":"xhtml","application/xml":"xsl","application/xslt+xml":"xslt","application/zip":"zip"};e.file=function(t){s("string"==typeof t);const e=t.split("/").pop().split(".");if(e.length<2)return"bin";if(2===e.length&&""===e[0])return"txt";const i=e[e.length-1];return r[i]?i:"bin"},e.textual=function(t){const e=r[t];return!!e&&e[1]},e.type=function(t){if(s("string"==typeof t),-1!==t.indexOf("/"))return t;const e=r[t];if(!e)return"application/octet-stream";let[i,n]=e;return n&&(i+="; charset=utf-8"),i},e.ext=function(t){return null==t?"bin":(s("string"==typeof t),[t]=t.split(";"),t=(t=t.toLowerCase()).trim(),n[t]||"bin")}},function(t,e,i){"use strict";(function(e,s){
/*!
 * request.js - http request for brq
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/brq
 */
const r=i(0),n=i(7),o=i(125),a=i(205),h=i(239),l=e.fetch,u=e.Headers;class c{constructor(t,e){this.method="GET",this.ssl=!1,this.host="localhost",this.port=80,this.path="/",this.query="",this.agent="brq",this.lookup=null,this.type=null,this.expect=null,this.body=null,this.username="",this.password="",this.limit=20<<20,this.timeout=5e3,this.buffer=e||!1,this.headers=null,t&&this.fromOptions(t)}fromOptions(t){return"string"==typeof t&&(t={url:t}),null!=t.method&&(r("string"==typeof t.method),this.method=t.method.toUpperCase()),null!=t.ssl&&(r("boolean"==typeof t.ssl),this.ssl=t.ssl,this.port=443),null!=t.host&&(r("string"==typeof t.host),this.host=t.host),null!=t.port&&(r((65535&t.port)===t.port),r(0!==t.port),this.port=t.port),null!=t.path&&(r("string"==typeof t.path),this.path=t.path),null!=t.query&&("string"==typeof t.query?this.query=t.query:(r("object"==typeof t.query),this.query=a.stringify(t.query))),null!=t.username&&(r("string"==typeof t.username),this.username=t.username),null!=t.password&&(r("string"==typeof t.password),this.password=t.password),null!=t.uri&&this.navigate(t.uri),null!=t.url&&this.navigate(t.url),null!=t.agent&&(r("string"==typeof t.agent),this.agent=t.agent),null!=t.json&&(r("object"==typeof t.json),this.body=s.from(JSON.stringify(t.json),"utf8"),this.type="json"),null!=t.form&&(r("object"==typeof t.form),this.body=s.from(a.stringify(t.form),"utf8"),this.type="form"),null!=t.type&&(r("string"==typeof t.type),this.type=t.type),null!=t.expect&&(r("string"==typeof t.expect),this.expect=t.expect),null!=t.body&&("string"==typeof t.body?this.body=s.from(t.body,"utf8"):(r(s.isBuffer(t.body)),this.body=t.body)),null!=t.extra&&(r(s.isBuffer(t.extra)),this.body?this.body=s.concat([this.body,t.extra]):this.body=t.extra),null!=t.timeout&&(r("number"==typeof t.timeout),this.timeout=t.timeout),null!=t.limit&&(r("number"==typeof t.limit),this.limit=t.limit),null!=t.headers&&(r("object"==typeof t.headers),this.headers=t.headers),null!=t.lookup&&(r("function"==typeof t.lookup),this.lookup=t.lookup),this}navigate(t){r("string"==typeof t),-1===t.indexOf("://")&&(t="http://"+t);const e=o.parse(t);if("http:"!==e.protocol&&"https:"!==e.protocol)throw new Error("Malformed URL.");if(!e.hostname)throw new Error("Malformed URL.");if(this.ssl="https:"===e.protocol,this.host=e.hostname,this.port=this.ssl?443:80,null!=e.port){const t=parseInt(e.port,10);r((65535&t)===t),this.port=t}if(this.path=e.pathname,this.query=e.query,e.auth){const t=e.auth.split(":");this.username=t.shift(),this.password=t.join(":")}return this}isExpected(t){return r("string"==typeof t),!this.expect||this.expect===t}isOverflow(t){if(null==t)return!1;if(r("string"==typeof t),!this.buffer)return!1;if(t=t.trim(),!/^\d+$/.test(t))return!1;if(0===(t=t.replace(/^0+/g,"")).length&&(t="0"),t.length>15)return!1;const e=parseInt(t,10);return!Number.isSafeInteger(e)||e>this.limit}getHeaders(){const t=new u;if(t.append("User-Agent",this.agent),this.type&&t.append("Content-Type",h.type(this.type)),this.body&&t.append("Content-Length",this.body.length.toString(10)),this.username||this.password){const e=`${this.username}:${this.password}`,i=s.from(e,"utf8");t.append("Authorization",`Basic ${i.toString("base64")}`)}return t}toURL(){let t="";return this.ssl?t+="https://":t+="http://",-1!==this.host.indexOf(":")?t+=`[${this.host}]`:t+=this.host,t+=":"+this.port,t+=this.path,this.query&&(t+="?"+this.query),t}toHTTP(){return{method:this.method,headers:this.getHeaders(),body:this.body?this.body.buffer:null,mode:"cors",credentials:"include",cache:"no-cache",redirect:"follow",referrer:"no-referrer"}}}class f{constructor(){this.statusCode=0,this.headers=Object.create(null),this.type="bin",this.str="",this.buf=null}text(){return this.buf?this.buf.toString("utf8"):this.str}buffer(){return this.buf?this.buf:s.from(this.str,"utf8")}json(){const t=this.text().trim();if(0===t.length)return Object.create(null);const e=JSON.parse(t);if(!e||"object"!=typeof e)throw new Error("JSON body is a non-object.");return e}form(){return a.parse(this.text())}static fromFetch(t){const e=new f;e.statusCode=t.status;for(const[i,s]of t.headers.entries())e.headers[i.toLowerCase()]=s;return e}}async function d(t,e){if("function"!=typeof l)throw new Error("Fetch API not available.");const i=new c(t,e),r=await l(i.toURL(),i.toHTTP()),n=f.fromFetch(r),o=h.ext(n.headers["content-type"]),a=n.headers["content-length"];if(!i.isExpected(o))throw new Error("Wrong content-type for response.");if(i.isOverflow(a))throw new Error("Response exceeded limit.");if(n.type=o,h.textual(o)){const t=await r.text();if(i.limit&&t.length>i.limit)throw new Error("Response exceeded limit.");n.str=t}else{const t=await r.arrayBuffer();if(i.limit&&t.length>i.limit)throw new Error("Response exceeded limit.");n.buf=s.from(t.buffer)}return n}async function p(t){return"string"==typeof t&&(t={url:t}),d(t,!0)}p.stream=function(t){"string"==typeof t&&(t={url:t});const e=new n,i=[];return e.write=((t,e)=>(s.isBuffer(t)||(r("string"==typeof t),t=s.from(t,e)),i.push(t),!0)),e.end=(()=>(t.extra=s.concat(i),d(t,!1).then(t=>{e.emit("headers",t.headers),e.emit("type",t.type),e.emit("response",t),e.emit("data",t.buffer()),e.emit("end"),e.emit("close")}).catch(t=>{e.emit("error",t)}),!0)),e},t.exports=p}).call(this,i(10),i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * brq.js - simple request module
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/brq
 */t.exports=i(240)},function(t,e,i){"use strict";t.exports={connect:!0,connect_error:!0,connect_timeout:!0,connecting:!0,disconnect:!0,error:!0,reconnect:!0,reconnect_attempt:!0,reconnect_failed:!0,reconnect_error:!0,reconnecting:!0,ping:!0,pong:!0}},function(t,e,i){"use strict";t.exports={1000:"NORMAL_CLOSURE",1001:"GOING_AWAY",1002:"PROTOCOL_ERROR",1003:"UNSUPPORTED_DATA",1004:"RESERVED",1005:"NO_STATUS_RECVD",1006:"ABNORMAL_CLOSURE",1007:"INVALID_FRAME_PAYLOAD_DATA",1008:"POLICY_VIOLATION",1009:"MESSAGE_TOO_BIG",1010:"MISSING_EXTENSION",1011:"INTERNAL_ERROR",1012:"SERVICE_RESTART",1013:"TRY_AGAIN_LATER",1014:"BAD_GATEWAY",1015:"TLS_HANDSHAKE"}},function(t,e,i){"use strict";(function(e){
/*!
 * parser.js - packet parser
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/chjj
 */
const s=i(0),r=i(7),n=i(203);t.exports=class extends r{constructor(){super()}error(t){this.emit("error",new Error(t))}feedBinary(t){if(s(e.isBuffer(t)),t.length>1e8)return void this.error("Frame too large.");let i;try{i=n.fromRaw(t)}catch(t){return void this.emit("error",t)}this.emit("frame",i)}feedString(t){if(s("string"==typeof t),e.byteLength(t,"utf8")>1e8)return void this.error("Frame too large.");let i;try{i=n.fromString(t)}catch(t){return void this.emit("error",t)}this.emit("frame",i)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";const s=i(0),r=i(125);e.parseURL=function(t){-1===t.indexOf("://")&&(t=`ws://${t}`);const e=r.parse(t);if("http:"!==e.protocol&&"https:"!==e.protocol&&"ws:"!==e.protocol&&"wss:"!==e.protocol)throw new Error("Invalid protocol for websocket URL.");if(!e.hostname)throw new Error("Malformed URL.");const i=e.hostname;let n=80,o=!1;return"https:"!==e.protocol&&"wss:"!==e.protocol||(n=443,o=!0),e.port&&(n=parseInt(e.port,10),s((65535&n)===n),s(0!==n)),[n,i,o]}},function(t,e,i){"use strict";(function(e){const s=i(0),r={CONNECT:0,DISCONNECT:1,EVENT:2,ACK:3,ERROR:4,BINARY_EVENT:5,BINARY_ACK:6};class n{constructor(t){this.type=t||0,this.attachments=0,this.nsp="/",this.id=-1,this.data="",this.buffers=[]}setData(t){s(void 0!==t),s("number"!=typeof t),s("function"!=typeof t);const[i,n]=function(t){const i=[],s=function t(i,s){if(e.isBuffer(i)){const t={_placeholder:!0,num:s.length};return s.push(i),t}if(Array.isArray(i)){const e=[];for(let r=0;r<i.length;r++)e.push(t(i[r],s));return e}if(i&&"object"==typeof i){const e=Object.create(null);for(const r of Object.keys(i))e[r]=t(i[r],s);return e}return i}(t,i);return[JSON.stringify(s),i]}(t);if(this.data=i,this.buffers=n,this.attachments=n.length,this.attachments>0)switch(this.type){case r.EVENT:this.type=r.BINARY_EVENT;break;case r.ACK:this.type=r.BINARY_ACK}return this}getData(){return 0===this.data.length?null:(t=this.data,e=this.buffers,JSON.parse(t,(t,r)=>null!==(i=r)&&"object"==typeof i&&!0===i._placeholder&&i.num>>>0===i.num?(s(r.num<e.length),e[r.num]):r));var t,e,i}toString(){let t=this.type.toString(10);switch(this.type){case r.BINARY_EVENT:case r.BINARY_ACK:t+=this.attachments.toString(10)+"-"}return"/"!==this.nsp&&(t+=this.nsp+","),-1!==this.id&&(t+=this.id.toString(10)),t+this.data}static fromString(t){s("string"==typeof t),s(t.length>0);let e=0,i=0,n=0,a="/",h=-1,l="";switch([e,i]=function(t,e){const i=t.charCodeAt(e)-48;return i<0||i>9?-1:[e+1,i]}(t,e),s(-1!==i),s(i<=r.BINARY_ACK),i){case r.BINARY_EVENT:case r.BINARY_ACK:[e,n]=o(t,e),s(-1!==n),s(e<t.length),s("-"===t[e]),e+=1}e<t.length&&"/"===t[e]&&([e,a]=function(t,e,i){let r=e;for(;r<t.length&&","!==t[r];r++);return s(r<t.length),[r+1,t.substring(e,r)]}(t,e)),[e,h]=o(t,e),e<t.length&&(l=t.substring(e));const u=new this;return u.type=i,u.attachments=n,u.nsp=a,u.id=h,u.data=l,u}}function o(t,e){let i=0,r=0;for(;e<t.length;e++){const n=t.charCodeAt(e)-48;if(n<0||n>9)break;r*=10,r+=n,s((i+=1)<=10)}return s(r<=4294967295),0===i&&(r=-1),[e,r]}n.types=r,t.exports=n}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){const s=i(0),r=i(7),n=i(204).Client,o=i(246),a=i(203),h=i(245),l=i(244),u=i(243),c=i(242);function f(t){return null!==t&&"number"!=typeof t&&"string"!=typeof t?null:t}function d(t){return"string"!=typeof t?"No message.":t}function p(t){return"string"!=typeof t?null:t}function g(t,e,i){if(!t){const t=new TypeError(`'${e}' must be a(n) ${i}.`);throw Error.captureStackTrace&&Error.captureStackTrace(t,g),t}}t.exports=class extends r{constructor(){super(),this.server=null,this.ws=null,this.protocol="",this.url="ws://127.0.0.1:80/socket.io/?transport=websocket",this.ssl=!1,this.host="127.0.0.1",this.port=80,this.inbound=!1,this.handshake=!1,this.opened=!1,this.connected=!1,this.challenge=!1,this.destroyed=!1,this.reconnection=!0,this.time=0,this.sequence=0,this.pingInterval=25e3,this.pingTimeout=6e4,this.lastPing=0,this.parser=new l,this.binary=!1,this.packet=null,this.timer=null,this.jobs=new Map,this.hooks=new Map,this.channels=new Set,this.events=new r,this.buffer=[],this.admin=!1,this.auth=!1}accept(t,e,i,r){s(!this.ws,"Cannot accept twice."),s(t),s(e),s(i),s(i.remoteAddress),s(null!=i.remotePort),s(r);let n="ws",o=i.remoteAddress,a=i.remotePort;return i.encrypted&&(n="wss"),-1!==o.indexOf(":")&&(o=`[${o}]`),a||(a=0),this.server=t,this.binary=-1===e.url.indexOf("b64=1"),this.url=`${n}://${o}:${a}/socket.io/?transport=websocket`,this.ssl="wss"===n,this.host=i.remoteAddress,this.port=i.remotePort,this.inbound=!0,this.ws=r,this.init(),this}connect(t,e,i,r){s(!this.ws,"Cannot connect twice."),"string"==typeof t&&(r=e,[t,e,i]=h.parseURL(t));let o="ws";i&&(o="wss"),e||(e="127.0.0.1"),s("string"==typeof e),s((65535&t)===t,"Must pass a port."),s(!i||"boolean"==typeof i),s(!r||Array.isArray(r));let a=e;-1!==e.indexOf(":")&&"["!==e[0]&&(a=`[${e}]`);const l=`${o}://${a}:${t}/socket.io/?transport=websocket`;return this.binary=!0,this.url=l,this.ssl=i,this.host=e,this.port=t,this.inbound=!1,this.ws=new n(l,r),this.init(),this}init(){this.protocol=this.ws.protocol,this.time=Date.now(),this.observe(),this.parser.on("error",t=>{this.emit("error",t)}),this.parser.on("frame",async t=>{try{await this.handleFrame(t)}catch(t){this.emit("error",t)}}),this.start()}observe(){const t=this.ws;s(t),t.binaryType="arraybuffer",t.onopen=(async()=>{await this.onOpen()}),t.onmessage=(async t=>{await this.onMessage(t)}),t.onerror=(async t=>{await this.onError(t)}),t.onclose=(async t=>{await this.onClose(t)})}async onOpen(){this.destroyed||this.inbound&&(s(!this.opened),s(!this.connected),s(!this.handshake),this.opened=!0,this.handshake=!0,await this.emitAsync("open"),this.sendHandshake(),this.connected=!0,await this.emitAsync("connect"),this.sendConnect())}async emitAsync(t,...e){const i=this.listeners(t);for(const s of i)try{await s(...e)}catch(t){this.emit("error",t)}}async onMessage(t){if(this.destroyed)return;let i;try{i=await function(t){return new Promise((i,s)=>{if("string"!=typeof t)if(t&&"object"==typeof t)if(e.isBuffer(t))i(t);else if(t instanceof ArrayBuffer){const s=e.from(t);i(s)}else if(t.buffer instanceof ArrayBuffer){const s=e.from(t.buffer);i(s)}else{if("undefined"!=typeof Blob&&Blob&&t instanceof Blob){const s=new FileReader;return s.onloadend=(()=>{const t=e.from(s.result);i(t)}),void s.readAsArrayBuffer(t)}s(new Error("Bad data object."))}else s(new Error("Bad data object."));else i(t)})}(t.data)}catch(t){return void this.emit("error",t)}"string"!=typeof i?this.parser.feedBinary(i):this.parser.feedString(i)}async onError(t){this.destroyed||(this.emit("error",new Error(t.message)),this.inbound?this.destroy():this.close())}async onClose(t){if(this.destroyed)return;if(1e3===t.code||1001===t.code)return this.connected||this.emit("error",new Error("Could not connect.")),this.inbound?void this.destroy():void this.close();const e=u[t.code]||"UNKNOWN_CODE",i=`Websocket Closed: ${t.reason||"Unknown reason"} (code=${e}).`,s=new Error(i);s.reason=t.reason||"",s.code=t.code||0,this.emit("error",s),this.inbound?this.destroy():this.reconnection?this.close():this.destroy()}close(){if(!this.destroyed){this.time=Date.now(),this.packet=null,this.handshake=!1,this.connected=!1,this.challenge=!1,this.sequence=0,this.lastPing=0;for(const[t,e]of this.jobs)this.jobs.delete(t),e.reject(new Error("Job timed out."));s(this.ws),this.ws.onopen=(()=>{}),this.ws.onmessage=(()=>{}),this.ws.onerror=(()=>{}),this.ws.onclose=(()=>{}),this.ws.close(),this.emitAsync("disconnect")}}error(t){this.destroyed||this.emit("error",new Error(t))}destroy(){this.destroyed||(this.close(),this.stop(),this.opened=!1,this.destroyed=!0,this.buffer.length=0,this.emitAsync("close"),this.removeAllListeners(),this.on("error",()=>{}))}send(t){this.destroyed||(s(this.ws),t.binary&&this.binary?this.ws.send(t.toRaw()):this.ws.send(t.toString()))}reconnect(){s(!this.inbound),this.close(),this.ws=new n(this.url),this.time=Date.now(),this.observe()}start(){s(this.ws),s(null==this.timer),this.timer=setInterval(()=>this.stall(),5e3)}stop(){null!=this.timer&&(clearTimeout(this.timer),this.timer=null)}stall(){const t=Date.now();if(s(this.ws),!this.connected)return t-this.time>1e4?this.inbound||!this.reconnection?(this.error("Timed out waiting for connection."),void this.destroy()):(this.error("Timed out waiting for connection. Reconnecting..."),void this.reconnect()):void 0;for(const[e,i]of this.jobs)t-i.time>6e5&&(this.jobs.delete(e),i.reject(new Error("Job timed out.")));return this.inbound||this.challenge?!this.inbound&&t-this.lastPing>this.pingTimeout?(this.error("Connection is stalling (ping)."),this.inbound?void this.destroy():void this.close()):void 0:(this.challenge=!0,this.lastPing=t,void this.sendPing())}async handleFrame(t){if(!this.destroyed)switch(t.type){case a.types.OPEN:return this.handleOpen(t);case a.types.CLOSE:return this.handleClose(t);case a.types.PING:return this.handlePing(t);case a.types.PONG:return this.handlePong(t);case a.types.MESSAGE:return this.handleMessage(t);case a.types.UPGRADE:return this.handleUpgrade(t);case a.types.NOOP:return this.handleNoop(t);default:throw new Error("Unknown frame.")}}async handleOpen(t){if(this.inbound)throw new Error("Inbound socket sent an open frame.");if(t.binary)throw new Error("Received a binary open frame.");if(this.handshake)throw new Error("Duplicate open frame.");const e=JSON.parse(t.data);g(e&&"object"==typeof e,"open","object");const{pingInterval:i,pingTimeout:s}=e;g(i>>>0===i,"interval","uint32"),g(s>>>0===s,"timeout","uint32"),this.pingInterval=i,this.pingTimeout=s,this.handshake=!0,this.opened||(this.opened=!0,await this.emitAsync("open"))}async handleClose(t){if(this.inbound)throw new Error("Inbound socket sent a close frame.");this.close()}async handlePing(){if(!this.inbound)throw new Error("Outbound socket sent a ping frame.");this.sendPong()}async handlePong(){if(this.inbound)throw new Error("Inbound socket sent a pong frame.");if(!this.challenge)return this.error("Remote node sent bad pong."),void this.destroy();this.challenge=!1}async handleMessage(t){if(this.packet){const e=this.packet;if(!t.binary)throw new Error("Received non-binary frame as attachment.");return e.buffers.push(t.data),e.buffers.length===e.attachments?(this.packet=null,this.handlePacket(e)):void 0}if(t.binary)throw new Error("Received binary frame as a message.");const e=o.fromString(t.data);if(!(e.attachments>0))return this.handlePacket(e);this.packet=e}async handleUpgrade(t){if(!this.inbound)throw new Error("Outbound socket sent an upgrade frame.");throw new Error("Cannot upgrade from websocket.")}async handleNoop(t){}sendFrame(t,e,i){this.send(new a(t,e,i))}sendOpen(t){this.sendFrame(a.types.OPEN,t,!1)}sendClose(t){this.sendFrame(a.types.CLOSE,t,!1)}sendPing(t){this.sendFrame(a.types.PING,t,!1)}sendPong(t){this.sendFrame(a.types.PONG,t,!1)}sendMessage(t){this.sendFrame(a.types.MESSAGE,t,!1)}sendBinary(t){this.sendFrame(a.types.MESSAGE,t,!0)}sendHandshake(){const t=JSON.stringify({sid:"00000000000000000000",upgrades:[],pingInterval:this.pingInterval,pingTimeout:this.pingTimeout});this.sendOpen(t)}async handlePacket(t){if(!this.destroyed)switch(t.type){case o.types.CONNECT:return this.handleConnect();case o.types.DISCONNECT:return this.handleDisconnect();case o.types.EVENT:case o.types.BINARY_EVENT:{const e=t.getData();return g(Array.isArray(e),"args","array"),g(e.length>0,"args","array"),g("string"==typeof e[0],"event","string"),-1!==t.id?this.handleCall(t.id,e):this.handleEvent(e)}case o.types.ACK:case o.types.BINARY_ACK:{g(-1!==t.id,"id","uint32");const e=t.getData();g(null==e||Array.isArray(e),"args","array");let i=null,s=null;return e&&e.length>0&&(i=e[0]),e&&e.length>1&&(s=e[1]),null==s&&(s=null),i?(g("object"==typeof i,"error","object"),this.handleError(t.id,i)):this.handleAck(t.id,s)}case o.types.ERROR:{const e=t.getData();return g(e&&"object"==typeof e,"error","object"),this.handleError(-1,e)}default:throw new Error("Unknown packet.")}}async handleConnect(){if(this.inbound)throw new Error("Inbound socket sent connect packet.");this.connected=!0,await this.emitAsync("connect");for(const t of this.buffer)this.sendPacket(t);this.buffer.length=0}async handleDisconnect(){this.close()}async handleEvent(t){try{const e=t[0];if(c.hasOwnProperty(e))throw new Error(`Cannot emit blacklisted event: ${e}.`);this.events.emit(...t)}catch(t){this.emit("error",t),this.sendError(-1,t)}}async handleCall(t,e){let i;try{const s=e.shift();if(c.hasOwnProperty(s))throw new Error(`Cannot emit blacklisted event: ${s}.`);const r=this.hooks.get(s);if(!r)throw new Error(`Call not found: ${s}.`);i=await r(...e)}catch(e){return this.emit("error",e),void this.sendError(t,e)}null==i&&(i=null),this.sendAck(t,i)}async handleAck(t,e){const i=this.jobs.get(t);if(!i)throw new Error(`Job not found for ${t}.`);this.jobs.delete(t),i.resolve(e)}async handleError(t,e){const i=d(e.message),s=f(e.code),r=p(e.type);if(-1===t){const t=new Error(i);return t.code=s,t.type=r,void this.emit("error",t)}const n=this.jobs.get(t);if(!n)throw new Error(`Job not found for ${t}.`);this.jobs.delete(t);const o=new Error(i);o.code=s,o.type=r,n.reject(o)}sendPacket(t){this.sendMessage(t.toString());for(const e of t.buffers)this.sendBinary(e)}sendConnect(){this.sendPacket(new o(o.types.CONNECT))}sendDisconnect(){this.sendPacket(new o(o.types.DISCONNECT))}sendEvent(t){const e=new o;e.type=o.types.EVENT,e.setData(t),this.connected?this.sendPacket(e):this.buffer.push(e)}sendCall(t,e){const i=new o;i.type=o.types.EVENT,i.id=t,i.setData(e),this.connected?this.sendPacket(i):this.buffer.push(i)}sendAck(t,e){const i=new o;i.type=o.types.ACK,i.id=t,i.setData([null,e]),this.sendPacket(i)}sendError(t,e){const i=d(e.message),s=f(e.code),r=p(e.type);if(-1===t){const t=new o;return t.type=o.types.ERROR,t.setData({message:i,code:s,type:r}),void this.sendPacket(t)}const n=new o;n.type=o.types.ACK,n.id=t,n.setData([{message:i,code:s,type:r}]),this.sendPacket(n)}bind(t,e){g("string"==typeof t,"event","string"),g("function"==typeof e,"handler","function"),s(!c.hasOwnProperty(t),"Blacklisted event."),this.events.on(t,e)}unbind(t,e){g("string"==typeof t,"event","string"),g("function"==typeof e,"handler","function"),s(!c.hasOwnProperty(t),"Blacklisted event."),this.events.removeListener(t,e)}fire(...t){g(t.length>0,"event","string"),g("string"==typeof t[0],"event","string"),this.sendEvent(t)}hook(t,e){g("string"==typeof t,"event","string"),g("function"==typeof e,"handler","function"),s(!this.hooks.has(t),"Hook already bound."),s(!c.hasOwnProperty(t),"Blacklisted event."),this.hooks.set(t,e)}unhook(t){g("string"==typeof t,"event","string"),g("function"==typeof handler,"handler","function"),s(!c.hasOwnProperty(t),"Blacklisted event."),this.hooks.delete(t)}call(...t){g(t.length>0,"event","string"),g("string"==typeof t[0],"event","string");const e=this.sequence;return this.sequence+=1,this.sequence>>>=0,s(!this.jobs.has(e),"ID collision."),this.sendCall(e,t),new Promise((t,i)=>{this.jobs.set(e,new class{constructor(t,e,i){this.resolve=t,this.reject=e,this.time=i}}(t,i,Date.now()))})}channel(t){return this.channels.has(t)}join(t){return!!this.server&&this.server.join(this,t)}leave(t){return!!this.server&&this.server.leave(this,t)}static accept(t,e,i,s){return(new this).accept(t,e,i,s)}static connect(t,e,i,s){return(new this).connect(t,e,i,s)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";const s=i(7);t.exports=class extends s{constructor(t){super(),this.sockets=new Set,this.channels=new Map,this.mounts=[]}attach(){return this}mount(){}async open(){}async close(){}join(){return!0}leave(){return!0}channel(){return null}to(){}all(){}static attach(t,e){return new this(e).attach(t)}static createServer(t){return new this(t)}}},function(t,e,i){"use strict";const s=i(204),r=i(248),n=i(247);e.WebSocket=s,e.Server=r,e.server=(()=>new r),e.createServer=r.createServer.bind(r),e.attach=r.attach.bind(r),e.Socket=n,e.socket=(()=>new n),e.connect=n.connect.bind(n)},function(t,e,i){"use strict";var s=function(t){switch(typeof t){case"string":return t;case"boolean":return t?"true":"false";case"number":return isFinite(t)?t:"";default:return""}};t.exports=function(t,e,i,a){return e=e||"&",i=i||"=",null===t&&(t=void 0),"object"==typeof t?n(o(t),function(o){var a=encodeURIComponent(s(o))+i;return r(t[o])?n(t[o],function(t){return a+encodeURIComponent(s(t))}).join(e):a+encodeURIComponent(s(t[o]))}).join(e):a?encodeURIComponent(s(a))+i+encodeURIComponent(s(t)):""};var r=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)};function n(t,e){if(t.map)return t.map(e);for(var i=[],s=0;s<t.length;s++)i.push(e(t[s],s));return i}var o=Object.keys||function(t){var e=[];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.push(i);return e}},function(t,e,i){"use strict";function s(t,e){return Object.prototype.hasOwnProperty.call(t,e)}t.exports=function(t,e,i,n){e=e||"&",i=i||"=";var o={};if("string"!=typeof t||0===t.length)return o;var a=/\+/g;t=t.split(e);var h=1e3;n&&"number"==typeof n.maxKeys&&(h=n.maxKeys);var l=t.length;h>0&&l>h&&(l=h);for(var u=0;u<l;++u){var c,f,d,p,g=t[u].replace(a,"%20"),m=g.indexOf(i);m>=0?(c=g.substr(0,m),f=g.substr(m+1)):(c=g,f=""),d=decodeURIComponent(c),p=decodeURIComponent(f),s(o,d)?r(o[d])?o[d].push(p):o[d]=[o[d],p]:o[d]=p}return o};var r=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)}},function(t,e,i){"use strict";t.exports={isString:function(t){return"string"==typeof t},isObject:function(t){return"object"==typeof t&&null!==t},isNull:function(t){return null===t},isNullOrUndefined:function(t){return null==t}}},function(t,e,i){(function(t,s){var r;/*! https://mths.be/punycode v1.4.1 by @mathias */!function(n){"object"==typeof e&&e&&e.nodeType,"object"==typeof t&&t&&t.nodeType;var o="object"==typeof s&&s;o.global!==o&&o.window!==o&&o.self;var a,h=2147483647,l=36,u=1,c=26,f=38,d=700,p=72,g=128,m="-",w=/^xn--/,y=/[^\x20-\x7E]/,b=/[\x2E\u3002\uFF0E\uFF61]/g,v={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},k=l-u,E=Math.floor,R=String.fromCharCode;function S(t){throw new RangeError(v[t])}function _(t,e){for(var i=t.length,s=[];i--;)s[i]=e(t[i]);return s}function x(t,e){var i=t.split("@"),s="";return i.length>1&&(s=i[0]+"@",t=i[1]),s+_((t=t.replace(b,".")).split("."),e).join(".")}function I(t){for(var e,i,s=[],r=0,n=t.length;r<n;)(e=t.charCodeAt(r++))>=55296&&e<=56319&&r<n?56320==(64512&(i=t.charCodeAt(r++)))?s.push(((1023&e)<<10)+(1023&i)+65536):(s.push(e),r--):s.push(e);return s}function A(t){return _(t,function(t){var e="";return t>65535&&(e+=R((t-=65536)>>>10&1023|55296),t=56320|1023&t),e+R(t)}).join("")}function O(t,e){return t+22+75*(t<26)-((0!=e)<<5)}function B(t,e,i){var s=0;for(t=i?E(t/d):t>>1,t+=E(t/e);t>k*c>>1;s+=l)t=E(t/k);return E(s+(k+1)*t/(t+f))}function P(t){var e,i,s,r,n,o,a,f,d,w,y,b=[],v=t.length,k=0,R=g,_=p;for((i=t.lastIndexOf(m))<0&&(i=0),s=0;s<i;++s)t.charCodeAt(s)>=128&&S("not-basic"),b.push(t.charCodeAt(s));for(r=i>0?i+1:0;r<v;){for(n=k,o=1,a=l;r>=v&&S("invalid-input"),((f=(y=t.charCodeAt(r++))-48<10?y-22:y-65<26?y-65:y-97<26?y-97:l)>=l||f>E((h-k)/o))&&S("overflow"),k+=f*o,!(f<(d=a<=_?u:a>=_+c?c:a-_));a+=l)o>E(h/(w=l-d))&&S("overflow"),o*=w;_=B(k-n,e=b.length+1,0==n),E(k/e)>h-R&&S("overflow"),R+=E(k/e),k%=e,b.splice(k++,0,R)}return A(b)}function N(t){var e,i,s,r,n,o,a,f,d,w,y,b,v,k,_,x=[];for(b=(t=I(t)).length,e=g,i=0,n=p,o=0;o<b;++o)(y=t[o])<128&&x.push(R(y));for(s=r=x.length,r&&x.push(m);s<b;){for(a=h,o=0;o<b;++o)(y=t[o])>=e&&y<a&&(a=y);for(a-e>E((h-i)/(v=s+1))&&S("overflow"),i+=(a-e)*v,e=a,o=0;o<b;++o)if((y=t[o])<e&&++i>h&&S("overflow"),y==e){for(f=i,d=l;!(f<(w=d<=n?u:d>=n+c?c:d-n));d+=l)_=f-w,k=l-w,x.push(R(O(w+_%k,0))),f=E(_/k);x.push(R(O(f,0))),n=B(i,v,s==r),i=0,++s}++i,++e}return x.join("")}a={version:"1.4.1",ucs2:{decode:I,encode:A},decode:P,encode:N,toASCII:function(t){return x(t,function(t){return y.test(t)?"xn--"+N(t):t})},toUnicode:function(t){return x(t,function(t){return w.test(t)?P(t.slice(4).toLowerCase()):t})}},void 0===(r=function(){return a}.call(e,i,e,t))||(t.exports=r)}()}).call(this,i(119)(t),i(10))},function(t,e,i){"use strict";
/*!
 * client.js - http client for bcurl
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcurl
 */const s=i(0),r=i(7),n=i(125),o=i(249),a=i(241);class h extends Error{constructor(t,e){super(),this.type="RPCError",this.message=String(t),this.code=e>>>0,Error.captureStackTrace&&Error.captureStackTrace(this,h)}}t.exports=class extends r{constructor(t){super();const e=new class{constructor(t){this.ssl=!1,this.host="localhost",this.port=80,this.path="/",this.username=null,this.password=null,this.id=null,this.token=null,t&&this.fromOptions(t)}fromOptions(t){if("string"==typeof t&&(t={url:t}),s(t&&"object"==typeof t),null!=t.ssl&&(s("boolean"==typeof t.ssl),this.ssl=t.ssl,this.port=443),null!=t.host&&(s("string"==typeof t.host),this.host=t.host),null!=t.port&&(s((65535&t.port)===t.port),s(0!==t.port),this.port=t.port),null!=t.path&&(s("string"==typeof t.path),this.path=t.path),null!=t.apiKey&&(s("string"==typeof t.apiKey),this.password=t.apiKey),null!=t.key&&(s("string"==typeof t.key),this.password=t.key),null!=t.username&&(s("string"==typeof t.username),this.username=t.username),null!=t.password&&(s("string"==typeof t.password),this.password=t.password),null!=t.url){s("string"==typeof t.url);let e=t.url;-1===e.indexOf("://")&&(e=`http://${e}`);const i=n.parse(e);if("http:"!==i.protocol&&"https:"!==i.protocol)throw new Error("Malformed URL.");if(!i.hostname)throw new Error("Malformed URL.");if("https:"===i.protocol&&(this.ssl=!0,this.port=443),this.host=i.hostname,i.port){const t=parseInt(i.port,10);s((65535&t)===t),s(0!==t),this.port=t}if(this.path=i.pathname,i.auth){const t=i.auth.split(":");this.username=t.shift(),this.password=t.join(":")}}return null!=t.id&&(s("string"==typeof t.id),this.id=t.id),null!=t.token&&(s("string"==typeof t.token),this.token=t.token),this}}(t);this.ssl=e.ssl,this.host=e.host,this.port=e.port,this.path=e.path,this.username=e.username,this.password=e.password,this.id=e.id,this.token=e.token,this.sequence=0,this.opened=!1,this.socket=o.socket()}clone(){const t=new this.constructor;return t.ssl=this.ssl,t.host=this.host,t.port=this.port,t.path=this.path,t.username=this.username,t.password=this.password,t.id=this.id,t.token=this.token,t.sequence=this.sequence,t.opened=this.opened,t.socket=this.socket,t}async open(){const{port:t,host:e,ssl:i}=this;s(!this.opened,"Already opened."),this.opened=!0,this.socket.on("connect",async()=>{try{await this.auth()}catch(t){this.emit("error",t)}this.emit("connect")}),this.socket.on("error",t=>{this.emit("error",t)}),this.socket.on("disconnect",()=>{this.emit("disconnect")}),this.socket.connect(t,e,i)}async close(){s(this.opened,"Not opened."),this.opened=!1,this.socket.destroy(),this.socket=o.socket()}async auth(){}hook(...t){return this.socket.hook(...t)}async call(...t){return this.socket.call(...t)}bind(...t){return this.socket.bind(...t)}fire(...t){return this.socket.fire(...t)}async request(t,e,i){s("string"==typeof t),s("string"==typeof e);let r=null;null==i&&(i={}),s(i&&"object"==typeof i),this.token&&(i.token=this.token),"GET"===t&&(r=i,i=null);const n=await a({method:t,ssl:this.ssl,host:this.host,port:this.port,path:this.path+e,username:this.username,password:this.password,query:r,pool:!0,json:i});if(404===n.statusCode)return null;if(401===n.statusCode)throw new Error("Unauthorized (bad API key).");if("json"!==n.type)throw new Error("Bad response (wrong content-type).");const o=n.json();if(!o)throw new Error("Bad response (no body).");if(o.error){const{error:t}=o,e=new Error(t.message);throw e.type=String(t.type),e.code=t.code,e}if(200!==n.statusCode)throw new Error(`Status code: ${n.statusCode}.`);return o}get(t,e){return this.request("GET",t,e)}post(t,e){return this.request("POST",t,e)}put(t,e){return this.request("PUT",t,e)}del(t,e){return this.request("DELETE",t,e)}async execute(t,e,i){s("string"==typeof t),s("string"==typeof e),null==i&&(i=null),this.sequence+=1;const r=await a({method:"POST",ssl:this.ssl,host:this.host,port:this.port,path:this.path+t,username:this.username,password:this.password,pool:!0,query:this.token?{token:this.token}:void 0,json:{method:e,params:i,id:this.sequence}});if(401===r.statusCode)throw new h("Unauthorized (bad API key).",-1);if("json"!==r.type)throw new Error("Bad response (wrong content-type).");const n=r.json();if(!n)throw new Error("No body for JSON-RPC response.");if(n.error){const{message:t,code:e}=n.error;throw new h(t,e)}if(200!==r.statusCode)throw new Error(`Status code: ${r.statusCode}.`);return n.result}}},function(t,e,i){"use strict";(function(e){
/*!
 * client.js - http client for wallets
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),{Client:r}=i(206);t.exports=class extends r{constructor(t){super(t)}async auth(){await this.call("auth",this.password),await this.watchChain(),await this.watchMempool()}execute(t,e){return super.execute("/",t,e)}getMempool(){return this.get("/mempool")}getInfo(){return this.get("/")}getCoinsByAddress(t){return s("string"==typeof t),this.get(`/coin/address/${t}`)}getCoinsByAddresses(t){return s(Array.isArray(t)),this.post("/coin/address",{addresses:t})}getCoin(t,e){return s("string"==typeof t),s(e>>>0===e),this.get(`/coin/${t}/${e}`)}getTXByAddress(t){return s("string"==typeof t),this.get(`/tx/address/${t}`)}getTXByAddresses(t){return s(Array.isArray(t)),this.post("/tx/address",{addresses:t})}getTX(t){return s("string"==typeof t),this.get(`/tx/${t}`)}getBlock(t){return s("string"==typeof t||"number"==typeof t),this.get(`/block/${t}`)}broadcast(t){return s("string"==typeof t),this.post("/broadcast",{tx:t})}reset(t){return this.post("/reset",{height:t})}watchChain(){return this.call("watch chain")}watchMempool(){return this.call("watch mempool")}getTip(){return this.call("get tip")}getEntry(t){return this.call("get entry",t)}getHashes(t,e){return this.call("get hashes",t,e)}send(t){return s(e.isBuffer(t)),this.call("send",t)}setFilter(t){return s(e.isBuffer(t)),this.call("set filter",t)}addFilter(t){return Array.isArray(t)||(t=[t]),this.call("add filter",t)}resetFilter(){return this.call("reset filter")}estimateFee(t){return s(null==t||"number"==typeof t),this.call("estimate fee",t)}rescan(t){return null==t&&(t=0),s("number"==typeof t||"string"==typeof t),this.call("rescan",t)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * bclient.js - http clients for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.NodeClient=i(255),e.WalletClient=i(238)},function(t,e,i){"use strict";
/*!
 * wallet/index.js - wallet for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.Account=i(127),e.Client=i(207),e.common=i(61),e.HTTP=i(124),e.layout=i(123),e.MasterKey=i(202),e.NodeClient=i(200),e.Path=i(65),e.plugin=i(236),e.records=i(122),e.RPC=i(121),e.Node=i(234),e.TXDB=i(198),e.WalletDB=i(100),e.Wallet=i(199),e.WalletKey=i(126)},function(t,e,i){"use strict";
/*!
 * utils/index.js - utils for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.binary=i(53),e.fixed=i(120),e.util=i(5)},function(t,e,i){"use strict";
/*!
 * script/index.js - bitcoin scripting for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.common=i(36),e.Opcode=i(78),e.Script=i(11),e.ScriptError=i(37),e.ScriptNum=i(28),e.sigcache=i(208),e.Stack=i(55)},function(t,e,i){"use strict";
/*!
 * protocol/index.js - protocol constants for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.consensus=i(3),e.errors=i(148),e.Network=i(8),e.networks=i(95),e.policy=i(17),e.timedata=i(118)},function(t,e,i){"use strict";
/*!
 * primitives/index.js - bitcoin primitives for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.AbstractBlock=i(64),e.Address=i(12),e.Block=i(51),e.Coin=i(46),e.Headers=i(42),e.Input=i(43),e.InvItem=i(35),e.KeyRing=i(39),e.MemBlock=i(219),e.MerkleBlock=i(63),e.MTX=i(40),e.Outpoint=i(18),e.Output=i(16),e.TX=i(14),e.TXMeta=i(141)},function(t,e,i){"use strict";(function(e){
/*!
 * validator.js - validator for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0);class r{constructor(t,e){if(!t||"object"!=typeof t)throw new a("map","object");this.map=t,this.loose=e||!1}static multi(t,e){return new o(t,e)}static fromRequest(t){const e=new r(t.query,!0),i=new r(t.params,!0),s=new r(t.body,!1);return new o([e,i,s])}child(t){return new this.constructor(this.get(t))}has(t){return null!=this.get(t)}get(t,e){if(void 0===e&&(e=null),Array.isArray(t)){const i=t;for(const t of i){const e=this.get(t);if(null!==e)return e}return e}s("string"==typeof t||"number"==typeof t,"Key must be a string or number.");const i=this.map[t];return null!=i?i:e}typeOf(t){const e=this.get(t);return null==e?"null":typeof e}str(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i)throw new a(t,"number");return i}int(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i){if("number"!=typeof i)throw new a(t,"int");if(!Number.isSafeInteger(i))throw new a(t,"int");return i}if(!this.loose)throw new a(t,"int");if(!/^\-?\d+$/.test(i))throw new a(t,"int");const s=parseInt(i,10);if(!Number.isSafeInteger(s))throw new a(t,"int");return s}uint(t,e){const i=this.int(t);if(void 0===e&&(e=null),null===i)return e;if(i<0)throw new a(t,"uint");return i}float(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i){if("number"!=typeof i)throw new a(t,"float");if(!isFinite(i))throw new a(t,"float");return i}if(!this.loose)throw new a(t,"float");if(!/^\-?\d*(?:\.\d*)?$/.test(i))throw new a(t,"float");if(!/\d/.test(i))throw new a(t,"float");const s=parseFloat(i);if(!isFinite(s))throw new a(t,"float");return s}ufloat(t,e){const i=this.float(t);if(void 0===e&&(e=null),null===i)return e;if(i<0)throw new a(t,"positive float");return i}fixed(t,e,i){const r=this.float(t);if(void 0===i&&(i=null),null===r)return i;try{return function(t,e){s("number"==typeof t&&isFinite(t)),s(Number.isSafeInteger(e));let i=t.toFixed(e),r=1;i.length>0&&"-"===i[0]&&(i=i.substring(1),r=-1);let n=i,o="0";const a=i.indexOf(".");for(-1!==a&&(n=i.substring(0,a),o=i.substring(a+1)),n=n.replace(/^0+/,""),o=o.replace(/0+$/,""),s(n.length<=16-e,"Fixed number string exceeds 2^53-1."),s(o.length<=e,"Too many decimal places in fixed number string."),0===n.length&&(n="0");o.length<e;)o+="0";0===o.length&&(o="0"),s(/^\d+$/.test(n)&&/^\d+$/.test(o),"Non-numeric characters in fixed number string."),n=parseInt(n,10),o=parseInt(o,10);const h=Math.pow(10,e),l=Number.MAX_SAFE_INTEGER%h,u=(Number.MAX_SAFE_INTEGER-l)/h;return s(n<u||n===u&&o<=l,"Fixed number string exceeds 2^53-1."),r*(n*h+o)}(r,e||0)}catch(e){throw new a(t,"fixed number")}}ufixed(t,e,i){const s=this.fixed(t,e);if(void 0===i&&(i=null),null===s)return i;if(s<0)throw new a(t,"positive fixed number");return s}i8(t,e){const i=this.int(t);if(void 0===e&&(e=null),null===i)return e;if(i<-128||i>127)throw new a(t,"i8");return i}i16(t,e){const i=this.int(t);if(void 0===e&&(e=null),null===i)return e;if(i<-32768||i>32767)throw new a(t,"i16");return i}i32(t,e){const i=this.int(t);if(void 0===e&&(e=null),null===i)return e;if((0|i)!==i)throw new a(t,"int32");return i}i64(t,e){return this.int(t,e)}u8(t,e){const i=this.uint(t);if(void 0===e&&(e=null),null===i)return e;if((255&i)!==i)throw new a(t,"uint8");return i}u16(t,e){const i=this.uint(t);if(void 0===e&&(e=null),null===i)return e;if((65535&i)!==i)throw new a(t,"uint16");return i}u32(t,e){const i=this.uint(t);if(void 0===e&&(e=null),null===i)return e;if(i>>>0!==i)throw new a(t,"uint32");return i}u64(t,e){return this.uint(t,e)}hash(t,i){const s=this.get(t);if(void 0===i&&(i=null),null===s)return i;if("string"!=typeof s){if(!e.isBuffer(s))throw new a(t,"hash");if(32!==s.length)throw new a(t,"hash");return s.toString("hex")}if(64!==s.length)throw new a(t,"hex string");if(!/^[0-9a-f]+$/i.test(s))throw new a(t,"hex string");return s.toLowerCase()}uinthash(t,i){const s=this.get(t);return null==i&&(i=null),null==s?i:e.isBuffer(s)?this.hash(t,i):"string"!=typeof s||this.loose&&64!==s.length?this.uint(t,i):this.hash(t,i)}rhash(t,i){const s=this.get(t);if(void 0===i&&(i=null),null===s)return i;if("string"!=typeof s){if(!e.isBuffer(s))throw new a(t,"hash");if(32!==s.length)throw new a(t,"hash");return s.toString("hex")}if(64!==s.length)throw new a(t,"hex string");if(!/^[0-9a-f]+$/i.test(s))throw new a(t,"hex string");let r="";for(let t=0;t<s.length;t+=2)r=s.slice(t,t+2)+r;return r.toLowerCase()}uintrhash(t,i){const s=this.get(t);return null==i&&(i=null),null==s?i:e.isBuffer(s)?this.rhash(t,i):"string"!=typeof s||this.loose&&64!==s.length?this.uint(t,i):this.rhash(t,i)}bool(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("number"==typeof i){if(1===i)return!0;if(0===i)return!1}if("string"!=typeof i){if("boolean"!=typeof i)throw new a(t,"boolean");return i}if(!this.loose)throw new a(t,"hash");if("true"===i||"1"===i)return!0;if("false"===i||"0"===i)return!1;throw new a(t,"boolean")}buf(t,i,s){const r=this.get(t);if(s||(s="hex"),void 0===i&&(i=null),null===r)return i;if("string"!=typeof r){if(!e.isBuffer(r))throw new a(t,"buffer");return r}const n=e.from(r,s);if(n.length!==e.byteLength(r,s))throw new a(t,`${s} string`);return n}array(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i){if(!Array.isArray(i))throw new a(t,"array");return i}if(!this.loose)throw new a(t,"array");const s=i.trim().split(/\s*,\s*/),r=[];for(const t of s)0!==t.length&&r.push(t);return r}obj(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("object"!=typeof i||Array.isArray(i))throw new a(t,"object");return i}func(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("function"!=typeof i)throw new a(t,"function");return i}}const n=new r(Object.create(null));class o{constructor(t,e){this.maps=[],this.init(t,e)}init(t,e){s(Array.isArray(t)),s(t.length>0);for(const i of t)i instanceof r?this.maps.push(i):(s(i&&"object"==typeof i),this.maps.push(new r(i,e)))}find(t){for(const e of this.maps)if(e.has(t))return e;return n}child(t){return this.find(t).child(t)}has(t){return this.find(t).has(t)}get(t,e){return this.find(t).get(t,e)}typeOf(t){return this.find(t).typeOf(t)}str(t,e){return this.find(t).str(t,e)}int(t,e){return this.find(t).int(t,e)}uint(t,e){return this.find(t).uint(t,e)}float(t,e){return this.find(t).float(t,e)}ufloat(t,e){return this.find(t).ufloat(t,e)}fixed(t,e,i){return this.find(t).fixed(t,e,i)}ufixed(t,e,i){return this.find(t).ufixed(t,e,i)}i8(t,e){return this.find(t).i8(t,e)}i16(t,e){return this.find(t).i16(t,e)}i32(t,e){return this.find(t).i32(t,e)}i64(t,e){return this.find(t).i64(t,e)}u8(t,e){return this.find(t).u8(t,e)}u16(t,e){return this.find(t).u16(t,e)}u32(t,e){return this.find(t).u32(t,e)}u64(t,e){return this.find(t).u64(t,e)}hash(t,e){return this.find(t).hash(t,e)}uinthash(t,e){return this.find(t).uinthash(t,e)}rhash(t,e){return this.find(t).rhash(t,e)}uintrhash(t,e){return this.find(t).uintrhash(t,e)}bool(t,e){return this.find(t).bool(t,e)}buf(t,e,i){return this.find(t).buf(t,e,i)}array(t,e){return this.find(t).array(t,e)}obj(t,e){return this.find(t).obj(t,e)}func(t,e){return this.find(t).func(t,e)}}class a extends Error{constructor(t,e){super(),this.type="ValidationError",this.message=`${function(t){return Array.isArray(t)&&(t=t[0]),"number"==typeof t?`Param #${t}`:t}(t)} must be a ${e}.`,Error.captureStackTrace&&Error.captureStackTrace(this,a)}}t.exports=r}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * middleware.js - middleware for bweb
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bweb
 */function s(){return async(t,e)=>{}}e.basicAuth=s,e.bodyParser=s,e.cookieParser=s,e.cors=s,e.fileServer=s,e.jsonRPC=s,e.router=s},function(t,e,i){"use strict";
/*!
 * hook.js - hook object for bweb
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bweb
 */const s=i(0);t.exports=class{constructor(t,e){s("string"==typeof t),s("function"==typeof e||"object"==typeof e),s(null!==e),this.path=t,this.handler=e,this.arity=0,"function"==typeof e&&(this.arity=e.length)}isPrefix(t){return"/"===this.path||(t.startsWith?t.startsWith(this.path):0===t.indexOf(this.path))}}},function(t,e,i){"use strict";
/*!
 * route.js - route object for bweb
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bweb
 */const s=i(0);t.exports=class{constructor(t,e){s("string"==typeof t),s("function"==typeof e),s(2===e.length||3===e.length),this.path=t,this.regex=/^\/$/,this.handler=e,this.arity=e.length,this.map=[],this.compiled=!1}compile(){if(this.compiled)return;if(this.compiled=!0,"/"===this.path)return;const t=this.map;let e=this.path;e=(e=(e=(e=(e=e.replace(/(\/[^\/]+)\?/g,"(?:$1)?")).replace(/\.(?!\+)/g,"\\.")).replace(/\*/g,".*?")).replace(/%/g,"\\")).replace(/:(\w+)/g,(e,i)=>(t.push(i),"([^/]+)")),this.regex=new RegExp("^"+e+"$")}match(t){this.compile();const e=this.regex.exec(t);if(!e)return null;const i=Object.create(null);for(let t=1;t<e.length;t++){const s=e[t],r=this.map[t-1];r&&(i[r]=s),i[t-1]=s}return i}}},function(t,e,i){"use strict";
/*!
 * router.js - router for bweb
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bweb
 */const s=i(0),r=i(265),n=i(264);t.exports=class{constructor(){this._get=[],this._post=[],this._put=[],this._del=[],this.hooks=[]}_handlers(t){switch(s("string"==typeof t),t.toUpperCase()){case"GET":return this._get;case"POST":return this._post;case"PUT":return this._put;case"DELETE":return this._del;default:return null}}async handle(t,e){const i=this._handlers(t.method);if(!i)return!1;let s=null;for(const r of i){const i=r.match(t.pathname);if(i)if(t.params=i,s){if(3!==r.arity)continue;if(await r.handler(s,t,e),e.sent)return!0}else if(2===r.arity){if(await this._handleHooks(t,e))return!0;try{if(await r.handler(t,e),e.sent)return!0}catch(t){s=t}}}if(s)throw s;return!1}async _handleHooks(t,e){let i=null;for(const s of this.hooks)if(s.isPrefix(t.pathname))if(i){if(3!==s.arity)continue;if(await s.handler(i,t,e),e.sent)return!0}else if(2===s.arity)try{if(await s.handler(t,e),e.sent)return!0}catch(t){i=t}if(i)throw i;return!1}hook(t,e){e||(e=t,t="/"),this.hooks.push(new n(t,e))}get(t,e){this._get.push(new r(t,e))}post(t,e){this._post.push(new r(t,e))}put(t,e){this._put.push(new r(t,e))}del(t,e){this._del.push(new r(t,e))}}},function(t,e,i){"use strict";
/*!
 * server.js - http server for bweb
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bweb
 */const s=i(7),r=i(210);t.exports=class extends s{constructor(t){super(),this.options=t,this.config={},this.server=new s,this.io=new s,this.rpc=new r}async open(){this.emit("listening",this.address())}async close(){}error(){}mount(){}use(){}hook(){}get(){}post(){}put(){}del(){}channel(){return null}join(){}leave(){}to(){}all(){}async execute(){}add(){}address(){return{address:"localhost",port:80}}router(){return async()=>{}}cors(){return async()=>{}}basicAuth(){return async()=>{}}bodyParser(){return async()=>{}}jsonRPC(){return async()=>{}}fileServer(){return async()=>{}}cookieParser(){return async()=>{}}}},function(t,e,i){"use strict";(function(e,s){
/*!
 * child.js - child processes for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),n=i(7);t.exports=class extends n{constructor(t){super(),this.init(t)}static hasSupport(){return"function"==typeof e.postMessage}init(t){this.child=new e.Worker(t),this.child.onerror=(t=>{this.emit("error",new Error("Child error.")),this.emit("exit",1,null)}),this.child.onmessage=(t=>{let e;"string"==typeof t.data?(e=s.from(t.data,"hex"),r(e.length===t.data.length/2)):(r(t.data&&"object"==typeof t.data),r(t.data.data&&"number"==typeof t.data.data.length),(e=t.data.data).__proto__=s.prototype),this.emit("data",e)})}write(t){return 2===this.child.postMessage.length?(t.__proto__=Uint8Array.prototype,this.child.postMessage({data:t},[t])):this.child.postMessage(t.toString("hex")),!0}destroy(){this.child.terminate(),this.emit("exit",143,"SIGTERM")}}}).call(this,i(10),i(1).Buffer)},function(t,e,i){"use strict";e.unsupported=!0},function(t,e,i){"use strict";(function(e,s,r){
/*!
 * config.js - configuration parsing for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const n=i(0),o=i(41),a=i(134),h=i(269),l=a.homedir?a.homedir():"/";class u{constructor(t,e){n("string"==typeof t),n(t.length>0),this.module=t,this.prefix=o.join(l,`.${t}`),this.suffix=null,this.fallback=null,this.alias=Object.create(null),this.options=Object.create(null),this.data=Object.create(null),this.env=Object.create(null),this.args=Object.create(null),this.argv=[],this.pass=[],this.query=Object.create(null),this.hash=Object.create(null),e&&this.init(e)}init(t){if(n(t&&"object"==typeof t),null!=t.suffix&&(n("string"==typeof t.suffix),this.suffix=t.suffix),null!=t.fallback&&(n("string"==typeof t.fallback),this.fallback=t.fallback),t.alias){n("object"==typeof t.alias);for(const e of Object.keys(t.alias)){const i=t.alias[e];n("string"==typeof i),this.alias[e]=i}}}inject(t){for(const e of Object.keys(t)){const i=t[e];switch(e){case"hash":case"query":case"env":case"argv":case"config":continue}this.set(e,i)}}load(t){t.hash&&this.parseHash(t.hash),t.query&&this.parseQuery(t.query),t.env&&this.parseEnv(t.env),t.argv&&this.parseArg(t.argv),this.prefix=this.getPrefix()}open(t){if(h.unsupported)return;const e=this.getFile(t);let i;try{i=h.readFileSync(e,"utf8")}catch(t){if("ENOENT"===t.code)return;throw t}this.parseConfig(i),this.prefix=this.getPrefix()}filter(t){n("string"==typeof t);const e=new u(this.module);return e.prefix=this.prefix,e.suffix=this.suffix,e.fallback=this.fallback,e.argv=this.argv,e.pass=this.pass,w(t,this.env,e.env),w(t,this.args,e.args),w(t,this.query,e.query),w(t,this.hash,e.hash),e}set(t,e){n("string"==typeof t,"Key must be a string."),null!=e&&(t=(t=t.replace(/-/g,"")).toLowerCase(),this.options[t]=e)}has(t){return"number"==typeof t?(n(t>=0,"Index must be positive."),!(t>=this.argv.length)):(n("string"==typeof t,"Key must be a string."),t=(t=t.replace(/-/g,"")).toLowerCase(),null!=this.hash[t]||null!=this.query[t]||null!=this.args[t]||null!=this.env[t]||null!=this.data[t]||null!=this.options[t])}get(t,e){if(void 0===e&&(e=null),Array.isArray(t)){const i=t;for(const t of i){const e=this.get(t);if(null!==e)return e}return e}return"number"==typeof t?(n(t>=0,"Index must be positive."),t>=this.argv.length?e:null!=this.argv[t]?this.argv[t]:e):(n("string"==typeof t,"Key must be a string."),t=(t=t.replace(/-/g,"")).toLowerCase(),null!=this.hash[t]?this.hash[t]:null!=this.query[t]?this.query[t]:null!=this.args[t]?this.args[t]:null!=this.env[t]?this.env[t]:null!=this.data[t]?this.data[t]:null!=this.options[t]?this.options[t]:e)}typeOf(t){const e=this.get(t);return null===e?"null":typeof e}str(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i)throw new Error(`${c(t)} must be a string.`);return i}int(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i){if("number"!=typeof i)throw new Error(`${c(t)} must be an int.`);if(!Number.isSafeInteger(i))throw new Error(`${c(t)} must be an int.`);return i}if(!/^\-?\d+$/.test(i))throw new Error(`${c(t)} must be an int.`);const s=parseInt(i,10);if(!Number.isSafeInteger(s))throw new Error(`${c(t)} must be an int.`);return s}uint(t,e){const i=this.int(t);if(void 0===e&&(e=null),null===i)return e;if(i<0)throw new Error(`${c(t)} must be a uint.`);return i}float(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i){if("number"!=typeof i)throw new Error(`${c(t)} must be a float.`);if(!isFinite(i))throw new Error(`${c(t)} must be a float.`);return i}if(!/^\-?\d*(?:\.\d*)?$/.test(i))throw new Error(`${c(t)} must be a float.`);if(!/\d/.test(i))throw new Error(`${c(t)} must be a float.`);const s=parseFloat(i);if(!isFinite(s))throw new Error(`${c(t)} must be a float.`);return s}ufloat(t,e){const i=this.float(t);if(void 0===e&&(e=null),null===i)return e;if(i<0)throw new Error(`${c(t)} must be a positive float.`);return i}fixed(t,e,i){const s=this.float(t);if(void 0===i&&(i=null),null===s)return i;try{return function(t,e){n("number"==typeof t&&isFinite(t)),n(Number.isSafeInteger(e));let i=t.toFixed(e),s=1;i.length>0&&"-"===i[0]&&(i=i.substring(1),s=-1);let r=i,o="0";const a=i.indexOf(".");for(-1!==a&&(r=i.substring(0,a),o=i.substring(a+1)),r=r.replace(/^0+/,""),o=o.replace(/0+$/,""),n(r.length<=16-e,"Fixed number string exceeds 2^53-1."),n(o.length<=e,"Too many decimal places in fixed number string."),0===r.length&&(r="0");o.length<e;)o+="0";0===o.length&&(o="0"),n(/^\d+$/.test(r)&&/^\d+$/.test(o),"Non-numeric characters in fixed number string."),r=parseInt(r,10),o=parseInt(o,10);const h=Math.pow(10,e),l=Number.MAX_SAFE_INTEGER%h,u=(Number.MAX_SAFE_INTEGER-l)/h;return n(r<u||r===u&&o<=l,"Fixed number string exceeds 2^53-1."),s*(r*h+o)}(s,e||0)}catch(e){throw new Error(`${c(t)} must be a fixed number.`)}}ufixed(t,e,i){const s=this.fixed(t,e);if(void 0===i&&(i=null),null===s)return i;if(s<0)throw new Error(`${c(t)} must be a positive fixed number.`);return s}bool(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("number"==typeof i){if(1===i)return!0;if(0===i)return!1}if("string"!=typeof i){if("boolean"!=typeof i)throw new Error(`${c(t)} must be a boolean.`);return i}if("true"===i||"1"===i)return!0;if("false"===i||"0"===i)return!1;throw new Error(`${c(t)} must be a boolean.`)}buf(t,i,s){const r=this.get(t);if(s||(s="hex"),void 0===i&&(i=null),null===r)return i;if("string"!=typeof r){if(!e.isBuffer(r))throw new Error(`${c(t)} must be a buffer.`);return r}const n=e.from(r,s);if(n.length!==e.byteLength(r,s))throw new Error(`${c(t)} must be a ${s} string.`);return n}array(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i){if(!Array.isArray(i))throw new Error(`${c(t)} must be an array.`);return i}const s=i.trim().split(/\s*,\s*/),r=[];for(const t of s)0!==t.length&&r.push(t);return r}obj(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("object"!=typeof i||Array.isArray(i))throw new Error(`${c(t)} must be an object.`);return i}func(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("function"!=typeof i)throw new Error(`${c(t)} must be a function.`);return i}path(t,e){let i=this.str(t);if(void 0===e&&(e=null),null===i)return e;if(0===i.length)return e;switch(i[0]){case"~":i=o.join(l,i.substring(1));break;case"@":i=o.join(this.prefix,i.substring(1))}return o.normalize(i)}mb(t,e){const i=this.uint(t);return void 0===e&&(e=null),null===i?e:1024*i*1024}getSuffix(){if(!this.suffix)throw new Error("No suffix presented.");const t=this.str(this.suffix,this.fallback);return n(d(t),"Bad suffix."),t}getPrefix(){let t=this.str("prefix");if(t?"~"===t[0]&&(t=o.join(l,t.substring(1))):t=o.join(l,`.${this.module}`),this.suffix){const e=this.str(this.suffix);e&&(n(d(e),"Bad suffix."),this.fallback&&e!==this.fallback&&(t=o.join(t,e)))}return o.normalize(t)}getFile(t){return this.str("config")||o.join(this.prefix,t)}location(t){return o.join(this.prefix,t)}parseConfig(t){n("string"==typeof t,"Config must be text."),65279===t.charCodeAt(0)&&(t=t.substring(1)),t=(t=(t=t.replace(/\r\n/g,"\n")).replace(/\r/g,"\n")).replace(/\\\n/g,"");let e=0;for(const i of t.split("\n")){const t=i.trim();if(e+=1,0===t.length)continue;if("#"===t[0])continue;const s=t.indexOf(":");if(-1===s)throw new Error(`Expected ':' on line ${e}: "${t}".`);let r=t.substring(0,s).trim();if(!g(r=r.replace(/\-/g,"")))throw new Error(`Invalid option on line ${e}: ${r}.`);const n=t.substring(s+1).trim();if(0===n.length)continue;const o=this.alias[r];o&&(r=o),this.data[r]=n}}parseArg(t){t&&"object"==typeof t||(t=s.argv),n(Array.isArray(t));let e=null,i=!1;for(let s=2;s<t.length;s++){const r=t[s];if(n("string"==typeof r),"--"===r){i=!0;continue}if(i){this.pass.push(r);continue}if(0===r.length){e=null;continue}if(0===r.indexOf("--")){const t=r.indexOf("=");let i=null,s=null,n=!1;if(-1!==t?(i=r.substring(2,t),s=r.substring(t+1),e=null,n=!1):(i=r.substring(2),s="true",e=null,n=!0),!g(i=i.replace(/\-/g,"")))throw new Error(`Invalid argument: --${i}.`);if(0===s.length)continue;if(i.length>1){const t=this.alias[i];t&&(i=t)}this.args[i]=s,n&&(e=i);continue}if("-"===r[0]){e=null;for(let t=1;t<r.length;t++){let i=r[t];if((i<"a"||i>"z")&&(i<"A"||i>"Z")&&(i<"0"||i>"9")&&"?"!==i)throw new Error(`Invalid argument: -${i}.`);const s=this.alias[i];s&&(i=s),this.args[i]="true",e=i}continue}const o=r;0!==o.length?e?(this.args[e]=o,e=null):this.argv.push(o):e=null}}parseEnv(t){let e=this.module;e=(e=e.toUpperCase()).replace(/-/g,"_"),e+="_",t&&"object"==typeof t||(t=s.env),n(t&&"object"==typeof t);for(let i of Object.keys(t)){const s=t[i];if(n("string"==typeof s),0===i.indexOf(e)&&m(i=(i=i.substring(e.length)).replace(/_/g,""))&&0!==s.length){if((i=i.toLowerCase()).length>1){const t=this.alias[i];t&&(i=t)}this.env[i]=s}}}parseQuery(t){if("string"!=typeof t){if(!r.location)return{};if("string"!=typeof(t=r.location.search))return{}}return this.parseForm(t,"?",this.query)}parseHash(t){if("string"!=typeof t){if(!r.location)return{};if("string"!=typeof(t=r.location.hash))return{}}return this.parseForm(t,"#",this.hash)}parseForm(t,e,i){if(n("string"==typeof t),0!==t.length){t[0]===e&&(t=t.substring(1));for(const e of t.split("&")){const t=e.indexOf("=");let s,r;if(-1!==t?(s=e.substring(0,t),r=e.substring(t+1)):(s=e,r="true"),!g(s=(s=f(s)).replace(/\-/g,"")))continue;if(0===(r=f(r)).length)continue;const n=this.alias[s];n&&(s=n),i[s]=r}}}}function c(t){return Array.isArray(t)&&(t=t[0]),"number"==typeof t?`Argument #${t}`:t}function f(t){try{t=(t=decodeURIComponent(t)).replace(/\+/g," ")}catch(t){}return t.replace(/\0/g,"")}function d(t){return/^[a-z0-9_\-]+$/i.test(t)}function p(t){return/^[a-zA-Z0-9]+$/.test(t)}function g(t){return!!p(t)&&!/[A-Z]/.test(t)}function m(t){return!!p(t)&&!/[a-z]/.test(t)}function w(t,e,i){for(const s of Object.keys(e))s.length>t.length&&0===s.indexOf(t)&&(i[s.substring(t.length)]=e[s])}t.exports=u}).call(this,i(1).Buffer,i(15),i(10))},function(t,e,i){"use strict";
/*!
 * bcfg.js - configuration parsing for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(270)},function(t,e,i){"use strict";
/*!
 * node/index.js - node for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.FullNode=i(211),e.HTTP=i(129),e.Node=i(66),e.RPC=i(128),e.SPVNode=i(209)},function(t,e,i){"use strict";
/*!
 * socks.js - socks proxy for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.unsupported=!0,e.connect=function(t,e,i){throw new Error("SOCKS unsupported.")},e.resolve=async function(t,e){throw new Error("SOCKS unsupported.")}},function(t,e,i){"use strict";
/*!
 * bsocks.js - SOCKS client for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(273)},function(t,e,i){"use strict";
/*!
 * upnp-browser.js - upnp for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */class s{constructor(t,e,i){throw new Error("UPNP not supported.")}static async discover(t,e,i,s){throw new Error("UPNP not supported.")}}s.unsupported=!0,t.exports=s},function(t,e,i){"use strict";
/*!
 * bupnp.js - bupnp for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(275)},function(t,e,i){"use strict";
/*!
 * tcp.js - tcp backend for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(7);class r extends s{constructor(t){super()}address(){return{address:"127.0.0.1",family:"IPv4",port:0}}async close(){}async getConnections(){return 0}async listen(...t){}get listening(){return!1}set listening(t){}get maxConnections(){}set maxConnections(t){}ref(){return this}unref(){return this}}e.unsupported=!0,e.Socket=class extends s{constructor(){super(),this.readable=!0,this.writable=!0,this.encrypted=!1,this.bufferSize=0,this.bytesRead=0,this.bytesWritten=0,this.connecting=!1,this.destroyed=!1,this.localAddress="127.0.0.1",this.localPort=0,this.remoteAddress="127.0.0.1",this.remoteFamily="IPv4",this.remotePort=0}address(){return{address:"127.0.0.1",family:"IPv4",port:0}}connect(t,e){throw new Error("Unsupported.")}destroy(t){return this}end(t,e){throw new Error("Unsupported.")}pause(){return this}ref(){return this}resume(){return this}setEncoding(t){return this}setKeepAlive(t,e){return this}setNoDelay(t){return this}setTimeout(t,e){return this}unref(){return this}write(t,e){throw new Error("Unsupported.")}},e.Server=r,e.connect=function(t,e){throw new Error("Unsupported.")},e.createSocket=e.connect,e.createConnection=e.connect,e.createServer=function(t){return new r(t)}},function(t,e,i){"use strict";t.exports=["35.184.35.1:18333","35.184.152.173:18333","45.33.2.38:18333","46.101.209.242:18444","50.3.233.20:18333","88.198.36.232:18333","93.95.100.153:18333","98.115.251.214:18333","104.154.27.106:18333","120.79.158.146:18333","138.68.231.122:18333","144.217.73.86:18333","159.65.60.54:19100","159.65.163.15:18333","176.9.154.110:18333","176.24.203.196:28333","195.154.177.49:18333"]},function(t,e,i){"use strict";t.exports=["5.9.28.10:8333","5.103.137.146:8333","5.189.153.133:8333","5.230.145.130:8333","13.54.95.147:8333","13.54.224.84:8333","13.55.131.240:8333","13.55.200.177:8333","13.56.168.64:8333","13.78.112.11:8333","13.78.172.137:8333","13.92.82.235:8333","13.114.127.189:8333","13.126.10.3:8333","13.126.31.141:8333","13.126.32.103:8333","13.126.40.50:8333","13.126.64.248:8333","13.126.93.130:8333","13.126.139.182:8333","13.126.155.63:8333","13.126.209.117:8333","13.126.226.221:8333","13.126.236.41:8333","13.126.239.87:8333","13.126.239.219:8333","13.210.30.22:8333","13.229.57.25:8333","13.229.57.213:8333","13.229.59.240:8333","13.229.62.191:8333","13.229.63.50:8333","13.229.113.143:8333","13.229.122.196:8333","14.3.38.179:8333","18.196.0.242:8333","18.232.2.88:8333","23.92.24.191:8333","23.239.22.239:8333","24.48.13.87:8333","24.75.196.89:8333","34.214.80.51:8333","34.226.202.231:8333","34.227.47.255:8333","34.228.244.49:8333","34.229.205.221:8333","34.248.37.32:8333","34.250.57.214:8333","34.250.228.148:8333","34.251.49.99:8333","34.251.249.159:8333","34.253.41.152:8333","34.253.137.125:8333","35.154.101.254:8333","35.154.149.128:8333","35.154.153.188:8333","35.156.118.148:8333","35.156.225.190:8333","35.157.227.145:8333","35.157.244.225:8333","35.158.82.156:8333","35.158.190.238:8333","35.158.192.60:8333","35.158.208.170:8333","35.158.226.142:8333","35.158.240.174:8333","35.158.246.27:8333","35.161.176.150:7333","35.176.234.207:8333","35.177.175.223:8363","35.182.63.137:8363","35.182.102.44:8333","35.187.108.113:8333","35.195.137.23:8333","35.204.39.102:8333","37.61.238.54:8333","37.61.238.132:8333","37.139.30.133:8333","37.187.141.73:9333","39.104.89.48:8363","39.107.102.25:8363","39.108.13.102:8333","39.108.71.254:8333","39.108.100.122:8333","39.108.107.120:8333","39.108.246.163:8333","39.108.246.172:8333","39.108.246.184:8333","39.108.246.189:8333","39.108.246.198:8333","39.108.246.218:8333","39.108.246.220:8333","39.108.246.222:8333","39.108.246.223:8333","39.108.246.226:8333","39.108.246.238:8333","45.32.26.119:8333","45.32.29.62:8333","45.32.46.198:8333","45.32.162.171:8333","45.32.175.250:8333","45.32.177.189:8333","45.32.178.236:8333","45.32.186.90:8333","45.32.188.51:8333","45.32.210.157:8333","45.32.219.154:8333","45.32.233.225:8333","45.32.250.129:8333","45.33.6.213:8333","45.33.14.27:8333","45.33.20.49:8333","45.33.122.254:8333","45.56.110.128:8333","45.63.10.30:8333","45.63.11.146:8333","45.63.36.15:8333","45.63.39.112:8333","45.63.39.152:8333","45.63.67.101:8333","45.63.82.8:8333","45.63.99.84:8333","45.63.115.252:8333","45.63.119.125:8333","45.76.34.136:8333","45.76.43.40:8333","45.76.45.155:8333","45.76.90.135:8333","45.76.117.69:8333","45.76.122.99:8333","45.76.123.40:8333","45.76.137.210:8333","45.76.156.90:8333","45.76.170.191:8333","45.76.185.221:8333","45.76.211.187:8333","45.76.221.89:8333","45.76.236.105:8333","45.76.249.138:8333","45.76.251.116:8333","45.77.22.169:8333","45.77.37.227:8333","45.77.43.164:8333","45.77.44.69:8333","45.77.58.215:8333","45.77.60.125:8333","45.77.61.155:8333","45.77.63.158:8333","45.77.80.116:8333","45.79.5.172:8333","45.79.67.230:8333","45.79.78.233:8333","45.79.89.253:8333","45.79.99.220:8333","45.79.104.232:8333","45.79.108.131:8333","45.79.131.146:8333","45.79.142.99:8333","45.79.162.143:8333","45.79.176.90:8333","45.79.179.91:8333","45.79.189.157:8333","45.79.194.164:8333","45.79.195.53:8333","45.79.206.173:8333","45.79.210.130:8333","45.79.216.147:8333","45.79.218.154:8333","45.79.219.90:8333","46.101.41.35:8333","46.101.51.169:8333","46.101.58.159:8333","46.101.60.156:8333","46.101.73.96:8333","46.101.111.69:8333","46.101.141.143:8333","46.101.226.252:8333","46.101.231.183:8333","46.166.162.45:20008","46.166.162.123:20011","47.52.4.116:8333","47.52.9.80:8333","47.52.9.93:8333","47.52.9.105:8333","47.52.9.185:8333","47.52.9.198:8333","47.52.9.219:8333","47.52.9.242:8333","47.52.9.249:8333","47.52.10.0:8333","47.52.10.4:8333","47.52.10.12:8333","47.52.10.20:8333","47.52.10.27:8333","47.52.10.47:8333","47.52.10.50:8333","47.52.10.54:8333","47.52.10.59:8333","47.52.10.61:8333","47.52.10.67:8333","47.52.10.70:8333","47.52.10.83:8333","47.52.10.92:8333","47.52.10.94:8333","47.52.10.105:8333","47.52.10.239:8333","47.52.10.244:8333","47.52.37.42:8333","47.52.38.97:8333","47.52.106.253:8333","47.74.10.227:8363","47.88.32.206:8333","47.88.32.235:8333","47.88.32.249:8333","47.88.33.0:8333","47.88.33.51:8333","47.88.33.60:8333","47.88.33.169:8333","47.88.33.205:8333","47.88.33.215:8333","47.88.33.248:8333","47.88.34.21:8333","47.88.34.26:8333","47.88.34.121:8333","47.88.34.131:8333","47.88.34.142:8333","47.88.34.175:8333","47.88.34.190:8333","47.88.34.248:8333","47.88.76.134:8333","47.88.76.190:8333","47.88.76.211:8333","47.88.77.13:8333","47.88.77.42:8333","47.88.77.178:8333","47.88.77.244:8333","47.88.78.14:8333","47.88.78.116:8333","47.88.78.120:8333","47.88.78.187:8333","47.88.78.228:8333","47.88.78.241:8333","47.88.79.42:8333","47.88.79.48:8333","47.88.79.64:8333","47.88.79.88:8333","47.88.79.94:8333","47.88.188.5:8333","47.88.188.6:8333","47.88.188.15:8333","47.88.188.64:8333","47.88.188.97:8333","47.88.188.137:8333","47.88.188.173:8333","47.88.188.187:8333","47.88.188.201:8333","47.88.188.231:8333","47.88.188.246:8333","47.88.189.2:8333","47.88.189.65:8333","47.88.189.92:8333","47.88.189.134:8333","47.88.189.180:8333","47.88.189.201:8333","47.88.190.10:8333","47.88.190.90:8333","47.88.190.113:8333","47.88.190.225:8333","47.88.191.106:8333","47.88.191.142:8333","47.88.191.209:8333","47.88.192.122:8333","47.88.192.179:8333","47.88.192.201:8333","47.88.192.223:8333","47.88.192.237:8333","47.88.193.22:8333","47.88.193.93:8333","47.89.177.134:8333","47.89.180.162:8333","47.89.185.150:8363","47.89.248.115:8363","47.90.12.238:8333","47.90.102.70:8333","47.90.204.241:8333","47.90.208.254:8333","47.91.88.233:8363","47.91.108.119:8363","47.92.167.52:8363","47.93.90.194:8333","47.93.114.229:8333","47.93.116.138:8333","47.93.120.133:8333","47.93.122.227:8333","47.93.123.193:8333","47.93.123.228:8333","47.93.125.24:8333","47.93.125.109:8333","47.93.137.197:8333","47.93.138.128:8333","47.93.138.140:8333","47.93.138.163:8333","47.93.138.194:8333","47.93.138.195:8333","47.93.138.197:8333","47.93.138.213:8333","47.93.139.34:8333","47.93.139.67:8333","47.93.174.61:8333","47.94.36.120:8333","47.94.36.250:8333","47.94.37.57:8333","47.94.37.100:8333","47.94.37.105:8333","47.94.37.111:8333","47.94.37.134:8333","47.94.37.137:8333","47.94.37.139:8333","47.94.37.147:8333","47.94.37.150:8333","47.94.37.151:8333","47.94.37.152:8333","47.94.37.254:8333","47.94.38.5:8333","47.94.39.87:8333","47.94.40.104:8333","47.94.41.58:8333","47.94.43.22:8333","47.94.43.138:8333","47.94.43.193:8333","47.94.43.217:8333","47.94.44.224:8333","47.94.45.184:8333","47.94.46.31:8333","47.94.46.219:8333","47.94.46.224:8333","47.94.47.95:8333","47.94.47.152:8333","47.94.47.202:8333","47.94.47.209:8333","47.94.47.216:8333","47.94.56.232:8333","47.94.57.27:8333","47.94.57.68:8333","47.94.57.92:8333","47.94.57.95:8333","47.94.57.96:8333","47.94.57.114:8333","47.94.57.121:8333","47.94.57.128:8333","47.94.57.139:8333","47.94.57.140:8333","47.94.57.145:8333","47.94.57.146:8333","47.94.57.149:8333","47.94.57.151:8333","47.94.57.152:8333","47.94.57.155:8333","47.94.57.156:8333","47.94.57.161:8333","47.94.58.146:8333","47.94.58.194:8333","47.94.133.252:8333","47.95.32.9:8333","47.95.32.37:8333","47.95.32.49:8333","47.95.32.81:8333","47.95.32.102:8333","47.95.32.115:8333","47.95.32.150:8333","47.95.32.160:8333","47.95.32.168:8333","47.95.32.170:8333","47.95.32.206:8333","47.95.32.222:8333","47.95.33.36:8333","47.95.34.204:8333","47.95.34.221:8333","47.95.34.239:8333","47.95.36.36:8333","47.95.36.43:8333","47.95.36.119:8333","47.95.36.127:8333","47.95.36.131:8333","47.97.167.221:8334","47.186.203.39:8333","47.221.176.27:8333","47.254.135.162:8363","47.254.144.59:8333","47.254.144.129:8333","47.254.199.35:8363","50.79.174.253:8333","50.116.5.32:8333","50.116.21.23:8333","50.116.24.44:8333","50.116.52.217:8333","50.225.198.67:6359","51.15.177.162:5901","52.16.106.11:8333","52.16.114.127:8333","52.19.182.1:8333","52.28.202.131:8333","52.28.233.11:8333","52.29.36.71:8333","52.29.133.16:8333","52.51.232.234:8333","52.53.148.163:8333","52.53.198.141:8333","52.53.248.42:8333","52.55.179.5:8333","52.57.14.67:8333","52.58.163.201:8333","52.58.190.144:8333","52.59.70.178:8333","52.62.183.49:8333","52.63.133.105:8333","52.65.58.199:8333","52.65.84.70:8333","52.66.10.204:8333","52.66.180.152:8333","52.77.210.42:8333","52.77.211.219:8333","52.77.223.113:8333","52.90.132.42:8333","52.175.202.247:8333","52.210.38.227:8333","52.210.252.123:8333","52.211.14.233:8333","52.212.92.0:8333","52.221.227.157:8333","52.243.37.183:8333","54.36.122.141:8330","54.66.220.179:8333","54.66.222.15:8333","54.76.4.146:8333","54.77.6.125:8333","54.77.96.42:8333","54.79.88.22:8333","54.79.95.49:8333","54.89.8.237:8333","54.89.162.54:8333","54.90.148.132:8333","54.149.206.22:18916","54.153.6.133:8333","54.153.9.217:8333","54.153.122.31:8333","54.153.163.163:8333","54.153.224.151:8333","54.158.13.123:8333","54.158.87.15:8333","54.169.3.155:8333","54.169.231.55:8333","54.173.149.22:8333","54.179.133.79:8333","54.179.157.33:8333","54.183.131.136:8333","54.183.187.249:8333","54.183.214.240:8333","54.183.216.238:8333","54.183.235.131:8333","54.183.239.226:8333","54.193.103.231:8333","54.206.46.40:8333","54.206.77.61:8333","54.215.248.143:8333","54.219.172.105:8333","54.224.137.110:8333","54.236.212.139:8333","54.238.149.93:8335","54.241.149.2:8333","54.254.134.94:8333","54.255.187.149:8333","54.255.201.130:8333","54.255.213.254:8333","59.110.115.52:8333","59.110.115.53:8333","59.110.115.60:8333","59.110.216.139:8363","61.18.151.101:8333","66.187.65.6:8333","66.228.37.77:8333","66.228.53.145:8333","67.205.149.31:8333","67.205.166.2:8333","67.207.85.98:8333","69.47.148.54:8333","69.166.181.209:8333","71.38.211.251:8333","71.184.68.21:8333","71.252.137.246:8333","72.14.176.153:8333","72.14.176.235:8333","72.234.251.203:8333","73.76.218.50:8333","76.126.39.45:8333","78.22.99.242:8333","78.46.65.202:8333","78.46.67.111:8333","78.84.174.125:8333","79.67.124.119:8333","79.109.117.54:8333","79.134.64.83:8333","79.143.178.59:8333","81.98.216.212:8333","82.74.209.219:8333","82.196.13.79:8333","82.217.133.145:8333","83.69.203.44:8333","83.172.69.154:8333","83.243.66.120:8333","84.50.239.143:8333","84.209.133.114:8333","85.144.197.163:8333","85.228.56.107:8333","86.156.23.35:8333","87.78.236.47:8333","87.182.185.254:8333","87.242.174.233:8333","88.198.33.214:8333","88.198.36.232:8333","88.198.39.205:28333","88.202.202.221:8335","88.208.34.67:8433","89.0.80.21:8333","89.47.161.162:8333","89.179.247.236:8333","89.201.37.229:8333","91.64.148.4:8333","91.134.207.208:8330","91.204.149.5:8335","93.95.100.155:8333","93.104.208.119:8333","93.255.124.231:8333","94.130.64.143:8333","94.135.137.108:8333","94.242.222.183:8333","95.76.228.22:8333","95.80.44.100:8333","95.85.13.44:8333","95.85.62.204:8333","96.33.206.12:8333","96.54.223.18:10500","96.126.116.182:8333","96.126.117.5:8333","96.126.126.236:8333","98.151.16.60:8333","98.206.255.202:8333","100.8.165.86:8333","101.37.12.97:8333","101.37.12.132:8333","101.37.14.168:8333","101.37.116.47:8333","101.37.116.137:8333","101.37.117.159:8333","101.37.160.142:8333","101.37.161.111:8333","101.37.161.119:8333","101.37.161.215:8333","101.37.161.249:8333","101.37.162.71:8333","101.37.162.87:8333","101.37.162.92:8333","101.37.162.144:8333","101.37.163.77:8333","101.37.163.84:8333","101.37.163.132:8333","101.37.253.219:8333","101.37.253.223:8333","101.37.253.232:8333","101.132.17.39:8333","101.132.25.69:8333","101.132.25.94:8333","101.132.25.119:8333","101.132.25.169:8333","101.132.25.173:8333","101.132.26.0:8333","101.132.26.17:8333","101.132.26.28:8333","101.132.26.47:8333","101.132.26.53:8333","101.132.26.66:8333","101.132.26.76:8333","101.132.26.84:8333","101.132.27.139:8333","101.201.69.70:8333","103.24.9.221:8335","103.70.192.128:8333","103.85.14.10:5555","104.32.22.29:8333","104.131.51.67:8333","104.154.189.24:8333","104.168.144.27:8333","104.236.47.151:8333","104.236.223.146:8333","104.236.231.51:8333","104.237.145.103:8333","104.238.131.116:8333","104.238.134.28:8333","104.238.147.100:8333","104.238.187.200:8333","106.14.24.114:8333","106.14.25.158:8333","106.14.104.6:8333","106.14.104.34:8333","106.14.104.36:8333","106.14.104.39:8333","106.14.104.49:8333","106.14.104.84:8333","106.14.104.167:8333","106.14.104.171:8333","106.14.104.234:8333","106.14.104.241:8333","106.14.104.249:8333","106.14.105.7:8333","106.14.105.9:8333","106.14.105.11:8333","106.14.105.13:8333","106.14.105.18:8333","106.14.105.24:8333","106.14.105.34:8333","106.14.105.45:8333","106.14.105.46:8333","106.14.105.48:8333","106.14.105.50:8333","106.14.105.53:8333","106.14.105.54:8333","106.14.105.55:8333","106.14.105.56:8333","106.14.105.57:8333","106.14.105.59:8333","106.14.105.61:8333","106.14.105.64:8333","106.14.105.65:8333","106.14.105.74:8333","106.14.105.75:8333","106.14.105.103:8333","106.14.105.128:8333","106.14.105.160:8333","106.14.105.167:8333","106.14.105.197:8333","106.15.36.95:8333","106.15.38.181:8333","106.15.52.8:8333","106.15.52.83:8333","106.15.52.142:8333","106.15.52.153:8333","106.15.52.191:8333","106.15.52.216:8333","106.15.52.231:8333","106.15.52.235:8333","106.15.53.2:8333","106.15.53.5:8333","106.15.56.27:8333","106.15.56.29:8333","106.15.56.67:8333","106.15.56.81:8333","106.15.56.183:8333","106.15.56.191:8333","106.15.56.235:8333","106.15.57.10:8333","106.15.57.18:8333","106.15.57.33:8333","106.15.57.46:8333","106.15.57.63:8333","106.15.57.110:8333","106.15.74.19:8333","106.15.74.53:8333","106.15.74.72:8333","106.15.75.201:8333","107.6.181.169:8333","107.23.167.150:8333","107.23.184.33:8333","107.170.231.153:8333","107.189.36.4:8333","107.191.63.224:8333","108.49.30.164:8333","108.61.161.10:8333","108.61.167.149:8333","108.61.168.14:8333","108.61.179.171:8333","108.61.204.219:8333","108.61.205.118:8333","108.61.205.172:8333","108.61.207.116:8333","108.61.209.158:8333","108.230.136.222:8333","109.129.170.56:8334","109.145.42.163:8333","109.238.81.82:8444","112.74.57.179:8333","116.62.12.6:8333","116.62.13.142:8333","116.62.13.150:8333","116.62.13.179:8333","116.62.13.185:8333","116.62.13.198:8333","116.62.13.206:8333","116.62.13.209:8333","116.62.13.210:8333","116.62.13.219:8333","116.62.13.222:8333","116.62.13.224:8333","118.31.164.83:8333","118.31.164.108:8333","118.31.164.147:8333","118.31.164.193:8333","118.31.165.250:8333","118.31.166.20:8333","118.31.166.46:8333","118.31.166.50:8333","118.31.166.52:8333","118.31.166.65:8333","118.31.166.66:8333","118.31.166.68:8333","118.31.166.85:8333","118.31.166.86:8333","118.31.166.88:8333","118.31.166.92:8333","118.31.166.93:8333","118.31.166.94:8333","118.31.166.106:8333","118.31.166.108:8333","118.31.166.109:8333","118.31.166.113:8333","118.31.166.116:8333","118.31.169.98:8333","118.31.169.170:8333","118.31.169.199:8333","118.31.169.221:8333","118.171.108.169:8333","118.193.141.87:8333","119.23.128.1:8333","119.23.136.17:8333","119.23.137.31:8333","119.23.137.104:8333","119.23.137.129:8333","119.23.137.147:8333","119.23.160.146:8333","119.23.161.10:8333","119.23.161.13:8333","119.23.161.15:8333","119.23.161.21:8333","119.23.161.187:8333","119.23.172.14:8333","119.23.172.167:8333","119.23.173.88:8333","119.23.173.108:8333","119.23.173.114:8333","119.23.173.131:8333","119.23.173.138:8333","119.23.173.158:8333","119.23.173.161:8333","119.23.173.172:8333","119.23.173.184:8333","119.23.173.186:8333","119.23.173.190:8333","119.23.173.192:8333","119.23.173.197:8333","119.23.173.200:8333","119.23.173.212:8333","120.76.31.99:8333","120.76.200.95:8333","120.76.202.15:8333","120.76.202.120:8333","120.76.203.53:8333","120.76.203.124:8333","120.76.203.139:8333","120.76.213.239:8333","120.77.64.171:8333","120.77.69.107:8333","120.77.69.197:8333","120.77.69.230:8333","120.77.236.29:8333","120.77.236.148:8333","120.77.236.166:8333","120.77.236.204:8333","120.77.236.248:8333","120.77.237.0:8333","120.77.237.146:8333","120.79.160.74:8444","122.148.179.59:8333","128.199.119.104:8333","128.199.218.101:8333","128.199.221.196:8333","128.199.241.171:8333","138.68.54.100:8333","138.68.57.69:8333","138.68.63.246:8333","138.68.101.166:8333","138.68.101.195:8333","138.68.111.54:8333","138.68.250.232:8333","138.197.18.29:8333","138.197.140.84:8333","138.197.145.102:8333","138.197.148.170:8333","138.197.149.75:8333","138.197.152.78:8333","138.197.154.195:8333","138.197.159.188:8333","138.197.160.144:8333","138.197.192.126:8333","138.197.193.154:8333","138.197.202.89:8333","138.197.204.148:8333","138.197.209.186:8333","139.59.3.45:8333","139.59.25.23:8333","139.59.26.169:8333","139.59.56.195:8333","139.59.62.158:8333","139.59.96.88:8333","139.59.99.164:8333","139.59.100.143:8333","139.59.229.12:8333","139.59.244.207:8333","139.162.21.37:8333","139.162.21.80:8333","139.162.45.33:8333","139.162.48.241:8333","139.162.62.164:8333","139.162.118.68:8333","139.162.120.201:8333","139.162.138.111:8333","139.162.172.224:8333","139.162.180.24:8333","139.162.207.65:8333","139.162.217.202:8333","139.162.252.62:8333","139.162.253.213:8333","139.196.106.118:8333","139.196.189.47:8333","144.76.39.233:8335","144.217.73.86:8333","149.56.79.70:8333","151.80.109.202:18334","158.69.102.232:8333","158.69.102.238:8333","159.65.0.14:8333","159.203.60.8:8333","159.203.69.149:8333","159.203.120.173:8333","159.203.185.247:8333","162.220.47.150:8333","162.243.160.250:8333","165.227.15.35:8333","165.227.202.193:8333","172.96.161.245:8333","172.104.41.43:8333","172.104.45.73:8333","172.104.59.22:8333","172.104.72.49:8333","172.104.109.122:8333","172.104.109.154:8333","172.104.120.127:8333","172.104.123.149:8333","172.104.134.154:8333","172.104.135.54:8333","172.104.138.110:8333","172.104.146.144:8333","172.104.149.171:8333","172.104.151.66:8333","172.104.157.91:8333","172.104.157.173:8333","173.212.193.11:8333","173.212.248.165:8333","173.224.240.38:8333","173.224.240.45:8333","173.224.241.2:8333","173.230.134.205:8333","173.255.252.110:8333","174.138.55.106:8333","174.138.61.88:8333","175.209.218.79:8333","176.24.203.196:8334","176.37.16.118:8333","176.58.114.235:8333","178.32.217.132:14350","178.62.15.107:8333","178.62.34.73:8333","178.62.122.245:8333","180.181.208.42:8334","183.111.205.81:8333","184.70.216.102:8333","184.73.128.254:8333","185.92.221.162:8333","185.202.163.68:8333","188.192.180.120:8333","188.214.130.29:8333","188.226.139.113:8333","188.226.157.185:8333","188.226.162.52:8333","188.226.163.202:8333","190.2.130.27:8333","192.241.193.185:8333","193.29.187.78:8333","193.169.244.121:9903","195.154.168.129:8333","195.242.93.189:8888","198.27.68.86:8333","198.27.188.248:8333","198.47.47.18:8333","198.48.149.113:8333","198.58.125.203:8333","198.199.86.165:8333","198.199.92.79:8333","199.101.100.58:8333","199.101.100.59:8333","207.154.216.90:8333","207.154.243.159:8333","208.167.242.237:8333","208.167.248.206:8333","209.222.10.182:8333","210.195.245.43:8333","212.32.230.219:8333","212.117.214.102:8333","213.113.193.33:8333","216.218.235.93:8333","217.23.7.96:8333","217.182.199.21:8333","222.239.193.121:8333"]},function(t,e,i){"use strict";
/*!
 * seeds.js - seeds for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(279),r=i(278);e.get=function(t){switch(t){case"main":return s;case"testnet":return r;default:return[]}}},function(t,e,i){"use strict";
/*!
 * list.js - double linked list for bcoin
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0);class r{constructor(){this.head=null,this.tail=null,this.size=0}reset(){let t,e;for(t=this.head;t;t=e)e=t.next,t.prev=null,t.next=null;s(!t),this.head=null,this.tail=null,this.size=0}shift(){const t=this.head;return t?(this.remove(t),t):null}unshift(t){return this.insert(null,t)}push(t){return this.insert(this.tail,t)}pop(){const t=this.tail;return t?(this.remove(t),t):null}insert(t,e){return!(e.prev||e.next||e===this.head||(s(!e.prev),s(!e.next),null==t?(this.head?(this.head.prev=e,e.next=this.head,this.head=e):(this.head=e,this.tail=e),this.size+=1,0):(e.next=t.next,e.prev=t,t.next=e,e.next&&(e.next.prev=e),t===this.tail&&(this.tail=e),this.size+=1,0)))}remove(t){return!(!t.prev&&!t.next&&t!==this.head||(t.prev&&(t.prev.next=t.next),t.next&&(t.next.prev=t.prev),t===this.head&&(this.head=t.next),t===this.tail&&(this.tail=t.prev||this.head),this.head||s(!this.tail),this.tail||s(!this.head),t.prev=null,t.next=null,this.size-=1,0))}replace(t,e){t.prev&&(t.prev.next=e),t.next&&(t.next.prev=e),e.prev=t.prev,e.next=t.next,t.next=null,t.prev=null,this.head===t&&(this.head=e),this.tail===t&&(this.tail=e)}slice(t){null==t&&(t=-1);const e=[];let i=null;for(let s=this.head;s&&(i=s.next,s.prev=null,s.next=null,this.size-=1,e.push(s),e.length!==t);s=i);return i?(this.head=i,i.prev=null):(this.head=null,this.tail=null),e}toArray(){const t=[];for(let e=this.head;e;e=e.next)t.push(e);return t}}class n{constructor(t){this.next=null,this.prev=null,this.value=t}}(e=r).List=r,e.ListItem=n,e.Item=n,t.exports=e},function(t,e,i){"use strict";(function(t){
/*!
 * hkdf.js - hkdf for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0);e.extract=function(e,i,r){return s(e&&"string"==typeof e.id),s(t.isBuffer(i)),s(t.isBuffer(r)),e.mac(i,r)},e.expand=function(e,i,r,n){s(e&&"string"==typeof e.id),s(t.isBuffer(i)),s(t.isBuffer(r)),s(n>>>0===n);const o=e.size,a=Math.ceil(n/o);if(a>255)throw new Error("Too many blocks.");const h=t.allocUnsafe(n);if(0===a)return h;const l=t.allocUnsafe(o+r.length+1);r.copy(l,o),l[l.length-1]=1;let u=e.mac(l.slice(o),i);u.copy(h,0);for(let t=1;t<a;t++)u.copy(l,0),l[l.length-1]+=1,(u=e.mac(l,i)).copy(h,t*o);return h}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * aead.js - aead for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(218),n=i(217);function o(t,e,i){return t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,i}t.exports=class{constructor(){this.chacha20=new r,this.poly1305=new n,this.aadLen=0,this.cipherLen=0,this.hasCipher=!1,this.polyKey=null}init(t,i){const r=e.alloc(32,0);this.chacha20.init(t,i),this.chacha20.encrypt(r),this.poly1305.init(r),this.chacha20.encrypt(e.alloc(32,0)),s(1===this.chacha20.getCounter()),this.polyKey=r,this.aadLen=0,this.cipherLen=0,this.hasCipher=!1}aad(t){s(!this.hasCipher,"Cannot update aad."),this.poly1305.update(t),this.aadLen+=t.length}encrypt(t){return this.hasCipher||this.pad16(this.aadLen),this.chacha20.encrypt(t),this.poly1305.update(t),this.cipherLen+=t.length,this.hasCipher=!0,t}decrypt(t){return this.hasCipher||this.pad16(this.aadLen),this.cipherLen+=t.length,this.hasCipher=!0,this.poly1305.update(t),this.chacha20.encrypt(t),t}auth(t){return this.hasCipher||this.pad16(this.aadLen),this.cipherLen+=t.length,this.hasCipher=!0,this.poly1305.update(t),t}final(){const t=e.allocUnsafe(16);let i,s;return i=this.aadLen%4294967296,s=(this.aadLen-i)/4294967296,o(t,i,0),o(t,s,4),i=this.cipherLen%4294967296,s=(this.cipherLen-i)/4294967296,o(t,i,8),o(t,s,12),this.hasCipher||this.pad16(this.aadLen),this.pad16(this.cipherLen),this.poly1305.update(t),this.poly1305.final()}pad16(t){if(0==(t%=16))return;const i=e.allocUnsafe(16-t);i.fill(0),this.poly1305.update(i)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * poly1305.js - poly1305 for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0);class r{constructor(){this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.fin=0,this.leftover=0,this.buffer=e.allocUnsafe(16)}init(t){s(e.isBuffer(t)&&t.length>=16);const i=n(t,0),r=n(t,2),o=n(t,4),a=n(t,6),h=n(t,8),l=n(t,10),u=n(t,12),c=n(t,14);this.r[0]=8191&i,this.r[1]=8191&(i>>>13|r<<3),this.r[2]=7939&(r>>>10|o<<6),this.r[3]=8191&(o>>>7|a<<9),this.r[4]=255&(a>>>4|h<<12),this.r[5]=h>>>1&8190,this.r[6]=8191&(h>>>14|l<<2),this.r[7]=8065&(l>>>11|u<<5),this.r[8]=8191&(u>>>8|c<<8),this.r[9]=c>>>5&127;for(let t=0;t<10;t++)this.h[t]=0;for(let e=0;e<8;e++)this.pad[e]=n(t,16+2*e);this.leftover=0,this.fin=0}blocks(t,e,i){const s=this.fin?0:2048,r=new Uint32Array(10);for(;e>=16;){const o=n(t,i+0),a=n(t,i+2),h=n(t,i+4),l=n(t,i+6),u=n(t,i+8),c=n(t,i+10),f=n(t,i+12),d=n(t,i+14);this.h[0]+=8191&o,this.h[1]+=8191&(o>>>13|a<<3),this.h[2]+=8191&(a>>>10|h<<6),this.h[3]+=8191&(h>>>7|l<<9),this.h[4]+=8191&(l>>>4|u<<12),this.h[5]+=u>>>1&8191,this.h[6]+=8191&(u>>>14|c<<2),this.h[7]+=8191&(c>>>11|f<<5),this.h[8]+=8191&(f>>>8|d<<8),this.h[9]+=d>>>5|s;let p=0;for(let t=0;t<10;t++){r[t]=p;for(let e=0;e<10;e++){let i=this.h[e];i*=e<=t?this.r[t-e]:5*this.r[t+10-e],r[t]+=i,4===e&&(p=r[t]>>>13,r[t]&=8191)}p+=r[t]>>>13,r[t]&=8191}p=(p<<2)+p,p+=r[0],r[0]=8191&p,p>>>=13,r[1]+=p;for(let t=0;t<10;t++)this.h[t]=r[t];i+=16,e-=16}}update(t){s(e.isBuffer(t));let i=t.length,r=0;if(this.leftover){let e=16-this.leftover;e>i&&(e=i);for(let i=0;i<e;i++)this.buffer[this.leftover+i]=t[r+i];if(i-=e,r+=e,this.leftover+=e,this.leftover<16)return;this.blocks(this.buffer,16,0),this.leftover=0}if(i>=16){const e=-16&i;this.blocks(t,e,r),r+=e,i-=e}if(i){for(let e=0;e<i;e++)this.buffer[this.leftover+e]=t[r+e];this.leftover+=i}}final(){const t=e.allocUnsafe(16),i=new Uint16Array(10);if(this.leftover){let t=this.leftover;for(this.buffer[t++]=1;t<16;t++)this.buffer[t]=0;this.fin=1,this.blocks(this.buffer,16,0)}let s=this.h[1]>>>13;this.h[1]&=8191;for(let t=2;t<10;t++)this.h[t]+=s,s=this.h[t]>>>13,this.h[t]&=8191;this.h[0]+=5*s,s=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=s,s=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=s,i[0]=this.h[0]+5,s=i[0]>>>13,i[0]&=8191;for(let t=1;t<10;t++)i[t]=this.h[t]+s,s=i[t]>>>13,i[t]&=8191;let r=(1^s)-1;for(let t=0;t<10;t++)i[t]&=r;r=~r;for(let t=0;t<10;t++)this.h[t]=this.h[t]&r|i[t];this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5);let n=this.h[0]+this.pad[0];this.h[0]=n;for(let t=1;t<8;t++)n=this.h[t]+this.pad[t]+(n>>>16),this.h[t]=n;for(let e=0;e<8;e++)o(t,this.h[e],2*e);for(let t=0;t<10;t++)this.h[t]=0;for(let t=0;t<10;t++)this.r[t]=0;for(let t=0;t<8;t++)this.pad[t]=0;return t}static auth(t,e){const i=new r;return i.init(e),i.update(t),i.final()}static verify(t,i){s(e.isBuffer(t)&&16===t.length),s(e.isBuffer(i)&&16===i.length);let r=0;for(let e=0;e<16;e++)r|=t[e]^i[e];return 0!=(1&r-1>>>31)}}function n(t,e){return t[e]+256*t[e+1]}function o(t,e,i){return t[i++]=e,t[i++]=e>>>8,i}t.exports=r}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * chacha20.js - chacha20 for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=0===new Int8Array(new Int16Array([1]).buffer)[0];function n(t,e,i,s,r){t[e]+=t[i],t[r]=o(t[r]^t[e],16),t[s]+=t[r],t[i]=o(t[i]^t[s],12),t[e]+=t[i],t[r]=o(t[r]^t[e],8),t[s]+=t[r],t[i]=o(t[i]^t[s],7)}function o(t,e){return t<<e|t>>>32-e}function a(t,e){const i=t[e],s=t[e+3];return i+256*t[++e]+65536*t[++e]+s*2**24}t.exports=class{constructor(){this.state=new Uint32Array(16),this.stream=new Uint32Array(16),this.bytes=new Uint8Array(this.stream.buffer),r&&(this.bytes=e.allocUnsafe(64)),this.pos=0,this.ivSize=0}init(t,e,i){t&&this.initKey(t),e&&this.initIV(e,i)}initKey(t){s(e.isBuffer(t)&&t.length>=32),this.state[0]=1634760805,this.state[1]=857760878,this.state[2]=2036477234,this.state[3]=1797285236,this.state[4]=a(t,0),this.state[5]=a(t,4),this.state[6]=a(t,8),this.state[7]=a(t,12),this.state[8]=a(t,16),this.state[9]=a(t,20),this.state[10]=a(t,24),this.state[11]=a(t,28),this.state[12]=0,this.pos=4294967295}initIV(t,i){s(e.isBuffer(t)&&t.length>=8),8===t.length?(this.state[13]=0,this.state[14]=a(t,0),this.state[15]=a(t,4)):12===t.length?(this.state[13]=a(t,0),this.state[14]=a(t,4),this.state[15]=a(t,8)):s(!1,"Bad iv size."),this.ivSize=8*t.length,this.setCounter(i)}encrypt(t){s(e.isBuffer(t));for(let e=0;e<t.length;e++){if(this.pos>=64){for(let t=0;t<16;t++)this.stream[t]=this.state[t];for(let t=0;t<10;t++)n(this.stream,0,4,8,12),n(this.stream,1,5,9,13),n(this.stream,2,6,10,14),n(this.stream,3,7,11,15),n(this.stream,0,5,10,15),n(this.stream,1,6,11,12),n(this.stream,2,7,8,13),n(this.stream,3,4,9,14);for(let t=0;t<16;t++)this.stream[t]+=this.state[t],r&&(i=this.bytes,o=this.stream[t],a=4*t,i[a++]=o,o>>>=8,i[a++]=o,o>>>=8,i[a++]=o,o>>>=8,i[a++]=o);this.state[12]+=1,0===this.state[12]&&64===this.ivSize&&(this.state[13]+=1),this.pos=0}t[e]^=this.bytes[this.pos++]}var i,o,a;return t}setCounter(t){t||(t=0),s(Number.isSafeInteger(t)&&t>=0);const e=t%4294967296,i=(t-e)/4294967296;this.state[12]=e,64===this.ivSize&&(this.state[13]=i)}getCounter(){const t=this.state[12],e=this.state[13];return 64===this.ivSize?4294967296*e+t:t}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * siphash.js - siphash for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=1/4294967296;function n(e,i){s(t.isBuffer(e)),s(t.isBuffer(i)&&i.length>=16);const r=e.length>>>3,n=new l(1936682341,1886610805),o=new l(1685025377,1852075885),a=new l(1819895653,1852142177),h=new l(1952801890,2037671283),c=new l(e.length<<24,0),f=new l(0,255),d=l.fromRaw(i,0),p=l.fromRaw(i,8),g=n.ixor(d),m=o.ixor(p),w=a.ixor(d),y=h.ixor(p);let b=0;for(let t=0;t<r;t++){const t=l.fromRaw(e,b);b+=8,y.ixor(t),u(g,m,w,y),u(g,m,w,y),g.ixor(t)}switch(7&e.length){case 7:c.hi|=e[b+6]<<16;case 6:c.hi|=e[b+5]<<8;case 5:c.hi|=e[b+4];case 4:c.lo|=e[b+3]<<24;case 3:c.lo|=e[b+2]<<16;case 2:c.lo|=e[b+1]<<8;case 1:c.lo|=e[b]}return y.ixor(c),u(g,m,w,y),u(g,m,w,y),g.ixor(c),w.ixor(f),u(g,m,w,y),u(g,m,w,y),u(g,m,w,y),u(g,m,w,y),g.ixor(m),g.ixor(w),g.ixor(y),[g.hi,g.lo]}function o(e,i,r){s("number"==typeof e),s("number"==typeof i),s(t.isBuffer(r)&&r.length>=16);const n=new l(1936682341,1886610805),o=new l(1685025377,1852075885),a=new l(1819895653,1852142177),h=new l(1952801890,2037671283),c=new l(e,i),f=new l(0,255),d=l.fromRaw(r,0),p=l.fromRaw(r,8),g=n.ixor(d),m=o.ixor(p),w=a.ixor(d),y=h.ixor(p);return y.ixor(c),u(g,m,w,y),u(g,m,w,y),g.ixor(c),w.ixor(f),u(g,m,w,y),u(g,m,w,y),u(g,m,w,y),u(g,m,w,y),g.ixor(m),g.ixor(w),g.ixor(y),[g.hi,g.lo]}function a(e,i,r){s("number"==typeof e),s("number"==typeof i),s(t.isBuffer(r)&&r.length>=32);const n=new l(e,i),o=new l(0,255),a=l.fromRaw(r,0),h=l.fromRaw(r,8),c=l.fromRaw(r,16),f=l.fromRaw(r,24);return f.ixor(n),u(a,h,c,f),u(a,h,c,f),a.ixor(n),c.ixor(o),u(a,h,c,f),u(a,h,c,f),u(a,h,c,f),u(a,h,c,f),a.ixor(h),a.ixor(c),a.ixor(f),[a.hi,a.lo]}function h(t,e){return n(t,e)}class l{constructor(t,e){this.hi=0|t,this.lo=0|e}iadd(t){const e=this,i=e.lo+t.lo|0,s=i>>31,r=e.lo>>31,n=t.lo>>31,o=1&(r&n|~s&(r^n)),a=(e.hi+t.hi|0)+o;return e.hi=0|a,e.lo=i,e}ixor(t){return this.hi^=t.hi,this.lo^=t.lo,this}irotl(t){let e=this.hi,i=this.lo,s=this.hi,r=this.lo;return t<32?(e<<=t,e|=i>>>32-t,i<<=t):(e=i<<t-32,i=0),(t=64-t)<32?(r>>>=t,r|=s<<32-t,s>>>=t):(r=s>>>t-32,s=0),this.hi=e|s,this.lo=i|r,this}static fromRaw(t,e){const i=t.readUInt32LE(e),s=t.readUInt32LE(e+4);return new l(s,i)}}function u(t,e,i,s){t.iadd(e),e.irotl(13),e.ixor(t),t.irotl(32),i.iadd(s),s.irotl(16),s.ixor(i),t.iadd(s),s.irotl(21),s.ixor(t),i.iadd(e),e.irotl(17),e.ixor(i),i.irotl(32)}function c(t,e){const i=t>>>16,s=65535&t,r=e>>>16,n=65535&e;let o=0,a=0,h=0,l=0;return h+=(l+=s*n)>>>16,a+=(h+=i*n)>>>16,h&=65535,o+=(a+=(h+=s*r)>>>16)>>>16,a&=65535,o+=(a+=i*r)>>>16,o+=(a&=65535)>>>16,{hi:(o&=65535)<<16|a,lo:(h&=65535)<<16|(l&=65535)}}e.siphash=h,e.siphash256=h,e.siphash32=function(t,e){return o(0,t,e)[1]},e.siphash64=function(t,e,i){return o(t,e,i)},e.siphash32k256=function(t,e){return a(0,t,e)[1]},e.siphash64k256=function(t,e,i){return a(t,e,i)},e.sipmod=function(t,e,i,s){const[o,a]=n(t,e);return function(t,e,i,s){const n=c(t,i),o=c(t,s),a=c(i,e),h=c(e,s),l=(o.lo>>>0)+(a.lo>>>0)+(h.hi>>>0),u=(o.hi>>>0)+(a.hi>>>0)+(l*r>>>0),f=u*r|0,d=0|u,{hi:p,lo:g}=function(t,e,i,s){const r=e+d|0,n=e>>31,o=d>>31;return{hi:(t+f|0)+(1&(n&o|~(r>>31)&(n^o)))|0,lo:r}}(n.hi,n.lo);return[p,g]}(o,a,i,s)}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * bsip.js - siphash for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(286)},function(t,e,i){"use strict";(function(t){
/*!
 * onion.js - onion utils for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License).
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 *
 * Parts of this software are based on node-ip.
 * https://github.com/indutny/node-ip
 * Copyright (c) 2012, Fedor Indutny (MIT License).
 */
const s=i(0),r=i(220),n=e;function o(e,i){if(s(t.isBuffer(e)),s(33===e.length),null==i)return 0;s("function"==typeof i);const r=t.alloc(48);return r.write(".onion checksum",0,15,"ascii"),e.copy(r,15,1,33),r[47]=e[0],i(r).readUInt16BE(0)}n.isString=function(t){return n.isLegacyString(t)||n.isNGString(t)},n.is=function(t){return n.isLegacy(t)||n.isNG(t)},n.encode=function(t,e){if(n.isLegacy(t))return n.encodeLegacy(t);if(n.isNG(t))return n.encodeNG(t,e);throw new Error("Not an onion buffer.")},n.decode=function(t,e){if(n.isLegacyString(t))return n.decodeLegacy(t);if(n.isNGString(t))return n.decodeNG(t,e);throw new Error("Not an onion string.")},n.normalize=function(t,e){if(n.isLegacyString(t))return n.normalizeLegacy(t);if(n.isNGString(t))return n.normalizeNG(t,e);throw new Error("Not an onion string.")},n.isLegacyString=function(t){return s("string"==typeof t),22===t.length&&".onion"===t.slice(-6).toLowerCase()},n.isLegacy=function(e){return s(t.isBuffer(e)),10===e.length},n.encodeLegacy=function(t){return s(n.isLegacy(t)),`${r.encode(t)}.onion`},n.decodeLegacy=function(t){s(n.isLegacyString(t));const e=r.decode(t.slice(0,-6));return s(10===e.length,"Invalid onion address."),e},n.normalizeLegacy=function(t){return n.encodeLegacy(n.decodeLegacy(t))},n.isNGString=function(t){return s("string"==typeof t),62===t.length&&".onion"===t.slice(-6).toLowerCase()},n.isNG=function(e){return s(t.isBuffer(e)),33===e.length},n.encodeNG=function(e,i){s(t.isBuffer(e)),s(33===e.length);const n=t.alloc(35);e.copy(n,0,1,33);const a=o(e,i);return n[32]=a>>>8,n[33]=255&a,n[34]=e[0],`${r.encode(n)}.onion`},n.decodeNG=function(e,i){s(n.isNGString(e),"Invalid onion address.");const a=r.decode(e.slice(0,-6));s(35===a.length,"Invalid onion address.");const h=t.alloc(33);return h[0]=a[34],a.copy(h,1,0,32),s(function(e,i,r){return s(t.isBuffer(i)),s(35===i.length),null==r||i.readUInt16BE(32)===o(e,r)}(h,a,i),"Invalid checksum for onion address."),h},n.normalizeNG=function(t,e){return n.encodeNG(n.decodeNG(t,e),e)}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * inet.js - inet pton/ntop for bcoin
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 *
 * Parts of this software are based on c-ares:
 *   Copyright (c) 2007-2018, Daniel Stenberg (MIT License)
 *   https://github.com/c-ares/c-ares
 *   https://github.com/c-ares/c-ares/blob/master/inet_net_pton.c
 *   https://github.com/c-ares/c-ares/blob/master/inet_ntop.c
 */
const s=i(0),r=1,n=2,o=t.allocUnsafe(16),a=t.allocUnsafe(16),h=new Uint16Array(8),l=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"],u=new Int8Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,-1,-1,-1,-1,-1,-1,-1,10,11,12,13,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,11,12,13,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);function c(e,i,o){null==i&&(i=null),null==o&&(o=0),s("string"==typeof e),s(null===i||t.isBuffer(i)),s(o>>>0===o);const a=o;let h=0,l=-1,c=-1;if(i&&o+4>i.length)return-r;if(function(t,e){if(e+3>t.length)return!1;if(48!==g(t,e))return!1;const i=g(t,e+1);if(88!==i&&120!==i)return!1;const s=g(t,e+2);return-1!==u[s]}(e,h)){h+=2;let t=0,s=0,f=0;for(;h<e.length;h++){l=g(e,h);const d=u[l];if(-1===d)break;if(s=0===t?d:s<<4|d,t+=1,(f+=1)>8)return-r;if(2===t){if(o+1-a>4)return-n;i&&(i[o]=s),-1===c&&(c=s),o+=1,t=0}l=-1}if(t){if(o+1-a>4)return-n;i&&(i[o]=s<<4),-1===c&&(c=s<<4),o+=1}}else{if(!function(t,e){if(e+1>t.length)return!1;const i=g(t,e);return i>=48&&i<=57}(e,h))return-r;{let t=0;for(;;){let s=0,u=0;for(;h<e.length&&!((l=g(e,h))<48||l>57);h++){if(s*=10,s+=l-48,(u+=1)>3||s>255)return-r;l=-1}if((t+=u)>12)return-r;if(o+1-a>4)return-n;if(i&&(i[o]=s),-1===c&&(c=s),o+=1,-1===l||47===l)break;if(46!==l)return-r;if((l=g(e,h+=1))<48||l>57)return-r}}}let f=-1;if(function(t,e){if(e+2>t.length)return!1;if(47!==g(t,e))return!1;const i=g(t,e+1);return!(i<48||i>57)}(e,h)&&o>a){h+=1,f=0,l=-1;let t=0;for(;h<e.length&&!((l=g(e,h))<48||l>57);h++){if(f*=10,f+=l-48,(t+=1)>3||f>32)return-r;l=-1}}if(-1!==l)return-r;if(o===a)return-r;-1===f&&(s(-1!==c),(f=c>=240?32:c>=224?8:c>=192?24:c>=128?16:8)<8*(o-a)&&(f=8*(o-a)),8===f&&224===c&&(f=4)),s(f<=32);const d=4-(o-a);return s(d>=0&&d<=4),i&&(s(o+d<=i.length),i.fill(0,o,o+d)),o+=d,f}function f(e,i,a){null==i&&(i=null),null==a&&(a=0),s("string"==typeof e),s(null===i||t.isBuffer(i)),s(a>>>0===a);const h=o;let l=0,c=0,f=16,d=-1,p=0,m=!1,w=0,k=0,E=-1,R=!1;if(i&&a+16>i.length)return-n;if(y(e,l)){if(!y(e,l+1))return-r;l+=1}for(h.fill(0,0,16),p=l;l<e.length;l++){const t=g(e,l),i=u[t];if(-1===i){if(58!==t){if(46===t&&c+4<=f){const t=v(e,p,h,c);if(-1!==t){0!==t&&(E=t),c+=4,m=!1,R=!0;break}}if(47===t){const t=b(e,l+1);if(-1!==t){E=t;break}}return-r}if(p=l+1,!m){if(-1!==d)return-r;d=c;continue}if(l===e.length)return-r;if(c+2>f)return-r;h[c++]=w>>>8&255,h[c++]=255&w,m=!1,k=0,w=0}else{if(w<<=4,w|=i,(k+=1)>4)return-r;m=!0}}if(m){if(c+2>f)return-r;h[c++]=w>>>8&255,h[c++]=255&w}-1===E&&(E=128),s(E<=128);let S=(E+15)/16|0;if(S<2&&(S=2),R&&(S=8),f=2*S,-1!==d){const t=c-d;let e;if(c===f)return-r;for(e=1;e<=t;e++)h[f-e]=h[d+t-e],h[d+t-e]=0;c=f}if(c!==f)return-r;const _=(E+7)/8|0,x=16-_;return s(_>=0&&_<=16),i?(s(a+_+x<=i.length),a+=h.copy(i,a,0,_),i.fill(0,a,a+x),a+=x):(a+=_,a+=x),E}function d(e,i){if(null==i&&(i=0),s(t.isBuffer(e)),s(i>>>0===i),i+4>e.length)return"";let r="";return r+=m(e[i+0]),r+=".",r+=m(e[i+1]),r+=".",r+=m(e[i+2]),(r+=".")+m(e[i+3])}function p(e,i){if(null==i&&(i=0),s(t.isBuffer(e)),s(i>>>0===i),i+16>e.length)return"";let r=-1,n=0,o=-1,a=0,l="";const u=h;for(let t=0;t<16;t++)u[t]=0;for(let t=0;t<16;t++)u[t>>>1]|=e[i+t]<<(1-(1&t)<<3);for(let t=0;t<8;t++)0===u[t]?-1===o?(o=t,a=1):a+=1:-1!==o&&((-1===r||a>n)&&(r=o,n=a),o=-1);-1!==o&&(-1===r||a>n)&&(r=o,n=a),-1!==r&&n<2&&(r=-1);for(let t=0;t<8;t++)if(-1!==r&&t>=r&&t<r+n)t===r&&(l+=":");else{if(0!==t&&(l+=":"),6===t&&0===r&&(6===n||7===n&&1!==u[7]||5===n&&65535===u[5])){const t=d(e,i+12);if(!t)return"";l+=t;break}l+=w(u[t])}return-1!==r&&r+n===8&&(l+=":"),l}function g(t,e){const i=t.charCodeAt(e);return 65408&i?0:i}function m(t,e){return t.toString(10)}function w(t){let e="";for(let i=3;i>=0;i--){const s=t>>>4*i&15;0===s&&0===e.length||(e+=l[s])}return 0===e.length&&(e+=l[0]),e}function y(t,e){return!(e+1>t.length)&&58===g(t,e)}function b(t,e){let i=0,s=0;for(;e<t.length;e++){const r=g(t,e);if(r<48||r>57)return-1;if(s>0&&0===i)return-1;if(i*=10,i+=r-48,(s+=1)>3||i>128)return-1}return 0===s?-1:i}function v(t,e,i,s){const r=s;let n=0,o=0;for(;e<t.length;e++){const a=g(t,e);if(a>=48&&a<=57){if(o>0&&0===n)return-1;if(n*=10,n+=a-48,(o+=1)>3||n>255)return-1}else{if(46!==a&&47!==a)return-1;if(s-r>3)return-1;if(i){if(s+1>i.length)return-1;i[s]=n}if(s+=1,47===a)return b(t,e+1);n=0,o=0}}if(0===o)return-1;if(s-r>3)return-1;if(i){if(s+1>i.length)return-1;i[s]=n}return s+=1,0}e.pton4=c,e.pton6=f,e.pton=function(e,i,n,o){return null==n&&(n=null),null==o&&(o=0),s(e>>>0===e),s("string"==typeof i),s(null===n||t.isBuffer(n)),s(o>>>0===o),4===e?c(i,n,o):6===e?f(i,n,o):-r},e.ntop4=d,e.ntop6=p,e.ntop=function(e,i,r){return null==r&&(r=0),s(e>>>0===e),s(t.isBuffer(i)),s(r>>>0===r),4===e?d(i,r):6===e?p(i,r):""},e.family=function(t){return c(t,null,0)>=0?4:f(t,null,0)>=0?6:0},e.mapped=function(e,i){return null==i&&(i=0),s(t.isBuffer(e)),s(i>>>0===i),!(i+12>e.length)&&0===e[i++]&&0===e[i++]&&0===e[i++]&&0===e[i++]&&0===e[i++]&&0===e[i++]&&0===e[i++]&&0===e[i++]&&0===e[i++]&&0===e[i++]&&255===e[i++]&&255===e[i++]},e.onion=function(e,i){return null==i&&(i=0),s(t.isBuffer(e)),s(i>>>0===i),!(i+6>e.length)&&253===e[i++]&&135===e[i++]&&216===e[i++]&&126===e[i++]&&235===e[i++]&&67===e[i++]},e.normalize=function(t){const e=a;return c(t,e,0)>=0?d(e,0):f(t,e,0)>=0?p(e,0):""}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * base32.js - base32 for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=e,n=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1],o=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,-1,-1,-1,-1,-1,-1,-1,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1],a=[0,6,4,3,1];r.encode=function(t,e=!1){return r._encode(t,"abcdefghijklmnopqrstuvwxyz234567",e)},r.encodeHex=function(t,e=!1){return r._encode(t,"0123456789abcdefghijklmnopqrstuv",e)},r._encode=function(e,i,r=!1){s(t.isBuffer(e)),s("boolean"==typeof r);let n="",o=0,h=0;for(let t=0;t<e.length;t++){const s=e[t];switch(o){case 0:n+=i[s>>>3],h=(7&s)<<2,o=1;break;case 1:n+=i[h|s>>>6],n+=i[s>>>1&31],h=(1&s)<<4,o=2;break;case 2:n+=i[h|s>>>4],h=(15&s)<<1,o=3;break;case 3:n+=i[h|s>>>7],n+=i[s>>>2&31],h=(3&s)<<3,o=4;break;case 4:n+=i[h|s>>>5],n+=i[31&s],o=0}}if(o>0&&(n+=i[h],r))for(let t=0;t<a[o];t++)n+="=";return n},r.decode=function(t,e=!1){return r._decode(t,n,e)},r.decodeHex=function(t,e=!1){return r._decode(t,o,e)},r._decode=function(e,i,r){s("string"==typeof e),s("boolean"==typeof r);const n=t.allocUnsafe(5*e.length/8|0);let o=0,a=0,h=0,l=0;for(;l<e.length;l++){const t=e.charCodeAt(l),s=65408&t?-1:i[t];if(-1===s){if(r&&o>0)break;throw new Error("Non-base32 character.")}switch(o){case 0:a=s,o=1;break;case 1:n[h++]=a<<3|s>>>2,a=3&s,o=2;break;case 2:a=a<<5|s,o=3;break;case 3:n[h++]=a<<1|s>>>4,a=15&s,o=4;break;case 4:n[h++]=a<<4|s>>>1,a=1&s,o=5;break;case 5:a=a<<5|s,o=6;break;case 6:n[h++]=a<<2|s>>>3,a=7&s,o=7;break;case 7:n[h++]=a<<5|s,o=0}}if(r)switch(o){case 0:break;case 1:case 3:case 6:throw new Error("Invalid base32 string.");case 2:if(a>0)throw new Error("Invalid padding.");if(e.length!==l+6)throw new Error("Invalid padding.");if("======"!==e.substring(l,l+6))throw new Error("Invalid base32 character.");break;case 4:if(a>0)throw new Error("Invalid padding.");if(e.length!==l+4)throw new Error("Invalid padding.");if("===="!==e.substring(l,l+4))throw new Error("Invalid base32 character.");break;case 5:if(a>0)throw new Error("Invalid padding.");if(e.length!==l+3)throw new Error("Invalid padding.");if("==="!==e.substring(l,l+3))throw new Error("Invalid base32 character.");break;case 7:if(a>0)throw new Error("Invalid padding.");if(e.length!==l+1)throw new Error("Invalid padding.");if("="!==e[l])throw new Error("Invalid base32 character.")}return n.slice(0,h)},r.test=function(t,e=!1){try{return r.decode(t,e),!0}catch(t){return!1}},r.testHex=function(t,e=!1){try{return r.decodeHex(t,e),!0}catch(t){return!1}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * ip.js - ip utils for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License).
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 *
 * Parts of this software are based on node-ip.
 * https://github.com/indutny/node-ip
 * Copyright (c) 2012, Fedor Indutny (MIT License).
 */
const s=i(0),r=i(134),n=i(220),o=i(289),a=i(288),h=e,l=t.from("00000000000000000000000000000000","hex"),u=t.from("00000000000000000000000000000001","hex"),c=t.from("0064ff9b0000000000000000","hex"),f=t.from("fe80000000000000","hex"),d=t.from("0000000000000000ffff0000","hex"),p=t.from("00000000000000ffff","hex"),g=t.from("fd87d87eeb43","hex"),m=t.alloc(33,0),w=t.alloc(16,0),y=t.alloc(16,0),b=t.alloc(16,0),v={NONE:0,INET4:4,INET6:6,ONION:10},k={NONE:0,INET4:1,INET6:2,ONION:3,TEREDO:4};function E(e,i){s(t.isBuffer(e)),s(t.isBuffer(i)),s(e.length>=i.length);for(let t=0;t<i.length;t++)if(e[t]!==i[t])return!1;return!0}function R(t){if(null==t)return v.NONE;if(t>>>0===t)return t;switch(s("string"==typeof t),s(t.length<=4),t.toLowerCase()){case"all":return v.NONE;case"ipv4":return v.INET4;case"ipv6":return v.INET6}throw new Error(`Invalid address family: ${t}.`)}h.encode=function(e){return s(t.isBuffer(e)),h.read(e,0,e.length)},h.decode=function(e){const i=t.allocUnsafe(16);return h.write(i,e,0,16),i},h.read=function(e,i,r){if(null==i&&(i=0),null==r&&(r=16),s(t.isBuffer(e)),s(i>>>0===i),s(r>>>0===r),i+r>e.length)throw new Error("Out of bounds read.");if(4===r){const t=o.ntop4(e,i);if(!t)throw new Error("Invalid IPv4 address.");return t}if(16===r){if(o.onion(e,i)){const t=e.slice(i+6,i+16);return a.encodeLegacy(t)}let t;if(!(t=o.mapped(e,i)?o.ntop4(e,i+12):o.ntop6(e,i)))throw new Error("Invalid IPv6 address.");return t}throw new Error("Invalid IP address.")},h.write=function(e,i,r,n){if(null==r&&(r=0),null==n&&(n=16),s(t.isBuffer(e)),s("string"==typeof i),s(r>>>0===r),s(n>>>0===n),r+n>e.length)throw new Error("Out of bounds write.");if(4===n){if(o.pton4(i,e,r)>=0)return r+4;const t=w;if(o.pton6(i,t,0)<0)throw new Error("Invalid IPv4 address.");if(!o.mapped(t,0))throw new Error("Out of bounds write.");return r+t.copy(e,r,12,16)}if(16===n){if(a.isLegacyString(i)){const t=g,s=a.decodeLegacy(i);return(r+=t.copy(e,r))+s.copy(e,r)}if(o.pton4(i,e,r+12)>=0)return e.fill(0,r,r+10),r+=10,e[r++]=255,e[r++]=255,r;if(o.pton6(i,e,r)>=0)return r+16;throw new Error("Invalid IPv6 address.")}throw new Error("Invalid IP address.")},h.writeBW=function(t,e,i){return s(t&&"object"==typeof t),t.offset=h.write(t.data,e,t.offset,i),t},h.readBR=function(t,e){null==e&&(e=16),s(t&&"object"==typeof t);const i=h.read(t.data,t.offset,e);return t.offset+=e,i},h.normalize=function(t){if(a.isLegacyString(t))return a.normalizeLegacy(t);const e=w;if(o.pton4(t,e,0)>=0)return o.ntop4(e,0);if(o.pton6(t,e,0)>=0)return h.isMapped(e)?o.ntop4(e,12):o.ntop6(e,0);throw new Error("Invalid IP address.")},h.map=function(e){if(s(t.isBuffer(e)),16===e.length)return e;if(4!==e.length)throw new Error("Not an IPv4 address.");const i=t.allocUnsafe(16);return i.fill(0,0,10),i[10]=255,i[11]=255,e.copy(i,12),i},h.unmap=function(e){if(s(t.isBuffer(e)),4===e.length)return e;if(16!==e.length)throw new Error("Not an IPv6 address.");if(!h.isMapped(e))throw new Error("Not an IPv4 mapped address.");return e.slice(12,16)},h.toHost=function(e,i,r){if(null==r&&(r=null),s("string"==typeof e),s((65535&i)===i),s(null===r||t.isBuffer(r)),s(!r||33===r.length),0===e.length)throw new Error("Invalid host (zero length).");if(e.length>261)throw new Error("Invalid host (too large).");let a=!1;for(let t=0;t<e.length;t++){const i=e.charCodeAt(t);switch(i){case 58:a=!0;break;case 64:case 91:case 93:throw new Error("Bad host.");default:if(i<32||i>126)throw new Error("Bad host.")}}if(a&&o.pton6(e,null,0)<0)throw new Error("Unexpected colon.");const l=h.getTypeString(e);l!==v.NONE&&(e=h.normalize(e));let u="";return r&&!r.equals(m)&&(u=`${n.encode(r)}@`),l===v.INET6?`${u}[${e}]:${i}`:`${u}${e}:${i}`},h.fromHost=function(e,i,r){if(null==i&&(i=0),null==r&&(r=null),s("string"==typeof e),s((65535&i)===i),s(null===r||t.isBuffer(r)),0===e.length)throw new Error("Invalid host (zero length).");if(e.length>315)throw new Error("Invalid host (too large).");if(r&&33!==r.length)throw new Error("Invalid fallback key (bad size).");let a=r,l="",u=null,c=!1;const f=e.indexOf("@");if(-1!==f){const t=e.substring(0,f),i=e.substring(f+1);if(t.length>53)throw new Error("Invalid identity key (too large).");if(33!==(a=n.decode(t)).length)throw new Error("Invalid identity key (bad size).");e=i}if("["===e[0])if("]"===e[e.length-1])l=e.slice(1,-1),u=null,c=!0;else{const t=e.indexOf("]:");if(-1===t)throw new Error("IPv6 bracket mismatch.");l=e.substring(1,t),u=e.substring(t+2),c=!0}else{const t=e.indexOf(":");if(-1!==t){const i=e.substring(0,t),s=e.substring(t+1);-1!==s.indexOf(":")?(l=e,u=null,c=!0):(l=i,u=s)}else l=e,u=null}if(0===l.length)throw new Error("Invalid host (zero length).");if(null!=u){let t=0,e=0;for(let i=0;i<u.length;i++){const s=u.charCodeAt(i);if(s<48||s>57)throw new Error("Invalid port (bad character).");if(e>0&&0===t)throw new Error("Invalid port (leading zero).");if(t*=10,t+=s-48,(e+=1)>5||t>65535)throw new Error("Invalid port (overflow).")}if(0===e)throw new Error("Invalid port (bad size).");u=t}else u=i;if(c&&o.pton6(l,null,0)<0)throw new Error("Invalid IPv6 address.");let d,p=null,g=v.NONE;try{p=h.decode(l)}catch(t){}return p&&(l=h.encode(p),g=h.getType(p)),{host:l,port:u,type:g,hostname:d=g===v.INET6?`[${l}]:${u}`:`${l}:${u}`,raw:p,key:a}},h.getTypeString=function(t){if(s("string"==typeof t),0===t.length)return v.NONE;if(t.length>255)return v.NONE;if(a.isLegacyString(t))return v.ONION;if(o.pton4(t,null,0)>=0)return v.INET4;const e=w;return o.pton6(t,e,0)>=0?h.getType(e):v.NONE},h.isMappedString=function(t){const e=w;return!!(o.pton6(t,e,0)>=0&&h.isMapped(e))},h.isIPv4String=function(t){return h.getTypeString(t)===v.INET4},h.isIPv6String=function(t){return h.getTypeString(t)===v.INET6},h.isOnionString=function(t){return h.getTypeString(t)===v.ONION},h.isUnknownString=function(t){return h.getTypeString(t)===v.NONE},h.isIPString=function(t){const e=h.getTypeString(t);switch(e){case v.INET4:case v.INET6:return e;default:return v.NONE}},h.isEqualString=function(t,e){const i=y,s=b;return h.write(i,t,0,16),h.write(s,e,0,16),i.equals(s)},h.maskString=function(t,e){const i=y,s=b;return h.write(i,t,0,16),h.write(s,e,0,16),h.mask(i,s,i),h.encode(i)},h.cidrString=function(t,e){const i=y;return h.write(i,t,0,16),h.cidr(i,e,i),h.encode(i)},h.getType=function(t){return h.isMapped(t)?v.INET4:h.isOnion(t)?v.ONION:v.INET6},h.isMapped=function(e){return s(t.isBuffer(e)),s(16===e.length),o.mapped(e,0)},h.isIPv4=function(t){return h.isMapped(t)},h.isIPv6=function(t){return!h.isMapped(t)&&!h.isOnion(t)},h.isOnion=function(e){return s(t.isBuffer(e)),s(16===e.length),o.onion(e,0)},h.isIP=function(t){return h.isIPv4(t)?v.INET4:h.isIPv6(t)?v.INET6:v.NONE},h.isEqual=function(e,i){return s(t.isBuffer(e)),s(t.isBuffer(i)),s(16===e.length),s(16===i.length),e.equals(i)},h.mask=function(e,i,r){null==r&&(r=t.allocUnsafe(16)),s(t.isBuffer(e)),s(t.isBuffer(i)),s(t.isBuffer(r)),s(16===e.length),s(16===i.length),s(16===r.length);const n=h.isMapped(e)?12:0;e!==r&&e.copy(r,0,0,16);for(let t=n;t<16;t++)r[t]=e[t]&i[t];return r},h.cidr=function(e,i,r){s(t.isBuffer(e)),s(16===e.length),s((255&i)===i);const n=w;let o=0,a=128;if(h.isMapped(e)&&(o=12,a=32,n.fill(0,0,10),n[10]=255,n[11]=255),i>a)throw new Error("Too many CIDR bits.");for(let t=o;t<16;t++){let e=8;i<8&&(e=i),i-=e,n[t]=255&~(255>>e)}return h.mask(e,n,r)},h.isNull=function(t){return h.isIPv4(t)?0===t[12]&&0===t[13]&&0===t[14]&&0===t[15]:h.isEqual(t,l)},h.isBroadcast=function(t){return!!h.isIPv4(t)&&255===t[12]&&255===t[13]&&255===t[14]&&255===t[15]},h.isRFC1918=function(t){return!!h.isIPv4(t)&&(10===t[12]||192===t[12]&&168===t[13]||172===t[12]&&t[13]>=16&&t[13]<=31)},h.isRFC2544=function(t){return!!h.isIPv4(t)&&(198===t[12]&&(18===t[13]||19===t[13])||169===t[12]&&254===t[13])},h.isRFC3927=function(t){return!!h.isIPv4(t)&&169===t[12]&&254===t[13]},h.isRFC6598=function(t){return!!h.isIPv4(t)&&100===t[12]&&t[13]>=64&&t[13]<=127},h.isRFC5737=function(t){return!!h.isIPv4(t)&&(192===t[12]&&0===t[13]&&2===t[14]||198===t[12]&&51===t[13]&&100===t[14]||203===t[12]&&0===t[13]&&113===t[14])},h.isRFC3849=function(e){return s(t.isBuffer(e)),s(16===e.length),32===e[0]&&1===e[1]&&13===e[2]&&184===e[3]},h.isRFC3964=function(e){return s(t.isBuffer(e)),s(16===e.length),32===e[0]&&2===e[1]},h.isRFC6052=function(t){return E(t,c)},h.isRFC4380=function(e){return s(t.isBuffer(e)),s(16===e.length),32===e[0]&&1===e[1]&&0===e[2]&&0===e[3]},h.isRFC4862=function(t){return E(t,f)},h.isRFC4193=function(e){return s(t.isBuffer(e)),s(16===e.length),252==(254&e[0])},h.isRFC6145=function(t){return E(t,d)},h.isRFC4843=function(e){return s(t.isBuffer(e)),s(16===e.length),32===e[0]&&1===e[1]&&0===e[2]&&16==(240&e[3])},h.isLocal=function(t){return h.isIPv4(t)?127===t[12]&&0===t[13]:!!h.isEqual(t,u)},h.isMulticast=function(t){return h.isIPv4(t)?224==(240&t[12]):255===t[0]},h.isValid=function(t){return!(E(t,p)||h.isNull(t)||h.isBroadcast(t)||h.isRFC3849(t))},h.isRoutable=function(t){return!(!h.isValid(t)||h.isRFC1918(t)||h.isRFC2544(t)||h.isRFC3927(t)||h.isRFC4862(t)||h.isRFC6598(t)||h.isRFC5737(t)||h.isRFC4193(t)&&!h.isOnion(t)||h.isRFC4843(t)||h.isLocal(t))},h.getNetwork=function(t){return h.isIPv4(t)?k.INET4:h.isRFC4380(t)?k.TEREDO:h.isOnion(t)?k.ONION:k.INET6},h.getReachability=function(t,e){if(!h.isRoutable(t))return 0;const i=h.getNetwork(t);switch(h.getNetwork(e)){case k.IPV4:switch(i){case k.IPV4:return 4;default:return 1}break;case k.INET6:switch(i){case k.TEREDO:return 2;case k.IPV4:return 4;case k.INET6:return h.isRFC3964(t)||h.isRFC6052(t)||h.isRFC6145(t)?3:5;default:return 1}break;case k.ONION:switch(i){case k.IPV4:return 4;case k.ONION:return 6;default:return 1}break;case k.TEREDO:switch(i){case k.TEREDO:return 2;case k.INET6:return 3;case k.IPV4:return 4;default:return 1}break;default:switch(i){case k.TEREDO:return 2;case k.INET6:return 3;case k.IPV4:return 4;case k.ONION:return 6;default:return 1}}},h._interfaces=function(t,e){if("function"!=typeof r.networkInterfaces)return[];s(t>>>0===t);const i=function(t){switch(s(t>>>0===t),t){case v.NONE:return null;case v.INET4:return"IPv4";case v.INET6:return"IPv6"}throw new Error(`Invalid address family: ${t}.`)}(e),n=r.networkInterfaces(),o=[],a=w;for(const s of Object.keys(n)){const r=n[s];for(const s of r)if(!i||s.family===i){try{h.write(a,s.address,0,16)}catch(t){continue}if(h.isValid(a)){switch(e){case v.NONE:break;case v.INET4:if(!h.isIPv4(a))continue;break;case v.INET6:if(h.isIPv4(a))continue}switch(t){case 0:break;case 1:if(!h.isLocal(a))continue;break;case 2:if(h.isLocal(a))continue;break;case 3:if(h.isLocal(a))continue;if(h.isRoutable(a))continue;break;case 4:if(h.isLocal(a))continue;if(!h.isRoutable(a))continue}o.push(h.encode(a))}}}return o},h.getInterfaces=function(t){return h._interfaces(0,R(t))},h.getLocal=function(t){return h._interfaces(1,R(t))},h.getNonlocal=function(t){return h._interfaces(2,R(t))},h.getPrivate=function(t){return h._interfaces(3,R(t))},h.getPublic=function(t){return h._interfaces(4,R(t))},h.type=h.getTypeString,h.family=h.isIPString,h.test=h.getTypeString,h.equal=h.isEqualString,v.NAME=0,v.DNS=0,v.IPV4=4,v.IPV6=6,h.toString=h.encode,h.toBuffer=h.decode,h.toMapped=h.map,h.isNameString=h.isUnknownString,h.hasPrefix=E,h.getStringType=h.getTypeString,h.isV4String=h.isIPv4String,h.isV6String=h.isIPv6String,h.isDNSString=h.isUnknownString,h.fromHostname=h.fromHost,h.toHostname=h.toHost,h.IP=h,h.ip=h,h.types=v,h.networks=k,h.ZERO_IP=l,h.onion=a,h.inet=o}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * dns.js - dns backend for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.unsupported=!0,e.Resolver=class{constructor(){throw new Error("DNS resolver not available.")}},e.resolve=async function(t,e,i){throw new Error("DNS not supported.")},e.reverse=async function(t,e){throw new Error("DNS not supported.")},e.lookup=async function(t,e,i){throw new Error("DNS not supported.")},e.lookupService=async function(t,e,i){throw new Error("DNS not supported.")},e.getIPv4=async function(t){throw new Error("DNS not supported.")},e.getIPv6=async function(t){throw new Error("DNS not supported.")}},function(t,e,i){"use strict";
/*!
 * net/index.js - p2p for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.BIP150=i(135),e.BIP151=i(133),e.bip152=i(108),e.common=i(34),e.Framer=i(216),e.HostList=i(215),e.NetAddress=i(67),e.packets=i(54),e.Parser=i(213),e.Peer=i(132),e.Pool=i(107)},function(t,e,i){"use strict";
/*!
 * mining/index.js - mining infrastructure for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.common=i(223),e.CPUMiner=i(222),e.mine=i(71),e.Miner=i(136),e.BlockTemplate=i(221)},function(t,e,i){"use strict";
/*!
 * heap.js - heap object for bcoin
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0);class r{constructor(t){this.compare=n,this.items=[],t&&this.set(t)}init(){const t=this.items.length;if(!(t<=1))for(let e=(t/2|0)-1;e>=0;e--)this.down(e,t)}size(){return this.items.length}set(t){s("function"==typeof t,"Comparator must be a function."),this.compare=t}insert(t){return this.items.push(t),this.up(this.items.length-1),this.items.length}shift(){if(0===this.items.length)return null;const t=this.items.length-1;return this.swap(0,t),this.down(0,t),this.items.pop()}remove(t){if(0===this.items.length)return null;const e=this.items.length-1;return t<0||t>e?null:(e!==t&&(this.swap(t,e),this.down(t,e),this.up(t)),this.items.pop())}swap(t,e){const i=this.items[t],s=this.items[e];this.items[t]=s,this.items[e]=i}less(t,e){return this.compare(this.items[t],this.items[e])<0}down(t,e){for(;;){const i=2*t+1;if(s(i>=0),i<0||i>=e)break;let r=i;const n=i+1;if(n<e&&!this.less(i,n)&&(r=n),!this.less(r,t))break;this.swap(t,r),t=r}}up(t){for(;;){const e=(t-1)/2|0;if(s(e>=0),e<0||e===t)break;if(!this.less(t,e))break;this.swap(e,t),t=e}}toArray(){const t=new r,e=[];for(t.compare=this.compare,t.items=this.items.slice();t.size()>0;)e.push(t.shift());return e}static fromArray(t,e){const i=new r;return i.set(t),i.items=e,i.init(),i}}function n(t,e){throw new Error("No heap comparator set.")}t.exports=r},function(t,e,i){"use strict";(function(e){
/*!
 * rollingfilter.js - rolling bloom filter for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(137),o=e.alloc(0);class a{constructor(t,e){this.hi=t,this.lo=e}}function h(t,e){const i=r.readU32(t,e+4),s=r.readU32(t,e);return new a(i,s)}function l(t,e,i){r.writeU32(t,e.hi,i+4),r.writeU32(t,e.lo,i)}const u=e.allocUnsafe(20),c=e.allocUnsafe(32);function f(t,i){return"string"!=typeof t?t:"hex"!==i?e.from(t,i):40===t.length?(u.write(t,0,20,"hex"),u):64===t.length?(c.write(t,0,32,"hex"),c):e.from(t,"hex")}t.exports=class{constructor(t,e){this.entries=0,this.generation=1,this.n=0,this.limit=0,this.size=0,this.items=0,this.tweak=0,this.filter=o,null!=t&&this.fromRate(t,e)}fromRate(t,i){s("number"==typeof t,"`items` must be a number."),s(t>0,"`items` must be greater than zero."),s(Number.isSafeInteger(t),"`items` must be an integer."),s("number"==typeof i,"`rate` must be a number."),s(i>0&&i<=1,"`rate` must be between 0.0 and 1.0.");const r=Math.log(i),n=Math.max(1,Math.min(Math.round(r/Math.log(.5)),50)),o=(t+1)/2|0;let a=-1*n*(3*o)/Math.log(1-Math.exp(r/n));t=(((a=Math.ceil(a))+63)/64|0)<<1,t>>>=0,t=Math.max(1,t);const h=4294967296*Math.random()>>>0,l=e.allocUnsafe(8*t);return l.fill(0),this.n=n,this.limit=o,this.size=a,this.items=t,this.tweak=h,this.filter=l,this}static fromRate(t,e){return(new this).fromRate(t,e)}hash(t,e){return n.tweak(t,e,this.tweak)}reset(){0!==this.entries&&(this.entries=0,this.generation=1,this.filter.fill(0))}add(t,e){if(t=f(t,e),this.entries===this.limit){this.entries=0,this.generation+=1,4===this.generation&&(this.generation=1);const t=4294967295*(1&this.generation),e=4294967295*(this.generation>>>1);for(let i=0;i<this.items;i+=2){const s=8*i,r=8*(i+1),n=h(this.filter,s),o=h(this.filter,r),a=n.hi^t|o.hi^e,u=n.lo^t|o.lo^e;n.hi&=a,n.lo&=u,o.hi&=a,o.lo&=u,l(this.filter,n,s),l(this.filter,o,r)}}this.entries+=1;for(let e=0;e<this.n;e++){const i=this.hash(t,e),s=63&i,r=(i>>>6)%this.items,n=8*(-2&r),o=8*(1|r),a=s%8,h=(s-a)/8;this.filter[n+h]&=~(1<<a),this.filter[n+h]|=(1&this.generation)<<a,this.filter[o+h]&=~(1<<a),this.filter[o+h]|=this.generation>>>1<<a}}test(t,e){if(0===this.entries)return!1;t=f(t,e);for(let e=0;e<this.n;e++){const i=this.hash(t,e),s=63&i,r=(i>>>6)%this.items,n=8*(-2&r),o=8*(1|r),a=s%8,h=(s-a)/8;if(0==(this.filter[n+h]>>>a&1|this.filter[o+h]>>>a&1))return!1}return!0}added(t,e){return t=f(t,e),!this.test(t)&&(this.add(t),!0)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * murmur3.js - murmur3 hash for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0);function r(e,i){s(t.isBuffer(e)),s("number"==typeof i);const r=e.length-e.length%4,h=3432918353,l=461845907;let u=i;for(let t=0;t<r;t+=4){let i=e[t+3]<<24|e[t+2]<<16|e[t+1]<<8|e[t];u=o(n(u=a(u^=i=n(i=a(i=n(i,h),15),l),13),5),3864292196)}let c=0;switch(3&e.length){case 3:c^=e[r+2]<<16;case 2:c^=e[r+1]<<8;case 1:u^=c=n(c=a(c=n(c^=e[r+0],h),15),l)}return u^=e.length,u=n(u^=u>>>16,2246822507),u=n(u^=u>>>13,3266489909),(u^=u>>>16)<0&&(u+=4294967296),u}function n(t,e){const i=65535&t,s=65535&e;let r=i*s,n=(t>>>16)*s+(e>>>16)*i&65535,o=(n+=r>>>16)<<16|(r&=65535);return o<0&&(o+=4294967296),o}function o(t,e){let i=t+e&4294967295;return i<0&&(i+=4294967296),i}function a(t,e){return t<<e|t>>>32-e}e.sum=r,e.tweak=function(t,e,i){return s("number"==typeof i),r(t,o(n(e,4221880213),i))}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * bloom.js - bloom filter for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(2),n=i(137),{encoding:o}=r,a=e.alloc(0),h=.48045301391820144,l=.6931471805599453;class u extends r.Struct{constructor(t,e,i,s){super(),this.filter=a,this.size=0,this.n=0,this.tweak=0,this.update=u.flags.NONE,null!=t&&this.fromOptions(t,e,i,s)}fromOptions(t,i,r,n){s("number"==typeof t,"`size` must be a number."),s(t>0,"`size` must be greater than zero."),s(Number.isSafeInteger(t),"`size` must be an integer."),t-=t%8;const o=e.allocUnsafe(t/8);return o.fill(0),null!=r&&-1!==r||(r=4294967296*Math.random()>>>0),null!=n&&-1!==n||(n=u.flags.NONE),"string"==typeof n&&(n=u.flags[n.toUpperCase()],s(null!=n,"Unknown update flag.")),s(t>0,"`size` must be greater than zero."),s(i>0,"`n` must be greater than zero."),s(Number.isSafeInteger(i),"`n` must be an integer."),s("number"==typeof r,"`tweak` must be a number."),s(Number.isSafeInteger(r),"`tweak` must be an integer."),s(u.flagsByVal[n],"Unknown update flag."),this.filter=o,this.size=t,this.n=i,this.tweak=r,this.update=n,this}static fromOptions(t,e,i,s){return(new this).fromOptions(t,e,i,s)}hash(t,e){return n.tweak(t,e,this.tweak)%this.size}reset(){this.filter.fill(0)}add(t,e){t=d(t,e);for(let e=0;e<this.n;e++){const i=this.hash(t,e);this.filter[i>>>3]|=1<<(7&i)}}test(t,e){t=d(t,e);for(let e=0;e<this.n;e++){const i=this.hash(t,e);if(0==(this.filter[i>>>3]&1<<(7&i)))return!1}return!0}added(t,e){t=d(t,e);let i=!1;for(let e=0;e<this.n;e++){const s=this.hash(t,e);i||0!=(this.filter[s>>>3]&1<<(7&s))||(i=!0),this.filter[s>>>3]|=1<<(7&s)}return i}static fromRate(t,e,i){s("number"==typeof t,"`items` must be a number."),s(t>0,"`items` must be greater than zero."),s(Number.isSafeInteger(t),"`items` must be an integer."),s("number"==typeof e,"`rate` must be a number."),s(e>=0&&e<=1,"`rate` must be between 0.0 and 1.0.");const r=-1/h*t*Math.log(e)|0,n=Math.max(8,r);-1!==i&&s(n<=8*u.MAX_BLOOM_FILTER_SIZE,"Bloom filter size violates policy limits!");const o=Math.max(1,n/t*l|0);return-1!==i&&s(o<=u.MAX_HASH_FUNCS,"Bloom filter size violates policy limits!"),new this(n,o,-1,i)}isWithinConstraints(){return!(this.size>8*u.MAX_BLOOM_FILTER_SIZE||this.n>u.MAX_HASH_FUNCS)}getSize(){return o.sizeVarBytes(this.filter)+9}write(t){return t.writeVarBytes(this.filter),t.writeU32(this.n),t.writeU32(this.tweak),t.writeU8(this.update),t}read(t){return this.filter=t.readVarBytes(),this.size=8*this.filter.length,this.n=t.readU32(),this.tweak=t.readU32(),this.update=t.readU8(),s(null!=u.flagsByVal[this.update],"Unknown update flag."),this}}u.MAX_BLOOM_FILTER_SIZE=36e3,u.MAX_HASH_FUNCS=50,u.flags={NONE:0,ALL:1,PUBKEY_ONLY:2},u.flagsByVal={0:"NONE",1:"ALL",2:"PUBKEY_ONLY"};const c=e.allocUnsafe(20),f=e.allocUnsafe(32);function d(t,i){return"string"!=typeof t?t:"hex"!==i?e.from(t,i):40===t.length?(c.write(t,0,20,"hex"),c):64===t.length?(f.write(t,0,32,"hex"),f):e.from(t,"hex")}t.exports=u}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * mempool/index.js - mempool for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.Fees=i(110),e.layout=i(225),e.MempoolEntry=i(139),e.Mempool=i(138)},function(t,e,i){"use strict";
/*!
 * layout.js - addrindexer layout for bcoin
 * Copyright (c) 2018, the bcoin developers (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(33),r=Object.assign({T:s.key("T",["hash","hash256"]),C:s.key("C",["hash","hash256","uint32"])},i(144));t.exports=r},function(t,e,i){"use strict";
/*!
 * layout.js - txindexer layout for bcoin
 * Copyright (c) 2018, the bcoin developers (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(33),r=Object.assign({t:s.key("t",["hash256"])},i(144));t.exports=r},function(t,e,i){"use strict";(function(e){
/*!
 * nullclient.js - chain client for bcoin
 * Copyright (c) 2018, the bcoin developers (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=i(7);t.exports=class extends r{constructor(t){super(),this.wdb=t,this.network=t.network,this.opened=!1}async open(t){s(!this.opened,"NullClient is already open."),this.opened=!0,e(()=>this.emit("connect"))}async close(){s(this.opened,"NullClient is not open."),this.opened=!1,e(()=>this.emit("disconnect"))}bind(t,e){return this.on(t,e)}hook(t,e){return this.on(t,e)}async getTip(){const{hash:t,height:e,time:i}=this.network.genesis;return{hash:t,height:e,time:i}}async getEntry(t){return{hash:t,height:0,time:0}}async getCoin(t,e){return null}async getHashes(t=-1,e=-1){return[this.network.genesis.hash]}async getBlock(t){return null}async getBlockView(t){return null}async rescan(t){}}}).call(this,i(26).setImmediate)},function(t,e,i){"use strict";(function(s){
/*!
 * records.js - indexer records
 * Copyright (c) 2018, the bcoin developers (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(2),n=i(5),o=i(3);class a{constructor(){this.startHeight=0,this.height=0}clone(){const t=new a;return t.startHeight=this.startHeight,t.height=this.height,t}fromRaw(t){const e=r.read(t);return this.startHeight=e.readU32(),this.height=e.readU32(),this}static fromRaw(t){return(new this).fromRaw(t)}toRaw(){const t=r.write(8);return t.writeU32(this.startHeight),t.writeU32(this.height),t.render()}}e.ChainState=a,e.BlockMeta=class{constructor(t,e){this.hash=t||o.NULL_HASH,this.height=null!=e?e:-1}clone(){return new this.constructor(this.hash,this.height)}toHash(){return s.from(this.hash,"hex")}fromEntry(t){return this.hash=t.hash,this.height=t.height,this}fromJSON(t){return this.hash=n.revHex(t.hash),this.height=t.height,this}fromRaw(t){const e=r.read(t);return this.hash=e.readHash("hex"),this.height=e.readI32(),this}static fromEntry(t){return(new this).fromEntry(t)}static fromJSON(t){return(new this).fromJSON(t)}static fromRaw(t){return(new this).fromRaw(t)}toRaw(){const t=r.write(36);return t.writeHash(this.hash),t.writeI32(this.height),t.render()}toJSON(){return{hash:n.revHex(this.hash),height:this.height}}},t.exports=e}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * fs-browser.js - promisified fs module for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */function s(t,e){"string"!=typeof e&&(e="/");const i=`ENOENT: no such file or directory, ${t} '${e}'`,r=new Error(i);return r.errno=-2,r.code="ENOENT",r.syscall=t,r.path=e,Error.captureStackTrace&&Error.captureStackTrace(r,s),r}function r(t){const e=`EBADF: bad file descriptor, ${t}`,i=new Error(e);return i.errno=-9,i.code="EBADF",i.syscall=t,i.path="/",Error.captureStackTrace&&Error.captureStackTrace(i,r),i}function n(t){return async e=>{throw s(t,e)}}function o(t){return e=>{throw s(t,e)}}function a(t){return async()=>{throw r(t)}}function h(t){return()=>{throw r(t)}}async function l(){}function u(){}const c={emit:u,on:(t,e)=>{"error"===t&&e(s("stat"))},once:(t,e)=>{"error"===t&&e(s("stat"))},addListener:(t,e)=>{"error"===t&&e(s("stat"))},removeListener:u,removeAllListeners:u,listeners:()=>[],listenerCount:()=>0,readable:!0,writable:!1,write:u,end:u,close:u,destroy:u},f={emit:u,on:u,once:u,addListener:u,removeListener:u,removeAllListeners:u,listeners:()=>[],listenerCount:()=>0,readable:!1,writable:!0,write:u,end:u,close:u,destroy:u};e.unsupported=!0,e.access=n("stat"),e.accessSync=o("stat"),e.appendFile=n("open"),e.appendFileSync=o("open"),e.chmod=l,e.chmodSync=u,e.chown=l,e.chownSync=u,e.close=a("close"),e.closeSync=h("close"),e.constants={UV_FS_SYMLINK_DIR:1,UV_FS_SYMLINK_JUNCTION:2,O_RDONLY:0,O_WRONLY:1,O_RDWR:2,S_IFMT:61440,S_IFREG:32768,S_IFDIR:16384,S_IFCHR:8192,S_IFBLK:24576,S_IFIFO:4096,S_IFLNK:40960,S_IFSOCK:49152,O_CREAT:64,O_EXCL:128,O_NOCTTY:256,O_TRUNC:512,O_APPEND:1024,O_DIRECTORY:65536,O_NOATIME:262144,O_NOFOLLOW:131072,O_SYNC:1052672,O_DSYNC:4096,O_DIRECT:16384,O_NONBLOCK:2048,S_IRWXU:448,S_IRUSR:256,S_IWUSR:128,S_IXUSR:64,S_IRWXG:56,S_IRGRP:32,S_IWGRP:16,S_IXGRP:8,S_IRWXO:7,S_IROTH:4,S_IWOTH:2,S_IXOTH:1,F_OK:0,R_OK:4,W_OK:2,X_OK:1,UV_FS_COPYFILE_EXCL:1,UV_FS_COPYFILE_FICLONE:2,UV_FS_COPYFILE_FICLONE_FORCE:4,COPYFILE_EXCL:1,COPYFILE_FICLONE:2,COPYFILE_FICLONE_FORCE:4},e.copyFile=l,e.copyFileSync=u,e.createReadStream=(()=>c),e.createWriteStream=(()=>f),e.fchmod=a("fchmod"),e.fchmodSync=h("fchmod"),e.fchown=a("fchown"),e.fchownSync=h("fchown"),e.fdatasync=a("fdatasync"),e.fdatasyncSync=h("fdatasync"),e.fstat=a("fstat"),e.fstatSync=h("fstat"),e.fsync=a("fsync"),e.fsyncSync=h("fsync"),e.ftruncate=a("ftruncate"),e.ftruncateSync=h("ftruncate"),e.futimes=a("futimes"),e.futimesSync=h("futimes"),e.lchmod=l,e.lchmodSync=u,e.lchown=l,e.lchownSync=u,e.link=l,e.linkSync=u,e.lstat=n("lstat"),e.lstatSync=o("lstat"),e.mkdir=l,e.mkdirSync=u,e.mkdtemp=(async()=>`/tmp/${Math.random().toString(36)}`),e.mkdtempSync=(()=>`/tmp/${Math.random().toString(36)}`),e.open=n("open"),e.openSync=o("open"),e.read=a("read"),e.readSync=h("read"),e.readdir=n("readdir"),e.readdirSync=o("readdir"),e.readFile=n("open"),e.readFileSync=o("open"),e.readlink=n("readlink"),e.readlinkSync=o("readlink"),e.realpath=n("stat"),e.realpath.native=n("stat"),e.realpathSync=o("stat"),e.realpathSync.native=o("stat"),e.rename=l,e.renameSync=u,e.rmdir=l,e.rmdirSync=u,e.stat=n("stat"),e.statSync=o("stat"),e.symlink=l,e.symlinkSync=u,e.truncate=l,e.truncateSync=u,e.unlink=l,e.unlinkSync=u,e.unwatchFile=u,e.utimes=l,e.utimesSync=u,e.watch=(()=>c),e.watchFile=u,e.write=a("write"),e.writeSync=h("write"),e.writeFile=l,e.writeFileSync=u,e.promises=e,e.exists=(async()=>!1),e.existsSync=(()=>!1),e.rimraf=l,e.rimrafSync=u,e.mkdirp=l,e.mkdirpSync=u},function(t,e,i){"use strict";
/*!
 * index.js - indexer for bcoin
 * Copyright (c) 2018, the bcoin developers (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.Indexer=i(111),e.TXIndexer=i(142),e.AddrIndexer=i(140),e.ChainClient=i(143)},function(t){t.exports={0:{60:[null,null,{824:8814}],61:[null,null,{824:8800}],62:[null,null,{824:8815}],65:[null,null,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[null,null,{775:7682,803:7684,817:7686}],67:[null,null,{769:262,770:264,775:266,780:268,807:199}],68:[null,null,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[null,null,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[null,null,{775:7710}],71:[null,null,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[null,null,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[null,null,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[null,null,{770:308}],75:[null,null,{769:7728,780:488,803:7730,807:310,817:7732}],76:[null,null,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[null,null,{769:7742,775:7744,803:7746}],78:[null,null,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[null,null,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[null,null,{769:7764,775:7766}],82:[null,null,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[null,null,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[null,null,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[null,null,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[null,null,{771:7804,803:7806}],87:[null,null,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[null,null,{775:7818,776:7820}],89:[null,null,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[null,null,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[null,null,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[null,null,{775:7683,803:7685,817:7687}],99:[null,null,{769:263,770:265,775:267,780:269,807:231}],100:[null,null,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[null,null,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[null,null,{775:7711}],103:[null,null,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[null,null,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[null,null,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[null,null,{770:309,780:496}],107:[null,null,{769:7729,780:489,803:7731,807:311,817:7733}],108:[null,null,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[null,null,{769:7743,775:7745,803:7747}],110:[null,null,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[null,null,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[null,null,{769:7765,775:7767}],114:[null,null,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[null,null,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[null,null,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[null,null,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[null,null,{771:7805,803:7807}],119:[null,null,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[null,null,{775:7819,776:7821}],121:[null,null,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[null,null,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],null,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],null,{772:478}],197:[[65,778],null,{769:506}],198:[null,null,{769:508,772:482}],199:[[67,807],null,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],null,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],null,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],null,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],null,{769:7756,772:556,776:7758}],214:[[79,776],null,{772:554}],216:[null,null,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],null,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],null,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],null,{772:479}],229:[[97,778],null,{769:507}],230:[null,null,{769:509,772:483}],231:[[99,807],null,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],null,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],null,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],null,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],null,{769:7757,772:557,776:7759}],246:[[111,776],null,{772:555}],248:[null,null,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],null,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},256:{256:[[65,772]],257:[[97,772]],258:[[65,774],null,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],null,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],null,{768:7700,769:7702}],275:[[101,772],null,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],null,{768:7760,769:7762}],333:[[111,772],null,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],null,{775:7780}],347:[[115,769],null,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],null,{775:7782}],353:[[115,780],null,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],null,{769:7800}],361:[[117,771],null,{769:7801}],362:[[85,772],null,{776:7802}],363:[[117,772],null,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],null,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],null,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],null,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],null,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[null,null,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],null,{772:492}],491:[[111,808],null,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[null,220]},512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],null,{772:480}],551:[[97,775],null,{772:481}],552:[[69,807],null,{774:7708}],553:[[101,807],null,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],null,{772:560}],559:[[111,775],null,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[null,null,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[null,220]},768:{768:[null,230],769:[null,230],770:[null,230],771:[null,230],772:[null,230],773:[null,230],774:[null,230],775:[null,230],776:[null,230,{769:836}],777:[null,230],778:[null,230],779:[null,230],780:[null,230],781:[null,230],782:[null,230],783:[null,230],784:[null,230],785:[null,230],786:[null,230],787:[null,230],788:[null,230],789:[null,232],790:[null,220],791:[null,220],792:[null,220],793:[null,220],794:[null,232],795:[null,216],796:[null,220],797:[null,220],798:[null,220],799:[null,220],800:[null,220],801:[null,202],802:[null,202],803:[null,220],804:[null,220],805:[null,220],806:[null,220],807:[null,202],808:[null,202],809:[null,220],810:[null,220],811:[null,220],812:[null,220],813:[null,220],814:[null,220],815:[null,220],816:[null,220],817:[null,220],818:[null,220],819:[null,220],820:[null,1],821:[null,1],822:[null,1],823:[null,1],824:[null,1],825:[null,220],826:[null,220],827:[null,220],828:[null,220],829:[null,230],830:[null,230],831:[null,230],832:[[768],230],833:[[769],230],834:[null,230],835:[[787],230],836:[[776,769],230],837:[null,240],838:[null,230],839:[null,220],840:[null,220],841:[null,220],842:[null,230],843:[null,230],844:[null,230],845:[null,220],846:[null,220],848:[null,230],849:[null,230],850:[null,230],851:[null,220],852:[null,220],853:[null,220],854:[null,220],855:[null,230],856:[null,232],857:[null,220],858:[null,220],859:[null,230],860:[null,233],861:[null,234],862:[null,234],863:[null,233],864:[null,234],865:[null,234],866:[null,233],867:[null,230],868:[null,230],869:[null,230],870:[null,230],871:[null,230],872:[null,230],873:[null,230],874:[null,230],875:[null,230],876:[null,230],877:[null,230],878:[null,230],879:[null,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[null,null,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[null,null,{768:8136,769:904,787:7960,788:7961}],919:[null,null,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[null,null,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[null,null,{768:8184,769:908,787:8008,788:8009}],929:[null,null,{788:8172}],933:[null,null,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[null,null,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],null,{837:8116}],941:[[949,769]],942:[[951,769],null,{837:8132}],943:[[953,769]],944:[[971,769]],945:[null,null,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[null,null,{768:8050,769:941,787:7952,788:7953}],951:[null,null,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[null,null,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[null,null,{768:8056,769:972,787:8e3,788:8001}],961:[null,null,{787:8164,788:8165}],965:[null,null,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[null,null,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],null,{768:8146,769:912,834:8151}],971:[[965,776],null,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],null,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[null,230],66423:[null,230],66424:[null,230],66425:[null,230],66426:[null,230]},1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[null,null,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[null,null,{774:1232,776:1234}],1043:[null,null,{769:1027}],1045:[null,null,{768:1024,774:1238,776:1025}],1046:[null,null,{774:1217,776:1244}],1047:[null,null,{776:1246}],1048:[null,null,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[null,null,{769:1036}],1054:[null,null,{776:1254}],1059:[null,null,{772:1262,774:1038,776:1264,779:1266}],1063:[null,null,{776:1268}],1067:[null,null,{776:1272}],1069:[null,null,{776:1260}],1072:[null,null,{774:1233,776:1235}],1075:[null,null,{769:1107}],1077:[null,null,{768:1104,774:1239,776:1105}],1078:[null,null,{774:1218,776:1245}],1079:[null,null,{776:1247}],1080:[null,null,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[null,null,{769:1116}],1086:[null,null,{776:1255}],1091:[null,null,{772:1263,774:1118,776:1265,779:1267}],1095:[null,null,{776:1269}],1099:[null,null,{776:1273}],1101:[null,null,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[null,null,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[null,null,{783:1142}],1141:[null,null,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[null,230],1156:[null,230],1157:[null,230],1158:[null,230],1159:[null,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[null,null,{776:1242}],1241:[null,null,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[null,null,{776:1258}],1257:[null,null,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},1280:{1415:[[1381,1410],256],1425:[null,220],1426:[null,230],1427:[null,230],1428:[null,230],1429:[null,230],1430:[null,220],1431:[null,230],1432:[null,230],1433:[null,230],1434:[null,222],1435:[null,220],1436:[null,230],1437:[null,230],1438:[null,230],1439:[null,230],1440:[null,230],1441:[null,230],1442:[null,220],1443:[null,220],1444:[null,220],1445:[null,220],1446:[null,220],1447:[null,220],1448:[null,230],1449:[null,230],1450:[null,220],1451:[null,230],1452:[null,230],1453:[null,222],1454:[null,228],1455:[null,230],1456:[null,10],1457:[null,11],1458:[null,12],1459:[null,13],1460:[null,14],1461:[null,15],1462:[null,16],1463:[null,17],1464:[null,18],1465:[null,19],1466:[null,19],1467:[null,20],1468:[null,21],1469:[null,22],1471:[null,23],1473:[null,24],1474:[null,25],1476:[null,230],1477:[null,220],1479:[null,18]},1536:{1552:[null,230],1553:[null,230],1554:[null,230],1555:[null,230],1556:[null,230],1557:[null,230],1558:[null,230],1559:[null,230],1560:[null,30],1561:[null,31],1562:[null,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[null,null,{1619:1570,1620:1571,1621:1573}],1608:[null,null,{1620:1572}],1610:[null,null,{1620:1574}],1611:[null,27],1612:[null,28],1613:[null,29],1614:[null,30],1615:[null,31],1616:[null,32],1617:[null,33],1618:[null,34],1619:[null,230],1620:[null,230],1621:[null,220],1622:[null,220],1623:[null,230],1624:[null,230],1625:[null,230],1626:[null,230],1627:[null,230],1628:[null,220],1629:[null,230],1630:[null,230],1631:[null,220],1648:[null,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[null,null,{1620:1730}],1730:[[1729,1620]],1746:[null,null,{1620:1747}],1747:[[1746,1620]],1749:[null,null,{1620:1728}],1750:[null,230],1751:[null,230],1752:[null,230],1753:[null,230],1754:[null,230],1755:[null,230],1756:[null,230],1759:[null,230],1760:[null,230],1761:[null,230],1762:[null,230],1763:[null,220],1764:[null,230],1767:[null,230],1768:[null,230],1770:[null,220],1771:[null,230],1772:[null,230],1773:[null,220]},1792:{1809:[null,36],1840:[null,230],1841:[null,220],1842:[null,230],1843:[null,230],1844:[null,220],1845:[null,230],1846:[null,230],1847:[null,220],1848:[null,220],1849:[null,220],1850:[null,230],1851:[null,220],1852:[null,220],1853:[null,230],1854:[null,220],1855:[null,230],1856:[null,230],1857:[null,230],1858:[null,220],1859:[null,230],1860:[null,220],1861:[null,230],1862:[null,220],1863:[null,230],1864:[null,220],1865:[null,230],1866:[null,230],2027:[null,230],2028:[null,230],2029:[null,230],2030:[null,230],2031:[null,230],2032:[null,230],2033:[null,230],2034:[null,220],2035:[null,230]},2048:{2070:[null,230],2071:[null,230],2072:[null,230],2073:[null,230],2075:[null,230],2076:[null,230],2077:[null,230],2078:[null,230],2079:[null,230],2080:[null,230],2081:[null,230],2082:[null,230],2083:[null,230],2085:[null,230],2086:[null,230],2087:[null,230],2089:[null,230],2090:[null,230],2091:[null,230],2092:[null,230],2093:[null,230],2137:[null,220],2138:[null,220],2139:[null,220],2276:[null,230],2277:[null,230],2278:[null,220],2279:[null,230],2280:[null,230],2281:[null,220],2282:[null,230],2283:[null,230],2284:[null,230],2285:[null,220],2286:[null,220],2287:[null,220],2288:[null,27],2289:[null,28],2290:[null,29],2291:[null,230],2292:[null,230],2293:[null,230],2294:[null,220],2295:[null,230],2296:[null,230],2297:[null,220],2298:[null,220],2299:[null,230],2300:[null,230],2301:[null,230],2302:[null,230],2303:[null,230]},2304:{2344:[null,null,{2364:2345}],2345:[[2344,2364]],2352:[null,null,{2364:2353}],2353:[[2352,2364]],2355:[null,null,{2364:2356}],2356:[[2355,2364]],2364:[null,7],2381:[null,9],2385:[null,230],2386:[null,220],2387:[null,230],2388:[null,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[null,7],2503:[null,null,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[null,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[null,7],2637:[null,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[null,7],2765:[null,9],68109:[null,220],68111:[null,230],68152:[null,230],68153:[null,1],68154:[null,220],68159:[null,9],68325:[null,230],68326:[null,220]},2816:{2876:[null,7],2887:[null,null,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[null,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[null,null,{3031:2964}],2964:[[2962,3031]],3014:[null,null,{3006:3018,3031:3020}],3015:[null,null,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[null,9]},3072:{3142:[null,null,{3158:3144}],3144:[[3142,3158]],3149:[null,9],3157:[null,84],3158:[null,91],3260:[null,7],3263:[null,null,{3285:3264}],3264:[[3263,3285]],3270:[null,null,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],null,{3285:3275}],3275:[[3274,3285]],3277:[null,9]},3328:{3398:[null,null,{3390:3402,3415:3404}],3399:[null,null,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[null,9],3530:[null,9],3545:[null,null,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],null,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},3584:{3635:[[3661,3634],256],3640:[null,103],3641:[null,103],3642:[null,9],3656:[null,107],3657:[null,107],3658:[null,107],3659:[null,107],3763:[[3789,3762],256],3768:[null,118],3769:[null,118],3784:[null,122],3785:[null,122],3786:[null,122],3787:[null,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},3840:{3852:[[3851],256],3864:[null,220],3865:[null,220],3893:[null,220],3895:[null,220],3897:[null,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[null,129],3954:[null,130],3955:[[3953,3954],512],3956:[null,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[null,130],3963:[null,130],3964:[null,130],3965:[null,130],3968:[null,130],3969:[[3953,3968],512],3970:[null,230],3971:[null,230],3972:[null,9],3974:[null,230],3975:[null,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[null,220]},4096:{4133:[null,null,{4142:4134}],4134:[[4133,4142]],4151:[null,7],4153:[null,9],4154:[null,9],4237:[null,220],4348:[[4316],256],69702:[null,9],69759:[null,9],69785:[null,null,{69818:69786}],69786:[[69785,69818]],69787:[null,null,{69818:69788}],69788:[[69787,69818]],69797:[null,null,{69818:69803}],69803:[[69797,69818]],69817:[null,9],69818:[null,7]},4352:{69888:[null,230],69889:[null,230],69890:[null,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[null,null,{69927:69934}],69938:[null,null,{69927:69935}],69939:[null,9],69940:[null,9],70003:[null,7],70080:[null,9]},4608:{70197:[null,9],70198:[null,7],70377:[null,7],70378:[null,9]},4864:{4957:[null,230],4958:[null,230],4959:[null,230],70460:[null,7],70471:[null,null,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[null,9],70502:[null,230],70503:[null,230],70504:[null,230],70505:[null,230],70506:[null,230],70507:[null,230],70508:[null,230],70512:[null,230],70513:[null,230],70514:[null,230],70515:[null,230],70516:[null,230]},5120:{70841:[null,null,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[null,9],70851:[null,7]},5376:{71096:[null,null,{71087:71098}],71097:[null,null,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[null,9],71104:[null,7]},5632:{71231:[null,9],71350:[null,9],71351:[null,7]},5888:{5908:[null,9],5940:[null,9],6098:[null,9],6109:[null,230]},6144:{6313:[null,228]},6400:{6457:[null,222],6458:[null,230],6459:[null,220]},6656:{6679:[null,230],6680:[null,220],6752:[null,9],6773:[null,230],6774:[null,230],6775:[null,230],6776:[null,230],6777:[null,230],6778:[null,230],6779:[null,230],6780:[null,230],6783:[null,220],6832:[null,230],6833:[null,230],6834:[null,230],6835:[null,230],6836:[null,230],6837:[null,220],6838:[null,220],6839:[null,220],6840:[null,220],6841:[null,220],6842:[null,220],6843:[null,230],6844:[null,230],6845:[null,220]},6912:{6917:[null,null,{6965:6918}],6918:[[6917,6965]],6919:[null,null,{6965:6920}],6920:[[6919,6965]],6921:[null,null,{6965:6922}],6922:[[6921,6965]],6923:[null,null,{6965:6924}],6924:[[6923,6965]],6925:[null,null,{6965:6926}],6926:[[6925,6965]],6929:[null,null,{6965:6930}],6930:[[6929,6965]],6964:[null,7],6970:[null,null,{6965:6971}],6971:[[6970,6965]],6972:[null,null,{6965:6973}],6973:[[6972,6965]],6974:[null,null,{6965:6976}],6975:[null,null,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[null,null,{6965:6979}],6979:[[6978,6965]],6980:[null,9],7019:[null,230],7020:[null,220],7021:[null,230],7022:[null,230],7023:[null,230],7024:[null,230],7025:[null,230],7026:[null,230],7027:[null,230],7082:[null,9],7083:[null,9],7142:[null,7],7154:[null,9],7155:[null,9]},7168:{7223:[null,7],7376:[null,230],7377:[null,230],7378:[null,230],7380:[null,1],7381:[null,220],7382:[null,220],7383:[null,220],7384:[null,220],7385:[null,220],7386:[null,230],7387:[null,230],7388:[null,220],7389:[null,220],7390:[null,220],7391:[null,220],7392:[null,230],7394:[null,1],7395:[null,1],7396:[null,1],7397:[null,1],7398:[null,1],7399:[null,1],7400:[null,1],7405:[null,220],7412:[null,230],7416:[null,230],7417:[null,230]},7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[null,230],7617:[null,230],7618:[null,220],7619:[null,230],7620:[null,230],7621:[null,230],7622:[null,230],7623:[null,230],7624:[null,230],7625:[null,230],7626:[null,220],7627:[null,230],7628:[null,230],7629:[null,234],7630:[null,214],7631:[null,220],7632:[null,202],7633:[null,230],7634:[null,230],7635:[null,230],7636:[null,230],7637:[null,230],7638:[null,230],7639:[null,230],7640:[null,230],7641:[null,230],7642:[null,230],7643:[null,230],7644:[null,230],7645:[null,230],7646:[null,230],7647:[null,230],7648:[null,230],7649:[null,230],7650:[null,230],7651:[null,230],7652:[null,230],7653:[null,230],7654:[null,230],7655:[null,230],7656:[null,230],7657:[null,230],7658:[null,230],7659:[null,230],7660:[null,230],7661:[null,230],7662:[null,230],7663:[null,230],7664:[null,230],7665:[null,230],7666:[null,230],7667:[null,230],7668:[null,230],7669:[null,230],7676:[null,233],7677:[null,220],7678:[null,230],7679:[null,220]},7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],null,{772:7736}],7735:[[108,803],null,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],null,{772:7772}],7771:[[114,803],null,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],null,{775:7784}],7779:[[115,803],null,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],null,{770:7852,774:7862}],7841:[[97,803],null,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],null,{770:7878}],7865:[[101,803],null,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],null,{770:7896}],7885:[[111,803],null,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},7936:{7936:[[945,787],null,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],null,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],null,{837:8066}],7939:[[7937,768],null,{837:8067}],7940:[[7936,769],null,{837:8068}],7941:[[7937,769],null,{837:8069}],7942:[[7936,834],null,{837:8070}],7943:[[7937,834],null,{837:8071}],7944:[[913,787],null,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],null,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],null,{837:8074}],7947:[[7945,768],null,{837:8075}],7948:[[7944,769],null,{837:8076}],7949:[[7945,769],null,{837:8077}],7950:[[7944,834],null,{837:8078}],7951:[[7945,834],null,{837:8079}],7952:[[949,787],null,{768:7954,769:7956}],7953:[[949,788],null,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],null,{768:7962,769:7964}],7961:[[917,788],null,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],null,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],null,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],null,{837:8082}],7971:[[7969,768],null,{837:8083}],7972:[[7968,769],null,{837:8084}],7973:[[7969,769],null,{837:8085}],7974:[[7968,834],null,{837:8086}],7975:[[7969,834],null,{837:8087}],7976:[[919,787],null,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],null,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],null,{837:8090}],7979:[[7977,768],null,{837:8091}],7980:[[7976,769],null,{837:8092}],7981:[[7977,769],null,{837:8093}],7982:[[7976,834],null,{837:8094}],7983:[[7977,834],null,{837:8095}],7984:[[953,787],null,{768:7986,769:7988,834:7990}],7985:[[953,788],null,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],null,{768:7994,769:7996,834:7998}],7993:[[921,788],null,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],null,{768:8002,769:8004}],8001:[[959,788],null,{768:8003,769:8005}],8002:[[8e3,768]],8003:[[8001,768]],8004:[[8e3,769]],8005:[[8001,769]],8008:[[927,787],null,{768:8010,769:8012}],8009:[[927,788],null,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],null,{768:8018,769:8020,834:8022}],8017:[[965,788],null,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],null,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],null,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],null,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],null,{837:8098}],8035:[[8033,768],null,{837:8099}],8036:[[8032,769],null,{837:8100}],8037:[[8033,769],null,{837:8101}],8038:[[8032,834],null,{837:8102}],8039:[[8033,834],null,{837:8103}],8040:[[937,787],null,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],null,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],null,{837:8106}],8043:[[8041,768],null,{837:8107}],8044:[[8040,769],null,{837:8108}],8045:[[8041,769],null,{837:8109}],8046:[[8040,834],null,{837:8110}],8047:[[8041,834],null,{837:8111}],8048:[[945,768],null,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],null,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],null,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],null,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],null,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],null,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[null,230],8401:[null,230],8402:[null,1],8403:[null,1],8404:[null,230],8405:[null,230],8406:[null,230],8407:[null,230],8408:[null,1],8409:[null,1],8410:[null,1],8411:[null,230],8412:[null,230],8417:[null,230],8421:[null,1],8422:[null,1],8423:[null,230],8424:[null,220],8425:[null,230],8426:[null,1],8427:[null,1],8428:[null,220],8429:[null,220],8430:[null,220],8431:[null,220],8432:[null,230]},8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[null,null,{824:8602}],8594:[null,null,{824:8603}],8596:[null,null,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[null,null,{824:8653}],8658:[null,null,{824:8655}],8660:[null,null,{824:8654}]},8704:{8707:[null,null,{824:8708}],8708:[[8707,824]],8712:[null,null,{824:8713}],8713:[[8712,824]],8715:[null,null,{824:8716}],8716:[[8715,824]],8739:[null,null,{824:8740}],8740:[[8739,824]],8741:[null,null,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[null,null,{824:8769}],8769:[[8764,824]],8771:[null,null,{824:8772}],8772:[[8771,824]],8773:[null,null,{824:8775}],8775:[[8773,824]],8776:[null,null,{824:8777}],8777:[[8776,824]],8781:[null,null,{824:8813}],8800:[[61,824]],8801:[null,null,{824:8802}],8802:[[8801,824]],8804:[null,null,{824:8816}],8805:[null,null,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[null,null,{824:8820}],8819:[null,null,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[null,null,{824:8824}],8823:[null,null,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[null,null,{824:8832}],8827:[null,null,{824:8833}],8828:[null,null,{824:8928}],8829:[null,null,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[null,null,{824:8836}],8835:[null,null,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[null,null,{824:8840}],8839:[null,null,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[null,null,{824:8930}],8850:[null,null,{824:8931}],8866:[null,null,{824:8876}],8872:[null,null,{824:8877}],8873:[null,null,{824:8878}],8875:[null,null,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[null,null,{824:8938}],8883:[null,null,{824:8939}],8884:[null,null,{824:8940}],8885:[null,null,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},8960:{9001:[[12296]],9002:[[12297]]},9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},11264:{11388:[[106],256],11389:[[86],256],11503:[null,230],11504:[null,230],11505:[null,230]},11520:{11631:[[11617],256],11647:[null,9],11744:[null,230],11745:[null,230],11746:[null,230],11747:[null,230],11748:[null,230],11749:[null,230],11750:[null,230],11751:[null,230],11752:[null,230],11753:[null,230],11754:[null,230],11755:[null,230],11756:[null,230],11757:[null,230],11758:[null,230],11759:[null,230],11760:[null,230],11761:[null,230],11762:[null,230],11763:[null,230],11764:[null,230],11765:[null,230],11766:[null,230],11767:[null,230],11768:[null,230],11769:[null,230],11770:[null,230],11771:[null,230],11772:[null,230],11773:[null,230],11774:[null,230],11775:[null,230]},11776:{11935:[[27597],256],12019:[[40863],256]},12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[3e4],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},12288:{12288:[[32],256],12330:[null,218],12331:[null,228],12332:[null,232],12333:[null,222],12334:[null,224],12335:[null,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[null,null,{12441:12436}],12363:[null,null,{12441:12364}],12364:[[12363,12441]],12365:[null,null,{12441:12366}],12366:[[12365,12441]],12367:[null,null,{12441:12368}],12368:[[12367,12441]],12369:[null,null,{12441:12370}],12370:[[12369,12441]],12371:[null,null,{12441:12372}],12372:[[12371,12441]],12373:[null,null,{12441:12374}],12374:[[12373,12441]],12375:[null,null,{12441:12376}],12376:[[12375,12441]],12377:[null,null,{12441:12378}],12378:[[12377,12441]],12379:[null,null,{12441:12380}],12380:[[12379,12441]],12381:[null,null,{12441:12382}],12382:[[12381,12441]],12383:[null,null,{12441:12384}],12384:[[12383,12441]],12385:[null,null,{12441:12386}],12386:[[12385,12441]],12388:[null,null,{12441:12389}],12389:[[12388,12441]],12390:[null,null,{12441:12391}],12391:[[12390,12441]],12392:[null,null,{12441:12393}],12393:[[12392,12441]],12399:[null,null,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[null,null,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[null,null,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[null,null,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[null,null,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[null,8],12442:[null,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[null,null,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[null,null,{12441:12532}],12459:[null,null,{12441:12460}],12460:[[12459,12441]],12461:[null,null,{12441:12462}],12462:[[12461,12441]],12463:[null,null,{12441:12464}],12464:[[12463,12441]],12465:[null,null,{12441:12466}],12466:[[12465,12441]],12467:[null,null,{12441:12468}],12468:[[12467,12441]],12469:[null,null,{12441:12470}],12470:[[12469,12441]],12471:[null,null,{12441:12472}],12472:[[12471,12441]],12473:[null,null,{12441:12474}],12474:[[12473,12441]],12475:[null,null,{12441:12476}],12476:[[12475,12441]],12477:[null,null,{12441:12478}],12478:[[12477,12441]],12479:[null,null,{12441:12480}],12480:[[12479,12441]],12481:[null,null,{12441:12482}],12482:[[12481,12441]],12484:[null,null,{12441:12485}],12485:[[12484,12441]],12486:[null,null,{12441:12487}],12487:[[12486,12441]],12488:[null,null,{12441:12489}],12489:[[12488,12441]],12495:[null,null,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[null,null,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[null,null,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[null,null,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[null,null,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[null,null,{12441:12535}],12528:[null,null,{12441:12536}],12529:[null,null,{12441:12537}],12530:[null,null,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[null,null,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},27136:{92912:[null,1],92913:[null,1],92914:[null,1],92915:[null,1],92916:[null,1]},27392:{92976:[null,230],92977:[null,230],92978:[null,230],92979:[null,230],92980:[null,230],92981:[null,230],92982:[null,230]},42496:{42607:[null,230],42612:[null,230],42613:[null,230],42614:[null,230],42615:[null,230],42616:[null,230],42617:[null,230],42618:[null,230],42619:[null,230],42620:[null,230],42621:[null,230],42652:[[1098],256],42653:[[1100],256],42655:[null,230],42736:[null,230],42737:[null,230]},42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},43008:{43014:[null,9],43204:[null,9],43232:[null,230],43233:[null,230],43234:[null,230],43235:[null,230],43236:[null,230],43237:[null,230],43238:[null,230],43239:[null,230],43240:[null,230],43241:[null,230],43242:[null,230],43243:[null,230],43244:[null,230],43245:[null,230],43246:[null,230],43247:[null,230],43248:[null,230],43249:[null,230]},43264:{43307:[null,220],43308:[null,220],43309:[null,220],43347:[null,9],43443:[null,7],43456:[null,9]},43520:{43696:[null,230],43698:[null,230],43699:[null,230],43700:[null,220],43703:[null,230],43704:[null,230],43710:[null,230],43711:[null,230],43713:[null,230],43766:[null,9]},43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[null,9]},48128:{113822:[null,1]},53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[null,216],119142:[null,216],119143:[null,1],119144:[null,1],119145:[null,1],119149:[null,226],119150:[null,216],119151:[null,216],119152:[null,216],119153:[null,216],119154:[null,216],119163:[null,220],119164:[null,220],119165:[null,220],119166:[null,220],119167:[null,220],119168:[null,220],119169:[null,220],119170:[null,220],119173:[null,230],119174:[null,230],119175:[null,230],119176:[null,230],119177:[null,230],119178:[null,220],119179:[null,220],119210:[null,230],119211:[null,230],119212:[null,230],119213:[null,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},53760:{119362:[null,230],119363:[null,230],119364:[null,230]},54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},59392:{125136:[null,220],125137:[null,220],125138:[null,220],125139:[null,220],125140:[null,220],125141:[null,220],125142:[null,220]},60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},61952:{},63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23e3]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149e3]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32e3]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[4e4]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[null,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[null,230],65057:[null,230],65058:[null,230],65059:[null,230],65060:[null,230],65061:[null,230],65062:[null,230],65063:[null,220],65064:[null,220],65065:[null,220],65066:[null,220],65067:[null,220],65068:[null,220],65069:[null,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}}},function(t,e,i){"use strict";
/*!
 * Unorm
 * https://github.com/walling/unorm
 *
 * The software dual licensed under the MIT and GPL licenses. MIT license:
 *
 * Copyright (c) 2008-2013
 * Matsuza <matsuza@gmail.com>,
 * Bjarke Walling <bwp@bwp.dk>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * GPL notice (please read the [full GPL license] online):
 *
 * Copyright (C) 2008-2013
 * Matsuza <matsuza@gmail.com>,
 * Bjarke Walling <bwp@bwp.dk>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA  02110-1301, USA.
 *
 * [full GPL license]: http://www.gnu.org/licenses/gpl-2.0-standalone.html
*/const s=i(306),r=[null,0,{}],n=44032,o=4352,a={},h=[];for(let t=0;t<=255;t++)h[t]=0;let l=null;class u{constructor(t,e){this.codepoint=t,this.feature=e}static isHighSurrogate(t){return t>=55296&&t<=56319}static isLowSurrogate(t){return t>=56320&&t<=57343}prepFeature(){this.feature||(this.feature=l(this.codepoint,!0).feature)}toString(){if(this.codepoint<65536)return String.fromCharCode(this.codepoint);const t=this.codepoint-65536;return String.fromCharCode(Math.floor(t/1024)+55296,t%1024+56320)}getDecomp(){return this.prepFeature(),this.feature[0]||null}isCompatibility(){return this.prepFeature(),Boolean(this.feature[1])&&0!=(256&this.feature[1])}isExclude(){return this.prepFeature(),Boolean(this.feature[1])&&0!=(512&this.feature[1])}getCanonicalClass(){return this.prepFeature(),this.feature[1]?255&this.feature[1]:0}getComposite(t){if(this.prepFeature(),!this.feature[2])return null;const e=this.feature[2][t.codepoint];return e?l(e):null}}l=[function(t,e,i){return e<60||13311<e&&e<42607?new u(e,r):t(e,i)},function(t,e,i){let s=a[e];return s||(s=t(e,i)).feature&&++h[e>>8&255]>10&&(a[e]=s),s},function(t,e,i){return i?t(e,i):new u(e,null)},function(t,e,i){if(e<o||4371<=e&&e<n||55204<e)return t(e,i);if(o<=e&&e<4371){const t={},i=21*(e-o);for(let e=0;e<21;e++)t[4449+e]=n+28*(e+i);return new u(e,[null,null,t])}const s=e-n,r=s%28,a=[];if(0!==r)a[0]=[n+s-r,4519+r];else{a[0]=[o+Math.floor(s/588),4449+Math.floor(s%588/28)],a[2]={};for(let t=1;t<28;t++)a[2][4519+t]=e+t}return new u(e,a)},function(t,e,i){const n=(s[65280&e]||{})[e];return new u(e,n||r)}].reduceRight((t,e)=>(i,s)=>e(t,i,s),null);class c{constructor(t){this.str=t,this.cursor=0}next(){if(this.str&&this.cursor<this.str.length){let t=this.str.charCodeAt(this.cursor++);if(u.isHighSurrogate(t)&&this.cursor<this.str.length){const e=this.str.charCodeAt(this.cursor);u.isLowSurrogate(e)&&(t=1024*(t-55296)+(e-56320)+65536,this.cursor+=1)}return l(t)}return this.str=null,null}}class f{constructor(t,e){this.it=t,this.canonical=e,this.resBuf=[]}recursiveDecomp(t){const e=this.canonical,i=t.getDecomp();if(i&&(!e||!t.isCompatibility())){let t=[];for(let e=0;e<i.length;e++){const s=this.recursiveDecomp(l(i[e]));t=t.concat(s)}return t}return[t]}next(){if(0===this.resBuf.length){const t=this.it.next();if(!t)return null;this.resBuf=this.recursiveDecomp(t)}return this.resBuf.shift()}}class d{constructor(t){this.it=t,this.resBuf=[]}next(){if(0===this.resBuf.length)for(;;){const t=this.it.next();if(!t)break;const e=t.getCanonicalClass();let i=this.resBuf.length;if(0!==e)for(;i>0&&!(this.resBuf[i-1].getCanonicalClass()<=e);)i-=1;if(this.resBuf.splice(i,0,t),0===e)break}return this.resBuf.shift()}}class p{constructor(t){this.it=t,this.procBuf=[],this.resBuf=[],this.lastClass=null}next(){for(;0===this.resBuf.length;){const t=this.it.next();if(!t){this.resBuf=this.procBuf,this.procBuf=[];break}if(0===this.procBuf.length){this.lastClass=t.getCanonicalClass(),this.procBuf.push(t);continue}const e=this.procBuf[0].getComposite(t),i=t.getCanonicalClass();e&&(this.lastClass<i||0===this.lastClass)?this.procBuf[0]=e:(0===i&&(this.resBuf=this.procBuf,this.procBuf=[]),this.lastClass=i,this.procBuf.push(t))}return this.resBuf.shift()}}function g(t,e){const i=function(t,e){switch(t){case"NFD":{const t=new c(e),i=new f(t,!0);return new d(i)}case"NFKD":{const t=new c(e),i=new f(t,!1);return new d(i)}case"NFC":{const t=new c(e),i=new f(t,!0),s=new d(i);return new p(s)}case"NFKC":{const t=new c(e),i=new f(t,!1),s=new d(i);return new p(s)}}throw new Error(`${t} is invalid.`)}(t,e);let s,r="";for(;s=i.next();)r+=s.toString();return r}e.nfc=function(t){return g("NFC",t)},e.nfd=function(t){return g("NFD",t)},e.nfkc=function(t){return g("NFKC",t)},e.nfkd=function(t){return g("NFKD",t)}},function(t,e,i){"use strict";
/*!
 * nfkd-compat.js - unicode normalization for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(307);t.exports=function(t){return t.normalize?t.normalize("NFKD"):s.nfkd(t)}},function(t,e,i){"use strict";t.exports=["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"]},function(t,e,i){"use strict";t.exports=["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"]},function(t,e,i){"use strict";t.exports=["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"]},function(t,e,i){"use strict";t.exports=["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"]},function(t,e,i){"use strict";t.exports=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]},function(t,e,i){"use strict";t.exports=["的","一","是","在","不","了","有","和","人","這","中","大","為","上","個","國","我","以","要","他","時","來","用","們","生","到","作","地","於","出","就","分","對","成","會","可","主","發","年","動","同","工","也","能","下","過","子","說","產","種","面","而","方","後","多","定","行","學","法","所","民","得","經","十","三","之","進","著","等","部","度","家","電","力","裡","如","水","化","高","自","二","理","起","小","物","現","實","加","量","都","兩","體","制","機","當","使","點","從","業","本","去","把","性","好","應","開","它","合","還","因","由","其","些","然","前","外","天","政","四","日","那","社","義","事","平","形","相","全","表","間","樣","與","關","各","重","新","線","內","數","正","心","反","你","明","看","原","又","麼","利","比","或","但","質","氣","第","向","道","命","此","變","條","只","沒","結","解","問","意","建","月","公","無","系","軍","很","情","者","最","立","代","想","已","通","並","提","直","題","黨","程","展","五","果","料","象","員","革","位","入","常","文","總","次","品","式","活","設","及","管","特","件","長","求","老","頭","基","資","邊","流","路","級","少","圖","山","統","接","知","較","將","組","見","計","別","她","手","角","期","根","論","運","農","指","幾","九","區","強","放","決","西","被","幹","做","必","戰","先","回","則","任","取","據","處","隊","南","給","色","光","門","即","保","治","北","造","百","規","熱","領","七","海","口","東","導","器","壓","志","世","金","增","爭","濟","階","油","思","術","極","交","受","聯","什","認","六","共","權","收","證","改","清","美","再","採","轉","更","單","風","切","打","白","教","速","花","帶","安","場","身","車","例","真","務","具","萬","每","目","至","達","走","積","示","議","聲","報","鬥","完","類","八","離","華","名","確","才","科","張","信","馬","節","話","米","整","空","元","況","今","集","溫","傳","土","許","步","群","廣","石","記","需","段","研","界","拉","林","律","叫","且","究","觀","越","織","裝","影","算","低","持","音","眾","書","布","复","容","兒","須","際","商","非","驗","連","斷","深","難","近","礦","千","週","委","素","技","備","半","辦","青","省","列","習","響","約","支","般","史","感","勞","便","團","往","酸","歷","市","克","何","除","消","構","府","稱","太","準","精","值","號","率","族","維","劃","選","標","寫","存","候","毛","親","快","效","斯","院","查","江","型","眼","王","按","格","養","易","置","派","層","片","始","卻","專","狀","育","廠","京","識","適","屬","圓","包","火","住","調","滿","縣","局","照","參","紅","細","引","聽","該","鐵","價","嚴","首","底","液","官","德","隨","病","蘇","失","爾","死","講","配","女","黃","推","顯","談","罪","神","藝","呢","席","含","企","望","密","批","營","項","防","舉","球","英","氧","勢","告","李","台","落","木","幫","輪","破","亞","師","圍","注","遠","字","材","排","供","河","態","封","另","施","減","樹","溶","怎","止","案","言","士","均","武","固","葉","魚","波","視","僅","費","緊","愛","左","章","早","朝","害","續","輕","服","試","食","充","兵","源","判","護","司","足","某","練","差","致","板","田","降","黑","犯","負","擊","范","繼","興","似","餘","堅","曲","輸","修","故","城","夫","夠","送","筆","船","佔","右","財","吃","富","春","職","覺","漢","畫","功","巴","跟","雖","雜","飛","檢","吸","助","昇","陽","互","初","創","抗","考","投","壞","策","古","徑","換","未","跑","留","鋼","曾","端","責","站","簡","述","錢","副","盡","帝","射","草","衝","承","獨","令","限","阿","宣","環","雙","請","超","微","讓","控","州","良","軸","找","否","紀","益","依","優","頂","礎","載","倒","房","突","坐","粉","敵","略","客","袁","冷","勝","絕","析","塊","劑","測","絲","協","訴","念","陳","仍","羅","鹽","友","洋","錯","苦","夜","刑","移","頻","逐","靠","混","母","短","皮","終","聚","汽","村","雲","哪","既","距","衛","停","烈","央","察","燒","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","遊","久","菜","味","舊","模","湖","貨","損","預","阻","毫","普","穩","乙","媽","植","息","擴","銀","語","揮","酒","守","拿","序","紙","醫","缺","雨","嗎","針","劉","啊","急","唱","誤","訓","願","審","附","獲","茶","鮮","糧","斤","孩","脫","硫","肥","善","龍","演","父","漸","血","歡","械","掌","歌","沙","剛","攻","謂","盾","討","晚","粒","亂","燃","矛","乎","殺","藥","寧","魯","貴","鐘","煤","讀","班","伯","香","介","迫","句","豐","培","握","蘭","擔","弦","蛋","沉","假","穿","執","答","樂","誰","順","煙","縮","徵","臉","喜","松","腳","困","異","免","背","星","福","買","染","井","概","慢","怕","磁","倍","祖","皇","促","靜","補","評","翻","肉","踐","尼","衣","寬","揚","棉","希","傷","操","垂","秋","宜","氫","套","督","振","架","亮","末","憲","慶","編","牛","觸","映","雷","銷","詩","座","居","抓","裂","胞","呼","娘","景","威","綠","晶","厚","盟","衡","雞","孫","延","危","膠","屋","鄉","臨","陸","顧","掉","呀","燈","歲","措","束","耐","劇","玉","趙","跳","哥","季","課","凱","胡","額","款","紹","卷","齊","偉","蒸","殖","永","宗","苗","川","爐","岩","弱","零","楊","奏","沿","露","桿","探","滑","鎮","飯","濃","航","懷","趕","庫","奪","伊","靈","稅","途","滅","賽","歸","召","鼓","播","盤","裁","險","康","唯","錄","菌","純","借","糖","蓋","橫","符","私","努","堂","域","槍","潤","幅","哈","竟","熟","蟲","澤","腦","壤","碳","歐","遍","側","寨","敢","徹","慮","斜","薄","庭","納","彈","飼","伸","折","麥","濕","暗","荷","瓦","塞","床","築","惡","戶","訪","塔","奇","透","梁","刀","旋","跡","卡","氯","遇","份","毒","泥","退","洗","擺","灰","彩","賣","耗","夏","擇","忙","銅","獻","硬","予","繁","圈","雪","函","亦","抽","篇","陣","陰","丁","尺","追","堆","雄","迎","泛","爸","樓","避","謀","噸","野","豬","旗","累","偏","典","館","索","秦","脂","潮","爺","豆","忽","托","驚","塑","遺","愈","朱","替","纖","粗","傾","尚","痛","楚","謝","奮","購","磨","君","池","旁","碎","骨","監","捕","弟","暴","割","貫","殊","釋","詞","亡","壁","頓","寶","午","塵","聞","揭","炮","殘","冬","橋","婦","警","綜","招","吳","付","浮","遭","徐","您","搖","谷","贊","箱","隔","訂","男","吹","園","紛","唐","敗","宋","玻","巨","耕","坦","榮","閉","灣","鍵","凡","駐","鍋","救","恩","剝","凝","鹼","齒","截","煉","麻","紡","禁","廢","盛","版","緩","淨","睛","昌","婚","涉","筒","嘴","插","岸","朗","莊","街","藏","姑","貿","腐","奴","啦","慣","乘","夥","恢","勻","紗","扎","辯","耳","彪","臣","億","璃","抵","脈","秀","薩","俄","網","舞","店","噴","縱","寸","汗","掛","洪","賀","閃","柬","爆","烯","津","稻","牆","軟","勇","像","滾","厘","蒙","芳","肯","坡","柱","盪","腿","儀","旅","尾","軋","冰","貢","登","黎","削","鑽","勒","逃","障","氨","郭","峰","幣","港","伏","軌","畝","畢","擦","莫","刺","浪","秘","援","株","健","售","股","島","甘","泡","睡","童","鑄","湯","閥","休","匯","舍","牧","繞","炸","哲","磷","績","朋","淡","尖","啟","陷","柴","呈","徒","顏","淚","稍","忘","泵","藍","拖","洞","授","鏡","辛","壯","鋒","貧","虛","彎","摩","泰","幼","廷","尊","窗","綱","弄","隸","疑","氏","宮","姐","震","瑞","怪","尤","琴","循","描","膜","違","夾","腰","緣","珠","窮","森","枝","竹","溝","催","繩","憶","邦","剩","幸","漿","欄","擁","牙","貯","禮","濾","鈉","紋","罷","拍","咱","喊","袖","埃","勤","罰","焦","潛","伍","墨","欲","縫","姓","刊","飽","仿","獎","鋁","鬼","麗","跨","默","挖","鏈","掃","喝","袋","炭","污","幕","諸","弧","勵","梅","奶","潔","災","舟","鑑","苯","訟","抱","毀","懂","寒","智","埔","寄","屆","躍","渡","挑","丹","艱","貝","碰","拔","爹","戴","碼","夢","芽","熔","赤","漁","哭","敬","顆","奔","鉛","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","倉","魏","銳","曉","氮","兼","隱","礙","赫","撥","忠","肅","缸","牽","搶","博","巧","殼","兄","杜","訊","誠","碧","祥","柯","頁","巡","矩","悲","灌","齡","倫","票","尋","桂","鋪","聖","恐","恰","鄭","趣","抬","荒","騰","貼","柔","滴","猛","闊","輛","妻","填","撤","儲","簽","鬧","擾","紫","砂","遞","戲","吊","陶","伐","餵","療","瓶","婆","撫","臂","摸","忍","蝦","蠟","鄰","胸","鞏","擠","偶","棄","槽","勁","乳","鄧","吉","仁","爛","磚","租","烏","艦","伴","瓜","淺","丙","暫","燥","橡","柳","迷","暖","牌","秧","膽","詳","簧","踏","瓷","譜","呆","賓","糊","洛","輝","憤","競","隙","怒","粘","乃","緒","肩","籍","敏","塗","熙","皆","偵","懸","掘","享","糾","醒","狂","鎖","淀","恨","牲","霸","爬","賞","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鴨","趨","鳳","晨","畜","輩","秩","卵","署","梯","炎","灘","棋","驅","篩","峽","冒","啥","壽","譯","浸","泉","帽","遲","矽","疆","貸","漏","稿","冠","嫩","脅","芯","牢","叛","蝕","奧","鳴","嶺","羊","憑","串","塘","繪","酵","融","盆","錫","廟","籌","凍","輔","攝","襲","筋","拒","僚","旱","鉀","鳥","漆","沈","眉","疏","添","棒","穗","硝","韓","逼","扭","僑","涼","挺","碗","栽","炒","杯","患","餾","勸","豪","遼","勃","鴻","旦","吏","拜","狗","埋","輥","掩","飲","搬","罵","辭","勾","扣","估","蔣","絨","霧","丈","朵","姆","擬","宇","輯","陝","雕","償","蓄","崇","剪","倡","廳","咬","駛","薯","刷","斥","番","賦","奉","佛","澆","漫","曼","扇","鈣","桃","扶","仔","返","俗","虧","腔","鞋","棱","覆","框","悄","叔","撞","騙","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","脹","諧","拋","黴","桑","崗","嘛","衰","盜","滲","臟","賴","湧","甜","曹","閱","肌","哩","厲","烴","緯","毅","昨","偽","症","煮","嘆","釘","搭","莖","籠","酷","偷","弓","錐","恆","傑","坑","鼻","翼","綸","敘","獄","逮","罐","絡","棚","抑","膨","蔬","寺","驟","穆","冶","枯","冊","屍","凸","紳","坯","犧","焰","轟","欣","晉","瘦","禦","錠","錦","喪","旬","鍛","壟","搜","撲","邀","亭","酯","邁","舒","脆","酶","閒","憂","酚","頑","羽","漲","卸","仗","陪","闢","懲","杭","姚","肚","捉","飄","漂","昆","欺","吾","郎","烷","汁","呵","飾","蕭","雅","郵","遷","燕","撒","姻","赴","宴","煩","債","帳","斑","鈴","旨","醇","董","餅","雛","姿","拌","傅","腹","妥","揉","賢","拆","歪","葡","胺","丟","浩","徽","昂","墊","擋","覽","貪","慰","繳","汪","慌","馮","諾","姜","誼","兇","劣","誣","耀","昏","躺","盈","騎","喬","溪","叢","盧","抹","悶","諮","刮","駕","纜","悟","摘","鉺","擲","頗","幻","柄","惠","慘","佳","仇","臘","窩","滌","劍","瞧","堡","潑","蔥","罩","霍","撈","胎","蒼","濱","倆","捅","湘","砍","霞","邵","萄","瘋","淮","遂","熊","糞","烘","宿","檔","戈","駁","嫂","裕","徙","箭","捐","腸","撐","曬","辨","殿","蓮","攤","攪","醬","屏","疫","哀","蔡","堵","沫","皺","暢","疊","閣","萊","敲","轄","鉤","痕","壩","巷","餓","禍","丘","玄","溜","曰","邏","彭","嘗","卿","妨","艇","吞","韋","怨","矮","歇"]},function(t,e,i){"use strict";t.exports=["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"]},function(t,e,i){"use strict";
/*!
 * index.js - wordlists for bcoin
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.chinese={simplified:i(315),traditional:i(314)},e.english=i(313),e.french=i(312),e.italian=i(311),e.japanese=i(310),e.spanish=i(309)},function(t,e,i){"use strict";(function(e){
/*!
 * sha512.js - SHA512 implementation for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 * Parts of this software based on hash.js.
 */
const s=i(0),r=i(23),n=-1,o=e.alloc(16,0),a=e.alloc(128,0);a[0]=128;const h=new Uint32Array([1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591]);class l{constructor(){this.state=new Uint32Array(16),this.msg=new Uint32Array(160),this.block=e.allocUnsafe(128),this.size=n}init(){return this.state[0]=1779033703,this.state[1]=4089235720,this.state[2]=3144134277,this.state[3]=2227873595,this.state[4]=1013904242,this.state[5]=4271175723,this.state[6]=2773480762,this.state[7]=1595750129,this.state[8]=1359893119,this.state[9]=2917565137,this.state[10]=2600822924,this.state[11]=725511199,this.state[12]=528734635,this.state[13]=4215389547,this.state[14]=1541459225,this.state[15]=327033209,this.size=0,this}update(t){return s(e.isBuffer(t)),this._update(t,t.length),this}final(){return this._final(e.allocUnsafe(64))}_update(t,e){s(this.size!==n,"Context already finalized.");let i=127&this.size,r=0;if(this.size+=e,i>0){let s=128-i;if(s>e&&(s=e),t.copy(this.block,i,r,r+s),e-=s,r+=s,(i+=s)<128)return;this.transform(this.block,0)}for(;e>=128;)this.transform(t,r),r+=128,e-=128;e>0&&t.copy(this.block,0,r,r+e)}_final(t){s(this.size!==n,"Context already finalized.");const e=this.size%128,i=8*this.size;T(o,i*(1/4294967296),8),T(o,i,12),this._update(a,1+(239-e)%128),this._update(o,16);for(let e=0;e<16;e++)T(t,this.state[e],4*e),this.state[e]=0;for(let t=0;t<160;t++)this.msg[t]=0;for(let t=0;t<128;t++)this.block[t]=0;return this.size=n,t}prepare(t,e){const i=this.msg;let s=0;for(;s<32;s++)i[s]=16777216*(255&(r=t)[n=e+4*s])+((255&r[n+1])<<16|(255&r[n+2])<<8|255&r[n+3]);for(var r,n;s<160;s+=2){const t=P(i[s-4],i[s-3]),e=N(i[s-4],i[s-3]),r=i[s-14],n=i[s-13],o=O(i[s-30],i[s-29]),a=B(i[s-30],i[s-29]),h=i[s-32],l=i[s-31];i[s]=d(t,e,r,n,o,a,h,l),i[s+1]=p(t,e,r,n,o,a,h,l)}}transform(t,e){const i=this.msg;this.prepare(t,e);let s=this.state[0],r=this.state[1],n=this.state[2],o=this.state[3],a=this.state[4],l=this.state[5],d=this.state[6],p=this.state[7],w=this.state[8],y=this.state[9],b=this.state[10],v=this.state[11],O=this.state[12],B=this.state[13],P=this.state[14],N=this.state[15];for(let t=0;t<i.length;t+=2){let e=P,u=N,T=I(w,y),M=A(w,y);const C=k(w,y,b,v,O),L=E(w,y,b,v,O,B),U=h[t],D=h[t+1],F=i[t],H=i[t+1],z=g(e,u,T,M,C,L,U,D,F,H),V=m(e,u,T,M,C,L,U,D,F,H),K=c(e=_(s,r),u=x(s,r),T=R(s,r,n,o,a),M=S(s,r,n,o,a,l)),j=f(e,u,T,M);P=O,N=B,O=b,B=v,b=w,v=y,w=c(d,p,z,V),y=f(p,p,z,V),d=a,p=l,a=n,l=o,n=s,o=r,s=c(z,V,K,j),r=f(z,V,K,j)}u(this.state,0,s,r),u(this.state,2,n,o),u(this.state,4,a,l),u(this.state,6,d,p),u(this.state,8,w,y),u(this.state,10,b,v),u(this.state,12,O,B),u(this.state,14,P,N)}static hash(){return new l}static hmac(){return new r(l,128)}static digest(t){return l.ctx.init().update(t).final()}static root(t,i){return s(e.isBuffer(t)&&64===t.length),s(e.isBuffer(i)&&64===i.length),l.ctx.init().update(t).update(i).final()}static multi(t,e,i){const s=l.ctx;return s.init(),s.update(t),s.update(e),i&&s.update(i),s.final()}static mac(t,e){return l.hmac().init(e).update(t).final()}}function u(t,e,i,s){const r=t[e],n=s+t[e+1]>>>0,o=(n<s?1:0)+i+r;t[e]=o>>>0,t[e+1]=n}function c(t,e,i,s){return(e+s>>>0<e?1:0)+t+i>>>0}function f(t,e,i,s){return e+s>>>0}function d(t,e,i,s,r,n,o,a){let h=0,l=e;return h+=(l=l+s>>>0)<e?1:0,h+=(l=l+n>>>0)<n?1:0,t+i+r+o+(h+=(l=l+a>>>0)<a?1:0)>>>0}function p(t,e,i,s,r,n,o,a){return e+s+n+a>>>0}function g(t,e,i,s,r,n,o,a,h,l){let u=0,c=e;return u+=(c=c+s>>>0)<e?1:0,u+=(c=c+n>>>0)<n?1:0,u+=(c=c+a>>>0)<a?1:0,t+i+r+o+h+(u+=(c=c+l>>>0)<l?1:0)>>>0}function m(t,e,i,s,r,n,o,a,h,l){return e+s+n+a+l>>>0}function w(t,e,i){return(e<<32-i|t>>>i)>>>0}function y(t,e,i){return(t<<32-i|e>>>i)>>>0}function b(t,e,i){return t>>>i}function v(t,e,i){return(t<<32-i|e>>>i)>>>0}function k(t,e,i,s,r){let n=t&i^~t&r;return n<0&&(n+=4294967296),n}function E(t,e,i,s,r,n){let o=e&s^~e&n;return o<0&&(o+=4294967296),o}function R(t,e,i,s,r){let n=t&i^t&r^i&r;return n<0&&(n+=4294967296),n}function S(t,e,i,s,r,n){let o=e&s^e&n^s&n;return o<0&&(o+=4294967296),o}function _(t,e){let i=w(t,e,28)^w(e,t,2)^w(e,t,7);return i<0&&(i+=4294967296),i}function x(t,e){let i=y(t,e,28)^y(e,t,2)^y(e,t,7);return i<0&&(i+=4294967296),i}function I(t,e){let i=w(t,e,14)^w(t,e,18)^w(e,t,9);return i<0&&(i+=4294967296),i}function A(t,e){let i=y(t,e,14)^y(t,e,18)^y(e,t,9);return i<0&&(i+=4294967296),i}function O(t,e){let i=w(t,e,1)^w(t,e,8)^b(t,0,7);return i<0&&(i+=4294967296),i}function B(t,e){let i=y(t,e,1)^y(t,e,8)^v(t,e,7);return i<0&&(i+=4294967296),i}function P(t,e){let i=w(t,e,19)^w(e,t,29)^b(t,0,6);return i<0&&(i+=4294967296),i}function N(t,e){let i=y(t,e,19)^y(e,t,29)^v(t,e,6);return i<0&&(i+=4294967296),i}function T(t,e,i){t[i]=e>>>24,t[i+1]=e>>16&255,t[i+2]=e>>8&255,t[i+3]=255&e}l.id="sha512",l.size=64,l.bits=512,l.blockSize=128,l.zero=e.alloc(64,0),l.ctx=new l,t.exports=l}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * cleanse.js - memzero for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0);let r=0;t.exports=function(t){s(e.isBuffer(t));let i=r;for(let e=0;e<t.length;e++)t[e]=255&i,i+=e;r=i>>>0}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * hd/index.js - hd keys for bcoin
 * Copyright (c) 2014-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(147)},function(t,e,i){"use strict";
/*!
 * coins/index.js - utxo management for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.Coins=i(94),e.CoinView=i(25),e.compress=i(117),e.UndoCoins=i(77)},function(t,e,i){"use strict";
/*!
 * btc/index.js - high-level btc objects for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.Amount=i(19),e.URI=i(227)},function(t,e,i){"use strict";
/*!
 * maplock.js - lock and queue for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0);class r{constructor(){this.jobs=new Map,this.busy=new Set,this.destroyed=!1}static create(){const t=new r;return function(e,i){return t.lock(e,i)}}has(t){return this.busy.has(t)}pending(t){return this.jobs.has(t)}lock(t,e=!1){return this.destroyed?Promise.reject(new Error("Lock is destroyed.")):null==t?Promise.resolve(o):e?(s(this.busy.has(t)),Promise.resolve(o)):this.busy.has(t)?new Promise((e,i)=>{this.jobs.has(t)||this.jobs.set(t,[]),this.jobs.get(t).push(new n(e,i))}):(this.busy.add(t),Promise.resolve(this.unlock(t)))}unlock(t){const e=this;return function i(){const r=e.jobs.get(t);if(s(e.destroyed||e.busy.has(t)),e.busy.delete(t),!r)return;s(!e.destroyed);const n=r.shift();s(n),0===r.length&&e.jobs.delete(t),e.busy.add(t),n.resolve(i)}}destroy(){s(!this.destroyed,"Lock is already destroyed.");const t=this.jobs;this.destroyed=!0,this.jobs=new Map,this.busy=new Map;for(const e of t.values())for(const t of e)t.reject(new Error("Lock was destroyed."))}}class n{constructor(t,e){this.resolve=t,this.reject=e}}function o(){}t.exports=r},function(t,e,i){"use strict";
/*!
 * lock.js - lock and queue for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0);class r{constructor(t=!1){this.named=!0===t,this.jobs=[],this.busy=!1,this.destroyed=!1,this.map=new Map,this.current=null,this.unlocker=this.unlock.bind(this)}static create(t){const e=new r(t);return function(t,i){return e.lock(t,i)}}has(t){return s(this.named,"Must use named jobs."),this.current===t||this.pending(t)}pending(t){s(this.named,"Must use named jobs.");const e=this.map.get(t);return null!=e&&e>0}lock(t,e){let i,r;if(this.named?(i=t||null,r=e||!1):(i=null,r=t||!1),this.destroyed)return Promise.reject(new Error("Lock is destroyed."));if(r)return s(this.busy),Promise.resolve(o);if(this.busy){if(i){const t=this.map.get(i)||0;this.map.set(i,t+1)}return new Promise((t,e)=>{this.jobs.push(new n(t,e,i))})}return this.busy=!0,this.current=i,Promise.resolve(this.unlocker)}unlock(){if(s(this.destroyed||this.busy),this.busy=!1,this.current=null,0===this.jobs.length)return;s(!this.destroyed);const t=this.jobs.shift();if(t.name){let e=this.map.get(t.name);s(e>0),0==--e?this.map.delete(t.name):this.map.set(t.name,e)}this.busy=!0,this.current=t.name,t.resolve(this.unlocker)}destroy(){s(!this.destroyed,"Lock is already destroyed."),this.destroyed=!0;const t=this.jobs;this.busy=!1,this.jobs=[],this.map.clear(),this.current=null;for(const e of t)e.reject(new Error("Lock was destroyed."))}}class n{constructor(t,e,i){this.resolve=t,this.reject=e,this.name=i||null}}function o(){}t.exports=r},function(t,e,i){"use strict";e.unsupported=!0},function(t,e,i){"use strict";(function(e,s){
/*!
 * logger.js - basic logger for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),{format:n,inspect:o}=i(48),a=i(324),h={showHidden:!1,depth:20,colors:!1,customInspect:!0,showProxy:!1,maxArrayLength:1/0,breakLength:60};class l{constructor(t){this.level=l.levels.NONE,this.colors=l.HAS_TTY,this.console=!0,this.shrink=!0,this.closed=!0,this.closing=!1,this.filename=null,this.stream=null,this.contexts=Object.create(null),t&&this.set(t)}set(t){r(t),r(this.closed),"string"!=typeof t?(null!=t.level&&(r("string"==typeof t.level),this.setLevel(t.level)),null!=t.colors&&l.HAS_TTY&&(r("boolean"==typeof t.colors),this.colors=t.colors),null!=t.console&&(r("boolean"==typeof t.console),this.console=t.console),null!=t.shrink&&(r("boolean"==typeof t.shrink),this.shrink=t.shrink),null!=t.filename&&(r("string"==typeof t.filename,"Bad file."),this.filename=t.filename)):this.setLevel(t)}async open(){this.filename?this.stream?this.closed=!1:a.unsupported?this.closed=!1:(this.shrink&&await this.truncate(),this.stream=await f(this.filename),this.stream.once("error",this.handleError.bind(this)),this.closed=!1):this.closed=!1}async close(){if(null!=this.timer&&(clearTimeout(this.timer),this.timer=null),a.unsupported)return this.closed=!0,void(this.stream=null);if(this.stream){try{this.closing=!0,await(t=this.stream,new Promise((e,i)=>{const s=()=>{t.removeListener("error",r),t.removeListener("close",n)},r=t=>{s(),i(t)},n=()=>{s(),e(t)};t.removeAllListeners("error"),t.removeAllListeners("close"),t.once("error",r),t.once("close",n),t.close()}))}finally{this.closing=!1}this.stream=null}var t;this.closed=!0}async truncate(){if(!this.filename)return;if(a.unsupported)return;let t;r(!this.stream);try{t=await a.stat(this.filename)}catch(t){if("ENOENT"===t.code)return;throw t}const i=l.MAX_FILE_SIZE;if(t.size<=i+i/10)return;this.debug("Truncating log file to %dmb.",c(i));const s=await a.open(this.filename,"r+"),n=e.allocUnsafe(i);await a.read(s,n,0,i,t.size-i),await a.ftruncate(s,i),await a.write(s,n,0,i,0),await a.close(s)}handleError(t){try{this.stream.close()}catch(t){}this.stream=null,this.retry()}async reopen(){if(!this.stream&&!this.closed&&!a.unsupported){try{this.stream=await f(this.filename)}catch(t){return void this.retry()}this.stream.once("error",t=>this.handleError(t))}}retry(){null==this.timer&&(this.timer=setTimeout(()=>{this.timer=null,this.reopen()},1e4))}setFile(t){r("string"==typeof t),r(!this.stream,"Log stream has already been created."),this.filename=t}setLevel(t){const e=l.levels[t.toUpperCase()];r(null!=e,"Invalid log level."),this.level=e}fmt(t,e){if(t.length>0){const[i]=t;if(i&&"object"==typeof i)return h.colors=e,o(i,h)}return n(...t)}error(...t){if(this.level<l.levels.ERROR)return;const e=t[0];e instanceof Error?this.logError(l.levels.ERROR,null,e):this.log(l.levels.ERROR,null,t)}warning(...t){if(this.level<l.levels.WARNING)return;const e=t[0];e instanceof Error?this.logError(l.levels.WARNING,null,e):this.log(l.levels.WARNING,null,t)}info(...t){if(this.level<l.levels.INFO)return;const e=t[0];e instanceof Error?this.logError(l.levels.INFO,null,e):this.log(l.levels.INFO,null,t)}debug(...t){if(this.level<l.levels.DEBUG)return;const e=t[0];e instanceof Error?this.logError(l.levels.DEBUG,null,e):this.log(l.levels.DEBUG,null,t)}spam(...t){if(this.level<l.levels.SPAM)return;const e=t[0];e instanceof Error?this.logError(l.levels.SPAM,null,e):this.log(l.levels.SPAM,null,t)}log(t,e,i){this.closed||this.level<t||(this.writeConsole(t,e,i),this.writeStream(t,e,i))}context(t){let e=this.contexts[t];return e||(e=new u(this,t),this.contexts[t]=e),e}writeConsole(t,e,i){const n=l.levelsByVal[t];if(r(n,"Invalid log level."),!this.console)return!1;if(!s.stdout){let s=`[${n}] `;if(e&&(s+=`(${e}) `),i.length>0){const[e]=i;if(e&&"object"==typeof e)return t===l.levels.ERROR?console.error(s,e):console.log(s,e)}return s+=this.fmt(i,!1),t===l.levels.ERROR?console.error(s):console.log(s),!0}let o;if(this.colors){const e=l.styles[t];r(e),o=`[${e}m[${n}][m `}else o=`[${n}] `;return e&&(o+=`(${e}) `),o+=this.fmt(i,this.colors),o+="\n",t===l.levels.ERROR?s.stderr.write(o):s.stdout.write(o)}writeStream(t,e,i){const s=l.prefixByVal[t];if(r(s,"Invalid log level."),!this.stream)return;if(this.closing)return;let n=`[${s}:${(new Date).toISOString().slice(0,-5)+"Z"}] `;e&&(n+=`(${e}) `),n+=this.fmt(i,!1),n+="\n",this.stream.write(n)}logError(t,e,i){if(this.closed)return;a.unsupported&&this.console&&t<=l.levels.WARNING&&console.error(i);let s=String(i.message).replace(/^ *Error: */,"");t!==l.levels.ERROR&&(s=`Error: ${s}`),this.log(t,e,[s]),t<=l.levels.WARNING&&this.stream&&this.stream.write(i.stack+"\n")}memoryUsage(){if(!s.memoryUsage)return{total:0,jsHeap:0,jsHeapTotal:0,nativeHeap:0,external:0};const t=s.memoryUsage();return{total:c(t.rss),jsHeap:c(t.heapUsed),jsHeapTotal:c(t.heapTotal),nativeHeap:c(t.rss-t.heapTotal),external:c(t.external)}}memory(t){const e=this.memoryUsage();this.log(l.levels.DEBUG,t,["Memory: rss=%dmb, js-heap=%d/%dmb native-heap=%dmb",e.total,e.jsHeap,e.jsHeapTotal,e.nativeHeap])}}class u{constructor(t,e){r("string"==typeof e),this.logger=t,this.module=e}open(){return this.logger.open()}close(){return this.logger.close()}setFile(t){this.logger.setFile(t)}setLevel(t){this.logger.setLevel(t)}error(...t){if(this.logger.level<l.levels.ERROR)return;const e=t[0];e instanceof Error?this.logError(l.levels.ERROR,e):this.log(l.levels.ERROR,t)}warning(...t){if(this.logger.level<l.levels.WARNING)return;const e=t[0];e instanceof Error?this.logError(l.levels.WARNING,e):this.log(l.levels.WARNING,t)}info(...t){if(this.logger.level<l.levels.INFO)return;const e=t[0];e instanceof Error?this.logError(l.levels.INFO,e):this.log(l.levels.INFO,t)}debug(...t){if(this.logger.level<l.levels.DEBUG)return;const e=t[0];e instanceof Error?this.logError(l.levels.DEBUG,e):this.log(l.levels.DEBUG,t)}spam(...t){if(this.logger.level<l.levels.SPAM)return;const e=t[0];e instanceof Error?this.logError(l.levels.SPAM,e):this.log(l.levels.SPAM,t)}log(t,e){this.logger.log(t,this.module,e)}context(t){return new u(this.logger,t)}logError(t,e){this.logger.logError(t,this.module,e)}memoryUsage(){return this.logger.memoryUsage()}memory(){this.logger.memory(this.module)}}function c(t){return Math.floor(t/(1<<20))}function f(t){return new Promise((e,i)=>{const s=a.createWriteStream(t,{flags:"a"}),r=()=>{s.removeListener("error",n),s.removeListener("open",o)},n=t=>{try{s.close()}catch(t){}r(),i(t)},o=()=>{r(),e(s)};s.once("error",n),s.once("open",o)})}l.HAS_TTY=Boolean(s.stdout&&s.stdout.isTTY),l.MAX_FILE_SIZE=20<<20,l.levels={NONE:0,ERROR:1,WARNING:2,INFO:3,DEBUG:4,SPAM:5},l.levelsByVal=["none","error","warning","info","debug","spam"],l.prefixByVal=["N","E","W","I","D","S"],l.styles=["0","1;31","1;33","94","90","90"],l.global=new l,t.exports=l}).call(this,i(1).Buffer,i(15))},function(t,e,i){"use strict";
/*!
 * asyncemitter.js - event emitter which resolves promises.
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0);class r{constructor(t,e){s("function"==typeof t,"`handler` must be a function."),s("boolean"==typeof e,"`once` must be a function."),this.handler=t,this.once=e}}function n(t,e){if(0===e)return void t.shift();let i=e+1;for(;i<t.length;)t[e++]=t[i++];t.pop()}t.exports=class{constructor(){this._events=Object.create(null)}addListener(t,e){return this._push(t,e,!1)}on(t,e){return this.addListener(t,e)}once(t,e){return this._push(t,e,!0)}prependListener(t,e){return this._unshift(t,e,!1)}prependOnceListener(t,e){return this._unshift(t,e,!0)}_push(t,e,i){s("string"==typeof t,"`type` must be a string."),this._events[t]||(this._events[t]=[]),this.emit("newListener",t,e),this._events[t].push(new r(e,i))}_unshift(t,e,i){s("string"==typeof t,"`type` must be a string."),this._events[t]||(this._events[t]=[]),this.emit("newListener",t,e),this._events[t].unshift(new r(e,i))}removeListener(t,e){s("string"==typeof t,"`type` must be a string.");const i=this._events[t];if(!i)return;let r=-1;for(let t=0;t<i.length;t++)if(i[t].handler===e){r=t;break}-1!==r&&(n(i,r),0===i.length&&delete this._events[t],this.emit("removeListener",t,e))}setMaxListeners(t){s("number"==typeof t,"`max` must be a number."),s(t>=0,"`max` must be non-negative."),s(Number.isSafeInteger(t),"`max` must be an integer.")}removeAllListeners(t){0!==arguments.length?(s("string"==typeof t,"`type` must be a string."),delete this._events[t]):this._events=Object.create(null)}listeners(t){s("string"==typeof t,"`type` must be a string.");const e=this._events[t];if(!e)return[];const i=[];for(const{handler:t}of e)i.push(t);return i}listenerCount(t){s("string"==typeof t,"`type` must be a string.");const e=this._events[t];return e?e.length:0}eventNames(){return Object.keys(this._events)}emit(t){try{this._emit.apply(this,arguments)}catch(e){if("error"===t)throw e;this._emit("error",e)}}_emit(t){s("string"==typeof t,"`type` must be a string.");const e=this._events[t];if(!e){if("error"===t){const t=arguments[1];if(t instanceof Error)throw t;const e=new Error(`Uncaught, unspecified "error" event. (${t})`);throw e.context=t,e}return}s(e.length>0);let i=null;for(let s=0;s<e.length;s++){const r=e[s],o=r.handler;switch(r.once&&(n(e,s),0===e.length&&delete this._events[t],s-=1),arguments.length){case 1:o();break;case 2:o(arguments[1]);break;case 3:o(arguments[1],arguments[2]);break;case 4:o(arguments[1],arguments[2],arguments[3]);break;default:if(!i){i=new Array(arguments.length-1);for(let t=1;t<arguments.length;t++)i[t-1]=arguments[t]}o.apply(null,i)}}}async emitAsync(t){try{await this._emitAsync.apply(this,arguments)}catch(e){if("error"===t)throw e;await this._emitAsync("error",e)}}async _emitAsync(t){s("string"==typeof t,"`type` must be a string.");const e=this._events[t];if(!e){if("error"===t){const t=arguments[1];if(t instanceof Error)throw t;const e=new Error(`Uncaught, unspecified "error" event. (${t})`);throw e.context=t,e}return}s(e.length>0);let i=null;for(let s=0;s<e.length;s++){const r=e[s],o=r.handler;switch(r.once&&(n(e,s),0===e.length&&delete this._events[t],s-=1),arguments.length){case 1:await o();break;case 2:await o(arguments[1]);break;case 3:await o(arguments[1],arguments[2]);break;case 4:await o(arguments[1],arguments[2],arguments[3]);break;default:if(!i){i=new Array(arguments.length-1);for(let t=1;t<arguments.length;t++)i[t-1]=arguments[t]}await o.apply(null,i)}}}}},function(t,e,i){"use strict";(function(t){
/*!
 * merkle.js - merkle trees for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0);e.createTree=function(t,e){s(t&&"function"==typeof t.root),s(Array.isArray(e));const i=e;let r=e.length,n=!1,o=0;if(0===r)return i.push(t.zero),[i,n];for(;r>1;){for(let e=0;e<r;e+=2){const s=Math.min(e+1,r-1),a=i[o+e],h=i[o+s];s===e+1&&s+1===r&&a.equals(h)&&(n=!0);const l=t.root(a,h);i.push(l)}o+=r,r+=1,r>>>=1}return[i,n]},e.createRoot=function(t,i){s(t&&"function"==typeof t.root),s(Array.isArray(i));const[r,n]=e.createTree(t,i);return[r[r.length-1],n]},e.createBranch=function(t,i,r){s(t&&"function"==typeof t.root),s(i>>>0===i),s(Array.isArray(r));let n=r.length;const[o]=e.createTree(t,r),a=[];let h=0;for(;n>1;){const t=Math.min(1^i,n-1);a.push(o[h+t]),i>>>=1,h+=n,n+=1,n>>>=1}return a},e.deriveRoot=function(e,i,r,n){s(e&&"function"==typeof e.root),s(t.isBuffer(i)),s(Array.isArray(r)),s(n>>>0===n);let o=i;for(const t of r)o=1&n?e.root(t,o):e.root(o,t),n>>>=1;return o}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * lru.js - LRU cache for bcoin
 * Copyright (c) 2014-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0);class r{constructor(t,e,i){this.remove=t,this.key=e,this.value=i}}t.exports=class{constructor(t,e){this.map=new Map,this.size=0,this.items=0,this.head=null,this.tail=null,this.pending=null,s("number"==typeof t,"Capacity must be a number."),s(t>=0,"Capacity cannot be negative."),s(!e||"function"==typeof e,"Bad size callback."),this.capacity=t,this.getSize=e}_getSize(t){return this.getSize?120+Math.floor(1.375*t.key.length)+this.getSize(t.value):1}_compact(){if(this.size<=this.capacity)return;let t=null,e=null;for(t=this.head;t&&!(this.size<=this.capacity);t=e)this.size-=this._getSize(t),this.items-=1,this.map.delete(t.key),e=t.next,t.prev=null,t.next=null;if(!t)return this.head=null,void(this.tail=null);this.head=t,t.prev=null}reset(){let t,e;for(t=this.head;t;t=e)this.map.delete(t.key),this.items-=1,e=t.next,t.prev=null,t.next=null;s(!t),this.size=0,this.head=null,this.tail=null}set(t,e){if(0===this.capacity)return;let i=this.map.get(t);if(i)return this.size-=this._getSize(i),i.value=e,this.size+=this._getSize(i),this._removeList(i),this._appendList(i),void this._compact();i=new class{constructor(t,e){this.key=t,this.value=e,this.next=null,this.prev=null}}(t,e),this.map.set(t,i),this._appendList(i),this.size+=this._getSize(i),this.items+=1,this._compact()}get(t){if(0===this.capacity)return null;const e=this.map.get(t);return e?(this._removeList(e),this._appendList(e),e.value):null}has(t){return 0!==this.capacity&&this.map.has(t)}remove(t){if(0===this.capacity)return!1;const e=this.map.get(t);return!!e&&(this.size-=this._getSize(e),this.items-=1,this.map.delete(t),this._removeList(e),!0)}_prependList(t){this._insertList(null,t)}_appendList(t){this._insertList(this.tail,t)}_insertList(t,e){s(!e.next),s(!e.prev),null!=t?(e.next=t.next,e.prev=t,t.next=e,e.next&&(e.next.prev=e),t===this.tail&&(this.tail=e)):this.head?(this.head.prev=e,e.next=this.head,this.head=e):(this.head=e,this.tail=e)}_removeList(t){t.prev&&(t.prev.next=t.next),t.next&&(t.next.prev=t.prev),t===this.head&&(this.head=t.next),t===this.tail&&(this.tail=t.prev||this.head),this.head||s(!this.tail),this.tail||s(!this.head),t.prev=null,t.next=null}keys(){const t=[];for(let e=this.head;e;e=e.next)e===this.head&&s(!e.prev),e.prev||s(e===this.head),e.next||s(e===this.tail),t.push(e.key);return t}values(){const t=[];for(let e=this.head;e;e=e.next)t.push(e.value);return t}toArray(){const t=[];for(let e=this.head;e;e=e.next)t.push(e);return t}batch(){return new class{constructor(t){this.lru=t,this.ops=[]}set(t,e){this.ops.push(new r(!1,t,e))}remove(t){this.ops.push(new r(!0,t,null))}clear(){this.ops.length=0}commit(){for(const t of this.ops)t.remove?this.lru.remove(t.key):this.lru.set(t.key,t.value);this.ops.length=0}}(this)}start(){s(!this.pending),this.pending=this.batch()}clear(){s(this.pending),this.pending.clear()}drop(){s(this.pending),this.pending=null}commit(){s(this.pending),this.pending.commit(),this.pending=null}push(t,e){s(this.pending),0!==this.capacity&&this.pending.set(t,e)}unpush(t){s(this.pending),0!==this.capacity&&this.pending.remove(t)}}},function(t,e,i){"use strict";(function(e,s){
/*!
 * level-browser.js - IDB wrapper for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 *
 * Parts of this software are based on IDBWrapper.
 * @license IDBWrapper - A cross-browser wrapper for IndexedDB
 * Version 1.7.2
 * Copyright (c) 2011 - 2017 Jens Arps
 * http://jensarps.de/
 *
 * Licensed under the MIT license
 */
const r=i(0),n=e.indexedDB||e.webkitIndexedDB||e.mozIndexedDB||e.shimIndexedDB,o=e.IDBKeyRange||e.webkitIDBKeyRange||e.mozIDBKeyRange,a={READ_ONLY:"readonly",READ_WRITE:"readwrite",VERSION_CHANGE:"versionchange",NEXT:"next",NEXT_UNIQUE:"nextunique",PREV:"prev",PREV_UNIQUE:"prevunique"};class h{constructor(t,e,i){this.type=t,this.key=e,this.value=i}}class l{constructor(t){this.keys=!0,this.values=!0,this.start=null,this.end=null,this.gt=!1,this.lt=!1,this.keyAsBuffer=!0,this.valueAsBuffer=!0,this.reverse=!1,this.limit=-1,t&&this.fromOptions(t)}fromOptions(t){return null!=t.keys&&(r("boolean"==typeof t.keys),this.keys=t.keys),null!=t.values&&(r("boolean"==typeof t.values),this.values=t.values),null!=t.start&&(this.start=t.start),null!=t.end&&(this.end=t.end),null!=t.gte&&(this.start=t.gte),null!=t.lte&&(this.end=t.lte),null!=t.gt&&(this.gt=!0,this.start=t.gt),null!=t.lt&&(this.lt=!0,this.end=t.lt),null!=this.start&&("string"==typeof this.start&&(this.start=s.from(this.start,"utf8")),r(s.isBuffer(this.start),"`start` must be a Buffer.")),null!=this.end&&("string"==typeof this.end&&(this.end=s.from(this.end,"utf8")),r(s.isBuffer(this.end),"`end` must be a Buffer.")),null!=t.keyAsBuffer&&(r("boolean"==typeof t.keyAsBuffer),this.keyAsBuffer=t.keyAsBuffer),null!=t.valueAsBuffer&&(r("boolean"==typeof t.valueAsBuffer),this.valueAsBuffer=t.valueAsBuffer),null!=t.reverse&&(r("boolean"==typeof t.reverse),this.reverse=t.reverse),null!=t.limit&&(r("number"==typeof t.limit),this.limit=t.limit),this}}function u(t){return null==t?t:("string"==typeof t&&(t=s.from(t,"utf8")),r(s.isBuffer(t)),t.toString("hex"))}function c(t){if(!t)return new Error("Unknown IndexedDB error (no event).");if(t instanceof Error)return t;const{target:e}=t;if(!e)return new Error("Unknown IndexedDB error (no target).");if(e.error){const{error:t}=e;return t instanceof Error?t:"VersionError"===t.name?new Error("IndexedDB version error."):new Error(String(t))}return null!=e.errorCode?12===e.errorCode?new Error("IndexedDB version error."):new Error(`IndexedDB error: ${e.errorCode}.`):new Error("Unknown IndexedDB error (no error).")}function f(t){return e=>t(c(e))}t.exports=class{constructor(t){r("string"==typeof t),this.options={},this.version=1,this.name=`bdb-${t}`,this.location=t,this.db=null,this.store=null}transaction(t){return this.db.transaction([this.location],t)}open(t,e){e||(e=t,t=null),t||(t={}),this.options=t;const i=n.open(this.name,this.version);return i.onerror=f(e),i.onsuccess=(t=>{if(this.db)return void e();if(this.db=t.target.result,"string"==typeof this.db.version)return void e(new Error("IndexedDB is out of date."));if(!this.db.objectStoreNames.contains(this.location))return void e(new Error("Could not create object store."));const i=this.transaction(a.READ_ONLY);this.store=i.objectStore(this.location),e()}),i.onupgradeneeded=(t=>{this.db=t.target.result,this.db.objectStoreNames.contains(this.location)?this.store=t.target.transaction.objectStore(this.location):this.store=this.db.createObjectStore(this.location,{autoIncrement:!1})}),this}close(t){return this.db.close(),t(),this}put(t,e,i){const s=f(i),r=this.transaction(a.READ_WRITE);let n=!1;r.oncomplete=(()=>{n?i():i(new Error("Operation failed."))}),r.onabort=s,r.onerror=s;const o=r.objectStore(this.location).put(e,u(t));return o.onsuccess=(t=>{n=!0}),o.onerror=s,this}get(t,e,i){i||(i=e,e=null),e||(e={});const r=f(i),n=this.transaction(a.READ_ONLY);let o=!1,h=null;n.oncomplete=(()=>{if(o){if(void 0===h){const t=new Error("IDB_NOTFOUND: Key not found.");return t.notFound=!0,t.type="NotFoundError",void i(t)}h&&!s.isBuffer(h)&&h.buffer&&(h=s.from(h.buffer)),!1===e.asBuffer&&(h=h.toString("utf8")),i(null,h)}else i(new Error("Operation failed."))}),n.onabort=r,n.onerror=r;const l=n.objectStore(this.location).get(u(t));return l.onsuccess=function(t){o=!0,h=t.target.result},l.onerror=r,this}del(t,e){const i=f(e),s=this.transaction(a.READ_WRITE);let r=!1;s.oncomplete=(()=>{r?e():e(new Error("Operation failed."))}),s.onabort=i,s.onerror=i;const n=s.objectStore(this.location).delete(u(t));return n.onsuccess=(t=>{r=!0}),n.onerror=i,this}batch(t,e,i){i||(i=e,e=null);const s=new class{constructor(t,e){this.db=t,this.options=e||{},this.ops=[],this.written=!1}put(t,e){return r(!this.written,"Already written."),this.ops.push(new h("put",t,e)),this}del(t){return r(!this.written,"Already written."),this.ops.push(new h("del",t)),this}write(t){if(this.written)return t(new Error("Already written.")),this;const e=f(t),i=this.db.transaction(a.READ_WRITE);let s=this.ops.length,r=!1,n=!1;i.oncomplete=(()=>{n?t():t(new Error("Operation failed."))}),i.onabort=e,i.onerror=e;const o=()=>{0!=(s-=1)||r||(r=!0,n=!0)},h=t=>{i.abort(),r||(r=!0,e(t))};for(const{type:e,key:s,value:r}of this.ops){const n=i.objectStore(this.db.location);switch(e){case"put":{const t=n.put(r,u(s));t.onsuccess=o,t.onerror=h;break}case"del":{const t=n.delete(u(s));t.onsuccess=o,t.onerror=h;break}default:return t(new Error("Bad op type.")),this}}return this}clear(){return r(!this.written,"Already written."),this.ops=[],this}}(this,e);return t?(s.ops=t,void s.write(i)):s}iterator(t){return new class{constructor(t,e){this.db=t,this.options=new l(e),this.cursor=null,this.error=null,this.started=!1,this.ended=!1,this.callback=null}seek(t){throw new Error("Not implemented.")}next(t){if(this.ended)t(new Error("Iterator already ended."));else if(this.callback)t(new Error("Callback already pending."));else if(this.error)t(this.error);else{if(!this.started)return this.callback=t,void this.start();r(this.cursor),this.callback=t,this.cursor.continue(),this.cursor=null}}end(t){this.ended?t(new Error("Iterator already ended.")):(this.ended=!0,t())}start(){if(this.started)return;const t=this.options,e=this.db.transaction(a.READ_ONLY),i=e.objectStore(this.db.location);let r=!1,n=0;e.oncomplete=(()=>{r||this.error||(this.error=new Error("Iterator ended early.")),this.error?this.respond(this.error):this.respond(null,void 0,void 0)});const h=t=>{this.error=c(t),this.respond(this.error)};e.onabort=h,e.onerror=h;const l=u(t.start),f=u(t.end);let d=null;d=l&&f?o.bound(l,f,t.gt,t.lt):l?o.lowerBound(l,t.gt):f?o.upperBound(f,t.lt):o.lowerBound("\0",!0);const p=t.reverse?a.PREV:a.NEXT,g=i.openCursor(d,p);g.onerror=h,g.onsuccess=(e=>{const i=e.target.result;if(this.error)return void this.respond(this.error);if(!i)return void(r=!0);if(-1!==t.limit){if(n>=t.limit)return void(r=!0);n+=1}let o=s.from(i.key,"hex"),a=i.value;a&&!s.isBuffer(a)&&a.buffer&&(a=s.from(a.buffer)),t.keyAsBuffer||(o=o.toString("utf8")),t.valueAsBuffer||(a=a.toString("utf8")),this.cursor=i,this.respond(null,o,a)}),this.started=!0}respond(t,e,i){if(!this.callback)return;const s=this.callback;this.callback=null,s(t,e,i)}}(this,t)}static destroy(t,e){if(!n.deleteDatabase)return void e(new Error("Destroy not supported."));const i=n.deleteDatabase(`bdb-${t}`);i.onsuccess=(()=>e()),i.onerror=f(e)}}}).call(this,i(10),i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * rbt.js - red black tree for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=i(0),r=0;let n=null;class o{constructor(t,e){this.key=t,this.value=e,this.color=r,this.parent=n,this.left=n,this.right=n}clone(){const t=new o(this.key,this.value);return t.color=this.color,t.parent=this.parent,t.left=this.left,t.right=this.right,t}copy(){return new a(this.key,this.value)}inspect(){return{key:this.key,value:this.value,color:this.color===r?"red":"black",left:this.left,right:this.right}}isNull(){return!1}}class a{constructor(t,e){this.key=t,this.value=e}}function h(t,e){e.isNull()||(t.left=e.clone(),t.left.parent=t,h(t.left,e.left),l(t.left,e.right))}function l(t,e){e.isNull()||(t.right=e.clone(),t.right.parent=t,h(t.right,e.left),l(t.right,e.right))}n=new class{constructor(){this.key=null,this.value=null,this.color=1,this.parent=null,this.left=null,this.right=null}inspect(){return"NIL"}isNull(){return!0}},t.exports=class{constructor(t,e){s("function"==typeof t),this.root=n,this.compare=t,this.unique=e||!1}reset(){this.root=n}search(t){let e=this.root;for(;!e.isNull();){const i=this.compare(t,e.key);if(0===i)return e;e=i<0?e.left:e.right}return null}insert(t,e){let i,s=this.root,r=!1;for(;!s.isNull();){const n=this.compare(t,s.key);if(this.unique&&0===n)return s.key=t,s.value=e,s;i=s,n<0?(r=!0,s=s.left):(r=!1,s=s.right)}const n=new o(t,e);return i?(n.parent=i,r?i.left=n:i.right=n,this.insertFixup(n),n):(this.root=n,this.insertFixup(n),n)}insertFixup(t){for(t.color=r;t!==this.root&&t.parent.color===r;)if(t.parent===t.parent.parent.left){const e=t.parent.parent.right;e.isNull()||e.color!==r?(t===t.parent.right&&(t=t.parent,this.rotl(t)),t.parent.color=1,t.parent.parent.color=r,this.rotr(t.parent.parent)):(t.parent.color=1,e.color=1,t.parent.parent.color=r,t=t.parent.parent)}else{const e=t.parent.parent.left;e.isNull()||e.color!==r?(t===t.parent.left&&(t=t.parent,this.rotr(t)),t.parent.color=1,t.parent.parent.color=r,this.rotl(t.parent.parent)):(t.parent.color=1,e.color=1,t.parent.parent.color=r,t=t.parent.parent)}this.root.color=1}remove(t){let e=this.root;for(;!e.isNull();){const i=this.compare(t,e.key);if(0===i)return this.removeNode(e),e;e=i<0?e.left:e.right}return null}removeNode(t){let e=t;t.left.isNull()||t.right.isNull()||(e=this.successor(t));const i=e.left.isNull()?e.right:e.left;i.parent=e.parent,e.parent.isNull()?this.root=i:e===e.parent.left?e.parent.left=i:e.parent.right=i,e!==t&&(t.key=e.key,t.value=e.value),1===e.color&&this.removeFixup(i)}removeFixup(t){for(;t!==this.root&&1===t.color;)if(t===t.parent.left){let e=t.parent.right;e.color===r&&(e.color=1,t.parent.color=r,this.rotl(t.parent),e=t.parent.right),1===e.left.color&&1===e.right.color?(e.color=r,t=t.parent):(1===e.right.color&&(e.left.color=1,e.color=r,this.rotr(e),e=t.parent.right),e.color=t.parent.color,t.parent.color=1,e.right.color=1,this.rotl(t.parent),t=this.root)}else{let e=t.parent.left;e.color===r&&(e.color=1,t.parent.color=r,this.rotr(t.parent),e=t.parent.left),1===e.right.color&&1===e.left.color?(e.color=r,t=t.parent):(1===e.left.color&&(e.right.color=1,e.color=r,this.rotl(e),e=t.parent.left),e.color=t.parent.color,t.parent.color=1,e.left.color=1,this.rotr(t.parent),t=this.root)}t.color=1}rotl(t){const e=t.right;t.right=e.left,e.left.isNull()||(e.left.parent=t),e.parent=t.parent,t.parent.isNull()?this.root=e:t===t.parent.left?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}rotr(t){const e=t.left;t.left=e.right,e.right.isNull()||(e.right.parent=t),e.parent=t.parent,t.parent.isNull()?this.root=e:t===t.parent.right?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}min(t){if(t.isNull())return t;for(;!t.left.isNull();)t=t.left;return t}max(t){if(t.isNull())return t;for(;!t.right.isNull();)t=t.right;return t}successor(t){if(!t.right.isNull()){for(t=t.right;!t.left.isNull();)t=t.left;return t}let e=t.parent;for(;!e.isNull()&&t===e.right;)t=e,e=e.parent;return e}predecessor(t){if(!t.left.isNull()){for(t=t.left;!t.right.isNull();)t=t.right;return t}let e=t.parent;for(;!e.isNull()&&t===e.left;)t=e,e=e.parent;return e}clone(){if(this.root.isNull())return n;const t=[];let e,i,r=this.root,o=!0;for(;;)if(r.isNull()){if(0===t.length)break;e=r=t.pop(),o=!1,r=r.right}else{const s=r.clone();e&&(s.parent=e),o?e?e.left=s:i=s:e?e.right=s:i=s,t.push(s),e=s,o=!0,r=r.left}return s(i),i}snapshot(){if(this.root.isNull())return n;const t=this.root.clone();return h(t,t.left),l(t,t.right),t}iterator(t){return new class{constructor(t,e){this.tree=t,this.root=e,this.current=e,this.key=null,this.value=null}compare(t){return s(null!=this.key,"No key."),this.tree.compare(this.key,t)}valid(){return!this.current.isNull()}reset(){this.current=this.root,this.key=null,this.value=null}seekFirst(){this.current=this.tree.min(this.root),this.key=this.current.key,this.value=this.current.value}seekLast(){this.current=this.tree.max(this.root),this.key=this.current.key,this.value=this.current.value}seek(t){return this.seekMin(t)}seekMin(t){s(null!=t,"No key passed to seek.");let e=this.current,i=n;for(;!e.isNull();){const s=this.tree.compare(e.key,t);if(0===s){i=e;break}s>0?(i=e,e=e.left):e=e.right}this.current=i,this.key=i.key,this.value=i.value}seekMax(t){s(null!=t,"No key passed to seek.");let e=this.current,i=n;for(;!e.isNull();){const s=this.tree.compare(e.key,t);if(0===s){i=e;break}s<0?(i=e,e=e.right):e=e.left}this.current=i,this.key=i.key,this.value=i.value}prev(){return this.current.isNull()?(this.key=null,this.value=null,!1):(this.key=this.current.key,this.value=this.current.value,this.current=this.tree.predecessor(this.current),!0)}next(){return this.current.isNull()?(this.key=null,this.value=null,!1):(this.key=this.current.key,this.value=this.current.value,this.current=this.tree.successor(this.current),!0)}data(){return s(null!=this.key,"No data available."),new a(this.key,this.value)}}(this,t||this.root)}range(t,e){const i=this.iterator(),s=[];for(t?i.seekMin(t):i.seekFirst();i.next()&&!(e&&i.compare(e)>0);)s.push(i.data());return s}}},function(t,e,i){"use strict";(function(e,s){
/*!
 * memdb.js - in-memory database for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),n=i(330),o=e.alloc(0);class a{constructor(t,e){this.options=e||{},this.ops=[],this.db=t,this.written=!1}put(t,e){return r(!this.written,"Already written."),this.ops.push(new h("put",t,e)),this}del(t){return r(!this.written,"Already written."),this.ops.push(new h("del",t)),this}write(t){if(this.written)return s(()=>t(new Error("Already written."))),this;for(const e of this.ops)switch(e.type){case"put":this.db.insert(e.key,e.value);break;case"del":this.db.remove(e.key);break;default:return s(()=>t(new Error("Bad op."))),this}return this.ops=[],this.written=!0,s(t),this}clear(){return r(!this.written,"Already written."),this.ops=[],this}}class h{constructor(t,e,i){this.type=t,this.key=e,this.value=i}}class l{constructor(t){this.keys=!0,this.values=!0,this.start=null,this.end=null,this.gt=!1,this.lt=!1,this.keyAsBuffer=!0,this.valueAsBuffer=!0,this.reverse=!1,this.limit=-1,t&&this.fromOptions(t)}fromOptions(t){return null!=t.keys&&(r("boolean"==typeof t.keys),this.keys=t.keys),null!=t.values&&(r("boolean"==typeof t.values),this.values=t.values),null!=t.start&&(this.start=t.start),null!=t.end&&(this.end=t.end),null!=t.gte&&(this.start=t.gte),null!=t.lte&&(this.end=t.lte),null!=t.gt&&(this.gt=!0,this.start=t.gt),null!=t.lt&&(this.lt=!0,this.end=t.lt),null!=this.start&&("string"==typeof this.start&&(this.start=e.from(this.start,"utf8")),r(e.isBuffer(this.start),"`start` must be a Buffer.")),null!=this.end&&("string"==typeof this.end&&(this.end=e.from(this.end,"utf8")),r(e.isBuffer(this.end),"`end` must be a Buffer.")),null!=t.keyAsBuffer&&(r("boolean"==typeof t.keyAsBuffer),this.keyAsBuffer=t.keyAsBuffer),null!=t.valueAsBuffer&&(r("boolean"==typeof t.valueAsBuffer),this.valueAsBuffer=t.valueAsBuffer),null!=t.reverse&&(r("boolean"==typeof t.reverse),this.reverse=t.reverse),null!=t.limit&&(r("number"==typeof t.limit),this.limit=t.limit),this}}function u(t,e){return t.compare(e)}t.exports=class{constructor(t){this.location=t||"memory",this.options={},this.tree=new n(u,!0)}search(t){"string"==typeof t&&(t=e.from(t,"utf8")),r(e.isBuffer(t),"Key must be a Buffer.");const i=this.tree.search(t);if(i)return i.value}insert(t,i){return"string"==typeof t&&(t=e.from(t,"utf8")),"string"==typeof i&&(i=e.from(i,"utf8")),null==i&&(i=o),r(e.isBuffer(t),"Key must be a Buffer."),r(e.isBuffer(i),"Value must be a Buffer."),null!=this.tree.insert(t,i)}remove(t){return"string"==typeof t&&(t=e.from(t,"utf8")),r(e.isBuffer(t),"Key must be a Buffer."),null!=this.tree.remove(t)}range(t,i){return"string"==typeof t&&(t=e.from(t,"utf8")),"string"==typeof i&&(i=e.from(i,"utf8")),r(!t||e.isBuffer(t),"Key must be a Buffer."),r(!i||e.isBuffer(i),"Key must be a Buffer."),this.tree.range(t,i)}open(t,e){e||(e=t,t=null),t||(t={}),this.options=t,s(e)}close(t){s(t)}get(t,e,i){i||(i=e,e=null),e||(e={});let r=this.search(t);if(!r){const t=new Error("MEMDB_NOTFOUND: Key not found.");return t.notFound=!0,t.type="NotFoundError",void s(()=>i(t))}!1===e.asBuffer&&(r=r.toString("utf8")),s(()=>i(null,r))}put(t,e,i,r){r||(r=i,i=null),this.insert(t,e),s(r)}del(t,e,i){i||(i=e,e=null),this.remove(t),s(i)}batch(t,e,i){i||(i=e,e=null);const s=new a(this,e);return t?(s.ops=t,void s.write(i)):s}iterator(t){return new class{constructor(t,e){this.db=t,this.options=new l(e),this.iter=null,this.ended=!1,this.total=0,this.init()}init(){const t=this.db.tree.snapshot(),e=this.db.tree.iterator(t);this.options.reverse?this.options.end?(e.seekMax(this.options.end),this.options.lt&&e.valid()&&0===e.compare(this.options.end)&&e.prev()):e.seekLast():this.options.start?(e.seekMin(this.options.start),this.options.gt&&e.valid()&&0===e.compare(this.options.start)&&e.next()):e.seekFirst(),this.iter=e}next(t){const e=this.options,i=this.iter;if(!this.iter)return void s(()=>t(new Error("Cannot call next.")));let r;if(e.reverse?(r=i.prev())&&e.start&&(e.gt?i.compare(e.start)<=0&&(r=!1):i.compare(e.start)<0&&(r=!1)):(r=i.next())&&e.end&&(e.lt?i.compare(e.end)>=0&&(r=!1):i.compare(e.end)>0&&(r=!1)),!r)return this.iter=null,void s(t);if(-1!==e.limit){if(this.total>=e.limit)return this.iter=null,void s(t);this.total+=1}let n=i.key,a=i.value;e.keys||(n=o),e.values||(a=o),e.keyAsBuffer||(n=n.toString("utf8")),e.valueAsBuffer||(a=a.toString("utf8")),s(()=>t(null,n,a))}seek(t){r(this.iter,"Already ended."),"string"==typeof t&&(t=e.from(t,"utf8")),r(e.isBuffer(t),"Key must be a Buffer."),this.options.reverse?this.iter.seekMax(t):this.iter.seekMin(t)}end(t){this.ended?s(()=>t(new Error("Already ended."))):(this.ended=!0,this.iter=null,s(t))}}(this,t)}getProperty(t){return""}approximateSize(t,e,i){const r=this.range(t,e);let n=0;for(const t of r)n+=t.key.length,n+=t.value.length;s(()=>i(null,n))}static destroy(t,e){s(e)}static repair(t,e){s(e)}}}).call(this,i(1).Buffer,i(26).setImmediate)},function(t,e,i){"use strict";(function(e){const s=i(0),r=Object.create(null),n=e.alloc(0),o=e.alloc(255,255),a={char:{min:"\0",max:"ÿ",dynamic:!1,size:t=>1,read:(t,e)=>(p(e+1<=t.length),String.fromCharCode(t[e])),write:(t,e,i)=>(g("string"==typeof e),g(1===e.length),p(i+1<=t.length),t[i]=e.charCodeAt(0),1)},uint8:{min:0,max:255,dynamic:!1,size:t=>1,read:(t,e)=>(p(e+1<=t.length),t[e]),write:(t,e,i)=>(g((255&e)===e),p(i+1<=t.length),t[i]=e,1)},uint16:{min:0,max:65535,dynamic:!1,size:t=>2,read:(t,e)=>(p(e+2<=t.length),function(t,e){return 256*t[e]+t[e+1]}(t,e)),write(t,e,i){var s,r,n;return g((65535&e)===e),p(i+2<=t.length),r=e,n=i,(s=t)[n++]=r>>>8,s[n++]=r,2}},uint32:{min:0,max:4294967295,dynamic:!1,size:t=>4,read:(t,e)=>(p(e+4<=t.length),function(t,e){const i=t[e],s=t[e+3];return i*2**24+65536*t[++e]+256*t[++e]+s}(t,e)),write(t,e,i){var s,r,n;return g(e>>>0===e),p(i+4<=t.length),r=e,(s=t)[(n=i)+3]=r,r>>>=8,s[n+2]=r,r>>>=8,s[n+1]=r,r>>>=8,s[n]=r,4}},buffer:{min:n,max:o,dynamic:!0,size:t=>(g(e.isBuffer(t)),c(t,null)),read:(t,e)=>(function(t,e){return p(e+1<=t.length),p(e+1+t[e]<=t.length),t.slice(e+1,e+1+t[e])})(t,e),write:(t,i,s)=>(g(e.isBuffer(i)),d(t,i,s,null))},hex:{min:n,max:o,dynamic:!0,size:t=>c(t,"hex"),read:(t,e)=>f(t,e,"hex"),write:(t,e,i)=>d(t,e,i,"hex")},ascii:{min:n,max:o,dynamic:!0,size:t=>c(t,"ascii"),read:(t,e)=>f(t,e,"ascii"),write:(t,e,i)=>d(t,e,i,"ascii")},utf8:{min:n,max:o,dynamic:!0,size:t=>c(t,"utf8"),read:(t,e)=>f(t,e,"utf8"),write:(t,e,i)=>d(t,e,i,"utf8")},hash160:{min:e.alloc(20,0),max:e.alloc(20,255),dynamic:!1,size:t=>20,read:(t,e)=>(p(e+20<=t.length),t.toString("hex",e,e+20)),write:(t,e,i)=>(g(20===u(t,e,i)),20)},hash256:{min:e.alloc(32,0),max:e.alloc(32,255),dynamic:!1,size:t=>32,read:(t,e)=>(p(e+32<=t.length),t.toString("hex",e,e+32)),write:(t,e,i)=>(g(32===u(t,e,i)),32)},hash:{min:e.alloc(1,0),max:e.alloc(64,255),dynamic:!0,size:t=>1+l(t),read:(t,e)=>(p(e+1<=t.length),p(t[e]>=1&&t[e]<=64),p(e+1+t[e]<=t.length),t.toString("hex",e+1,e+1+t[e])),write(t,e,i){const s=l(e);return g(s>=1&&s<=64),p(i+1<=t.length),t[i]=s,g(u(t,e,i+1)===s),1+s}}};class h{constructor(t=[]){s(Array.isArray(t)),this.ops=[],this.size=0,this.index=-1,this.init(t)}static create(t){const e=t?t.join(":"):"",i=r[e];if(i)return i;const s=new h(t);return r[e]=s,s}init(t){for(let e=0;e<t.length;e++){const i=t[e];if(s("string"==typeof i),!a.hasOwnProperty(i))throw new Error(`Invalid type name: ${i}.`);const r=a[i];r.dynamic?-1===this.index&&(this.index=e):this.size+=r.size(),this.ops.push(r)}}getSize(t){s(t.length===this.ops.length);let e=1+this.size;if(-1===this.index)return e;for(let i=this.index;i<t.length;i++){const s=this.ops[i],r=t[i];s.dynamic&&(e+=s.size(r))}return e}build(t,i){if(s(Array.isArray(i)),i.length!==this.ops.length)throw new Error("Wrong number of arguments passed to key.");const r=this.getSize(i),n=e.allocUnsafe(r);n[0]=t;let o=1;for(let t=0;t<this.ops.length;t++){const e=this.ops[t],s=i[t];o+=e.write(n,s,o)}return n}parse(t,i){if(s(e.isBuffer(i)),0===this.ops.length)return i;if(0===i.length||i[0]!==t)throw new Error("Key prefix mismatch.");const r=[];let n=1;for(const t of this.ops){const e=t.read(i,n);n+=t.size(e),r.push(e)}return 1===r.length?r[0]:r}min(t,e){for(let t=e.length;t<this.ops.length;t++){const i=this.ops[t];e.push(i.min)}return this.build(t,e)}max(t,e){for(let t=e.length;t<this.ops.length;t++){const i=this.ops[t];e.push(i.max)}return this.build(t,e)}root(t){const i=e.allocUnsafe(1);return i[0]=t,i}}function l(t){return e.isBuffer(t)?t.length:(s("string"==typeof t),t.length>>>1)}function u(t,i,r){return e.isBuffer(i)?i.copy(t,r):(s("string"==typeof i),t.write(i,r,"hex"))}function c(t,i){return e.isBuffer(t)?1+t.length:(g("string"==typeof t),1+e.byteLength(t,i))}function f(t,e,i){return p(e+1<=t.length),p(e+1+t[e]<=t.length),t.toString(i,e+1,e+1+t[e])}function d(t,i,s,r){if(e.isBuffer(i))return p(i.length<=255),p(s+1<=t.length),t[s]=i.length,p(i.copy(t,s+1)===i.length),1+i.length;g("string"==typeof i);const n=e.byteLength(i,r);return g(n<=255),p(s+1<=t.length),t[s]=n,n>0&&g(t.write(i,s+1,r)===n),1+n}function p(t){if(!t){const t=new Error("Invalid length for database key.");throw Error.captureStackTrace&&Error.captureStackTrace(t,p),t}}function g(t){if(!t){const t=new TypeError("Invalid type for database key.");throw Error.captureStackTrace&&Error.captureStackTrace(t,g),t}}t.exports=class{constructor(t,e=[]){s(Array.isArray(e)),this.id=function(t){return"string"==typeof t&&(s(1===t.length),t=t.charCodeAt(0)),s((255&t)===t),s(255!==t),t}(t),this.base=h.create(e)}build(...t){return this.base.build(this.id,t)}parse(t){return this.base.parse(this.id,t)}min(...t){return this.base.min(this.id,t)}max(...t){return this.base.max(this.id,t)}root(){return this.base.root(this.id)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * db.js - LevelUP module for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),r=e.alloc(1,0),n=e.alloc(255,255);class o{constructor(t,e,i){s("function"==typeof t,"Backend is required."),s("string"==typeof e,"Filename is required."),this.options=new c(i),this.backend=t,this.location=e,this.loading=!1,this.closing=!1,this.loaded=!1,this.binding=null,this.leveldown=!1,this.init()}init(){const t=new(0,this.backend)(this.location);t.binding&&"function"==typeof t.binding.approximateSize?(this.binding=t.binding,this.leveldown=!0):this.binding=t}async open(){if(this.loaded)throw new Error("Database is already open.");s(!this.loading),s(!this.closing);try{this.loading=!0,await this.load()}finally{this.loading=!1}this.loaded=!0}async close(){if(!this.loaded)throw new Error("Database is already closed.");s(!this.loading),s(!this.closing);try{this.loaded=!1,this.closing=!0,await this.unload()}catch(t){throw this.loaded=!0,t}finally{this.closing=!1}}load(){return new Promise((t,e)=>{this.binding.open(this.options,d(t,e))})}unload(){return new Promise((t,e)=>{this.binding.close(d(t,e))})}destroy(){return new Promise((t,e)=>{this.loaded||this.closing?e(new Error("Cannot destroy open database.")):this.backend.destroy?this.backend.destroy(this.location,d(t,e)):e(new Error("Cannot destroy (method not available)."))})}repair(){return new Promise((t,e)=>{this.loaded||this.closing?e(new Error("Cannot repair open database.")):this.backend.repair?this.backend.repair(this.location,d(t,e)):e(new Error("Cannot repair (method not available)."))})}backup(t){return this.binding.backup?new Promise((e,i)=>{this.loaded?this.binding.backup(t,d(e,i)):i(new Error("Database is closed."))}):this.clone(t)}bucket(t){return new h(this,t)}root(){return this}child(t){return this.bucket(t)}wrap(t){return t.root()}get(t){return new Promise((i,s)=>{this.loaded?e.isBuffer(t)?this.binding.get(t,(t,e)=>{if(t)return(t=t)&&(t.notFound||"NotFoundError"===t.type||/not\s*found/i.test(t.message))?void i(null):void s(t);i(e)}):s(new Error("Key must be a buffer.")):s(new Error("Database is closed."))})}put(t,i){return null==i&&(i=r),new Promise((s,r)=>{this.loaded?e.isBuffer(t)&&e.isBuffer(i)?this.binding.put(t,i,d(s,r)):r(new Error("Key and value must be buffers.")):r(new Error("Database is closed."))})}del(t){return new Promise((i,s)=>{this.loaded?e.isBuffer(t)?this.binding.del(t,d(i,s)):s(new Error("Key must be a buffer.")):s(new Error("Database is closed."))})}batch(){if(!this.loaded)throw new Error("Database is closed.");return new a(this.binding.batch())}iterator(t){if(!this.loaded)throw new Error("Database is closed.");return new l(this,t)}getProperty(t){if(!this.loaded)throw new Error("Database is closed.");return this.binding.getProperty?this.binding.getProperty(t):""}approximateSize(t,i){return null==t&&(t=r),null==i&&(i=n),new Promise((s,r)=>{this.loaded?this.binding.approximateSize?e.isBuffer(t)&&e.isBuffer(i)?this.binding.approximateSize(t,i,d(s,r)):r(new Error("Start and end must be buffers.")):r(new Error("Cannot get size.")):r(new Error("Database is closed."))})}compactRange(t,i){return null==t&&(t=r),null==i&&(i=n),new Promise((s,r)=>{this.loaded?this.binding.compactRange?e.isBuffer(t)&&e.isBuffer(i)?this.binding.compactRange(t,i,d(s,r)):r(new Error("Start and end must be buffers.")):s():r(new Error("Database is closed."))})}async has(t){return null!=await this.get(t)}async range(t){return null==t&&(t={}),this.iterator({gt:t.gt,lt:t.lt,gte:t.gte,lte:t.lte,keys:!0,values:!0}).range(t.parse)}async keys(t){return null==t&&(t={}),this.iterator({gt:t.gt,lt:t.lt,gte:t.gte,lte:t.lte,keys:!0,values:!1}).keys(t.parse)}async values(t){return null==t&&(t={}),this.iterator({gt:t.gt,lt:t.lt,gte:t.gte,lte:t.lte,keys:!1,values:!0}).values(t.parse)}async dump(){const t=Object.create(null),e=await this.range();for(const i of e){const e=i.key.toString("hex"),s=i.value.toString("hex");t[e]=s}return t}async verify(t,i,r){s("string"==typeof i),s(r>>>0===r);const n=await this.get(t);if(!n){const s=e.allocUnsafe(i.length+4);s.write(i,0,"ascii"),s.writeUInt32LE(r,i.length);const n=this.batch();return n.put(t,s),void await n.write()}if(n.length!==i.length+4)throw new Error(m(i));if(n.toString("ascii",0,i.length)!==i)throw new Error(m(i));if(n.readUInt32LE(i.length)!==r)throw new Error(m(i))}async clone(t){if(!this.loaded)throw new Error("Database is closed.");const e=new c(this.options);e.createIfMissing=!0,e.errorIfExists=!0;const i=new o(this.backend,t,e);await i.open();try{await this.cloneTo(i)}finally{await i.close()}}async cloneTo(t){const e=this.iterator({keys:!0,values:!0});let i=t.batch(),s=0;return await e.each(async(e,r)=>{i.put(e,r),s+=e.length+80,(s+=r.length+80)>=256<<20&&(s=0,await i.write(),i=t.batch())}),i.write()}}class a{constructor(t,e){this.binding=t,this.prefix=e||null}bucket(t){return new a(this.binding,t)}root(){return this.bucket(null)}child(t){return this.bucket(g(this.prefix,t))}wrap(t){return t.bucket(this.prefix)}put(t,i){return null==i&&(i=r),s(e.isBuffer(i),"Value must be a buffer."),this.binding.put(g(this.prefix,t),i),this}del(t){return this.binding.del(g(this.prefix,t)),this}write(){return new Promise((t,e)=>{this.binding.write(d(t,e))})}clear(){return this.binding.clear(),this}}class h{constructor(t,i){this.db=t,s(null==i||e.isBuffer(i),"Prefix must be a buffer."),this.prefix=i||null}bucket(t){return new h(this.db,t)}root(){return this.bucket(null)}child(t){return this.bucket(g(this.prefix,t))}wrap(t){return t.bucket(this.prefix)}batch(){return new a(this.db.binding.batch(),this.prefix)}has(t){return this.db.has(g(this.prefix,t))}get(t){return this.db.get(g(this.prefix,t))}iterator(t){return new l(this.db,t,this.prefix)}async range(t){return null==t&&(t={}),this.iterator({gt:t.gt,lt:t.lt,gte:t.gte,lte:t.lte,keys:!0,values:!0}).range(t.parse)}async keys(t){return null==t&&(t={}),this.iterator({gt:t.gt,lt:t.lt,gte:t.gte,lte:t.lte,keys:!0,values:!1}).keys(t.parse)}async values(t){return null==t&&(t={}),this.iterator({gt:t.gt,lt:t.lt,gte:t.gte,lte:t.lte,keys:!1,values:!0}).values(t.parse)}}class l{constructor(t,e,i){this.db=t,this.options=e||null,this.prefix=i||null,this.binding=null,this.cache=[],this.finished=!1,this.key=null,this.value=null}start(){if(this.binding)return;const t=new f(this.options);null!=this.prefix&&(s(e.isBuffer(this.prefix)),null!=t.gte&&(t.gte=g(this.prefix,t.gte)),null!=t.lte&&(t.lte=g(this.prefix,t.lte)),null!=t.gt&&(t.gt=g(this.prefix,t.gt)),null!=t.lt&&(t.lt=g(this.prefix,t.lt)),null==t.gt&&null==t.gte&&(t.gt=this.prefix),null==t.lt&&null==t.lte&&(t.lt=function(t){if(0===t.length)return null;const i=e.from(t);let s=i.length-1;for(;s>=0;s--){if(255!==i[s]){i[s]+=1;break}i[s]=0}return-1===s?null:i}(this.prefix))),this.binding=this.db.binding.iterator(t)}bucket(t){return s(!this.binding),new l(this.db,this.options,t)}root(){return this.bucket(null)}child(t){return this.bucket(g(this.prefix,t))}wrap(t){return t.bucket(this.prefix)}cleanup(){this.cache=[],this.finished=!0,this.key=null,this.value=null}async each(t){for(s("function"==typeof t);!this.finished;)for(await this.read();this.cache.length>0;){const e=p(this.prefix,this.cache.pop()),i=this.cache.pop();let s=null;try{(s=t(e,i))instanceof Promise&&(s=await s)}catch(t){throw await this.end(),t}if(!1===s)return this.end()}return this.end()}async next(){return this.finished||0===this.cache.length&&await this.read(),this.cache.length>0?(this.key=p(this.prefix,this.cache.pop()),this.value=this.cache.pop(),!0):(s(this.finished),this.cleanup(),!1)}_read(t){this.db.leveldown?this.binding.next(t):this.binding.next((e,i,s)=>{e?t(e):void 0!==i||void 0!==s?t(null,[s,i],!1):t(null,[],!0)})}read(){return new Promise((t,e)=>{if(!this.binding)try{this.start()}catch(t){return void e(t)}this._read((i,s,r)=>{if(i)return this.cleanup(),void this.binding.end(()=>e(i));this.cache=s,this.finished=r,t()})})}seek(t){return s(e.isBuffer(t),"Key must be a buffer."),this.start(),this.binding.seek(t),this}end(){return new Promise((t,e)=>{if(!this.binding)try{this.start()}catch(t){return void e(t)}this.cleanup(),this.binding.end(d(t,e))})}async range(t){s(!t||"function"==typeof t);const e=[];return await this.each((i,s)=>{if(t){const r=t(i,s);null!=r&&e.push(r)}else e.push(new u(i,s))}),e}async keys(t){s(!t||"function"==typeof t);const e=[];return await this.each((i,s)=>{t&&(i=t(i)),null!=i&&e.push(i)}),e}async values(t){s(!t||"function"==typeof t);const e=[];return await this.each((i,s)=>{t&&(s=t(s)),null!=s&&e.push(s)}),e}}class u{constructor(t,e){this.key=t,this.value=e}}class c{constructor(t){this.createIfMissing=!0,this.errorIfExists=!1,this.compression=!0,this.cacheSize=8<<20,this.writeBufferSize=4<<20,this.maxOpenFiles=64,this.maxFileSize=2<<20,this.paranoidChecks=!1,this.memory=!1,this.sync=!1,this.mapSize=274877906944,this.writeMap=!1,this.noSubdir=!0,t&&this.fromOptions(t)}fromOptions(t){return s(t,"Options are required."),null!=t.createIfMissing&&(s("boolean"==typeof t.createIfMissing,"`createIfMissing` must be a boolean."),this.createIfMissing=t.createIfMissing),null!=t.errorIfExists&&(s("boolean"==typeof t.errorIfExists,"`errorIfExists` must be a boolean."),this.errorIfExists=t.errorIfExists),null!=t.compression&&(s("boolean"==typeof t.compression,"`compression` must be a boolean."),this.compression=t.compression),null!=t.cacheSize&&(s("number"==typeof t.cacheSize,"`cacheSize` must be a number."),s(t.cacheSize>=0),this.cacheSize=Math.floor(t.cacheSize/2),this.writeBufferSize=Math.floor(t.cacheSize/4)),null!=t.maxFiles&&(s("number"==typeof t.maxFiles,"`maxFiles` must be a number."),s(t.maxFiles>=0),this.maxOpenFiles=t.maxFiles),null!=t.maxFileSize&&(s("number"==typeof t.maxFileSize,"`maxFileSize` must be a number."),s(t.maxFileSize>=0),this.maxFileSize=t.maxFileSize),null!=t.paranoidChecks&&(s("boolean"==typeof t.paranoidChecks,"`paranoidChecks` must be a boolean."),this.paranoidChecks=t.paranoidChecks),null!=t.memory&&(s("boolean"==typeof t.memory,"`memory` must be a boolean."),this.memory=t.memory),null!=t.sync&&(s("boolean"==typeof t.sync,"`sync` must be a boolean."),this.sync=t.sync),null!=t.mapSize&&(s("number"==typeof t.mapSize,"`mapSize` must be a number."),s(t.mapSize>=0),this.mapSize=t.mapSize),null!=t.writeMap&&(s("boolean"==typeof t.writeMap,"`writeMap` must be a boolean."),this.writeMap=t.writeMap),null!=t.noSubdir&&(s("boolean"==typeof t.noSubdir,"`noSubdir` must be a boolean."),this.noSubdir=t.noSubdir),this}}class f{constructor(t){this.gte=null,this.lte=null,this.gt=null,this.lt=null,this.keys=!0,this.values=!1,this.fillCache=!1,this.keyAsBuffer=!0,this.valueAsBuffer=!0,this.reverse=!1,this.highWaterMark=16384,t&&this.fromOptions(t)}fromOptions(t){if(s(t,"Options are required."),null!=t.gte&&(s(e.isBuffer(t.gte),"`gte` must be a buffer."),this.gte=t.gte),null!=t.lte&&(s(e.isBuffer(t.lte),"`lte` must be a buffer."),this.lte=t.lte),null!=t.gt&&(s(e.isBuffer(t.gt),"`gt` must be a buffer."),this.gt=t.gt),null!=t.lt&&(s(e.isBuffer(t.lt),"`lt` must be a buffer."),this.lt=t.lt),null!=t.keys&&(s("boolean"==typeof t.keys),this.keys=t.keys),null!=t.values&&(s("boolean"==typeof t.values),this.values=t.values),null!=t.fillCache&&(s("boolean"==typeof t.fillCache),this.fillCache=t.fillCache),null!=t.reverse&&(s("boolean"==typeof t.reverse),this.reverse=t.reverse),null!=t.limit&&(s("number"==typeof t.limit),s(t.limit>=0),this.limit=t.limit),!this.keys&&!this.values)throw new Error("Keys and/or values must be chosen.");return this}}function d(t,e){return function(i,s){i?e(i):t(s)}}function p(t,i){return null==i?i:(s(e.isBuffer(i),"Key must be a buffer."),0===i.length?i:null==t?i:(s(e.isBuffer(t)),s(i.length>=t.length),i.slice(t.length)))}function g(t,i){if(s(e.isBuffer(i),"Key must be a buffer."),null==t)return i;s(e.isBuffer(t));const r=e.allocUnsafe(t.length+i.length);return t.copy(r,0),i.copy(r,t.length),r}function m(t){return`Database version mismatch for database: "${t}".`+" Please run a data migration before opening."}t.exports=o}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * blockchain/index.js - blockchain for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.ChainDB=i(229),e.ChainEntry=i(116),e.Chain=i(115),e.common=i(76),e.layout=i(228)},function(t,e,i){"use strict";
/*!
 * bcoin.js - a javascript bitcoin library.
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License).
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const s=e;s.set=function(t){return s.Network.set(t),s},s.blockchain=i(334),s.Chain=i(115),s.ChainEntry=i(116),s.btc=i(321),s.Amount=i(19),s.URI=i(227),s.coins=i(320),s.Coins=i(94),s.CoinEntry=i(47),s.CoinView=i(25),s.hd=i(319),s.HDPrivateKey=i(113),s.HDPublicKey=i(112),s.Mnemonic=i(75),s.indexer=i(305),s.Indexer=i(111),s.ChainClient=i(143),s.TXIndexer=i(142),s.AddrIndexer=i(140),s.mempool=i(299),s.Fees=i(110),s.Mempool=i(138),s.MempoolEntry=i(139),s.mining=i(294),s.Miner=i(136),s.net=i(293),s.packets=i(54),s.Peer=i(132),s.Pool=i(107),s.node=i(272),s.Node=i(66),s.FullNode=i(211),s.SPVNode=i(209),s.primitives=i(261),s.Address=i(12),s.Block=i(51),s.Coin=i(46),s.Headers=i(42),s.Input=i(43),s.InvItem=i(35),s.KeyRing=i(39),s.MerkleBlock=i(63),s.MTX=i(40),s.Outpoint=i(18),s.Output=i(16),s.TX=i(14),s.protocol=i(260),s.consensus=i(3),s.Network=i(8),s.networks=i(95),s.policy=i(17),s.script=i(259),s.Opcode=i(78),s.Script=i(11),s.ScriptNum=i(28),s.SigCache=i(208),s.Stack=i(55),s.utils=i(258),s.util=i(5),s.wallet=i(257),s.WalletDB=i(100),s.workers=i(233),s.WorkerPool=i(131),s.pkg=i(68)}])});